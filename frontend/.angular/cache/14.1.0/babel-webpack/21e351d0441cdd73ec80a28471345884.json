{"ast":null,"code":"import { ViewQuestionsModel } from './view-questions.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"../shared/questions.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/icon\";\nimport * as i6 from \"@angular/material/button\";\nimport * as i7 from \"@angular/material/card\";\nimport * as i8 from \"../layout/navbar/navbar.component\";\n\nfunction ViewQuestionsComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 25)(1, \"mat-card\", 2)(2, \"form\", 26)(3, \"h2\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 27)(6, \"h3\");\n    i0.ɵɵtext(7, \"Question\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"input\", 28);\n    i0.ɵɵelementStart(9, \"h3\");\n    i0.ɵɵtext(10, \"Answer\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(11, \"input\", 28);\n    i0.ɵɵelementStart(12, \"table\", 29)(13, \"tr\")(14, \"td\")(15, \"h3\");\n    i0.ɵɵtext(16, \"option1\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(17, \"input\", 28);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"td\")(19, \"h3\");\n    i0.ɵɵtext(20, \"option2\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(21, \"input\", 28);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(22, \"td\")(23, \"h3\");\n    i0.ɵɵtext(24, \"option3\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(25, \"input\", 28);\n    i0.ɵɵelementEnd()()()()();\n    i0.ɵɵelementStart(26, \"mat-card-actions\", 30)(27, \"table\", 31)(28, \"tr\")(29, \"td\")(30, \"button\", 32);\n    i0.ɵɵlistener(\"click\", function ViewQuestionsComponent_div_10_Template_button_click_30_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const ques_r4 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.onedit(ques_r4));\n    });\n    i0.ɵɵtext(31, \"Update\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(32, \"td\")(33, \"button\", 33);\n    i0.ɵɵlistener(\"click\", function ViewQuestionsComponent_div_10_Template_button_click_33_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const ques_r4 = restoredCtx.$implicit;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.deletequestions(ques_r4));\n    });\n    i0.ɵɵtext(34, \"Delete\");\n    i0.ɵɵelementEnd()()()()()()();\n  }\n\n  if (rf & 2) {\n    const ques_r4 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"Question \", ques_r4.id, \" \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵpropertyInterpolate(\"value\", ques_r4.content);\n    i0.ɵɵadvance(3);\n    i0.ɵɵpropertyInterpolate(\"value\", ques_r4.answer);\n    i0.ɵɵadvance(6);\n    i0.ɵɵpropertyInterpolate(\"value\", ques_r4.option1);\n    i0.ɵɵadvance(4);\n    i0.ɵɵpropertyInterpolate(\"value\", ques_r4.option2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵpropertyInterpolate(\"value\", ques_r4.option3);\n  }\n}\n\nfunction ViewQuestionsComponent_button_44_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 34);\n    i0.ɵɵlistener(\"click\", function ViewQuestionsComponent_button_44_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.postQuestions());\n    });\n    i0.ɵɵtext(1, \"Add\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ViewQuestionsComponent_button_45_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 34);\n    i0.ɵɵlistener(\"click\", function ViewQuestionsComponent_button_45_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.updateQuestions());\n    });\n    i0.ɵɵtext(1, \"Update\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let ViewQuestionsComponent = /*#__PURE__*/(() => {\n  class ViewQuestionsComponent {\n    constructor(_route, formbuilder, questionss) {\n      this._route = _route;\n      this.formbuilder = formbuilder;\n      this.questionss = questionss;\n      this.questions = [];\n      this.update = false;\n      this.add = true;\n      this.questionobj = new ViewQuestionsModel();\n    }\n\n    ngOnInit() {\n      this.qId = this._route.snapshot.params.id;\n      this.qTitle = this._route.snapshot.params.title;\n      this.formValuequestion = this.formbuilder.group({\n        content: [''],\n        answer: [''],\n        option1: [''],\n        option2: [''],\n        option3: ['']\n      });\n      this.getallquestions();\n    }\n\n    postQuestions() {\n      this.questionobj.content = this.formValuequestion.value.content;\n      this.questionobj.answer = this.formValuequestion.value.answer;\n      this.questionobj.option1 = this.formValuequestion.value.option1;\n      this.questionobj.option2 = this.formValuequestion.value.option2;\n      this.questionobj.option3 = this.formValuequestion.value.option3;\n      this.questionss.postQuestion(this.questionobj).subscribe(res => {\n        console.log(res);\n        let ref = document.getElementById('close');\n        ref === null || ref === void 0 ? void 0 : ref.click();\n        this.formValuequestion.reset();\n        this.getallquestions();\n      });\n    }\n\n    getallquestions() {\n      this.questionss.getallquestions().subscribe(res => {\n        this.questionsdata = res;\n      });\n    }\n\n    deletequestions(row) {\n      this.questionss.deleteQuestion(row.id).subscribe(res => {\n        this.getallquestions();\n      });\n    }\n\n    onedit(row) {\n      this.update = true;\n      this.add = false;\n      this.questionobj.ques_id = row.id;\n      this.formValuequestion.controls['content'].setValue(row.content);\n      this.formValuequestion.controls['answer'].setValue(row.answer);\n      this.formValuequestion.controls['option1'].setValue(row.option1);\n      this.formValuequestion.controls['option2'].setValue(row.option2);\n      this.formValuequestion.controls['option3'].setValue(row.option3);\n    }\n\n    updateQuestions() {\n      this.questionobj.content = this.formValuequestion.value.content;\n      this.questionobj.answer = this.formValuequestion.value.answer;\n      this.questionobj.option1 = this.formValuequestion.value.option1;\n      this.questionobj.option2 = this.formValuequestion.value.option2;\n      this.questionobj.option3 = this.formValuequestion.value.option3;\n      this.questionss.updateQuestion(this.questionobj, this.questionobj.ques_id).subscribe(res => {\n        let ref = document.getElementById('close');\n        ref === null || ref === void 0 ? void 0 : ref.click();\n        this.formValuequestion.reset();\n        this.getallquestions();\n      });\n    }\n\n    click() {\n      this.update = false;\n      this.add = true;\n      this.formValuequestion.reset();\n    }\n\n  }\n\n  ViewQuestionsComponent.ɵfac = function ViewQuestionsComponent_Factory(t) {\n    return new (t || ViewQuestionsComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.QuestionsService));\n  };\n\n  ViewQuestionsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ViewQuestionsComponent,\n    selectors: [[\"app-view-questions\"]],\n    decls: 46,\n    vars: 5,\n    consts: [[1, \"bootstrap-wrapper\"], [1, \"container\"], [1, \"mt10\"], [1, \"new-matrix\"], [\"mat-fab\", \"\", \"color\", \"primary\", \"type\", \"button\", \"data-bs-toggle\", \"modal\", \"data-bs-target\", \"#staticBackdrop\", 3, \"click\"], [\"class\", \"row\", 4, \"ngFor\", \"ngForOf\"], [\"id\", \"staticBackdrop\", \"data-bs-backdrop\", \"static\", \"data-bs-keyboard\", \"false\", \"tabindex\", \"-1\", \"aria-labelledby\", \"staticBackdropLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [1, \"modal-dialog\"], [1, \"modal-content\"], [1, \"modal-header\"], [\"id\", \"staticBackdropLabel\", 1, \"modal-title\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"btn-close\"], [1, \"modal-body\"], [3, \"formGroup\"], [\"basicForm\", \"ngForm\"], [1, \"mb-3\"], [\"for\", \"exampleInputPassword1\", 1, \"form-label\"], [\"type\", \"text\", \"formControlName\", \"content\", \"id\", \"exampleInputPassword1\", 1, \"form-control\"], [\"type\", \"text\", \"formControlName\", \"answer\", \"id\", \"exampleInputPassword1\", 1, \"form-control\"], [\"type\", \"text\", \"formControlName\", \"option1\", \"id\", \"exampleInputPassword1\", 1, \"form-control\"], [\"type\", \"text\", \"formControlName\", \"option2\", \"id\", \"exampleInputPassword1\", 1, \"form-control\"], [\"type\", \"text\", \"formControlName\", \"option3\", \"id\", \"exampleInputPassword1\", 1, \"form-control\"], [1, \"modal-footer\"], [\"type\", \"button\", \"id\", \"close\", \"data-bs-dismiss\", \"modal\", 1, \"btn\", \"btn-secondary\"], [\"type\", \"button\", \"class\", \"btn btn-primary\", 3, \"click\", 4, \"ngIf\"], [1, \"row\"], [1, \"example-form\"], [1, \"m\"], [\"type\", \"text\", \"disabled\", \"\", 1, \"form-control\", 3, \"value\"], [\"cellspacing\", \"0\", 1, \"example-full-width\"], [\"align\", \"end\", 1, \"ml\"], [\"cellspacing\", \"10\", 1, \"example-full-width\"], [\"type\", \"button\", \"data-bs-toggle\", \"modal\", \"data-bs-target\", \"#staticBackdrop\", \"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"], [\"mat-raised-button\", \"\", \"color\", \"warn\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"]],\n    template: function ViewQuestionsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"app-navbar\");\n        i0.ɵɵelementStart(1, \"div\", 0)(2, \"div\", 1)(3, \"mat-card\")(4, \"h1\", 2);\n        i0.ɵɵtext(5);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"div\", 3)(7, \"button\", 4);\n        i0.ɵɵlistener(\"click\", function ViewQuestionsComponent_Template_button_click_7_listener() {\n          return ctx.click();\n        });\n        i0.ɵɵelementStart(8, \"mat-icon\");\n        i0.ɵɵtext(9, \"add\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(10, ViewQuestionsComponent_div_10_Template, 35, 6, \"div\", 5);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(11, \"div\", 6)(12, \"div\", 7)(13, \"div\", 8)(14, \"div\", 9)(15, \"h5\", 10);\n        i0.ɵɵtext(16, \"Add Question\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(17, \"button\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"div\", 12)(19, \"form\", 13, 14)(21, \"div\", 15)(22, \"label\", 16);\n        i0.ɵɵtext(23, \"Question\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(24, \"input\", 17);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"div\", 15)(26, \"label\", 16);\n        i0.ɵɵtext(27, \"Answer\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(28, \"input\", 18);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"div\", 15)(30, \"label\", 16);\n        i0.ɵɵtext(31, \"Option 1\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(32, \"input\", 19);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"div\", 15)(34, \"label\", 16);\n        i0.ɵɵtext(35, \"Option 2\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(36, \"input\", 20);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(37, \"div\", 15)(38, \"label\", 16);\n        i0.ɵɵtext(39, \"Option 3\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(40, \"input\", 21);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(41, \"div\", 22)(42, \"button\", 23);\n        i0.ɵɵtext(43, \"Close\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(44, ViewQuestionsComponent_button_44_Template, 2, 0, \"button\", 24);\n        i0.ɵɵtemplate(45, ViewQuestionsComponent_button_45_Template, 2, 0, \"button\", 24);\n        i0.ɵɵelementEnd()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate1(\" Add questions to \", ctx.qTitle, \"\");\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.questionsdata);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"formGroup\", ctx.formValuequestion);\n        i0.ɵɵadvance(25);\n        i0.ɵɵproperty(\"ngIf\", ctx.add);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.update);\n      }\n    },\n    dependencies: [i4.NgForOf, i4.NgIf, i5.MatIcon, i6.MatButton, i7.MatCard, i7.MatCardActions, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.NgForm, i2.FormGroupDirective, i2.FormControlName, i8.NavbarComponent],\n    styles: [\"mat-grid-tile[_ngcontent-%COMP%]{background:#fafafa}.width-50[_ngcontent-%COMP%]{width:49%}.ml-1[_ngcontent-%COMP%]{margin-left:1%}.ml-2[_ngcontent-%COMP%]{margin-left:2%}.width-100[_ngcontent-%COMP%]{width:100%}.width-25[_ngcontent-%COMP%]{width:25%}.new-matrix[_ngcontent-%COMP%]{text-align:right;margin-right:30px;margin-top:20px}td[_ngcontent-%COMP%]{padding:5px}\"]\n  });\n  return ViewQuestionsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}