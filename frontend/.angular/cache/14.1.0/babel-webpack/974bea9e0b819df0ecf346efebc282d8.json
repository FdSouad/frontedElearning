{"ast":null,"code":"import _asyncToGenerator from \"D:/StageCap2022/e-learningProject__frontend/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Component } from '@angular/core';\nimport * as XLSX from \"xlsx\";\nlet DetailsSkillsMatrixComponent = class DetailsSkillsMatrixComponent {\n  constructor(modalService, data, route, modalManager, matriceDeCompetencesService) {\n    this.modalService = modalService;\n    this.data = data;\n    this.route = route;\n    this.modalManager = modalManager;\n    this.matriceDeCompetencesService = matriceDeCompetencesService;\n    this.addFormCat = new FormGroup({\n      name: new FormControl('', [Validators.required])\n    });\n    this.addFormSkill = new FormGroup({\n      name: new FormControl('', [Validators.required]),\n      nvc: new FormControl('1', [Validators.required]),\n      nvm: new FormControl('1', [Validators.required]),\n      cat: new FormControl('', [Validators.required]),\n      criticite: new FormControl('1', [Validators.required])\n    });\n    this.editFormSkill = new FormGroup({\n      name: new FormControl('', [Validators.required]),\n      nvc: new FormControl('', [Validators.required]),\n      nvm: new FormControl('', [Validators.required]),\n      cat: new FormControl('', [Validators.required]),\n      criticite: new FormControl('1', [Validators.required])\n    });\n    this.delFormCat = new FormGroup({\n      cat: new FormControl('', [Validators.required])\n    });\n    this.editFormCat = new FormGroup({\n      cat: new FormControl('', [Validators.required]),\n      newName: new FormControl('', [Validators.required])\n    });\n    this.addQuestionForm = new FormGroup({\n      quest: new FormControl('', [Validators.required]),\n      rep1Correcte: new FormControl('', [Validators.required]),\n      rep2: new FormControl('', [Validators.required]),\n      rep3: new FormControl('', [Validators.required]),\n      rep4: new FormControl('', [Validators.required])\n    });\n    this.Backup = new FormGroup({\n      year: new FormControl('2022', [Validators.required]),\n      trimestre: new FormControl('1', [Validators.required])\n    });\n    this.notifi = false;\n    this.dataAddCat = {\n      \"name\": \"\",\n      \"matrixe\": \"\"\n    };\n    this.modalRef = {};\n    this.categoToDel = \"\";\n    this.cpt = 1;\n    this.question = {\n      \"skill\": \"\",\n      \"quest\": \"\",\n      \"rep1Correcte\": \"\",\n      \"rep2\": \"\",\n      \"rep3\": \"\",\n      \"rep4\": \"\"\n    };\n    this.dataSkill = {\n      newName: \"\",\n      name: \"\",\n      criticite: \"\",\n      niveauMin: \"\",\n      niveauCible: \"\",\n      categorie: \"\"\n    };\n    this.perimetres = this.data.perimetres;\n    this.fileName = \"SkillsMatrixsheet.xlsx\";\n    this.dataoutils = [{\n      NomConsultant: 'Consultant1',\n      CatiaV5: 4,\n      VLM: 3,\n      TeamCenter: 0\n    }, {\n      NomConsultant: 'Consultant2',\n      CatiaV5: 1,\n      VLM: 4,\n      TeamCenter: 1\n    }, {\n      NomConsultant: 'Consultant3',\n      CatiaV5: 0,\n      VLM: 4,\n      TeamCenter: 2\n    }, {\n      NomConsultant: 'Consultant4',\n      CatiaV5: 3,\n      VLM: 4,\n      TeamCenter: 1\n    }];\n    this.displayedColumns = ['ID consultant', 'fullName', 'Email', 'Pole', 'Perimetre', 'Role'];\n    this.folders = [{\n      name: 'Trimestre 1',\n      updated: new Date('1/1/21')\n    }, {\n      name: 'Trimestre 2',\n      updated: new Date('5/1/21')\n    }, {\n      name: 'Trimestre 3',\n      updated: new Date('9/1/21')\n    }];\n    this.wb = XLSX.utils.book_new();\n    this.i = 1;\n  }\n\n  seeDetails(content, skill, user) {\n    this.shkun = user;\n    this.reponses = null;\n    this.matriceDeCompetencesService.getResp(skill, user).subscribe(res => {\n      this.reponses = res;\n      this.sk = skill;\n      this.open(content);\n    });\n  }\n\n  backupFunction() {\n    this.matriceDeCompetencesService.getNotesBackup(this.Backup.value.year, this.Backup.value.trimestre, this.whereIam, this.Perimetre, this.Pole).subscribe(res => {\n      this.listeEtatUsers = res;\n      this.matriceDeCompetencesService.getNotesBackup(this.Backup.value.year, this.Backup.value.trimestre, this.whereIam, this.Perimetre, this.Pole).subscribe(res => {\n        this.exportExcel();\n      });\n      console.log(JSON.stringify(this.listeEtatUsers) + \"prob exc 2\");\n    });\n  }\n\n  invite() {\n    this.matriceDeCompetencesService.invite(this.Perimetre, this.Pole).subscribe(res => {\n      this.notifi = true;\n    });\n  }\n\n  editCategorie() {\n    this.matriceDeCompetencesService.editCat(this.editFormCat.value.cat, this.editFormCat.value.newName).subscribe(res => {\n      this.getCategories();\n      this.close();\n    });\n  }\n\n  ngOnInit() {\n    this.Pole = this.route.snapshot.queryParamMap.get(\"pole\");\n    this.Perimetre = this.route.snapshot.queryParamMap.get(\"perimetre\");\n    this.Matrixe = this.route.snapshot.queryParamMap.get(\"name\");\n    this.getCategories();\n    this.getUsers();\n  }\n\n  open(content) {\n    this.modalRef = this.modalService.open(content, {\n      centered: true\n    });\n    console.log(this.modalRef);\n  }\n\n  open2(content, skill) {\n    var _a, _b, _c, _d;\n\n    this.skillForQuest = skill;\n    this.dataSkill.name = this.skillForQuest.name;\n    this.dataSkill.categorie = this.skillForQuest.categorie;\n    (_a = this.editFormSkill.get('name')) === null || _a === void 0 ? void 0 : _a.setValue(this.skillForQuest.name);\n    (_b = this.editFormSkill.get('nvc')) === null || _b === void 0 ? void 0 : _b.setValue(this.skillForQuest.niveauCible);\n    (_c = this.editFormSkill.get('nvm')) === null || _c === void 0 ? void 0 : _c.setValue(this.skillForQuest.niveauMin);\n    (_d = this.editFormSkill.get('criticite')) === null || _d === void 0 ? void 0 : _d.setValue(this.skillForQuest.criticite);\n    console.log(\"shuf\" + JSON.stringify(this.skillForQuest));\n    this.modalRef = this.modalService.open(content, {\n      centered: true\n    });\n    console.log(this.modalRef);\n  }\n\n  delay() {\n    return _asyncToGenerator(function* () {\n      return new Promise(resolve => setTimeout(resolve, 500));\n    })();\n  }\n\n  nextOpen(content) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.addQuestion();\n\n      _this.close();\n\n      yield _this.delay();\n\n      _this.open2(\"addQuestio\", _this.skillForQuest.name);\n\n      _this.cpt++;\n      _this.modalRef = _this.modalService.open(content, {\n        centered: true\n      });\n      console.log(_this.modalRef);\n    })();\n  }\n\n  close() {\n    this.modalManager.close(this.modalRef);\n  }\n\n  openToSee(content, skill) {\n    this.skillForDelAll = skill;\n    this.matriceDeCompetencesService.getQuestions(skill.name).subscribe(res => {\n      this.questions = res;\n      console.log(\"quests :\" + JSON.stringify(this.skillForDelAll) + JSON.stringify(this.questions));\n    });\n    this.modalRef = this.modalService.open(content, {\n      centered: true\n    });\n  }\n\n  seee() {\n    console.log(\"eawwwd \" + JSON.stringify(this.questions) + JSON.stringify(this.skillForDelAll));\n  }\n\n  reset() {\n    var _a, _b, _c, _d, _e;\n\n    (_a = this.addQuestionForm.get('quest')) === null || _a === void 0 ? void 0 : _a.setValue(\"\");\n    (_b = this.addQuestionForm.get('rep1Correcte')) === null || _b === void 0 ? void 0 : _b.setValue(\"\");\n    (_c = this.addQuestionForm.get('rep2')) === null || _c === void 0 ? void 0 : _c.setValue(\"\");\n    (_d = this.addQuestionForm.get('rep3')) === null || _d === void 0 ? void 0 : _d.setValue(\"\");\n    (_e = this.addQuestionForm.get('rep4')) === null || _e === void 0 ? void 0 : _e.setValue(\"\");\n  }\n\n  addQuestDone() {\n    this.addQuestion();\n    this.skillForQuest = null;\n    this.cpt = 1;\n    this.close();\n  }\n\n  addQuestion() {\n    console.log(\"shuf 11\" + JSON.stringify(this.skillForQuest));\n    this.question.skill = this.skillForQuest.name;\n    this.question.quest = this.addQuestionForm.value.quest;\n    this.question.rep1Correcte = this.addQuestionForm.value.rep1Correcte;\n    this.question.rep2 = this.addQuestionForm.value.rep2;\n    this.question.rep3 = this.addQuestionForm.value.rep3;\n    this.question.rep4 = this.addQuestionForm.value.rep4;\n    this.matriceDeCompetencesService.addQuestion(this.question).subscribe(res => {\n      this.reset();\n    }, err => {});\n  }\n\n  deleteAllQuest() {\n    this.matriceDeCompetencesService.deleteQuestions(this.skillForDelAll.name).subscribe(res => {\n      this.reset();\n      this.close();\n    }, err => {});\n  }\n\n  deleteCategorie() {\n    this.catToDel = this.delFormCat.value.cat;\n    this.matriceDeCompetencesService.deleteCategorie(this.catToDel).subscribe(res => {\n      this.catToDel = \"\";\n      this.getCategories();\n      this.close();\n    }, err => {});\n  }\n\n  editSki() {\n    this.dataSkill.newName = this.editFormSkill.value.name;\n    this.dataSkill.criticite = this.editFormSkill.value.criticite;\n    this.dataSkill.niveauMin = this.editFormSkill.value.nvm;\n    this.dataSkill.niveauCible = this.editFormSkill.value.nvc;\n    console.log(\"shuf 2\" + JSON.stringify(this.dataSkill));\n    this.matriceDeCompetencesService.editSkill(this.dataSkill).subscribe(res => {\n      this.getCategories();\n      this.close();\n    });\n  }\n\n  deleteSki(skill) {\n    this.matriceDeCompetencesService.deleteSkill(skill).subscribe(res => {\n      this.getCategories();\n      this.close();\n    });\n  }\n\n  addCategory() {\n    this.dataAddCat.name = this.addFormCat.value.name;\n    this.dataAddCat.matrixe = this.Matrixe;\n    this.addFormCat.value.name = \"\";\n    console.log(JSON.stringify(this.dataAddCat));\n    this.matriceDeCompetencesService.addCategorie(this.dataAddCat).subscribe(res => {\n      this.categories = this.getCategories();\n      this.close();\n    }, err => {});\n  }\n\n  getUsers() {\n    this.matriceDeCompetencesService.getUsers(this.Perimetre, this.Pole).subscribe(res => {\n      this.users = res;\n    });\n  }\n\n  addSki() {\n    this.dataSkill.name = this.addFormSkill.value.name;\n    this.dataSkill.criticite = this.addFormSkill.value.criticite;\n    this.dataSkill.niveauMin = this.addFormSkill.value.nvm;\n    this.dataSkill.categorie = this.addFormSkill.value.cat;\n    this.dataSkill.niveauCible = this.addFormSkill.value.nvc;\n    console.log(this.dataSkill);\n    this.matriceDeCompetencesService.addSkill(this.dataSkill).subscribe(res => {\n      this.getCategories();\n      this.close();\n    });\n  }\n\n  onTabChange(event) {\n    this.whereIam = event.tab.textLabel;\n    this.matriceDeCompetencesService.getNotes(event.tab.textLabel, this.Perimetre, this.Pole).subscribe(res => {\n      this.listeEtatUsers = res;\n      console.log(JSON.stringify(this.listeEtatUsers) + \"done\");\n    });\n    console.log(event.tab.textLabel + \"hiiii\"); // do something based on selected tab index\n  }\n\n  getSkills() {\n    for (let i = 0; i < this.categories.length; i++) {\n      this.matriceDeCompetencesService.getSkills(this.categories[i].name).subscribe(res => {\n        this.categories[i].skills = res;\n        console.log(\"lol\" + JSON.stringify(this.categories)); // for (let j = 0; j < this.skills.length; j++) {\n        //   this.matriceDeCompetencesService.getNotes(this.categories[i].skills[j].name, this.Perimetre, this.Pole).subscribe(\n        //     (res) => {\n        //       this.categories[i].skills[j].notes = res;\n        //       console.log(\"lol\" + JSON.stringify(this.categories))\n        //     }\n        //   )\n        // }\n      }, err => {});\n    }\n  }\n\n  getCategories() {\n    /*this.matriceDeCompetencesService.getCategories(this.Matrixe).subscribe(\r\n      (res) => {\r\n        this.categories = res;\r\n        this.close()\r\n      },\r\n      (err) => { }\r\n    )\r\n    this.matriceDeCompetencesService.getCategories(this.Matrixe).subscribe(\r\n      (res) => {\r\n        this.categories = res;\r\n      }\r\n    )\r\n    for (let i = 0; i < this.categories.length; i++) {\r\n      this.categories[i].skills = this.getSkills(this.categories[i].name);\r\n    }*/\n    this.matriceDeCompetencesService.getCategories(this.Matrixe).subscribe(result => {\n      // wait for the async response\n      this.categories = result;\n      this.getSkills();\n      console.log('I get some data from asyncCall()');\n    }); // sync code executed, even if the previous async call doesn't respond anything\n\n    console.log('Code executed after the subscription. But not waiting for it to respond');\n  }\n\n  addToExcel() {\n    let element = document.getElementById('infos-excel');\n    const ws = XLSX.utils.table_to_sheet(element);\n    XLSX.utils.book_append_sheet(this.wb, ws, 'Sheet' + this.i);\n    this.i = this.i + 1;\n  }\n\n  exportExcel() {\n    this.addToExcel();\n    XLSX.writeFile(this.wb, this.fileName);\n    console.log(JSON.stringify(this.listeEtatUsers) + \"prob exc\");\n    this.matriceDeCompetencesService.getNotes(this.whereIam, this.Perimetre, this.Pole).subscribe(res => {\n      this.listeEtatUsers = res;\n    });\n    this.close();\n  }\n\n};\nDetailsSkillsMatrixComponent = __decorate([Component({\n  selector: 'app-details-skills-matrix',\n  templateUrl: './details-skills-matrix.component.html',\n  styleUrls: ['./details-skills-matrix.component.css']\n})], DetailsSkillsMatrixComponent);\nexport { DetailsSkillsMatrixComponent };","map":{"version":3,"mappings":"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","names":["FormGroup","FormControl","Validators","Component","XLSX","DetailsSkillsMatrixComponent","constructor","modalService","data","route","modalManager","matriceDeCompetencesService","name","required","nvc","nvm","cat","criticite","newName","quest","rep1Correcte","rep2","rep3","rep4","year","trimestre","niveauMin","niveauCible","categorie","perimetres","NomConsultant","CatiaV5","VLM","TeamCenter","updated","Date","utils","book_new","seeDetails","content","skill","user","shkun","reponses","getResp","subscribe","res","sk","open","backupFunction","getNotesBackup","Backup","value","whereIam","Perimetre","Pole","listeEtatUsers","exportExcel","console","log","JSON","stringify","invite","notifi","editCategorie","editCat","editFormCat","getCategories","close","ngOnInit","snapshot","queryParamMap","get","Matrixe","getUsers","modalRef","centered","open2","skillForQuest","dataSkill","editFormSkill","_a","setValue","_b","_c","_d","delay","Promise","resolve","setTimeout","nextOpen","addQuestion","cpt","openToSee","skillForDelAll","getQuestions","questions","seee","reset","addQuestionForm","_e","addQuestDone","question","err","deleteAllQuest","deleteQuestions","deleteCategorie","catToDel","delFormCat","editSki","editSkill","deleteSki","deleteSkill","addCategory","dataAddCat","addFormCat","matrixe","addCategorie","categories","users","addSki","addFormSkill","addSkill","onTabChange","event","tab","textLabel","getNotes","getSkills","i","length","skills","result","addToExcel","element","document","getElementById","ws","table_to_sheet","book_append_sheet","wb","writeFile","fileName","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["D:\\StageCap2022\\e-learningProject__frontend\\frontend\\src\\src-app\\details-skills-matrix\\details-skills-matrix.component.ts"],"sourcesContent":["import { Question } from './../../src-api/question/model';\nimport { MatriceDeCompetencesService } from './../services/matrice-de-competences.service';\nimport { ModalManager } from 'ngb-modal';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\n\nimport { AddConsultantComponent } from \"../add-consultant/add-consultant.component\";\nimport { NgbDateStruct, NgbModal } from \"@ng-bootstrap/ng-bootstrap\";\nimport { AddCompetenceComponent } from \"../add-competence/add-competence.component\";\nimport { DataService } from \"../../src-api/Data\";\nimport * as XLSX from \"xlsx\";\nimport { MatTabChangeEvent } from '@angular/material/tabs';\n\n\n\n@Component({\n  selector: 'app-details-skills-matrix',\n  templateUrl: './details-skills-matrix.component.html',\n  styleUrls: ['./details-skills-matrix.component.css']\n})\n\n\n\nexport class DetailsSkillsMatrixComponent implements OnInit {\n\n  constructor(private modalService: NgbModal,\n    public data: DataService,\n    private route: ActivatedRoute,\n    private modalManager: ModalManager,\n    private matriceDeCompetencesService: MatriceDeCompetencesService\n\n  ) {\n  }\n  addFormCat = new FormGroup({\n    name: new FormControl('', [Validators.required])\n  })\n\n  addFormSkill = new FormGroup({\n    name: new FormControl('', [Validators.required]),\n    nvc: new FormControl('1', [Validators.required]),\n    nvm: new FormControl('1', [Validators.required]),\n    cat: new FormControl('', [Validators.required]),\n    criticite: new FormControl('1', [Validators.required]),\n\n  })\n\n  editFormSkill = new FormGroup({\n    name: new FormControl('', [Validators.required]),\n    nvc: new FormControl('', [Validators.required]),\n    nvm: new FormControl('', [Validators.required]),\n    cat: new FormControl('', [Validators.required]),\n    criticite: new FormControl('1', [Validators.required]),\n\n  })\n  delFormCat = new FormGroup({\n    cat: new FormControl('', [Validators.required]),\n\n  })\n\n  editFormCat = new FormGroup({\n    cat: new FormControl('', [Validators.required]),\n    newName: new FormControl('', [Validators.required]),\n\n  })\n\n  addQuestionForm = new FormGroup({\n    quest: new FormControl('', [Validators.required]),\n    rep1Correcte: new FormControl('', [Validators.required]),\n    rep2: new FormControl('', [Validators.required]),\n    rep3: new FormControl('', [Validators.required]),\n    rep4: new FormControl('', [Validators.required]),\n\n  })\n  Backup = new FormGroup({\n    year: new FormControl('2022', [Validators.required]),\n    trimestre: new FormControl('1', [Validators.required]),\n  });\n  reponses: any;\n  sk: any;\n  shkun: any;\n  seeDetails(content: any, skill: any, user: any) {\n    this.shkun = user;\n    this.reponses = null;\n    this.matriceDeCompetencesService.getResp(skill, user).subscribe(\n      (res) => {\n        this.reponses = res;\n        this.sk = skill;\n        this.open(content);\n      }\n    )\n  }\n  backupFunction() {\n    this.matriceDeCompetencesService.getNotesBackup(this.Backup.value.year, this.Backup.value.trimestre, this.whereIam, this.Perimetre, this.Pole).subscribe(\n      (res) => {\n        this.listeEtatUsers = res;\n        this.matriceDeCompetencesService.getNotesBackup(this.Backup.value.year, this.Backup.value.trimestre, this.whereIam, this.Perimetre, this.Pole).subscribe(\n          (res) => {\n            this.exportExcel();\n          })\n        console.log(JSON.stringify(this.listeEtatUsers) + \"prob exc 2\")\n      }\n    )\n  }\n\n  notifi: any = false;\n\n  invite() {\n    this.matriceDeCompetencesService.invite(this.Perimetre, this.Pole).subscribe(\n      (res) => {\n        this.notifi = true;\n      })\n  }\n\n  editCategorie() {\n    this.matriceDeCompetencesService.editCat(this.editFormCat.value.cat, this.editFormCat.value.newName).subscribe(\n      (res) => {\n        this.getCategories();\n        this.close();\n      }\n\n    )\n  }\n  catToDel: any\n\n  Pole: any;\n  Perimetre: any;\n  Matrixe: any;\n\n  ngOnInit(): void {\n    this.Pole = this.route.snapshot.queryParamMap.get(\"pole\")!\n    this.Perimetre = this.route.snapshot.queryParamMap.get(\"perimetre\")!\n    this.Matrixe = this.route.snapshot.queryParamMap.get(\"name\")!\n    this.getCategories();\n    this.getUsers();\n  }\n  dataAddCat = {\n    \"name\": \"\",\n    \"matrixe\": \"\"\n  }\n  private modalRef = {};\n  categoToDel = \"\";\n  open(content: any) {\n    this.modalRef = this.modalService.open(content, { centered: true });\n    console.log(this.modalRef);\n  }\n\n  skillForQuest: any;\n  cpt: any = 1;\n\n  open2(content: any, skill: any) {\n    this.skillForQuest = skill;\n    this.dataSkill.name = this.skillForQuest.name!;\n    this.dataSkill.categorie = this.skillForQuest.categorie;\n    this.editFormSkill.get('name')?.setValue(this.skillForQuest.name)\n    this.editFormSkill.get('nvc')?.setValue(this.skillForQuest.niveauCible)\n    this.editFormSkill.get('nvm')?.setValue(this.skillForQuest.niveauMin)\n    this.editFormSkill.get('criticite')?.setValue(this.skillForQuest.criticite)\n    console.log(\"shuf\" + JSON.stringify(this.skillForQuest))\n\n    this.modalRef = this.modalService.open(content, { centered: true });\n    console.log(this.modalRef);\n  }\n  async delay() {\n    return new Promise(resolve => setTimeout(resolve, 500));\n  }\n  async nextOpen(content: any) {\n    this.addQuestion();\n    this.close()\n    await this.delay();\n    this.open2(\"addQuestio\", this.skillForQuest.name);\n    this.cpt++;\n    this.modalRef = this.modalService.open(content, { centered: true });\n    console.log(this.modalRef);\n  }\n  close() {\n    this.modalManager.close(this.modalRef);\n\n  }\n  question = {\n    \"skill\": \"\",\n    \"quest\": \"\",\n    \"rep1Correcte\": \"\",\n    \"rep2\": \"\",\n    \"rep3\": \"\",\n    \"rep4\": \"\"\n  };\n  questions: any;\n  skillForDelAll: any;\n  openToSee(content: any, skill: any) {\n    this.skillForDelAll = skill;\n\n    this.matriceDeCompetencesService.getQuestions(skill.name).subscribe(\n      (res) => {\n        this.questions = res;\n        console.log(\"quests :\" + JSON.stringify(this.skillForDelAll) + JSON.stringify(this.questions))\n      }\n    )\n    this.modalRef = this.modalService.open(content, { centered: true });\n  }\n\n  seee() {\n    console.log(\"eawwwd \" + JSON.stringify(this.questions) + JSON.stringify(this.skillForDelAll));\n\n  }\n\n  reset() {\n    this.addQuestionForm.get('quest')?.setValue(\"\")\n    this.addQuestionForm.get('rep1Correcte')?.setValue(\"\")\n    this.addQuestionForm.get('rep2')?.setValue(\"\")\n    this.addQuestionForm.get('rep3')?.setValue(\"\")\n    this.addQuestionForm.get('rep4')?.setValue(\"\")\n  }\n  addQuestDone() {\n    this.addQuestion();\n    this.skillForQuest = null;\n    this.cpt = 1;\n    this.close();\n\n  }\n  addQuestion() {\n    console.log(\"shuf 11\" + JSON.stringify(this.skillForQuest));\n\n    this.question.skill = this.skillForQuest.name;\n    this.question.quest = this.addQuestionForm.value.quest!;\n    this.question.rep1Correcte = this.addQuestionForm.value.rep1Correcte!;\n    this.question.rep2 = this.addQuestionForm.value.rep2!;\n    this.question.rep3 = this.addQuestionForm.value.rep3!;\n    this.question.rep4 = this.addQuestionForm.value.rep4!;\n\n    this.matriceDeCompetencesService.addQuestion(this.question).subscribe(\n      (res) => {\n        this.reset()\n      },\n      (err) => { }\n    )\n  }\n\n  deleteAllQuest() {\n    this.matriceDeCompetencesService.deleteQuestions(this.skillForDelAll.name).subscribe(\n      (res) => {\n        this.reset()\n        this.close()\n      },\n      (err) => { }\n    )\n  }\n\n  deleteCategorie() {\n    this.catToDel = this.delFormCat.value.cat!;\n    this.matriceDeCompetencesService.deleteCategorie(this.catToDel).subscribe(\n      (res) => {\n        this.catToDel = \"\"\n        this.getCategories()\n        this.close()\n      },\n      (err) => { }\n    )\n  }\n\n  editSki() {\n    this.dataSkill.newName = this.editFormSkill.value.name!;\n    this.dataSkill.criticite = this.editFormSkill.value.criticite!;\n    this.dataSkill.niveauMin = this.editFormSkill.value.nvm!;\n    this.dataSkill.niveauCible = this.editFormSkill.value.nvc!;\n    console.log(\"shuf 2\" + JSON.stringify(this.dataSkill));\n\n    this.matriceDeCompetencesService.editSkill(this.dataSkill).subscribe(\n      (res) => {\n        this.getCategories();\n        this.close()\n      }\n    )\n  }\n  deleteSki(skill: any) {\n    this.matriceDeCompetencesService.deleteSkill(skill).subscribe(\n      (res) => {\n        this.getCategories();\n        this.close()\n      }\n    )\n  }\n  addCategory() {\n\n    this.dataAddCat.name = this.addFormCat.value.name!;\n    this.dataAddCat.matrixe = this.Matrixe;\n    this.addFormCat.value.name = \"\";\n    console.log(JSON.stringify(this.dataAddCat))\n    this.matriceDeCompetencesService.addCategorie(this.dataAddCat).subscribe(\n      (res) => {\n        this.categories = this.getCategories();\n        this.close()\n      },\n      (err) => { }\n    )\n  }\n\n  dataSkill = {\n    newName: \"\",\n    name: \"\",\n    criticite: \"\",\n    niveauMin: \"\",\n    niveauCible: \"\",\n    categorie: \"\"\n  }\n  users: any;\n  getUsers() {\n    this.matriceDeCompetencesService.getUsers(this.Perimetre, this.Pole).subscribe(\n      (res) => {\n        this.users = res;\n      }\n    )\n  }\n\n  addSki() {\n\n    this.dataSkill.name = this.addFormSkill.value.name!;\n    this.dataSkill.criticite = this.addFormSkill.value.criticite!;\n    this.dataSkill.niveauMin = this.addFormSkill.value.nvm!;\n    this.dataSkill.categorie = this.addFormSkill.value.cat!;\n    this.dataSkill.niveauCible = this.addFormSkill.value.nvc!;\n\n    console.log(this.dataSkill)\n    this.matriceDeCompetencesService.addSkill(this.dataSkill).subscribe(\n      (res) => {\n        this.getCategories();\n        this.close()\n      }\n    )\n\n  }\n  categories: any;\n  listeEtatUsers: any;\n  whereIam: any;\n  onTabChange(event: MatTabChangeEvent) {\n    this.whereIam = event.tab.textLabel;\n    this.matriceDeCompetencesService.getNotes(event.tab.textLabel, this.Perimetre, this.Pole).subscribe(\n      (res) => {\n        this.listeEtatUsers = res;\n        console.log(JSON.stringify(this.listeEtatUsers) + \"done\");\n\n      }\n    )\n    console.log(event.tab.textLabel + \"hiiii\");\n\n    // do something based on selected tab index\n  }\n  getSkills(): any {\n    for (let i = 0; i < this.categories.length; i++) {\n\n      this.matriceDeCompetencesService.getSkills(this.categories[i].name).subscribe(\n        (res) => {\n          this.categories[i].skills = res\n          console.log(\"lol\" + JSON.stringify(this.categories))\n          // for (let j = 0; j < this.skills.length; j++) {\n\n          //   this.matriceDeCompetencesService.getNotes(this.categories[i].skills[j].name, this.Perimetre, this.Pole).subscribe(\n          //     (res) => {\n          //       this.categories[i].skills[j].notes = res;\n          //       console.log(\"lol\" + JSON.stringify(this.categories))\n          //     }\n          //   )\n\n          // }\n        },\n        (err) => { }\n      )\n    }\n  }\n  name: any;\n  getCategories() {\n    /*this.matriceDeCompetencesService.getCategories(this.Matrixe).subscribe(\n      (res) => {\n        this.categories = res;\n        this.close()\n      },\n      (err) => { }\n    )\n    this.matriceDeCompetencesService.getCategories(this.Matrixe).subscribe(\n      (res) => {\n        this.categories = res;\n      }\n    )\n    for (let i = 0; i < this.categories.length; i++) {\n      this.categories[i].skills = this.getSkills(this.categories[i].name);\n    }*/\n    this.matriceDeCompetencesService.getCategories(this.Matrixe).subscribe((result) => {\n      // wait for the async response\n      this.categories = result;\n      this.getSkills();\n\n      console.log('I get some data from asyncCall()');\n    });\n    // sync code executed, even if the previous async call doesn't respond anything\n    console.log('Code executed after the subscription. But not waiting for it to respond');\n  }\n\n\n  perimetres = this.data.perimetres;\n\n  fileName = \"SkillsMatrixsheet.xlsx\";\n\n\n  dataoutils: Competence[] = [\n    { NomConsultant: 'Consultant1', CatiaV5: 4, VLM: 3, TeamCenter: 0 },\n    { NomConsultant: 'Consultant2', CatiaV5: 1, VLM: 4, TeamCenter: 1 },\n    { NomConsultant: 'Consultant3', CatiaV5: 0, VLM: 4, TeamCenter: 2 },\n    { NomConsultant: 'Consultant4', CatiaV5: 3, VLM: 4, TeamCenter: 1 },\n  ];\n\n\n  displayedColumns =\n    ['ID consultant', 'fullName', 'Email', 'Pole', 'Perimetre', 'Role'];\n\n  folders: Section[] = [\n    {\n      name: 'Trimestre 1',\n      updated: new Date('1/1/21'),\n    },\n    {\n      name: 'Trimestre 2',\n      updated: new Date('5/1/21'),\n    },\n    {\n      name: 'Trimestre 3',\n      updated: new Date('9/1/21'),\n    }\n  ];\n\n  wb: XLSX.WorkBook = XLSX.utils.book_new();\n  i = 1;\n  addToExcel(): void {\n\n    let element = document.getElementById('infos-excel');\n    const ws: XLSX.WorkSheet = XLSX.utils.table_to_sheet(element);\n    XLSX.utils.book_append_sheet(this.wb, ws, 'Sheet' + this.i);\n    this.i = this.i + 1;\n  }\n\n  exportExcel() {\n\n    this.addToExcel()\n    XLSX.writeFile(this.wb, this.fileName);\n    console.log(JSON.stringify(this.listeEtatUsers) + \"prob exc\")\n\n    this.matriceDeCompetencesService.getNotes(this.whereIam, this.Perimetre, this.Pole).subscribe(\n      (res) => {\n        this.listeEtatUsers = res;\n\n      }\n    )\n    this.close()\n  }\n\n}\n\n\nexport interface Competence {\n  NomConsultant?: string;\n  critique?: string;\n  NiveauMin?: number;\n  NiveauCible?: number;\n  CatiaV5?: number;\n  VLM?: number;\n  TeamCenter: number;\n}\n\nexport interface Section {\n  name: string;\n  updated: Date;\n}\n\n\n"]},"metadata":{},"sourceType":"module"}