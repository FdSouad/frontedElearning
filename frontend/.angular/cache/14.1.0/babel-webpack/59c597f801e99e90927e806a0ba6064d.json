{"ast":null,"code":"import { Ajax, extend, getValue, isNullOrUndefined, merge, setValue } from '@syncfusion/ej2-base';\n/**\n * Query class is used to build query which is used by the DataManager to communicate with datasource.\n */\n\nvar Query =\n/** @__PURE__ @class */\nfunction () {\n  /**\n   * Constructor for Query class.\n   * @param  {string|string[]} from?\n   * @hidden\n   */\n  function Query(from) {\n    /** @hidden */\n    this.subQuery = null;\n    /** @hidden */\n\n    this.isChild = false;\n    /** @hidden */\n\n    this.distincts = [];\n    this.queries = [];\n    this.key = '';\n    this.fKey = '';\n\n    if (typeof from === 'string') {\n      this.fromTable = from;\n    } else if (from && from instanceof Array) {\n      this.lookups = from;\n    }\n\n    this.expands = [];\n    this.sortedColumns = [];\n    this.groupedColumns = [];\n    this.subQuery = null;\n    this.isChild = false;\n    this.params = [];\n    this.lazyLoad = [];\n    return this;\n  }\n  /**\n   * Sets the primary key.\n   * @param  {string} field - Defines the column field.\n   */\n\n\n  Query.prototype.setKey = function (field) {\n    this.key = field;\n    return this;\n  };\n  /**\n   * Sets default DataManager to execute query.\n   * @param  {DataManager} dataManager - Defines the DataManager.\n   */\n\n\n  Query.prototype.using = function (dataManager) {\n    this.dataManager = dataManager;\n    return this;\n  };\n  /**\n   * Executes query with the given DataManager.\n   * @param  {DataManager} dataManager - Defines the DataManager.\n   * @param  {Function} done - Defines the success callback.\n   * @param  {Function} fail - Defines the failure callback.\n   * @param  {Function} always - Defines the callback which will be invoked on either success or failure.\n   *\n   * <pre>\n   * let dataManager: DataManager = new DataManager([{ ID: '10' }, { ID: '2' }, { ID: '1' }, { ID: '20' }]);\n   * let query: Query = new Query();\n   * query.sortBy('ID', (x: string, y: string): number => { return parseInt(x, 10) - parseInt(y, 10) });\n   * let promise: Promise< Object > = query.execute(dataManager);\n   * promise.then((e: { result: Object }) => { });\n   * </pre>\n   */\n\n\n  Query.prototype.execute = function (dataManager, done, fail, always) {\n    dataManager = dataManager || this.dataManager;\n\n    if (dataManager) {\n      return dataManager.executeQuery(this, done, fail, always);\n    }\n\n    return DataUtil.throwError('Query - execute() : dataManager needs to be is set using \"using\" function or should be passed as argument');\n  };\n  /**\n   * Executes query with the local datasource.\n   * @param  {DataManager} dataManager - Defines the DataManager.\n   */\n\n\n  Query.prototype.executeLocal = function (dataManager) {\n    dataManager = dataManager || this.dataManager;\n\n    if (dataManager) {\n      return dataManager.executeLocal(this);\n    }\n\n    return DataUtil.throwError('Query - executeLocal() : dataManager needs to be is set using \"using\" function or should be passed as argument');\n  };\n  /**\n   * Creates deep copy of the Query object.\n   */\n\n\n  Query.prototype.clone = function () {\n    var cloned = new Query();\n    cloned.queries = this.queries.slice(0);\n    cloned.key = this.key;\n    cloned.isChild = this.isChild;\n    cloned.dataManager = this.dataManager;\n    cloned.fromTable = this.fromTable;\n    cloned.params = this.params.slice(0);\n    cloned.expands = this.expands.slice(0);\n    cloned.sortedColumns = this.sortedColumns.slice(0);\n    cloned.groupedColumns = this.groupedColumns.slice(0);\n    cloned.subQuerySelector = this.subQuerySelector;\n    cloned.subQuery = this.subQuery;\n    cloned.fKey = this.fKey;\n    cloned.isCountRequired = this.isCountRequired;\n    cloned.distincts = this.distincts.slice(0);\n    cloned.lazyLoad = this.lazyLoad.slice(0);\n    return cloned;\n  };\n  /**\n   * Specifies the name of table to retrieve data in query execution.\n   * @param  {string} tableName - Defines the table name.\n   */\n\n\n  Query.prototype.from = function (tableName) {\n    this.fromTable = tableName;\n    return this;\n  };\n  /**\n   * Adds additional parameter which will be sent along with the request which will be generated while DataManager execute.\n   * @param  {string} key - Defines the key of additional parameter.\n   * @param  {Function|string} value - Defines the value for the key.\n   */\n\n\n  Query.prototype.addParams = function (key, value) {\n    if (typeof value === 'function') {\n      this.params.push({\n        key: key,\n        fn: value\n      });\n    } else {\n      this.params.push({\n        key: key,\n        value: value\n      });\n    }\n\n    return this;\n  };\n  /**\n   * @hidden\n   */\n\n\n  Query.prototype.distinct = function (fields) {\n    if (typeof fields === 'string') {\n      this.distincts = [].slice.call([fields], 0);\n    } else {\n      this.distincts = fields.slice(0);\n    }\n\n    return this;\n  };\n  /**\n   * Expands the related table.\n   * @param  {string|Object[]} tables\n   */\n\n\n  Query.prototype.expand = function (tables) {\n    if (typeof tables === 'string') {\n      this.expands = [].slice.call([tables], 0);\n    } else {\n      this.expands = tables.slice(0);\n    }\n\n    return this;\n  };\n  /**\n   * Filter data with given filter criteria.\n   * @param  {string|Predicate} fieldName - Defines the column field or Predicate.\n   * @param  {string} operator - Defines the operator how to filter data.\n   * @param  {string|number|boolean} value - Defines the values to match with data.\n   * @param  {boolean} ignoreCase - If ignore case set to false, then filter data with exact match or else\n   * filter data with case insensitive.\n   */\n\n\n  Query.prototype.where = function (fieldName, operator, value, ignoreCase, ignoreAccent) {\n    operator = operator ? operator.toLowerCase() : null;\n    var predicate = null;\n\n    if (typeof fieldName === 'string') {\n      predicate = new Predicate(fieldName, operator, value, ignoreCase, ignoreAccent);\n    } else if (fieldName instanceof Predicate) {\n      predicate = fieldName;\n    }\n\n    this.queries.push({\n      fn: 'onWhere',\n      e: predicate\n    });\n    return this;\n  };\n  /**\n   * Search data with given search criteria.\n   * @param  {string|number|boolean} searchKey - Defines the search key.\n   * @param  {string|string[]} fieldNames - Defines the collection of column fields.\n   * @param  {string} operator - Defines the operator how to search data.\n   * @param  {boolean} ignoreCase - If ignore case set to false, then filter data with exact match or else\n   * filter data with case insensitive.\n   */\n\n\n  Query.prototype.search = function (searchKey, fieldNames, operator, ignoreCase, ignoreAccent) {\n    if (typeof fieldNames === 'string') {\n      fieldNames = [fieldNames];\n    }\n\n    if (!operator || operator === 'none') {\n      operator = 'contains';\n    }\n\n    var comparer = DataUtil.fnOperators[operator];\n    this.queries.push({\n      fn: 'onSearch',\n      e: {\n        fieldNames: fieldNames,\n        operator: operator,\n        searchKey: searchKey,\n        ignoreCase: ignoreCase,\n        ignoreAccent: ignoreAccent,\n        comparer: comparer\n      }\n    });\n    return this;\n  };\n  /**\n   * Sort the data with given sort criteria.\n   * By default, sort direction is ascending.\n   * @param  {string|string[]} fieldName - Defines the single or collection of column fields.\n   * @param  {string|Function} comparer - Defines the sort direction or custom sort comparer function.\n   */\n\n\n  Query.prototype.sortBy = function (fieldName, comparer, isFromGroup) {\n    return this.sortByForeignKey(fieldName, comparer, isFromGroup);\n  };\n  /**\n   * Sort the data with given sort criteria.\n   * By default, sort direction is ascending.\n   * @param  {string|string[]} fieldName - Defines the single or collection of column fields.\n   * @param  {string|Function} comparer - Defines the sort direction or custom sort comparer function.\n   * @param  {string} direction - Defines the sort direction .\n   */\n\n\n  Query.prototype.sortByForeignKey = function (fieldName, comparer, isFromGroup, direction) {\n    var order = !isNullOrUndefined(direction) ? direction : 'ascending';\n    var sorts;\n    var temp;\n\n    if (typeof fieldName === 'string' && DataUtil.endsWith(fieldName.toLowerCase(), ' desc')) {\n      fieldName = fieldName.replace(/ desc$/i, '');\n      comparer = 'descending';\n    }\n\n    if (!comparer || typeof comparer === 'string') {\n      order = comparer ? comparer.toLowerCase() : 'ascending';\n      comparer = DataUtil.fnSort(comparer);\n    }\n\n    if (isFromGroup) {\n      sorts = Query.filterQueries(this.queries, 'onSortBy');\n\n      for (var i = 0; i < sorts.length; i++) {\n        temp = sorts[i].e.fieldName;\n\n        if (typeof temp === 'string') {\n          if (temp === fieldName) {\n            return this;\n          }\n        } else if (temp instanceof Array) {\n          for (var j = 0; j < temp.length; j++) {\n            if (temp[j] === fieldName || fieldName.toLowerCase() === temp[j] + ' desc') {\n              return this;\n            }\n          }\n        }\n      }\n    }\n\n    this.queries.push({\n      fn: 'onSortBy',\n      e: {\n        fieldName: fieldName,\n        comparer: comparer,\n        direction: order\n      }\n    });\n    return this;\n  };\n  /**\n   * Sorts data in descending order.\n   * @param  {string} fieldName - Defines the column field.\n   */\n\n\n  Query.prototype.sortByDesc = function (fieldName) {\n    return this.sortBy(fieldName, 'descending');\n  };\n  /**\n   * Groups data with the given field name.\n   * @param  {string} fieldName - Defines the column field.\n   */\n\n\n  Query.prototype.group = function (fieldName, fn, format) {\n    this.sortBy(fieldName, null, true);\n    this.queries.push({\n      fn: 'onGroup',\n      e: {\n        fieldName: fieldName,\n        comparer: fn ? fn : null,\n        format: format ? format : null\n      }\n    });\n    return this;\n  };\n  /**\n   * Gets data based on the given page index and size.\n   * @param  {number} pageIndex - Defines the current page index.\n   * @param  {number} pageSize - Defines the no of records per page.\n   */\n\n\n  Query.prototype.page = function (pageIndex, pageSize) {\n    this.queries.push({\n      fn: 'onPage',\n      e: {\n        pageIndex: pageIndex,\n        pageSize: pageSize\n      }\n    });\n    return this;\n  };\n  /**\n   * Gets data based on the given start and end index.\n   * @param  {number} start - Defines the start index of the datasource.\n   * @param  {number} end - Defines the end index of the datasource.\n   */\n\n\n  Query.prototype.range = function (start, end) {\n    this.queries.push({\n      fn: 'onRange',\n      e: {\n        start: start,\n        end: end\n      }\n    });\n    return this;\n  };\n  /**\n   * Gets data from the top of the data source based on given number of records count.\n   * @param  {number} nos - Defines the no of records to retrieve from datasource.\n   */\n\n\n  Query.prototype.take = function (nos) {\n    this.queries.push({\n      fn: 'onTake',\n      e: {\n        nos: nos\n      }\n    });\n    return this;\n  };\n  /**\n   * Skips data with given number of records count from the top of the data source.\n   * @param  {number} nos - Defines the no of records skip in the datasource.\n   */\n\n\n  Query.prototype.skip = function (nos) {\n    this.queries.push({\n      fn: 'onSkip',\n      e: {\n        nos: nos\n      }\n    });\n    return this;\n  };\n  /**\n   * Selects specified columns from the data source.\n   * @param  {string|string[]} fieldNames - Defines the collection of column fields.\n   */\n\n\n  Query.prototype.select = function (fieldNames) {\n    if (typeof fieldNames === 'string') {\n      fieldNames = [].slice.call([fieldNames], 0);\n    }\n\n    this.queries.push({\n      fn: 'onSelect',\n      e: {\n        fieldNames: fieldNames\n      }\n    });\n    return this;\n  };\n  /**\n   * Gets the records in hierarchical relationship from two tables. It requires the foreign key to relate two tables.\n   * @param  {Query} query - Defines the query to relate two tables.\n   * @param  {Function} selectorFn - Defines the custom function to select records.\n   */\n\n\n  Query.prototype.hierarchy = function (query, selectorFn) {\n    this.subQuerySelector = selectorFn;\n    this.subQuery = query;\n    return this;\n  };\n  /**\n   * Sets the foreign key which is used to get data from the related table.\n   * @param  {string} key - Defines the foreign key.\n   */\n\n\n  Query.prototype.foreignKey = function (key) {\n    this.fKey = key;\n    return this;\n  };\n  /**\n   * It is used to get total number of records in the DataManager execution result.\n   */\n\n\n  Query.prototype.requiresCount = function () {\n    this.isCountRequired = true;\n    return this;\n  }; //type - sum, avg, min, max\n\n  /**\n   * Aggregate the data with given type and field name.\n   * @param  {string} type - Defines the aggregate type.\n   * @param  {string} field - Defines the column field to aggregate.\n   */\n\n\n  Query.prototype.aggregate = function (type, field) {\n    this.queries.push({\n      fn: 'onAggregates',\n      e: {\n        field: field,\n        type: type\n      }\n    });\n    return this;\n  };\n  /**\n   * Pass array of filterColumn query for performing filter operation.\n   * @param  {QueryOptions[]} queries\n   * @param  {string} name\n   * @hidden\n   */\n\n\n  Query.filterQueries = function (queries, name) {\n    return queries.filter(function (q) {\n      return q.fn === name;\n    });\n  };\n  /**\n   * To get the list of queries which is already filtered in current data source.\n   * @param  {Object[]} queries\n   * @param  {string[]} singles\n   * @hidden\n   */\n\n\n  Query.filterQueryLists = function (queries, singles) {\n    var filtered = queries.filter(function (q) {\n      return singles.indexOf(q.fn) !== -1;\n    });\n    var res = {};\n\n    for (var i = 0; i < filtered.length; i++) {\n      if (!res[filtered[i].fn]) {\n        res[filtered[i].fn] = filtered[i].e;\n      }\n    }\n\n    return res;\n  };\n\n  return Query;\n}();\n/**\n * Predicate class is used to generate complex filter criteria.\n * This will be used by DataManager to perform multiple filtering operation.\n */\n\n\nvar Predicate =\n/** @__PURE__ @class */\nfunction () {\n  /**\n   * Constructor for Predicate class.\n   * @param  {string|Predicate} field\n   * @param  {string} operator\n   * @param  {string|number|boolean|Predicate|Predicate[]} value\n   * @param  {boolean=false} ignoreCase\n   * @hidden\n   */\n  function Predicate(field, operator, value, ignoreCase, ignoreAccent) {\n    if (ignoreCase === void 0) {\n      ignoreCase = false;\n    }\n    /** @hidden */\n\n\n    this.ignoreAccent = false;\n    /** @hidden */\n\n    this.isComplex = false;\n\n    if (typeof field === 'string') {\n      this.field = field;\n      this.operator = operator.toLowerCase();\n      this.value = value;\n      this.ignoreCase = ignoreCase;\n      this.ignoreAccent = ignoreAccent;\n      this.isComplex = false;\n      this.comparer = DataUtil.fnOperators.processOperator(this.operator);\n    } else if (field instanceof Predicate && value instanceof Predicate || value instanceof Array) {\n      this.isComplex = true;\n      this.condition = operator.toLowerCase();\n      this.predicates = [field];\n\n      if (value instanceof Array) {\n        [].push.apply(this.predicates, value);\n      } else {\n        this.predicates.push(value);\n      }\n    }\n\n    return this;\n  }\n  /**\n   * Adds n-number of new predicates on existing predicate with “and” condition.\n   * @param  {Object[]} args - Defines the collection of predicates.\n   */\n\n\n  Predicate.and = function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    return Predicate.combinePredicates([].slice.call(args, 0), 'and');\n  };\n  /**\n   * Adds new predicate on existing predicate with “and” condition.\n   * @param  {string} field - Defines the column field.\n   * @param  {string} operator - Defines the operator how to filter data.\n   * @param  {string} value - Defines the values to match with data.\n   * @param  {boolean} ignoreCase? - If ignore case set to false, then filter data with exact match or else\n   * filter data with case insensitive.\n   */\n\n\n  Predicate.prototype.and = function (field, operator, value, ignoreCase, ignoreAccent) {\n    return Predicate.combine(this, field, operator, value, 'and', ignoreCase, ignoreAccent);\n  };\n  /**\n   * Adds n-number of new predicates on existing predicate with “or” condition.\n   * @param  {Object[]} args - Defines the collection of predicates.\n   */\n\n\n  Predicate.or = function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    return Predicate.combinePredicates([].slice.call(args, 0), 'or');\n  };\n  /**\n   * Adds new predicate on existing predicate with “or” condition.\n   * @param  {string} field - Defines the column field.\n   * @param  {string} operator - Defines the operator how to filter data.\n   * @param  {string} value - Defines the values to match with data.\n   * @param  {boolean} ignoreCase? - If ignore case set to false, then filter data with exact match or else\n   * filter data with case insensitive.\n   */\n\n\n  Predicate.prototype.or = function (field, operator, value, ignoreCase, ignoreAccent) {\n    return Predicate.combine(this, field, operator, value, 'or', ignoreCase, ignoreAccent);\n  };\n  /**\n   * Converts plain JavaScript object to Predicate object.\n   * @param  {Predicate[]|Predicate} json - Defines single or collection of Predicate.\n   */\n\n\n  Predicate.fromJson = function (json) {\n    if (json instanceof Array) {\n      var res = [];\n\n      for (var i = 0, len = json.length; i < len; i++) {\n        res.push(this.fromJSONData(json[i]));\n      }\n\n      return res;\n    }\n\n    var pred = json;\n    return this.fromJSONData(pred);\n  };\n  /**\n   * Validate the record based on the predicates.\n   * @param  {Object} record - Defines the datasource record.\n   */\n\n\n  Predicate.prototype.validate = function (record) {\n    var predicate = this.predicates ? this.predicates : [];\n    var isAnd;\n    var ret;\n\n    if (!this.isComplex && this.comparer) {\n      return this.comparer.call(this, DataUtil.getObject(this.field, record), this.value, this.ignoreCase, this.ignoreAccent);\n    }\n\n    isAnd = this.condition === 'and';\n\n    for (var i = 0; i < predicate.length; i++) {\n      ret = predicate[i].validate(record);\n\n      if (isAnd) {\n        if (!ret) {\n          return false;\n        }\n      } else {\n        if (ret) {\n          return true;\n        }\n      }\n    }\n\n    return isAnd;\n  };\n  /**\n   * Converts predicates to plain JavaScript.\n   * This method is uses Json stringify when serializing Predicate object.\n   */\n\n\n  Predicate.prototype.toJson = function () {\n    var predicates;\n    var p;\n\n    if (this.isComplex) {\n      predicates = [];\n      p = this.predicates;\n\n      for (var i = 0; i < p.length; i++) {\n        predicates.push(p[i].toJson());\n      }\n    }\n\n    return {\n      isComplex: this.isComplex,\n      field: this.field,\n      operator: this.operator,\n      value: this.value,\n      ignoreCase: this.ignoreCase,\n      ignoreAccent: this.ignoreAccent,\n      condition: this.condition,\n      predicates: predicates\n    };\n  };\n\n  Predicate.combinePredicates = function (predicates, operator) {\n    if (predicates.length === 1) {\n      if (!(predicates[0] instanceof Array)) {\n        return predicates[0];\n      }\n\n      predicates = predicates[0];\n    }\n\n    return new Predicate(predicates[0], operator, predicates.slice(1));\n  };\n\n  Predicate.combine = function (pred, field, operator, value, condition, ignoreCase, ignoreAccent) {\n    if (field instanceof Predicate) {\n      return Predicate[condition](pred, field);\n    }\n\n    if (typeof field === 'string') {\n      return Predicate[condition](pred, new Predicate(field, operator, value, ignoreCase, ignoreAccent));\n    }\n\n    return DataUtil.throwError('Predicate - ' + condition + ' : invalid arguments');\n  };\n\n  Predicate.fromJSONData = function (json) {\n    var preds = json.predicates || [];\n    var len = preds.length;\n    var predicates = [];\n    var result;\n\n    for (var i = 0; i < len; i++) {\n      predicates.push(this.fromJSONData(preds[i]));\n    }\n\n    if (!json.isComplex) {\n      result = new Predicate(json.field, json.operator, json.value, json.ignoreCase, json.ignoreAccent);\n    } else {\n      result = new Predicate(predicates[0], json.condition, predicates.slice(1));\n    }\n\n    return result;\n  };\n\n  return Predicate;\n}();\n\nvar consts = {\n  GroupGuid: '{271bbba0-1ee7}'\n};\n/**\n * Data manager common utility methods.\n * @hidden\n */\n\nvar DataUtil =\n/** @__PURE__ @class */\nfunction () {\n  function DataUtil() {}\n  /**\n   * Returns the value by invoking the provided parameter function.\n   * If the paramater is not of type function then it will be returned as it is.\n   * @param  {Function|string|string[]|number} value\n   * @param  {Object} inst?\n   * @hidden\n   */\n\n\n  DataUtil.getValue = function (value, inst) {\n    if (typeof value === 'function') {\n      return value.call(inst || {});\n    }\n\n    return value;\n  };\n  /**\n   * Returns true if the input string ends with given string.\n   * @param  {string} input\n   * @param  {string} substr\n   */\n\n\n  DataUtil.endsWith = function (input, substr) {\n    return input.slice && input.slice(-substr.length) === substr;\n  };\n  /**\n   * Returns true if the input string starts with given string.\n   * @param  {string} str\n   * @param  {string} startstr\n   */\n\n\n  DataUtil.startsWith = function (input, start) {\n    return input.slice(0, start.length) === start;\n  };\n  /**\n   * To return the sorting function based on the string.\n   * @param  {string} order\n   * @hidden\n   */\n\n\n  DataUtil.fnSort = function (order) {\n    order = order ? DataUtil.toLowerCase(order) : 'ascending';\n\n    if (order === 'ascending') {\n      return this.fnAscending;\n    }\n\n    return this.fnDescending;\n  };\n  /**\n   * Comparer function which is used to sort the data in ascending order.\n   * @param  {string|number} x\n   * @param  {string|number} y\n   * @returns number\n   */\n\n\n  DataUtil.fnAscending = function (x, y) {\n    if (isNullOrUndefined(x) && isNullOrUndefined(y)) {\n      return -1;\n    }\n\n    if (y === null || y === undefined) {\n      return -1;\n    }\n\n    if (typeof x === 'string') {\n      return x.localeCompare(y);\n    }\n\n    if (x === null || x === undefined) {\n      return 1;\n    }\n\n    return x - y;\n  };\n  /**\n   * Comparer function which is used to sort the data in descending order.\n   * @param  {string|number} x\n   * @param  {string|number} y\n   * @returns number\n   */\n\n\n  DataUtil.fnDescending = function (x, y) {\n    if (isNullOrUndefined(x) && isNullOrUndefined(y)) {\n      return -1;\n    }\n\n    if (y === null || y === undefined) {\n      return 1;\n    }\n\n    if (typeof x === 'string') {\n      return x.localeCompare(y) * -1;\n    }\n\n    if (x === null || x === undefined) {\n      return -1;\n    }\n\n    return y - x;\n  };\n\n  DataUtil.extractFields = function (obj, fields) {\n    var newObj = {};\n\n    for (var i = 0; i < fields.length; i++) {\n      newObj = this.setValue(fields[i], this.getObject(fields[i], obj), newObj);\n    }\n\n    return newObj;\n  };\n  /**\n   * Select objects by given fields from jsonArray.\n   * @param  {Object[]} jsonArray\n   * @param  {string[]} fields\n   */\n\n\n  DataUtil.select = function (jsonArray, fields) {\n    var newData = [];\n\n    for (var i = 0; i < jsonArray.length; i++) {\n      newData.push(this.extractFields(jsonArray[i], fields));\n    }\n\n    return newData;\n  };\n  /**\n   * Group the input data based on the field name.\n   * It also performs aggregation of the grouped records based on the aggregates paramater.\n   * @param  {Object[]} jsonArray\n   * @param  {string} field?\n   * @param  {Object[]} agg?\n   * @param  {number} level?\n   * @param  {Object[]} groupDs?\n   */\n\n\n  DataUtil.group = function (jsonArray, field, aggregates, level, groupDs, format, isLazyLoad) {\n    level = level || 1;\n    var jsonData = jsonArray;\n    var guid = 'GroupGuid';\n\n    if (jsonData.GroupGuid === consts[guid]) {\n      var _loop_1 = function (j) {\n        if (!isNullOrUndefined(groupDs)) {\n          var indx = -1;\n          var temp = groupDs.filter(function (e) {\n            return e.key === jsonData[j].key;\n          });\n          indx = groupDs.indexOf(temp[0]);\n          jsonData[j].items = this_1.group(jsonData[j].items, field, aggregates, jsonData.level + 1, groupDs[indx].items, format, isLazyLoad);\n          jsonData[j].count = groupDs[indx].count;\n        } else {\n          jsonData[j].items = this_1.group(jsonData[j].items, field, aggregates, jsonData.level + 1, null, format, isLazyLoad);\n          jsonData[j].count = jsonData[j].items.length;\n        }\n      };\n\n      var this_1 = this;\n\n      for (var j = 0; j < jsonData.length; j++) {\n        _loop_1(j);\n      }\n\n      jsonData.childLevels += 1;\n      return jsonData;\n    }\n\n    var grouped = {};\n    var groupedArray = [];\n    groupedArray.GroupGuid = consts[guid];\n    groupedArray.level = level;\n    groupedArray.childLevels = 0;\n    groupedArray.records = jsonData;\n\n    var _loop_2 = function (i) {\n      var val = this_2.getVal(jsonData, i, field);\n\n      if (!isNullOrUndefined(format)) {\n        val = format(val, field);\n      }\n\n      if (!grouped[val]) {\n        grouped[val] = {\n          key: val,\n          count: 0,\n          items: [],\n          aggregates: {},\n          field: field\n        };\n        groupedArray.push(grouped[val]);\n\n        if (!isNullOrUndefined(groupDs)) {\n          var tempObj = groupDs.filter(function (e) {\n            return e.key === grouped[val].key;\n          });\n          grouped[val].count = tempObj[0].count;\n        }\n      }\n\n      grouped[val].count = !isNullOrUndefined(groupDs) ? grouped[val].count : grouped[val].count += 1;\n\n      if (!isLazyLoad || isLazyLoad && aggregates.length) {\n        grouped[val].items.push(jsonData[i]);\n      }\n    };\n\n    var this_2 = this;\n\n    for (var i = 0; i < jsonData.length; i++) {\n      _loop_2(i);\n    }\n\n    if (aggregates && aggregates.length) {\n      var _loop_3 = function (i) {\n        var res = {};\n        var fn = void 0;\n        var aggs = aggregates;\n\n        for (var j = 0; j < aggregates.length; j++) {\n          fn = DataUtil.aggregates[aggregates[j].type];\n\n          if (!isNullOrUndefined(groupDs)) {\n            var temp = groupDs.filter(function (e) {\n              return e.key === groupedArray[i].key;\n            });\n\n            if (fn) {\n              res[aggs[j].field + ' - ' + aggs[j].type] = fn(temp[0].items, aggs[j].field);\n            }\n          } else {\n            if (fn) {\n              res[aggs[j].field + ' - ' + aggs[j].type] = fn(groupedArray[i].items, aggs[j].field);\n            }\n          }\n        }\n\n        groupedArray[i].aggregates = res;\n      };\n\n      for (var i = 0; i < groupedArray.length; i++) {\n        _loop_3(i);\n      }\n    }\n\n    if (isLazyLoad && groupedArray.length && aggregates.length) {\n      for (var i = 0; i < groupedArray.length; i++) {\n        groupedArray[i].items = [];\n      }\n    }\n\n    return jsonData.length && groupedArray || jsonData;\n  };\n  /**\n   * It is used to categorize the multiple items based on a specific field in jsonArray.\n   * The hierarchical queries are commonly required when you use foreign key binding.\n   * @param  {string} fKey\n   * @param  {string} from\n   * @param  {Object[]} source\n   * @param  {Group} lookup?\n   * @param  {string} pKey?\n   * @hidden\n   */\n\n\n  DataUtil.buildHierarchy = function (fKey, from, source, lookup, pKey) {\n    var i;\n    var grp = {};\n    var temp;\n\n    if (lookup.result) {\n      lookup = lookup.result;\n    }\n\n    if (lookup.GroupGuid) {\n      this.throwError('DataManager: Do not have support Grouping in hierarchy');\n    }\n\n    for (i = 0; i < lookup.length; i++) {\n      var fKeyData = this.getObject(fKey, lookup[i]);\n      temp = grp[fKeyData] || (grp[fKeyData] = []);\n      temp.push(lookup[i]);\n    }\n\n    for (i = 0; i < source.length; i++) {\n      var fKeyData = this.getObject(pKey || fKey, source[i]);\n      source[i][from] = grp[fKeyData];\n    }\n  };\n  /**\n   * The method used to get the field names which started with specified characters.\n   * @param  {Object} obj\n   * @param  {string[]} fields?\n   * @param  {string} prefix?\n   * @hidden\n   */\n\n\n  DataUtil.getFieldList = function (obj, fields, prefix) {\n    if (prefix === undefined) {\n      prefix = '';\n    }\n\n    if (fields === undefined || fields === null) {\n      return this.getFieldList(obj, [], prefix);\n    }\n\n    var copyObj = obj;\n    var keys = Object.keys(obj);\n\n    for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n      var prop = keys_1[_i];\n\n      if (typeof copyObj[prop] === 'object' && !(copyObj[prop] instanceof Array)) {\n        this.getFieldList(copyObj[prop], fields, prefix + prop + '.');\n      } else {\n        fields.push(prefix + prop);\n      }\n    }\n\n    return fields;\n  };\n  /**\n   * Gets the value of the property in the given object.\n   * The complex object can be accessed by providing the field names concatenated with dot(.).\n   * @param  {string} nameSpace - The name of the property to be accessed.\n   * @param  {Object} from - Defines the source object.\n   */\n\n\n  DataUtil.getObject = function (nameSpace, from) {\n    if (!nameSpace) {\n      return from;\n    }\n\n    if (!from) {\n      return undefined;\n    }\n\n    if (nameSpace.indexOf('.') === -1) {\n      return from[nameSpace];\n    }\n\n    var value = from;\n    var splits = nameSpace.split('.');\n\n    for (var i = 0; i < splits.length; i++) {\n      if (value == null) {\n        break;\n      }\n\n      value = value[splits[i]];\n    }\n\n    return value;\n  };\n  /**\n   * To set value for the nameSpace in desired object.\n   * @param {string} nameSpace - String value to the get the inner object.\n   * @param {Object} value - Value that you need to set.\n   * @param {Object} obj - Object to get the inner object value.\n   * @return { [key: string]: Object; } | Object\n   * @hidden\n   */\n\n\n  DataUtil.setValue = function (nameSpace, value, obj) {\n    var keys = nameSpace.toString().split('.');\n    var start = obj || {};\n    var fromObj = start;\n    var i;\n    var length = keys.length;\n    var key;\n\n    for (i = 0; i < length; i++) {\n      key = keys[i];\n\n      if (i + 1 === length) {\n        fromObj[key] = value === undefined ? undefined : value;\n      } else if (isNullOrUndefined(fromObj[key])) {\n        fromObj[key] = {};\n      }\n\n      fromObj = fromObj[key];\n    }\n\n    return start;\n  };\n  /**\n   * Sort the given data based on the field and comparer.\n   * @param  {Object[]} ds - Defines the input data.\n   * @param  {string} field - Defines the field to be sorted.\n   * @param  {Function} comparer - Defines the comparer function used to sort the records.\n   */\n\n\n  DataUtil.sort = function (ds, field, comparer) {\n    if (ds.length <= 1) {\n      return ds;\n    }\n\n    var middle = parseInt((ds.length / 2).toString(), 10);\n    var left = ds.slice(0, middle);\n    var right = ds.slice(middle);\n    left = this.sort(left, field, comparer);\n    right = this.sort(right, field, comparer);\n    return this.merge(left, right, field, comparer);\n  };\n\n  DataUtil.ignoreDiacritics = function (value) {\n    if (typeof value !== 'string') {\n      return value;\n    }\n\n    var result = value.split('');\n    var newValue = result.map(function (temp) {\n      return temp in DataUtil.diacritics ? DataUtil.diacritics[temp] : temp;\n    });\n    return newValue.join('');\n  };\n\n  DataUtil.merge = function (left, right, fieldName, comparer) {\n    var result = [];\n    var current;\n\n    while (left.length > 0 || right.length > 0) {\n      if (left.length > 0 && right.length > 0) {\n        if (comparer) {\n          current = comparer(this.getVal(left, 0, fieldName), this.getVal(right, 0, fieldName), left[0], right[0]) <= 0 ? left : right;\n        } else {\n          current = left[0][fieldName] < left[0][fieldName] ? left : right;\n        }\n      } else {\n        current = left.length > 0 ? left : right;\n      }\n\n      result.push(current.shift());\n    }\n\n    return result;\n  };\n\n  DataUtil.getVal = function (array, index, field) {\n    return field ? this.getObject(field, array[index]) : array[index];\n  };\n\n  DataUtil.toLowerCase = function (val) {\n    return val ? typeof val === 'string' ? val.toLowerCase() : val.toString() : val === 0 || val === false ? val.toString() : '';\n  };\n  /**\n   * To perform the filter operation with specified adaptor and returns the result.\n   * @param  {Object} adaptor\n   * @param  {string} fnName\n   * @param  {Object} param1?\n   * @param  {Object} param2?\n   * @hidden\n   */\n\n\n  DataUtil.callAdaptorFunction = function (adaptor, fnName, param1, param2) {\n    if (fnName in adaptor) {\n      var res = adaptor[fnName](param1, param2);\n\n      if (!isNullOrUndefined(res)) {\n        param1 = res;\n      }\n    }\n\n    return param1;\n  };\n\n  DataUtil.getAddParams = function (adp, dm, query) {\n    var req = {};\n    DataUtil.callAdaptorFunction(adp, 'addParams', {\n      dm: dm,\n      query: query,\n      params: query.params,\n      reqParams: req\n    });\n    return req;\n  };\n  /**\n   * Checks wheather the given input is a plain object or not.\n   * @param  {Object|Object[]} obj\n   */\n\n\n  DataUtil.isPlainObject = function (obj) {\n    return !!obj && obj.constructor === Object;\n  };\n  /**\n   * Returns true when the browser cross origin request.\n   */\n\n\n  DataUtil.isCors = function () {\n    var xhr = null;\n    var request = 'XMLHttpRequest';\n\n    try {\n      xhr = new window[request]();\n    } catch (e) {// No exception handling\n    }\n\n    return !!xhr && 'withCredentials' in xhr;\n  };\n  /**\n   * Generate random GUID value which will be prefixed with the given value.\n   * @param  {string} prefix\n   */\n\n\n  DataUtil.getGuid = function (prefix) {\n    var hexs = '0123456789abcdef';\n    var rand;\n    return (prefix || '') + '00000000-0000-4000-0000-000000000000'.replace(/0/g, function (val, i) {\n      if ('crypto' in window && 'getRandomValues' in crypto) {\n        var arr = new Uint8Array(1);\n        window.crypto.getRandomValues(arr);\n        rand = arr[0] % 16 | 0;\n      } else {\n        rand = Math.random() * 16 | 0;\n      }\n\n      return hexs[i === 19 ? rand & 0x3 | 0x8 : rand];\n    });\n  };\n  /**\n   * Checks wheather the given value is null or not.\n   * @param  {string|Object} val\n   * @returns boolean\n   */\n\n\n  DataUtil.isNull = function (val) {\n    return val === undefined || val === null;\n  };\n  /**\n   * To get the required items from collection of objects.\n   * @param  {Object[]} array\n   * @param  {string} field\n   * @param  {Function} comparer\n   * @returns Object\n   * @hidden\n   */\n\n\n  DataUtil.getItemFromComparer = function (array, field, comparer) {\n    var keyVal;\n    var current;\n    var key;\n    var i = 0;\n    var castRequired = typeof DataUtil.getVal(array, 0, field) === 'string';\n\n    if (array.length) {\n      while (isNullOrUndefined(keyVal) && i < array.length) {\n        keyVal = DataUtil.getVal(array, i, field);\n        key = array[i++];\n      }\n    }\n\n    for (; i < array.length; i++) {\n      current = DataUtil.getVal(array, i, field);\n\n      if (isNullOrUndefined(current)) {\n        continue;\n      }\n\n      if (castRequired) {\n        keyVal = +keyVal;\n        current = +current;\n      }\n\n      if (comparer(keyVal, current) > 0) {\n        keyVal = current;\n        key = array[i];\n      }\n    }\n\n    return key;\n  };\n  /**\n   * To get distinct values of Array or Array of Objects.\n   * @param  {Object[]} json\n   * @param  {string} field\n   * @param  {boolean} requiresCompleteRecord\n   * @returns Object[]\n   * * distinct array of objects is return when requiresCompleteRecord set as true.\n   * @hidden\n   */\n\n\n  DataUtil.distinct = function (json, fieldName, requiresCompleteRecord) {\n    requiresCompleteRecord = isNullOrUndefined(requiresCompleteRecord) ? false : requiresCompleteRecord;\n    var result = [];\n    var val;\n    var tmp = {};\n    json.forEach(function (data, index) {\n      val = typeof json[index] === 'object' ? DataUtil.getVal(json, index, fieldName) : json[index];\n\n      if (!(val in tmp)) {\n        result.push(!requiresCompleteRecord ? val : json[index]);\n        tmp[val] = 1;\n      }\n    });\n    return result;\n  };\n  /**\n   * Process the given records based on the datamanager string.\n   * @param  {string} datamanager\n   * @param  {Object[]} records\n   */\n\n\n  DataUtil.processData = function (dm, records) {\n    var query = this.prepareQuery(dm);\n    var sampledata = new DataManager(records);\n\n    if (dm.requiresCounts) {\n      query.requiresCount();\n    }\n\n    var result = sampledata.executeLocal(query);\n    var returnValue = {\n      result: dm.requiresCounts ? result.result : result,\n      count: result.count,\n      aggregates: JSON.stringify(result.aggregates)\n    };\n    return dm.requiresCounts ? returnValue : result;\n  };\n\n  DataUtil.prepareQuery = function (dm) {\n    var _this = this;\n\n    var query = new Query();\n\n    if (dm.select) {\n      query.select(dm.select);\n    }\n\n    if (dm.where) {\n      var where = DataUtil.parse.parseJson(dm.where);\n      where.filter(function (pred) {\n        if (isNullOrUndefined(pred.condition)) {\n          query.where(pred.field, pred.operator, pred.value, pred.ignoreCase, pred.ignoreAccent);\n        } else {\n          var predicateList = [];\n\n          if (pred.field) {\n            predicateList.push(new Predicate(pred.field, pred.operator, pred.value, pred.ignoreCase, pred.ignoreAccent));\n          } else {\n            predicateList = predicateList.concat(_this.getPredicate(pred.predicates));\n          }\n\n          if (pred.condition == 'or') {\n            query.where(Predicate.or(predicateList));\n          } else if (pred.condition == 'and') {\n            query.where(Predicate.and(predicateList));\n          }\n        }\n      });\n    }\n\n    if (dm.search) {\n      var search = DataUtil.parse.parseJson(dm.search);\n      search.filter(function (e) {\n        return query.search(e.key, e.fields, e['operator'], e['ignoreCase'], e['ignoreAccent']);\n      });\n    }\n\n    if (dm.aggregates) {\n      dm.aggregates.filter(function (e) {\n        return query.aggregate(e.type, e.field);\n      });\n    }\n\n    if (dm.sorted) {\n      dm.sorted.filter(function (e) {\n        return query.sortBy(e.name, e.direction);\n      });\n    }\n\n    if (dm.skip) {\n      query.skip(dm.skip);\n    }\n\n    if (dm.take) {\n      query.take(dm.take);\n    }\n\n    if (dm.group) {\n      dm.group.filter(function (grp) {\n        return query.group(grp);\n      });\n    }\n\n    return query;\n  };\n\n  DataUtil.getPredicate = function (pred) {\n    var mainPred = [];\n\n    for (var i = 0; i < pred.length; i++) {\n      var e = pred[i];\n\n      if (e.field) {\n        mainPred.push(new Predicate(e.field, e.operator, e.value, e.ignoreCase, e.ignoreAccent));\n      } else {\n        var childPred = [];\n        var cpre = this.getPredicate(e.predicates);\n\n        for (var _i = 0, _a = Object.keys(cpre); _i < _a.length; _i++) {\n          var prop = _a[_i];\n          childPred.push(cpre[prop]);\n        }\n\n        mainPred.push(e.condition == 'or' ? Predicate.or(childPred) : Predicate.and(childPred));\n      }\n    }\n\n    return mainPred;\n  };\n  /**\n   * Specifies the value which will be used to adjust the date value to server timezone.\n   * @default null\n   */\n\n\n  DataUtil.serverTimezoneOffset = null;\n  /**\n   * Species whether are not to be parsed with serverTimezoneOffset value.\n   * @hidden\n   */\n\n  DataUtil.timeZoneHandling = true;\n  /**\n   * Throw error with the given string as message.\n   * @param  {string} er\n   */\n\n  DataUtil.throwError = function (error) {\n    try {\n      throw new Error(error);\n    } catch (e) {\n      throw e.message + '\\n' + e.stack;\n    }\n  };\n\n  DataUtil.aggregates = {\n    /**\n     * Calculate sum of the given field in the data.\n     * @param  {Object[]} ds\n     * @param  {string} field\n     */\n    sum: function (ds, field) {\n      var result = 0;\n      var val;\n      var castRequired = typeof DataUtil.getVal(ds, 0, field) !== 'number';\n\n      for (var i = 0; i < ds.length; i++) {\n        val = DataUtil.getVal(ds, i, field);\n\n        if (!isNaN(val) && val !== null) {\n          if (castRequired) {\n            val = +val;\n          }\n\n          result += val;\n        }\n      }\n\n      return result;\n    },\n\n    /**\n     * Calculate average value of the given field in the data.\n     * @param  {Object[]} ds\n     * @param  {string} field\n     */\n    average: function (ds, field) {\n      return DataUtil.aggregates.sum(ds, field) / ds.length;\n    },\n\n    /**\n     * Returns the min value of the data based on the field.\n     * @param  {Object[]} ds\n     * @param  {string|Function} field\n     */\n    min: function (ds, field) {\n      var comparer;\n\n      if (typeof field === 'function') {\n        comparer = field;\n        field = null;\n      }\n\n      return DataUtil.getObject(field, DataUtil.getItemFromComparer(ds, field, comparer || DataUtil.fnAscending));\n    },\n\n    /**\n     * Returns the max value of the data based on the field.\n     * @param  {Object[]} ds\n     * @param  {string} field\n     * @returns number\n     */\n    max: function (ds, field) {\n      var comparer;\n\n      if (typeof field === 'function') {\n        comparer = field;\n        field = null;\n      }\n\n      return DataUtil.getObject(field, DataUtil.getItemFromComparer(ds, field, comparer || DataUtil.fnDescending));\n    },\n\n    /**\n     * Returns the total number of true value present in the data based on the given boolean field name.\n     * @param  {Object[]} ds\n     * @param  {string} field\n     */\n    truecount: function (ds, field) {\n      return new DataManager(ds).executeLocal(new Query().where(field, 'equal', true, true)).length;\n    },\n\n    /**\n     * Returns the total number of false value present in the data based on the given boolean field name.\n     * @param  {Object[]} ds\n     * @param  {string} field\n     */\n    falsecount: function (ds, field) {\n      return new DataManager(ds).executeLocal(new Query().where(field, 'equal', false, true)).length;\n    },\n\n    /**\n     * Returns the length of the given data.\n     * @param  {Object[]} ds\n     * @param  {string} field?\n     * @returns number\n     */\n    count: function (ds, field) {\n      return ds.length;\n    }\n  };\n  /**\n   * Specifies the Object with filter operators.\n   */\n\n  DataUtil.operatorSymbols = {\n    '<': 'lessthan',\n    '>': 'greaterthan',\n    '<=': 'lessthanorequal',\n    '>=': 'greaterthanorequal',\n    '==': 'equal',\n    '!=': 'notequal',\n    '*=': 'contains',\n    '$=': 'endswith',\n    '^=': 'startswith'\n  };\n  /**\n   * Specifies the Object with filter operators which will be used for OData filter query generation.\n   * * It will be used for date/number type filter query.\n   */\n\n  DataUtil.odBiOperator = {\n    '<': ' lt ',\n    '>': ' gt ',\n    '<=': ' le ',\n    '>=': ' ge ',\n    '==': ' eq ',\n    '!=': ' ne ',\n    'lessthan': ' lt ',\n    'lessthanorequal': ' le ',\n    'greaterthan': ' gt ',\n    'greaterthanorequal': ' ge ',\n    'equal': ' eq ',\n    'notequal': ' ne '\n  };\n  /**\n   * Specifies the Object with filter operators which will be used for OData filter query generation.\n   * It will be used for string type filter query.\n   */\n\n  DataUtil.odUniOperator = {\n    '$=': 'endswith',\n    '^=': 'startswith',\n    '*=': 'substringof',\n    'endswith': 'endswith',\n    'startswith': 'startswith',\n    'contains': 'substringof'\n  };\n  /**\n   * Specifies the Object with filter operators which will be used for ODataV4 filter query generation.\n   * It will be used for string type filter query.\n   */\n\n  DataUtil.odv4UniOperator = {\n    '$=': 'endswith',\n    '^=': 'startswith',\n    '*=': 'contains',\n    'endswith': 'endswith',\n    'startswith': 'startswith',\n    'contains': 'contains'\n  };\n  DataUtil.diacritics = {\n    '\\u24B6': 'A',\n    '\\uFF21': 'A',\n    '\\u00C0': 'A',\n    '\\u00C1': 'A',\n    '\\u00C2': 'A',\n    '\\u1EA6': 'A',\n    '\\u1EA4': 'A',\n    '\\u1EAA': 'A',\n    '\\u1EA8': 'A',\n    '\\u00C3': 'A',\n    '\\u0100': 'A',\n    '\\u0102': 'A',\n    '\\u1EB0': 'A',\n    '\\u1EAE': 'A',\n    '\\u1EB4': 'A',\n    '\\u1EB2': 'A',\n    '\\u0226': 'A',\n    '\\u01E0': 'A',\n    '\\u00C4': 'A',\n    '\\u01DE': 'A',\n    '\\u1EA2': 'A',\n    '\\u00C5': 'A',\n    '\\u01FA': 'A',\n    '\\u01CD': 'A',\n    '\\u0200': 'A',\n    '\\u0202': 'A',\n    '\\u1EA0': 'A',\n    '\\u1EAC': 'A',\n    '\\u1EB6': 'A',\n    '\\u1E00': 'A',\n    '\\u0104': 'A',\n    '\\u023A': 'A',\n    '\\u2C6F': 'A',\n    '\\uA732': 'AA',\n    '\\u00C6': 'AE',\n    '\\u01FC': 'AE',\n    '\\u01E2': 'AE',\n    '\\uA734': 'AO',\n    '\\uA736': 'AU',\n    '\\uA738': 'AV',\n    '\\uA73A': 'AV',\n    '\\uA73C': 'AY',\n    '\\u24B7': 'B',\n    '\\uFF22': 'B',\n    '\\u1E02': 'B',\n    '\\u1E04': 'B',\n    '\\u1E06': 'B',\n    '\\u0243': 'B',\n    '\\u0182': 'B',\n    '\\u0181': 'B',\n    '\\u24B8': 'C',\n    '\\uFF23': 'C',\n    '\\u0106': 'C',\n    '\\u0108': 'C',\n    '\\u010A': 'C',\n    '\\u010C': 'C',\n    '\\u00C7': 'C',\n    '\\u1E08': 'C',\n    '\\u0187': 'C',\n    '\\u023B': 'C',\n    '\\uA73E': 'C',\n    '\\u24B9': 'D',\n    '\\uFF24': 'D',\n    '\\u1E0A': 'D',\n    '\\u010E': 'D',\n    '\\u1E0C': 'D',\n    '\\u1E10': 'D',\n    '\\u1E12': 'D',\n    '\\u1E0E': 'D',\n    '\\u0110': 'D',\n    '\\u018B': 'D',\n    '\\u018A': 'D',\n    '\\u0189': 'D',\n    '\\uA779': 'D',\n    '\\u01F1': 'DZ',\n    '\\u01C4': 'DZ',\n    '\\u01F2': 'Dz',\n    '\\u01C5': 'Dz',\n    '\\u24BA': 'E',\n    '\\uFF25': 'E',\n    '\\u00C8': 'E',\n    '\\u00C9': 'E',\n    '\\u00CA': 'E',\n    '\\u1EC0': 'E',\n    '\\u1EBE': 'E',\n    '\\u1EC4': 'E',\n    '\\u1EC2': 'E',\n    '\\u1EBC': 'E',\n    '\\u0112': 'E',\n    '\\u1E14': 'E',\n    '\\u1E16': 'E',\n    '\\u0114': 'E',\n    '\\u0116': 'E',\n    '\\u00CB': 'E',\n    '\\u1EBA': 'E',\n    '\\u011A': 'E',\n    '\\u0204': 'E',\n    '\\u0206': 'E',\n    '\\u1EB8': 'E',\n    '\\u1EC6': 'E',\n    '\\u0228': 'E',\n    '\\u1E1C': 'E',\n    '\\u0118': 'E',\n    '\\u1E18': 'E',\n    '\\u1E1A': 'E',\n    '\\u0190': 'E',\n    '\\u018E': 'E',\n    '\\u24BB': 'F',\n    '\\uFF26': 'F',\n    '\\u1E1E': 'F',\n    '\\u0191': 'F',\n    '\\uA77B': 'F',\n    '\\u24BC': 'G',\n    '\\uFF27': 'G',\n    '\\u01F4': 'G',\n    '\\u011C': 'G',\n    '\\u1E20': 'G',\n    '\\u011E': 'G',\n    '\\u0120': 'G',\n    '\\u01E6': 'G',\n    '\\u0122': 'G',\n    '\\u01E4': 'G',\n    '\\u0193': 'G',\n    '\\uA7A0': 'G',\n    '\\uA77D': 'G',\n    '\\uA77E': 'G',\n    '\\u24BD': 'H',\n    '\\uFF28': 'H',\n    '\\u0124': 'H',\n    '\\u1E22': 'H',\n    '\\u1E26': 'H',\n    '\\u021E': 'H',\n    '\\u1E24': 'H',\n    '\\u1E28': 'H',\n    '\\u1E2A': 'H',\n    '\\u0126': 'H',\n    '\\u2C67': 'H',\n    '\\u2C75': 'H',\n    '\\uA78D': 'H',\n    '\\u24BE': 'I',\n    '\\uFF29': 'I',\n    '\\u00CC': 'I',\n    '\\u00CD': 'I',\n    '\\u00CE': 'I',\n    '\\u0128': 'I',\n    '\\u012A': 'I',\n    '\\u012C': 'I',\n    '\\u0130': 'I',\n    '\\u00CF': 'I',\n    '\\u1E2E': 'I',\n    '\\u1EC8': 'I',\n    '\\u01CF': 'I',\n    '\\u0208': 'I',\n    '\\u020A': 'I',\n    '\\u1ECA': 'I',\n    '\\u012E': 'I',\n    '\\u1E2C': 'I',\n    '\\u0197': 'I',\n    '\\u24BF': 'J',\n    '\\uFF2A': 'J',\n    '\\u0134': 'J',\n    '\\u0248': 'J',\n    '\\u24C0': 'K',\n    '\\uFF2B': 'K',\n    '\\u1E30': 'K',\n    '\\u01E8': 'K',\n    '\\u1E32': 'K',\n    '\\u0136': 'K',\n    '\\u1E34': 'K',\n    '\\u0198': 'K',\n    '\\u2C69': 'K',\n    '\\uA740': 'K',\n    '\\uA742': 'K',\n    '\\uA744': 'K',\n    '\\uA7A2': 'K',\n    '\\u24C1': 'L',\n    '\\uFF2C': 'L',\n    '\\u013F': 'L',\n    '\\u0139': 'L',\n    '\\u013D': 'L',\n    '\\u1E36': 'L',\n    '\\u1E38': 'L',\n    '\\u013B': 'L',\n    '\\u1E3C': 'L',\n    '\\u1E3A': 'L',\n    '\\u0141': 'L',\n    '\\u023D': 'L',\n    '\\u2C62': 'L',\n    '\\u2C60': 'L',\n    '\\uA748': 'L',\n    '\\uA746': 'L',\n    '\\uA780': 'L',\n    '\\u01C7': 'LJ',\n    '\\u01C8': 'Lj',\n    '\\u24C2': 'M',\n    '\\uFF2D': 'M',\n    '\\u1E3E': 'M',\n    '\\u1E40': 'M',\n    '\\u1E42': 'M',\n    '\\u2C6E': 'M',\n    '\\u019C': 'M',\n    '\\u24C3': 'N',\n    '\\uFF2E': 'N',\n    '\\u01F8': 'N',\n    '\\u0143': 'N',\n    '\\u00D1': 'N',\n    '\\u1E44': 'N',\n    '\\u0147': 'N',\n    '\\u1E46': 'N',\n    '\\u0145': 'N',\n    '\\u1E4A': 'N',\n    '\\u1E48': 'N',\n    '\\u0220': 'N',\n    '\\u019D': 'N',\n    '\\uA790': 'N',\n    '\\uA7A4': 'N',\n    '\\u01CA': 'NJ',\n    '\\u01CB': 'Nj',\n    '\\u24C4': 'O',\n    '\\uFF2F': 'O',\n    '\\u00D2': 'O',\n    '\\u00D3': 'O',\n    '\\u00D4': 'O',\n    '\\u1ED2': 'O',\n    '\\u1ED0': 'O',\n    '\\u1ED6': 'O',\n    '\\u1ED4': 'O',\n    '\\u00D5': 'O',\n    '\\u1E4C': 'O',\n    '\\u022C': 'O',\n    '\\u1E4E': 'O',\n    '\\u014C': 'O',\n    '\\u1E50': 'O',\n    '\\u1E52': 'O',\n    '\\u014E': 'O',\n    '\\u022E': 'O',\n    '\\u0230': 'O',\n    '\\u00D6': 'O',\n    '\\u022A': 'O',\n    '\\u1ECE': 'O',\n    '\\u0150': 'O',\n    '\\u01D1': 'O',\n    '\\u020C': 'O',\n    '\\u020E': 'O',\n    '\\u01A0': 'O',\n    '\\u1EDC': 'O',\n    '\\u1EDA': 'O',\n    '\\u1EE0': 'O',\n    '\\u1EDE': 'O',\n    '\\u1EE2': 'O',\n    '\\u1ECC': 'O',\n    '\\u1ED8': 'O',\n    '\\u01EA': 'O',\n    '\\u01EC': 'O',\n    '\\u00D8': 'O',\n    '\\u01FE': 'O',\n    '\\u0186': 'O',\n    '\\u019F': 'O',\n    '\\uA74A': 'O',\n    '\\uA74C': 'O',\n    '\\u01A2': 'OI',\n    '\\uA74E': 'OO',\n    '\\u0222': 'OU',\n    '\\u24C5': 'P',\n    '\\uFF30': 'P',\n    '\\u1E54': 'P',\n    '\\u1E56': 'P',\n    '\\u01A4': 'P',\n    '\\u2C63': 'P',\n    '\\uA750': 'P',\n    '\\uA752': 'P',\n    '\\uA754': 'P',\n    '\\u24C6': 'Q',\n    '\\uFF31': 'Q',\n    '\\uA756': 'Q',\n    '\\uA758': 'Q',\n    '\\u024A': 'Q',\n    '\\u24C7': 'R',\n    '\\uFF32': 'R',\n    '\\u0154': 'R',\n    '\\u1E58': 'R',\n    '\\u0158': 'R',\n    '\\u0210': 'R',\n    '\\u0212': 'R',\n    '\\u1E5A': 'R',\n    '\\u1E5C': 'R',\n    '\\u0156': 'R',\n    '\\u1E5E': 'R',\n    '\\u024C': 'R',\n    '\\u2C64': 'R',\n    '\\uA75A': 'R',\n    '\\uA7A6': 'R',\n    '\\uA782': 'R',\n    '\\u24C8': 'S',\n    '\\uFF33': 'S',\n    '\\u1E9E': 'S',\n    '\\u015A': 'S',\n    '\\u1E64': 'S',\n    '\\u015C': 'S',\n    '\\u1E60': 'S',\n    '\\u0160': 'S',\n    '\\u1E66': 'S',\n    '\\u1E62': 'S',\n    '\\u1E68': 'S',\n    '\\u0218': 'S',\n    '\\u015E': 'S',\n    '\\u2C7E': 'S',\n    '\\uA7A8': 'S',\n    '\\uA784': 'S',\n    '\\u24C9': 'T',\n    '\\uFF34': 'T',\n    '\\u1E6A': 'T',\n    '\\u0164': 'T',\n    '\\u1E6C': 'T',\n    '\\u021A': 'T',\n    '\\u0162': 'T',\n    '\\u1E70': 'T',\n    '\\u1E6E': 'T',\n    '\\u0166': 'T',\n    '\\u01AC': 'T',\n    '\\u01AE': 'T',\n    '\\u023E': 'T',\n    '\\uA786': 'T',\n    '\\uA728': 'TZ',\n    '\\u24CA': 'U',\n    '\\uFF35': 'U',\n    '\\u00D9': 'U',\n    '\\u00DA': 'U',\n    '\\u00DB': 'U',\n    '\\u0168': 'U',\n    '\\u1E78': 'U',\n    '\\u016A': 'U',\n    '\\u1E7A': 'U',\n    '\\u016C': 'U',\n    '\\u00DC': 'U',\n    '\\u01DB': 'U',\n    '\\u01D7': 'U',\n    '\\u01D5': 'U',\n    '\\u01D9': 'U',\n    '\\u1EE6': 'U',\n    '\\u016E': 'U',\n    '\\u0170': 'U',\n    '\\u01D3': 'U',\n    '\\u0214': 'U',\n    '\\u0216': 'U',\n    '\\u01AF': 'U',\n    '\\u1EEA': 'U',\n    '\\u1EE8': 'U',\n    '\\u1EEE': 'U',\n    '\\u1EEC': 'U',\n    '\\u1EF0': 'U',\n    '\\u1EE4': 'U',\n    '\\u1E72': 'U',\n    '\\u0172': 'U',\n    '\\u1E76': 'U',\n    '\\u1E74': 'U',\n    '\\u0244': 'U',\n    '\\u24CB': 'V',\n    '\\uFF36': 'V',\n    '\\u1E7C': 'V',\n    '\\u1E7E': 'V',\n    '\\u01B2': 'V',\n    '\\uA75E': 'V',\n    '\\u0245': 'V',\n    '\\uA760': 'VY',\n    '\\u24CC': 'W',\n    '\\uFF37': 'W',\n    '\\u1E80': 'W',\n    '\\u1E82': 'W',\n    '\\u0174': 'W',\n    '\\u1E86': 'W',\n    '\\u1E84': 'W',\n    '\\u1E88': 'W',\n    '\\u2C72': 'W',\n    '\\u24CD': 'X',\n    '\\uFF38': 'X',\n    '\\u1E8A': 'X',\n    '\\u1E8C': 'X',\n    '\\u24CE': 'Y',\n    '\\uFF39': 'Y',\n    '\\u1EF2': 'Y',\n    '\\u00DD': 'Y',\n    '\\u0176': 'Y',\n    '\\u1EF8': 'Y',\n    '\\u0232': 'Y',\n    '\\u1E8E': 'Y',\n    '\\u0178': 'Y',\n    '\\u1EF6': 'Y',\n    '\\u1EF4': 'Y',\n    '\\u01B3': 'Y',\n    '\\u024E': 'Y',\n    '\\u1EFE': 'Y',\n    '\\u24CF': 'Z',\n    '\\uFF3A': 'Z',\n    '\\u0179': 'Z',\n    '\\u1E90': 'Z',\n    '\\u017B': 'Z',\n    '\\u017D': 'Z',\n    '\\u1E92': 'Z',\n    '\\u1E94': 'Z',\n    '\\u01B5': 'Z',\n    '\\u0224': 'Z',\n    '\\u2C7F': 'Z',\n    '\\u2C6B': 'Z',\n    '\\uA762': 'Z',\n    '\\u24D0': 'a',\n    '\\uFF41': 'a',\n    '\\u1E9A': 'a',\n    '\\u00E0': 'a',\n    '\\u00E1': 'a',\n    '\\u00E2': 'a',\n    '\\u1EA7': 'a',\n    '\\u1EA5': 'a',\n    '\\u1EAB': 'a',\n    '\\u1EA9': 'a',\n    '\\u00E3': 'a',\n    '\\u0101': 'a',\n    '\\u0103': 'a',\n    '\\u1EB1': 'a',\n    '\\u1EAF': 'a',\n    '\\u1EB5': 'a',\n    '\\u1EB3': 'a',\n    '\\u0227': 'a',\n    '\\u01E1': 'a',\n    '\\u00E4': 'a',\n    '\\u01DF': 'a',\n    '\\u1EA3': 'a',\n    '\\u00E5': 'a',\n    '\\u01FB': 'a',\n    '\\u01CE': 'a',\n    '\\u0201': 'a',\n    '\\u0203': 'a',\n    '\\u1EA1': 'a',\n    '\\u1EAD': 'a',\n    '\\u1EB7': 'a',\n    '\\u1E01': 'a',\n    '\\u0105': 'a',\n    '\\u2C65': 'a',\n    '\\u0250': 'a',\n    '\\uA733': 'aa',\n    '\\u00E6': 'ae',\n    '\\u01FD': 'ae',\n    '\\u01E3': 'ae',\n    '\\uA735': 'ao',\n    '\\uA737': 'au',\n    '\\uA739': 'av',\n    '\\uA73B': 'av',\n    '\\uA73D': 'ay',\n    '\\u24D1': 'b',\n    '\\uFF42': 'b',\n    '\\u1E03': 'b',\n    '\\u1E05': 'b',\n    '\\u1E07': 'b',\n    '\\u0180': 'b',\n    '\\u0183': 'b',\n    '\\u0253': 'b',\n    '\\u24D2': 'c',\n    '\\uFF43': 'c',\n    '\\u0107': 'c',\n    '\\u0109': 'c',\n    '\\u010B': 'c',\n    '\\u010D': 'c',\n    '\\u00E7': 'c',\n    '\\u1E09': 'c',\n    '\\u0188': 'c',\n    '\\u023C': 'c',\n    '\\uA73F': 'c',\n    '\\u2184': 'c',\n    '\\u24D3': 'd',\n    '\\uFF44': 'd',\n    '\\u1E0B': 'd',\n    '\\u010F': 'd',\n    '\\u1E0D': 'd',\n    '\\u1E11': 'd',\n    '\\u1E13': 'd',\n    '\\u1E0F': 'd',\n    '\\u0111': 'd',\n    '\\u018C': 'd',\n    '\\u0256': 'd',\n    '\\u0257': 'd',\n    '\\uA77A': 'd',\n    '\\u01F3': 'dz',\n    '\\u01C6': 'dz',\n    '\\u24D4': 'e',\n    '\\uFF45': 'e',\n    '\\u00E8': 'e',\n    '\\u00E9': 'e',\n    '\\u00EA': 'e',\n    '\\u1EC1': 'e',\n    '\\u1EBF': 'e',\n    '\\u1EC5': 'e',\n    '\\u1EC3': 'e',\n    '\\u1EBD': 'e',\n    '\\u0113': 'e',\n    '\\u1E15': 'e',\n    '\\u1E17': 'e',\n    '\\u0115': 'e',\n    '\\u0117': 'e',\n    '\\u00EB': 'e',\n    '\\u1EBB': 'e',\n    '\\u011B': 'e',\n    '\\u0205': 'e',\n    '\\u0207': 'e',\n    '\\u1EB9': 'e',\n    '\\u1EC7': 'e',\n    '\\u0229': 'e',\n    '\\u1E1D': 'e',\n    '\\u0119': 'e',\n    '\\u1E19': 'e',\n    '\\u1E1B': 'e',\n    '\\u0247': 'e',\n    '\\u025B': 'e',\n    '\\u01DD': 'e',\n    '\\u24D5': 'f',\n    '\\uFF46': 'f',\n    '\\u1E1F': 'f',\n    '\\u0192': 'f',\n    '\\uA77C': 'f',\n    '\\u24D6': 'g',\n    '\\uFF47': 'g',\n    '\\u01F5': 'g',\n    '\\u011D': 'g',\n    '\\u1E21': 'g',\n    '\\u011F': 'g',\n    '\\u0121': 'g',\n    '\\u01E7': 'g',\n    '\\u0123': 'g',\n    '\\u01E5': 'g',\n    '\\u0260': 'g',\n    '\\uA7A1': 'g',\n    '\\u1D79': 'g',\n    '\\uA77F': 'g',\n    '\\u24D7': 'h',\n    '\\uFF48': 'h',\n    '\\u0125': 'h',\n    '\\u1E23': 'h',\n    '\\u1E27': 'h',\n    '\\u021F': 'h',\n    '\\u1E25': 'h',\n    '\\u1E29': 'h',\n    '\\u1E2B': 'h',\n    '\\u1E96': 'h',\n    '\\u0127': 'h',\n    '\\u2C68': 'h',\n    '\\u2C76': 'h',\n    '\\u0265': 'h',\n    '\\u0195': 'hv',\n    '\\u24D8': 'i',\n    '\\uFF49': 'i',\n    '\\u00EC': 'i',\n    '\\u00ED': 'i',\n    '\\u00EE': 'i',\n    '\\u0129': 'i',\n    '\\u012B': 'i',\n    '\\u012D': 'i',\n    '\\u00EF': 'i',\n    '\\u1E2F': 'i',\n    '\\u1EC9': 'i',\n    '\\u01D0': 'i',\n    '\\u0209': 'i',\n    '\\u020B': 'i',\n    '\\u1ECB': 'i',\n    '\\u012F': 'i',\n    '\\u1E2D': 'i',\n    '\\u0268': 'i',\n    '\\u0131': 'i',\n    '\\u24D9': 'j',\n    '\\uFF4A': 'j',\n    '\\u0135': 'j',\n    '\\u01F0': 'j',\n    '\\u0249': 'j',\n    '\\u24DA': 'k',\n    '\\uFF4B': 'k',\n    '\\u1E31': 'k',\n    '\\u01E9': 'k',\n    '\\u1E33': 'k',\n    '\\u0137': 'k',\n    '\\u1E35': 'k',\n    '\\u0199': 'k',\n    '\\u2C6A': 'k',\n    '\\uA741': 'k',\n    '\\uA743': 'k',\n    '\\uA745': 'k',\n    '\\uA7A3': 'k',\n    '\\u24DB': 'l',\n    '\\uFF4C': 'l',\n    '\\u0140': 'l',\n    '\\u013A': 'l',\n    '\\u013E': 'l',\n    '\\u1E37': 'l',\n    '\\u1E39': 'l',\n    '\\u013C': 'l',\n    '\\u1E3D': 'l',\n    '\\u1E3B': 'l',\n    '\\u017F': 'l',\n    '\\u0142': 'l',\n    '\\u019A': 'l',\n    '\\u026B': 'l',\n    '\\u2C61': 'l',\n    '\\uA749': 'l',\n    '\\uA781': 'l',\n    '\\uA747': 'l',\n    '\\u01C9': 'lj',\n    '\\u24DC': 'm',\n    '\\uFF4D': 'm',\n    '\\u1E3F': 'm',\n    '\\u1E41': 'm',\n    '\\u1E43': 'm',\n    '\\u0271': 'm',\n    '\\u026F': 'm',\n    '\\u24DD': 'n',\n    '\\uFF4E': 'n',\n    '\\u01F9': 'n',\n    '\\u0144': 'n',\n    '\\u00F1': 'n',\n    '\\u1E45': 'n',\n    '\\u0148': 'n',\n    '\\u1E47': 'n',\n    '\\u0146': 'n',\n    '\\u1E4B': 'n',\n    '\\u1E49': 'n',\n    '\\u019E': 'n',\n    '\\u0272': 'n',\n    '\\u0149': 'n',\n    '\\uA791': 'n',\n    '\\uA7A5': 'n',\n    '\\u01CC': 'nj',\n    '\\u24DE': 'o',\n    '\\uFF4F': 'o',\n    '\\u00F2': 'o',\n    '\\u00F3': 'o',\n    '\\u00F4': 'o',\n    '\\u1ED3': 'o',\n    '\\u1ED1': 'o',\n    '\\u1ED7': 'o',\n    '\\u1ED5': 'o',\n    '\\u00F5': 'o',\n    '\\u1E4D': 'o',\n    '\\u022D': 'o',\n    '\\u1E4F': 'o',\n    '\\u014D': 'o',\n    '\\u1E51': 'o',\n    '\\u1E53': 'o',\n    '\\u014F': 'o',\n    '\\u022F': 'o',\n    '\\u0231': 'o',\n    '\\u00F6': 'o',\n    '\\u022B': 'o',\n    '\\u1ECF': 'o',\n    '\\u0151': 'o',\n    '\\u01D2': 'o',\n    '\\u020D': 'o',\n    '\\u020F': 'o',\n    '\\u01A1': 'o',\n    '\\u1EDD': 'o',\n    '\\u1EDB': 'o',\n    '\\u1EE1': 'o',\n    '\\u1EDF': 'o',\n    '\\u1EE3': 'o',\n    '\\u1ECD': 'o',\n    '\\u1ED9': 'o',\n    '\\u01EB': 'o',\n    '\\u01ED': 'o',\n    '\\u00F8': 'o',\n    '\\u01FF': 'o',\n    '\\u0254': 'o',\n    '\\uA74B': 'o',\n    '\\uA74D': 'o',\n    '\\u0275': 'o',\n    '\\u01A3': 'oi',\n    '\\u0223': 'ou',\n    '\\uA74F': 'oo',\n    '\\u24DF': 'p',\n    '\\uFF50': 'p',\n    '\\u1E55': 'p',\n    '\\u1E57': 'p',\n    '\\u01A5': 'p',\n    '\\u1D7D': 'p',\n    '\\uA751': 'p',\n    '\\uA753': 'p',\n    '\\uA755': 'p',\n    '\\u24E0': 'q',\n    '\\uFF51': 'q',\n    '\\u024B': 'q',\n    '\\uA757': 'q',\n    '\\uA759': 'q',\n    '\\u24E1': 'r',\n    '\\uFF52': 'r',\n    '\\u0155': 'r',\n    '\\u1E59': 'r',\n    '\\u0159': 'r',\n    '\\u0211': 'r',\n    '\\u0213': 'r',\n    '\\u1E5B': 'r',\n    '\\u1E5D': 'r',\n    '\\u0157': 'r',\n    '\\u1E5F': 'r',\n    '\\u024D': 'r',\n    '\\u027D': 'r',\n    '\\uA75B': 'r',\n    '\\uA7A7': 'r',\n    '\\uA783': 'r',\n    '\\u24E2': 's',\n    '\\uFF53': 's',\n    '\\u00DF': 's',\n    '\\u015B': 's',\n    '\\u1E65': 's',\n    '\\u015D': 's',\n    '\\u1E61': 's',\n    '\\u0161': 's',\n    '\\u1E67': 's',\n    '\\u1E63': 's',\n    '\\u1E69': 's',\n    '\\u0219': 's',\n    '\\u015F': 's',\n    '\\u023F': 's',\n    '\\uA7A9': 's',\n    '\\uA785': 's',\n    '\\u1E9B': 's',\n    '\\u24E3': 't',\n    '\\uFF54': 't',\n    '\\u1E6B': 't',\n    '\\u1E97': 't',\n    '\\u0165': 't',\n    '\\u1E6D': 't',\n    '\\u021B': 't',\n    '\\u0163': 't',\n    '\\u1E71': 't',\n    '\\u1E6F': 't',\n    '\\u0167': 't',\n    '\\u01AD': 't',\n    '\\u0288': 't',\n    '\\u2C66': 't',\n    '\\uA787': 't',\n    '\\uA729': 'tz',\n    '\\u24E4': 'u',\n    '\\uFF55': 'u',\n    '\\u00F9': 'u',\n    '\\u00FA': 'u',\n    '\\u00FB': 'u',\n    '\\u0169': 'u',\n    '\\u1E79': 'u',\n    '\\u016B': 'u',\n    '\\u1E7B': 'u',\n    '\\u016D': 'u',\n    '\\u00FC': 'u',\n    '\\u01DC': 'u',\n    '\\u01D8': 'u',\n    '\\u01D6': 'u',\n    '\\u01DA': 'u',\n    '\\u1EE7': 'u',\n    '\\u016F': 'u',\n    '\\u0171': 'u',\n    '\\u01D4': 'u',\n    '\\u0215': 'u',\n    '\\u0217': 'u',\n    '\\u01B0': 'u',\n    '\\u1EEB': 'u',\n    '\\u1EE9': 'u',\n    '\\u1EEF': 'u',\n    '\\u1EED': 'u',\n    '\\u1EF1': 'u',\n    '\\u1EE5': 'u',\n    '\\u1E73': 'u',\n    '\\u0173': 'u',\n    '\\u1E77': 'u',\n    '\\u1E75': 'u',\n    '\\u0289': 'u',\n    '\\u24E5': 'v',\n    '\\uFF56': 'v',\n    '\\u1E7D': 'v',\n    '\\u1E7F': 'v',\n    '\\u028B': 'v',\n    '\\uA75F': 'v',\n    '\\u028C': 'v',\n    '\\uA761': 'vy',\n    '\\u24E6': 'w',\n    '\\uFF57': 'w',\n    '\\u1E81': 'w',\n    '\\u1E83': 'w',\n    '\\u0175': 'w',\n    '\\u1E87': 'w',\n    '\\u1E85': 'w',\n    '\\u1E98': 'w',\n    '\\u1E89': 'w',\n    '\\u2C73': 'w',\n    '\\u24E7': 'x',\n    '\\uFF58': 'x',\n    '\\u1E8B': 'x',\n    '\\u1E8D': 'x',\n    '\\u24E8': 'y',\n    '\\uFF59': 'y',\n    '\\u1EF3': 'y',\n    '\\u00FD': 'y',\n    '\\u0177': 'y',\n    '\\u1EF9': 'y',\n    '\\u0233': 'y',\n    '\\u1E8F': 'y',\n    '\\u00FF': 'y',\n    '\\u1EF7': 'y',\n    '\\u1E99': 'y',\n    '\\u1EF5': 'y',\n    '\\u01B4': 'y',\n    '\\u024F': 'y',\n    '\\u1EFF': 'y',\n    '\\u24E9': 'z',\n    '\\uFF5A': 'z',\n    '\\u017A': 'z',\n    '\\u1E91': 'z',\n    '\\u017C': 'z',\n    '\\u017E': 'z',\n    '\\u1E93': 'z',\n    '\\u1E95': 'z',\n    '\\u01B6': 'z',\n    '\\u0225': 'z',\n    '\\u0240': 'z',\n    '\\u2C6C': 'z',\n    '\\uA763': 'z',\n    '\\u0386': '\\u0391',\n    '\\u0388': '\\u0395',\n    '\\u0389': '\\u0397',\n    '\\u038A': '\\u0399',\n    '\\u03AA': '\\u0399',\n    '\\u038C': '\\u039F',\n    '\\u038E': '\\u03A5',\n    '\\u03AB': '\\u03A5',\n    '\\u038F': '\\u03A9',\n    '\\u03AC': '\\u03B1',\n    '\\u03AD': '\\u03B5',\n    '\\u03AE': '\\u03B7',\n    '\\u03AF': '\\u03B9',\n    '\\u03CA': '\\u03B9',\n    '\\u0390': '\\u03B9',\n    '\\u03CC': '\\u03BF',\n    '\\u03CD': '\\u03C5',\n    '\\u03CB': '\\u03C5',\n    '\\u03B0': '\\u03C5',\n    '\\u03C9': '\\u03C9',\n    '\\u03C2': '\\u03C3'\n  };\n  DataUtil.fnOperators = {\n    /**\n     * Returns true when the actual input is equal to the given input.\n     * @param  {string|number|boolean} actual\n     * @param  {string|number|boolean} expected\n     * @param  {boolean} ignoreCase?\n     * @param  {boolean} ignoreAccent?\n     */\n    equal: function (actual, expected, ignoreCase, ignoreAccent) {\n      if (ignoreAccent) {\n        actual = DataUtil.ignoreDiacritics(actual);\n        expected = DataUtil.ignoreDiacritics(expected);\n      }\n\n      if (ignoreCase) {\n        return DataUtil.toLowerCase(actual) === DataUtil.toLowerCase(expected);\n      }\n\n      return actual === expected;\n    },\n\n    /**\n     * Returns true when the actual input is not equal to the given input.\n     * @param  {string|number|boolean} actual\n     * @param  {string|number|boolean} expected\n     * @param  {boolean} ignoreCase?\n     */\n    notequal: function (actual, expected, ignoreCase, ignoreAccent) {\n      if (ignoreAccent) {\n        actual = DataUtil.ignoreDiacritics(actual);\n        expected = DataUtil.ignoreDiacritics(expected);\n      }\n\n      return !DataUtil.fnOperators.equal(actual, expected, ignoreCase);\n    },\n\n    /**\n     * Returns true when the actual input is less than to the given input.\n     * @param  {string|number|boolean} actual\n     * @param  {string|number|boolean} expected\n     * @param  {boolean} ignoreCase?\n     */\n    lessthan: function (actual, expected, ignoreCase) {\n      if (ignoreCase) {\n        return DataUtil.toLowerCase(actual) < DataUtil.toLowerCase(expected);\n      }\n\n      if (isNullOrUndefined(actual)) {\n        actual = undefined;\n      }\n\n      return actual < expected;\n    },\n\n    /**\n     * Returns true when the actual input is greater than to the given input.\n     * @param  {string|number|boolean} actual\n     * @param  {string|number|boolean} expected\n     * @param  {boolean} ignoreCase?\n     */\n    greaterthan: function (actual, expected, ignoreCase) {\n      if (ignoreCase) {\n        return DataUtil.toLowerCase(actual) > DataUtil.toLowerCase(expected);\n      }\n\n      return actual > expected;\n    },\n\n    /**\n     * Returns true when the actual input is less than or equal to the given input.\n     * @param  {string|number|boolean} actual\n     * @param  {string|number|boolean} expected\n     * @param  {boolean} ignoreCase?\n     */\n    lessthanorequal: function (actual, expected, ignoreCase) {\n      if (ignoreCase) {\n        return DataUtil.toLowerCase(actual) <= DataUtil.toLowerCase(expected);\n      }\n\n      if (isNullOrUndefined(actual)) {\n        actual = undefined;\n      }\n\n      return actual <= expected;\n    },\n\n    /**\n     * Returns true when the actual input is greater than or equal to the given input.\n     * @param  {string|number|boolean} actual\n     * @param  {string|number|boolean} expected\n     * @param  {boolean} ignoreCase?\n     */\n    greaterthanorequal: function (actual, expected, ignoreCase) {\n      if (ignoreCase) {\n        return DataUtil.toLowerCase(actual) >= DataUtil.toLowerCase(expected);\n      }\n\n      return actual >= expected;\n    },\n\n    /**\n     * Returns true when the actual input contains the given string.\n     * @param  {string|number} actual\n     * @param  {string|number} expected\n     * @param  {boolean} ignoreCase?\n     */\n    contains: function (actual, expected, ignoreCase, ignoreAccent) {\n      if (ignoreAccent) {\n        actual = DataUtil.ignoreDiacritics(actual);\n        expected = DataUtil.ignoreDiacritics(expected);\n      }\n\n      if (ignoreCase) {\n        return !isNullOrUndefined(actual) && !isNullOrUndefined(expected) && DataUtil.toLowerCase(actual).indexOf(DataUtil.toLowerCase(expected)) !== -1;\n      }\n\n      return !isNullOrUndefined(actual) && !isNullOrUndefined(expected) && actual.toString().indexOf(expected) !== -1;\n    },\n\n    /**\n     * Returns true when the given input value is not null.\n     * @param  {string|number} actual\n     * @returns boolean\n     */\n    notnull: function (actual) {\n      return actual !== null;\n    },\n\n    /**\n     * Returns true when the given input value is null.\n     * @param  {string|number} actual\n     * @returns boolean\n     */\n    isnull: function (actual) {\n      return actual === null;\n    },\n\n    /**\n     * Returns true when the actual input starts with the given string\n     * @param  {string} actual\n     * @param  {string} expected\n     * @param  {boolean} ignoreCase?\n     */\n    startswith: function (actual, expected, ignoreCase, ignoreAccent) {\n      if (ignoreAccent) {\n        actual = DataUtil.ignoreDiacritics(actual);\n        expected = DataUtil.ignoreDiacritics(expected);\n      }\n\n      if (ignoreCase) {\n        return actual && expected && DataUtil.startsWith(DataUtil.toLowerCase(actual), DataUtil.toLowerCase(expected));\n      }\n\n      return actual && expected && DataUtil.startsWith(actual, expected);\n    },\n\n    /**\n     * Returns true when the actual input ends with the given string.\n     * @param  {string} actual\n     * @param  {string} expected\n     * @param  {boolean} ignoreCase?\n     */\n    endswith: function (actual, expected, ignoreCase, ignoreAccent) {\n      if (ignoreAccent) {\n        actual = DataUtil.ignoreDiacritics(actual);\n        expected = DataUtil.ignoreDiacritics(expected);\n      }\n\n      if (ignoreCase) {\n        return actual && expected && DataUtil.endsWith(DataUtil.toLowerCase(actual), DataUtil.toLowerCase(expected));\n      }\n\n      return actual && expected && DataUtil.endsWith(actual, expected);\n    },\n\n    /**\n     * It will return the filter operator based on the filter symbol.\n     * @param  {string} operator\n     * @hidden\n     */\n    processSymbols: function (operator) {\n      var fnName = DataUtil.operatorSymbols[operator];\n\n      if (fnName) {\n        var fn = DataUtil.fnOperators[fnName];\n        return fn;\n      }\n\n      return DataUtil.throwError('Query - Process Operator : Invalid operator');\n    },\n\n    /**\n     * It will return the valid filter operator based on the specified operators.\n     * @param  {string} operator\n     * @hidden\n     */\n    processOperator: function (operator) {\n      var fn = DataUtil.fnOperators[operator];\n\n      if (fn) {\n        return fn;\n      }\n\n      return DataUtil.fnOperators.processSymbols(operator);\n    }\n  };\n  /**\n   * To perform the parse operation on JSON data, like convert to string from JSON or convert to JSON from string.\n   */\n\n  DataUtil.parse = {\n    /**\n     * Parse the given string to the plain JavaScript object.\n     * @param  {string|Object|Object[]} jsonText\n     */\n    parseJson: function (jsonText) {\n      if (typeof jsonText === 'string') {\n        jsonText = JSON.parse(jsonText, DataUtil.parse.jsonReviver);\n      } else if (jsonText instanceof Array) {\n        DataUtil.parse.iterateAndReviveArray(jsonText);\n      } else if (typeof jsonText === 'object' && jsonText !== null) {\n        DataUtil.parse.iterateAndReviveJson(jsonText);\n      }\n\n      return jsonText;\n    },\n\n    /**\n     * It will perform on array of values.\n     * @param  {string[]|Object[]} array\n     * @hidden\n     */\n    iterateAndReviveArray: function (array) {\n      for (var i = 0; i < array.length; i++) {\n        if (typeof array[i] === 'object' && array[i] !== null) {\n          DataUtil.parse.iterateAndReviveJson(array[i]);\n        } else if (typeof array[i] === 'string' && !/^[\\s]*\\[|^[\\s]*\\{(.)+:|\\\"/g.test(array[i])) {\n          array[i] = DataUtil.parse.jsonReviver('', array[i]);\n        } else {\n          array[i] = DataUtil.parse.parseJson(array[i]);\n        }\n      }\n    },\n\n    /**\n     * It will perform on JSON values\n     * @param  {JSON} json\n     * @hidden\n     */\n    iterateAndReviveJson: function (json) {\n      var value;\n      var keys = Object.keys(json);\n\n      for (var _i = 0, keys_2 = keys; _i < keys_2.length; _i++) {\n        var prop = keys_2[_i];\n\n        if (DataUtil.startsWith(prop, '__')) {\n          continue;\n        }\n\n        value = json[prop];\n\n        if (typeof value === 'object') {\n          if (value instanceof Array) {\n            DataUtil.parse.iterateAndReviveArray(value);\n          } else if (value) {\n            DataUtil.parse.iterateAndReviveJson(value);\n          }\n        } else {\n          json[prop] = DataUtil.parse.jsonReviver(json[prop], value);\n        }\n      }\n    },\n\n    /**\n     * It will perform on JSON values\n     * @param  {string} field\n     * @param  {string|Date} value\n     * @hidden\n     */\n    jsonReviver: function (field, value) {\n      if (typeof value === 'string') {\n        var ms = /^\\/Date\\(([+-]?[0-9]+)([+-][0-9]{4})?\\)\\/$/.exec(value);\n        var offSet = DataUtil.timeZoneHandling ? DataUtil.serverTimezoneOffset : null;\n\n        if (ms) {\n          return DataUtil.dateParse.toTimeZone(new Date(parseInt(ms[1], 10)), offSet, true);\n        } else if (/^(\\d{4}\\-\\d\\d\\-\\d\\d([tT][\\d:\\.]*){1})([zZ]|([+\\-])(\\d\\d):?(\\d\\d))?$/.test(value)) {\n          var isUTC = value.indexOf('Z') > -1 || value.indexOf('z') > -1;\n          var arr = value.split(/[^0-9.]/);\n\n          if (isUTC) {\n            value = DataUtil.dateParse.toTimeZone(new Date(parseInt(arr[0], 10), parseInt(arr[1], 10) - 1, parseInt(arr[2], 10), parseInt(arr[3], 10), parseInt(arr[4], 10), parseInt(arr[5], 10)), DataUtil.serverTimezoneOffset, false);\n          } else {\n            var utcFormat = new Date(parseInt(arr[0], 10), parseInt(arr[1], 10) - 1, parseInt(arr[2], 10), parseInt(arr[3], 10), parseInt(arr[4], 10), parseInt(arr[5], 10));\n            var hrs = parseInt(arr[6], 10);\n            var mins = parseInt(arr[7], 10);\n\n            if (isNaN(hrs) && isNaN(mins)) {\n              return utcFormat;\n            }\n\n            if (value.indexOf('+') > -1) {\n              utcFormat.setHours(utcFormat.getHours() - hrs, utcFormat.getMinutes() - mins);\n            } else {\n              utcFormat.setHours(utcFormat.getHours() + hrs, utcFormat.getMinutes() + mins);\n            }\n\n            value = DataUtil.dateParse.toTimeZone(utcFormat, DataUtil.serverTimezoneOffset, false);\n          }\n\n          if (DataUtil.serverTimezoneOffset == null) {\n            value = DataUtil.dateParse.addSelfOffset(value);\n          }\n        }\n      }\n\n      return value;\n    },\n\n    /**\n     * Check wheather the given value is JSON or not.\n     * @param  {Object[]} jsonData\n     */\n    isJson: function (jsonData) {\n      if (typeof jsonData[0] === 'string') {\n        return jsonData;\n      }\n\n      return DataUtil.parse.parseJson(jsonData);\n    },\n\n    /**\n     * Checks wheather the given value is GUID or not.\n     * @param  {string} value\n     */\n    isGuid: function (value) {\n      var regex = /[A-Fa-f0-9]{8}(?:-[A-Fa-f0-9]{4}){3}-[A-Fa-f0-9]{12}/i;\n      var match = regex.exec(value);\n      return match != null;\n    },\n\n    /**\n     * The method used to replace the value based on the type.\n     * @param  {Object} value\n     * @param  {boolean} stringify\n     * @hidden\n     */\n    replacer: function (value, stringify) {\n      if (DataUtil.isPlainObject(value)) {\n        return DataUtil.parse.jsonReplacer(value, stringify);\n      }\n\n      if (value instanceof Array) {\n        return DataUtil.parse.arrayReplacer(value);\n      }\n\n      if (value instanceof Date) {\n        return DataUtil.parse.jsonReplacer({\n          val: value\n        }, stringify).val;\n      }\n\n      return value;\n    },\n\n    /**\n     * It will replace the JSON value.\n     * @param  {string} key\n     * @param  {Object} val\n     * @hidden\n     */\n    jsonReplacer: function (val, stringify) {\n      var value;\n      var keys = Object.keys(val);\n\n      for (var _i = 0, keys_3 = keys; _i < keys_3.length; _i++) {\n        var prop = keys_3[_i];\n        value = val[prop];\n\n        if (!(value instanceof Date)) {\n          continue;\n        }\n\n        var d = value;\n\n        if (DataUtil.serverTimezoneOffset == null) {\n          val[prop] = DataUtil.dateParse.toTimeZone(d, null).toJSON();\n        } else {\n          d = new Date(+d + DataUtil.serverTimezoneOffset * 3600000);\n          val[prop] = DataUtil.dateParse.toTimeZone(DataUtil.dateParse.addSelfOffset(d), null).toJSON();\n        }\n      }\n\n      return val;\n    },\n\n    /**\n     * It will replace the Array of value.\n     * @param  {string} key\n     * @param  {Object[]} val\n     * @hidden\n     */\n    arrayReplacer: function (val) {\n      for (var i = 0; i < val.length; i++) {\n        if (DataUtil.isPlainObject(val[i])) {\n          val[i] = DataUtil.parse.jsonReplacer(val[i]);\n        } else if (val[i] instanceof Date) {\n          val[i] = DataUtil.parse.jsonReplacer({\n            date: val[i]\n          }).date;\n        }\n      }\n\n      return val;\n    },\n\n    /**\n     * It will replace the Date object with respective to UTC format value.\n     * @param  {string} key\n     * @param  {any} value\n     * @hidden\n     */\n\n    /* tslint:disable-next-line:no-any */\n    jsonDateReplacer: function (key, value) {\n      if (key === 'value' && value) {\n        if (typeof value === 'string') {\n          var ms = /^\\/Date\\(([+-]?[0-9]+)([+-][0-9]{4})?\\)\\/$/.exec(value);\n\n          if (ms) {\n            value = DataUtil.dateParse.toTimeZone(new Date(parseInt(ms[1], 10)), null, true);\n          } else if (/^(\\d{4}\\-\\d\\d\\-\\d\\d([tT][\\d:\\.]*){1})([zZ]|([+\\-])(\\d\\d):?(\\d\\d))?$/.test(value)) {\n            var arr = value.split(/[^0-9]/);\n            value = DataUtil.dateParse.toTimeZone(new Date(parseInt(arr[0], 10), parseInt(arr[1], 10) - 1, parseInt(arr[2], 10), parseInt(arr[3], 10), parseInt(arr[4], 10), parseInt(arr[5], 10)), null, true);\n          }\n        }\n\n        if (value instanceof Date) {\n          value = DataUtil.dateParse.addSelfOffset(value);\n\n          if (DataUtil.serverTimezoneOffset === null) {\n            return DataUtil.dateParse.toTimeZone(DataUtil.dateParse.addSelfOffset(value), null).toJSON();\n          } else {\n            value = DataUtil.dateParse.toTimeZone(value, value.getTimezoneOffset() / 60 * 2 - DataUtil.serverTimezoneOffset, false);\n            return value.toJSON();\n          }\n        }\n      }\n\n      return value;\n    }\n  };\n  /**\n   * @hidden\n   */\n\n  DataUtil.dateParse = {\n    addSelfOffset: function (input) {\n      return new Date(+input - input.getTimezoneOffset() * 60000);\n    },\n    toUTC: function (input) {\n      return new Date(+input + input.getTimezoneOffset() * 60000);\n    },\n    toTimeZone: function (input, offset, utc) {\n      if (offset === null) {\n        return input;\n      }\n\n      var unix = utc ? DataUtil.dateParse.toUTC(input) : input;\n      return new Date(+unix - offset * 3600000);\n    },\n    toLocalTime: function (input) {\n      var datefn = input;\n      var timeZone = -datefn.getTimezoneOffset();\n      var differenceString = timeZone >= 0 ? '+' : '-';\n\n      var localtimefn = function (num) {\n        var norm = Math.floor(Math.abs(num));\n        return (norm < 10 ? '0' : '') + norm;\n      };\n\n      var val = datefn.getFullYear() + '-' + localtimefn(datefn.getMonth() + 1) + '-' + localtimefn(datefn.getDate()) + 'T' + localtimefn(datefn.getHours()) + ':' + localtimefn(datefn.getMinutes()) + ':' + localtimefn(datefn.getSeconds()) + differenceString + localtimefn(timeZone / 60) + ':' + localtimefn(timeZone % 60);\n      return val;\n    }\n  };\n  return DataUtil;\n}();\n\nvar __extends = undefined && undefined.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar consts$1 = {\n  GroupGuid: '{271bbba0-1ee7}'\n};\n/**\n * Adaptors are specific data source type aware interfaces that are used by DataManager to communicate with DataSource.\n * This is the base adaptor class that other adaptors can extend.\n * @hidden\n */\n\nvar Adaptor =\n/** @__PURE__ @class */\nfunction () {\n  /**\n   * Constructor for Adaptor class\n   * @param  {DataOptions} ds?\n   * @hidden\n   * @returns aggregates\n   */\n  function Adaptor(ds) {\n    // common options for all the adaptors \n    this.options = {\n      from: 'table',\n      requestType: 'json',\n      sortBy: 'sorted',\n      select: 'select',\n      skip: 'skip',\n      group: 'group',\n      take: 'take',\n      search: 'search',\n      count: 'requiresCounts',\n      where: 'where',\n      aggregates: 'aggregates',\n      expand: 'expand'\n    };\n    /**\n     * Specifies the type of adaptor.\n     * @default Adaptor\n     */\n\n    this.type = Adaptor;\n    this.dataSource = ds;\n    this.pvt = {};\n  }\n  /**\n   * Returns the data from the query processing.\n   * @param  {Object} data\n   * @param  {DataOptions} ds?\n   * @param  {Query} query?\n   * @param  {XMLHttpRequest} xhr?\n   * @returns Object\n   */\n\n\n  Adaptor.prototype.processResponse = function (data, ds, query, xhr) {\n    return data;\n  };\n\n  return Adaptor;\n}();\n/**\n * JsonAdaptor is used to process JSON data. It contains methods to process the given JSON data based on the queries.\n * @hidden\n */\n\n\nvar JsonAdaptor =\n/** @__PURE__ @class */\nfunction (_super) {\n  __extends(JsonAdaptor, _super);\n\n  function JsonAdaptor() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * Process the JSON data based on the provided queries.\n   * @param  {DataManager} dataManager\n   * @param  {Query} query\n   * @returns Object\n   */\n\n\n  JsonAdaptor.prototype.processQuery = function (dataManager, query) {\n    var result = dataManager.dataSource.json.slice(0);\n    var count = result.length;\n    var countFlg = true;\n    var ret;\n    var key;\n    var lazyLoad = {};\n    var keyCount = 0;\n    var group = [];\n    var page;\n\n    for (var i = 0; i < query.lazyLoad.length; i++) {\n      keyCount++;\n      lazyLoad[query.lazyLoad[i].key] = query.lazyLoad[i].value;\n    }\n\n    var agg = {};\n\n    for (var i = 0; i < query.queries.length; i++) {\n      key = query.queries[i];\n\n      if ((key.fn === 'onPage' || key.fn === 'onGroup') && query.lazyLoad.length) {\n        if (key.fn === 'onGroup') {\n          group.push(key.e);\n        }\n\n        if (key.fn === 'onPage') {\n          page = key.e;\n        }\n\n        continue;\n      }\n\n      ret = this[key.fn].call(this, result, key.e, query);\n\n      if (key.fn === 'onAggregates') {\n        agg[key.e.field + ' - ' + key.e.type] = ret;\n      } else {\n        result = ret !== undefined ? ret : result;\n      }\n\n      if (key.fn === 'onPage' || key.fn === 'onSkip' || key.fn === 'onTake' || key.fn === 'onRange') {\n        countFlg = false;\n      }\n\n      if (countFlg) {\n        count = result.length;\n      }\n    }\n\n    if (keyCount) {\n      var args = {\n        query: query,\n        lazyLoad: lazyLoad,\n        result: result,\n        group: group,\n        page: page\n      };\n      var lazyLoadData = this.lazyLoadGroup(args);\n      result = lazyLoadData.result;\n      count = lazyLoadData.count;\n    }\n\n    if (query.isCountRequired) {\n      result = {\n        result: result,\n        count: count,\n        aggregates: agg\n      };\n    }\n\n    return result;\n  };\n  /**\n   * Perform lazy load grouping in JSON array based on the given query and lazy load details.\n   * @param  {LazyLoadGroupArgs} args\n   */\n\n\n  JsonAdaptor.prototype.lazyLoadGroup = function (args) {\n    var count = 0;\n    var agg = this.getAggregate(args.query);\n    var result = args.result;\n\n    if (!isNullOrUndefined(args.lazyLoad.onDemandGroupInfo)) {\n      var req = args.lazyLoad.onDemandGroupInfo;\n\n      for (var i = req.where.length - 1; i >= 0; i--) {\n        result = this.onWhere(result, req.where[i]);\n      }\n\n      if (args.group.length !== req.level) {\n        var field = args.group[req.level].fieldName;\n        result = DataUtil.group(result, field, agg, null, null, args.group[0].comparer, true);\n      }\n\n      count = result.length;\n      var data = result;\n      result = result.slice(req.skip);\n      result = result.slice(0, req.take);\n\n      if (args.group.length !== req.level) {\n        this.formGroupResult(result, data);\n      }\n    } else {\n      var field = args.group[0].fieldName;\n      result = DataUtil.group(result, field, agg, null, null, args.group[0].comparer, true);\n      count = result.length;\n      var data = result;\n\n      if (args.page) {\n        result = this.onPage(result, args.page, args.query);\n      }\n\n      this.formGroupResult(result, data);\n    }\n\n    return {\n      result: result,\n      count: count\n    };\n  };\n\n  JsonAdaptor.prototype.formGroupResult = function (result, data) {\n    if (result.length && data.length) {\n      var uid = 'GroupGuid';\n      var childLevel = 'childLevels';\n      var level = 'level';\n      var records = 'records';\n      result[uid] = data[uid];\n      result[childLevel] = data[childLevel];\n      result[level] = data[level];\n      result[records] = data[records];\n    }\n\n    return result;\n  };\n  /**\n   * Separate the aggregate query from the given queries\n   * @param  {Query} query\n   */\n\n\n  JsonAdaptor.prototype.getAggregate = function (query) {\n    var aggQuery = Query.filterQueries(query.queries, 'onAggregates');\n    var agg = [];\n\n    if (aggQuery.length) {\n      var tmp = void 0;\n\n      for (var i = 0; i < aggQuery.length; i++) {\n        tmp = aggQuery[i].e;\n        agg.push({\n          type: tmp.type,\n          field: DataUtil.getValue(tmp.field, query)\n        });\n      }\n    }\n\n    return agg;\n  };\n  /**\n   * Performs batch update in the JSON array which add, remove and update records.\n   * @param  {DataManager} dm\n   * @param  {CrudOptions} changes\n   * @param  {RemoteArgs} e\n   */\n\n\n  JsonAdaptor.prototype.batchRequest = function (dm, changes, e) {\n    var i;\n    var deletedRecordsLen = changes.deletedRecords.length;\n\n    for (i = 0; i < changes.addedRecords.length; i++) {\n      this.insert(dm, changes.addedRecords[i]);\n    }\n\n    for (i = 0; i < changes.changedRecords.length; i++) {\n      this.update(dm, e.key, changes.changedRecords[i]);\n    }\n\n    for (i = 0; i < deletedRecordsLen; i++) {\n      this.remove(dm, e.key, changes.deletedRecords[i]);\n    }\n\n    return changes;\n  };\n  /**\n   * Performs filter operation with the given data and where query.\n   * @param  {Object[]} ds\n   * @param  {{validate:Function}} e\n   */\n\n\n  JsonAdaptor.prototype.onWhere = function (ds, e) {\n    if (!ds || !ds.length) {\n      return ds;\n    }\n\n    return ds.filter(function (obj) {\n      if (e) {\n        return e.validate(obj);\n      }\n    });\n  };\n  /**\n   * Returns aggregate function based on the aggregate type.\n   * @param  {Object[]} ds\n   * @param  {{field:string} e\n   * @param  {string}} type\n   */\n\n\n  JsonAdaptor.prototype.onAggregates = function (ds, e) {\n    var fn = DataUtil.aggregates[e.type];\n\n    if (!ds || !fn || ds.length === 0) {\n      return null;\n    }\n\n    return fn(ds, e.field);\n  };\n  /**\n   * Performs search operation based on the given query.\n   * @param  {Object[]} ds\n   * @param  {QueryOptions} e\n   */\n\n\n  JsonAdaptor.prototype.onSearch = function (ds, e) {\n    if (!ds || !ds.length) {\n      return ds;\n    }\n\n    if (e.fieldNames.length === 0) {\n      DataUtil.getFieldList(ds[0], e.fieldNames);\n    }\n\n    return ds.filter(function (obj) {\n      for (var j = 0; j < e.fieldNames.length; j++) {\n        if (e.comparer.call(obj, DataUtil.getObject(e.fieldNames[j], obj), e.searchKey, e.ignoreCase, e.ignoreAccent)) {\n          return true;\n        }\n      }\n\n      return false;\n    });\n  };\n  /**\n   * Sort the data with given direction and field.\n   * @param  {Object[]} ds\n   * @param  {{comparer:(a:Object} e\n   * @param  {Object} b\n   */\n\n\n  JsonAdaptor.prototype.onSortBy = function (ds, e, query) {\n    if (!ds || !ds.length) {\n      return ds;\n    }\n\n    var fnCompare;\n    var field = DataUtil.getValue(e.fieldName, query);\n\n    if (!field) {\n      return ds.sort(e.comparer);\n    }\n\n    if (field instanceof Array) {\n      field = field.slice(0);\n\n      for (var i = field.length - 1; i >= 0; i--) {\n        if (!field[i]) {\n          continue;\n        }\n\n        fnCompare = e.comparer;\n\n        if (DataUtil.endsWith(field[i], ' desc')) {\n          fnCompare = DataUtil.fnSort('descending');\n          field[i] = field[i].replace(' desc', '');\n        }\n\n        ds = DataUtil.sort(ds, field[i], fnCompare);\n      }\n\n      return ds;\n    }\n\n    return DataUtil.sort(ds, field, e.comparer);\n  };\n  /**\n   * Group the data based on the given query.\n   * @param  {Object[]} ds\n   * @param  {QueryOptions} e\n   * @param  {Query} query\n   */\n\n\n  JsonAdaptor.prototype.onGroup = function (ds, e, query) {\n    if (!ds || !ds.length) {\n      return ds;\n    }\n\n    var agg = this.getAggregate(query);\n    return DataUtil.group(ds, DataUtil.getValue(e.fieldName, query), agg, null, null, e.comparer);\n  };\n  /**\n   * Retrieves records based on the given page index and size.\n   * @param  {Object[]} ds\n   * @param  {{pageSize:number} e\n   * @param  {number}} pageIndex\n   * @param  {Query} query\n   */\n\n\n  JsonAdaptor.prototype.onPage = function (ds, e, query) {\n    var size = DataUtil.getValue(e.pageSize, query);\n    var start = (DataUtil.getValue(e.pageIndex, query) - 1) * size;\n    var end = start + size;\n\n    if (!ds || !ds.length) {\n      return ds;\n    }\n\n    return ds.slice(start, end);\n  };\n  /**\n   * Retrieves records based on the given start and end index from query.\n   * @param  {Object[]} ds\n   * @param  {{start:number} e\n   * @param  {number}} end\n   */\n\n\n  JsonAdaptor.prototype.onRange = function (ds, e) {\n    if (!ds || !ds.length) {\n      return ds;\n    }\n\n    return ds.slice(DataUtil.getValue(e.start), DataUtil.getValue(e.end));\n  };\n  /**\n   * Picks the given count of records from the top of the datasource.\n   * @param  {Object[]} ds\n   * @param  {{nos:number}} e\n   */\n\n\n  JsonAdaptor.prototype.onTake = function (ds, e) {\n    if (!ds || !ds.length) {\n      return ds;\n    }\n\n    return ds.slice(0, DataUtil.getValue(e.nos));\n  };\n  /**\n   * Skips the given count of records from the data source.\n   * @param  {Object[]} ds\n   * @param  {{nos:number}} e\n   */\n\n\n  JsonAdaptor.prototype.onSkip = function (ds, e) {\n    if (!ds || !ds.length) {\n      return ds;\n    }\n\n    return ds.slice(DataUtil.getValue(e.nos));\n  };\n  /**\n   * Selects specified columns from the data source.\n   * @param  {Object[]} ds\n   * @param  {{fieldNames:string}} e\n   */\n\n\n  JsonAdaptor.prototype.onSelect = function (ds, e) {\n    if (!ds || !ds.length) {\n      return ds;\n    }\n\n    return DataUtil.select(ds, DataUtil.getValue(e.fieldNames));\n  };\n  /**\n   * Inserts new record in the table.\n   * @param  {DataManager} dm\n   * @param  {Object} data\n   * @param  {number} position\n   */\n\n\n  JsonAdaptor.prototype.insert = function (dm, data, tableName, query, position) {\n    if (isNullOrUndefined(position)) {\n      return dm.dataSource.json.push(data);\n    } else {\n      return dm.dataSource.json.splice(position, 0, data);\n    }\n  };\n  /**\n   * Remove the data from the dataSource based on the key field value.\n   * @param  {DataManager} dm\n   * @param  {string} keyField\n   * @param  {Object} value\n   * @param  {string} tableName?\n   * @returns null\n   */\n\n\n  JsonAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n    var ds = dm.dataSource.json;\n    var i;\n\n    if (typeof value === 'object' && !(value instanceof Date)) {\n      value = DataUtil.getObject(keyField, value);\n    }\n\n    for (i = 0; i < ds.length; i++) {\n      if (DataUtil.getObject(keyField, ds[i]) === value) {\n        break;\n      }\n    }\n\n    return i !== ds.length ? ds.splice(i, 1) : null;\n  };\n  /**\n   * Updates existing record and saves the changes to the table.\n   * @param  {DataManager} dm\n   * @param  {string} keyField\n   * @param  {Object} value\n   * @param  {string} tableName?\n   * @returns null\n   */\n\n\n  JsonAdaptor.prototype.update = function (dm, keyField, value, tableName) {\n    var ds = dm.dataSource.json;\n    var i;\n    var key;\n\n    if (!isNullOrUndefined(keyField)) {\n      key = getValue(keyField, value);\n    }\n\n    for (i = 0; i < ds.length; i++) {\n      if (!isNullOrUndefined(keyField) && getValue(keyField, ds[i]) === key) {\n        break;\n      }\n    }\n\n    return i < ds.length ? merge(ds[i], value) : null;\n  };\n\n  return JsonAdaptor;\n}(Adaptor);\n/**\n * URL Adaptor of DataManager can be used when you are required to use remote service to retrieve data.\n * It interacts with server-side for all DataManager Queries and CRUD operations.\n * @hidden\n */\n\n\nvar UrlAdaptor =\n/** @__PURE__ @class */\nfunction (_super) {\n  __extends(UrlAdaptor, _super);\n\n  function UrlAdaptor() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * Process the query to generate request body.\n   * @param  {DataManager} dm\n   * @param  {Query} query\n   * @param  {Object[]} hierarchyFilters?\n   * @returns p\n   */\n  // tslint:disable-next-line:max-func-body-length\n\n\n  UrlAdaptor.prototype.processQuery = function (dm, query, hierarchyFilters) {\n    var queries = this.getQueryRequest(query);\n    var singles = Query.filterQueryLists(query.queries, ['onSelect', 'onPage', 'onSkip', 'onTake', 'onRange']);\n    var params = query.params;\n    var url = dm.dataSource.url;\n    var temp;\n    var skip;\n    var take = null;\n    var options = this.options;\n    var request = {\n      sorts: [],\n      groups: [],\n      filters: [],\n      searches: [],\n      aggregates: []\n    }; // calc Paging & Range\n\n    if ('onPage' in singles) {\n      temp = singles.onPage;\n      skip = DataUtil.getValue(temp.pageIndex, query);\n      take = DataUtil.getValue(temp.pageSize, query);\n      skip = (skip - 1) * take;\n    } else if ('onRange' in singles) {\n      temp = singles.onRange;\n      skip = temp.start;\n      take = temp.end - temp.start;\n    } // Sorting\n\n\n    for (var i = 0; i < queries.sorts.length; i++) {\n      temp = DataUtil.getValue(queries.sorts[i].e.fieldName, query);\n      request.sorts.push(DataUtil.callAdaptorFunction(this, 'onEachSort', {\n        name: temp,\n        direction: queries.sorts[i].e.direction\n      }, query));\n    } // hierarchy\n\n\n    if (hierarchyFilters) {\n      temp = this.getFiltersFrom(hierarchyFilters, query);\n\n      if (temp) {\n        request.filters.push(DataUtil.callAdaptorFunction(this, 'onEachWhere', temp.toJson(), query));\n      }\n    } // Filters\n\n\n    for (var i = 0; i < queries.filters.length; i++) {\n      var res = DataUtil.callAdaptorFunction(this, 'onEachWhere', queries.filters[i].e.toJson(), query);\n\n      if (this.getModuleName && this.getModuleName() === 'ODataV4Adaptor' && !isNullOrUndefined(queries.filters[i].e.key) && queries.filters.length > 1) {\n        res = \"(\" + res + \")\";\n      }\n\n      request.filters.push(res);\n      var keys_3 = typeof request.filters[i] === 'object' ? Object.keys(request.filters[i]) : [];\n\n      for (var _i = 0, keys_1 = keys_3; _i < keys_1.length; _i++) {\n        var prop = keys_1[_i];\n\n        if (DataUtil.isNull(request[prop])) {\n          delete request[prop];\n        }\n      }\n    } // Searches\n\n\n    for (var i = 0; i < queries.searches.length; i++) {\n      temp = queries.searches[i].e;\n      request.searches.push(DataUtil.callAdaptorFunction(this, 'onEachSearch', {\n        fields: temp.fieldNames,\n        operator: temp.operator,\n        key: temp.searchKey,\n        ignoreCase: temp.ignoreCase\n      }, query));\n    } // Grouping\n\n\n    for (var i = 0; i < queries.groups.length; i++) {\n      request.groups.push(DataUtil.getValue(queries.groups[i].e.fieldName, query));\n    } // aggregates\n\n\n    for (var i = 0; i < queries.aggregates.length; i++) {\n      temp = queries.aggregates[i].e;\n      request.aggregates.push({\n        type: temp.type,\n        field: DataUtil.getValue(temp.field, query)\n      });\n    }\n\n    var req = {};\n    this.getRequestQuery(options, query, singles, request, req); // Params\n\n    DataUtil.callAdaptorFunction(this, 'addParams', {\n      dm: dm,\n      query: query,\n      params: params,\n      reqParams: req\n    });\n\n    if (query.lazyLoad.length) {\n      for (var i = 0; i < query.lazyLoad.length; i++) {\n        req[query.lazyLoad[i].key] = query.lazyLoad[i].value;\n      }\n    } // cleanup\n\n\n    var keys = Object.keys(req);\n\n    for (var _a = 0, keys_2 = keys; _a < keys_2.length; _a++) {\n      var prop = keys_2[_a];\n\n      if (DataUtil.isNull(req[prop]) || req[prop] === '' || req[prop].length === 0) {\n        delete req[prop];\n      }\n    }\n\n    if (!(options.skip in req && options.take in req) && take !== null) {\n      req[options.skip] = DataUtil.callAdaptorFunction(this, 'onSkip', skip, query);\n      req[options.take] = DataUtil.callAdaptorFunction(this, 'onTake', take, query);\n    }\n\n    var p = this.pvt;\n    this.pvt = {};\n\n    if (this.options.requestType === 'json') {\n      return {\n        data: JSON.stringify(req, DataUtil.parse.jsonDateReplacer),\n        url: url,\n        pvtData: p,\n        type: 'POST',\n        contentType: 'application/json; charset=utf-8'\n      };\n    }\n\n    temp = this.convertToQueryString(req, query, dm);\n    temp = (dm.dataSource.url.indexOf('?') !== -1 ? '&' : '/') + temp;\n    return {\n      type: 'GET',\n      url: temp.length ? url.replace(/\\/*$/, temp) : url,\n      pvtData: p\n    };\n  };\n\n  UrlAdaptor.prototype.getRequestQuery = function (options, query, singles, request, request1) {\n    var param = 'param';\n    var req = request1;\n    req[options.from] = query.fromTable;\n\n    if (options.apply && query.distincts.length) {\n      req[options.apply] = 'onDistinct' in this ? DataUtil.callAdaptorFunction(this, 'onDistinct', query.distincts) : '';\n    }\n\n    if (!query.distincts.length && options.expand) {\n      req[options.expand] = 'onExpand' in this && 'onSelect' in singles ? DataUtil.callAdaptorFunction(this, 'onExpand', {\n        selects: DataUtil.getValue(singles.onSelect.fieldNames, query),\n        expands: query.expands\n      }, query) : query.expands;\n    }\n\n    req[options.select] = 'onSelect' in singles && !query.distincts.length ? DataUtil.callAdaptorFunction(this, 'onSelect', DataUtil.getValue(singles.onSelect.fieldNames, query), query) : '';\n    req[options.count] = query.isCountRequired ? DataUtil.callAdaptorFunction(this, 'onCount', query.isCountRequired, query) : '';\n    req[options.search] = request.searches.length ? DataUtil.callAdaptorFunction(this, 'onSearch', request.searches, query) : '';\n    req[options.skip] = 'onSkip' in singles ? DataUtil.callAdaptorFunction(this, 'onSkip', DataUtil.getValue(singles.onSkip.nos, query), query) : '';\n    req[options.take] = 'onTake' in singles ? DataUtil.callAdaptorFunction(this, 'onTake', DataUtil.getValue(singles.onTake.nos, query), query) : '';\n    req[options.where] = request.filters.length || request.searches.length ? DataUtil.callAdaptorFunction(this, 'onWhere', request.filters, query) : '';\n    req[options.sortBy] = request.sorts.length ? DataUtil.callAdaptorFunction(this, 'onSortBy', request.sorts, query) : '';\n    req[options.group] = request.groups.length ? DataUtil.callAdaptorFunction(this, 'onGroup', request.groups, query) : '';\n    req[options.aggregates] = request.aggregates.length ? DataUtil.callAdaptorFunction(this, 'onAggregates', request.aggregates, query) : '';\n    req[param] = [];\n  };\n  /**\n   * Convert the object from processQuery to string which can be added query string.\n   * @param  {Object} req\n   * @param  {Query} query\n   * @param  {DataManager} dm\n   */\n\n\n  UrlAdaptor.prototype.convertToQueryString = function (request, query, dm) {\n    return ''; // this needs to be overridden\n  };\n  /**\n   * Return the data from the data manager processing.\n   * @param  {DataResult} data\n   * @param  {DataOptions} ds?\n   * @param  {Query} query?\n   * @param  {XMLHttpRequest} xhr?\n   * @param  {Object} request?\n   * @param  {CrudOptions} changes?\n   */\n\n\n  UrlAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n    if (xhr && xhr.getResponseHeader('Content-Type') && xhr.getResponseHeader('Content-Type').indexOf('application/json') !== -1) {\n      var handleTimeZone = DataUtil.timeZoneHandling;\n\n      if (ds && !ds.timeZoneHandling) {\n        DataUtil.timeZoneHandling = false;\n      }\n\n      data = DataUtil.parse.parseJson(data);\n      DataUtil.timeZoneHandling = handleTimeZone;\n    }\n\n    var requests = request;\n    var pvt = requests.pvtData || {};\n    var groupDs = data ? data.groupDs : [];\n\n    if (xhr && xhr.getResponseHeader('Content-Type') && xhr.getResponseHeader('Content-Type').indexOf('xml') !== -1) {\n      return query.isCountRequired ? {\n        result: [],\n        count: 0\n      } : [];\n    }\n\n    var d = JSON.parse(requests.data);\n\n    if (d && d.action === 'batch' && data && data.addedRecords) {\n      changes.addedRecords = data.addedRecords;\n      return changes;\n    }\n\n    if (data && data.d) {\n      data = data.d;\n    }\n\n    var args = {};\n\n    if (data && 'count' in data) {\n      args.count = data.count;\n    }\n\n    args.result = data && data.result ? data.result : data;\n    var isExpand = false;\n\n    if (Array.isArray(data.result) && data.result.length) {\n      var key = 'key';\n      var val = 'value';\n      var level = 'level';\n\n      if (!isNullOrUndefined(data.result[0][key])) {\n        args.result = this.formRemoteGroupedData(args.result, 1, pvt.groups.length - 1);\n      }\n\n      if (query && query.lazyLoad.length && pvt.groups.length) {\n        for (var i = 0; i < query.lazyLoad.length; i++) {\n          if (query.lazyLoad[i][key] === 'onDemandGroupInfo') {\n            var value = query.lazyLoad[i][val][level];\n\n            if (pvt.groups.length === value) {\n              isExpand = true;\n            }\n          }\n        }\n      }\n    }\n\n    if (!isExpand) {\n      this.getAggregateResult(pvt, data, args, groupDs, query);\n    }\n\n    return DataUtil.isNull(args.count) ? args.result : {\n      result: args.result,\n      count: args.count,\n      aggregates: args.aggregates\n    };\n  };\n\n  UrlAdaptor.prototype.formRemoteGroupedData = function (data, level, childLevel) {\n    for (var i = 0; i < data.length; i++) {\n      if (data[i].items.length && Object.keys(data[i].items[0]).indexOf('key') > -1) {\n        this.formRemoteGroupedData(data[i].items, level + 1, childLevel - 1);\n      }\n    }\n\n    var uid = 'GroupGuid';\n    var childLvl = 'childLevels';\n    var lvl = 'level';\n    var records = 'records';\n    data[uid] = consts$1[uid];\n    data[lvl] = level;\n    data[childLvl] = childLevel;\n    data[records] = data[0].items.length ? this.getGroupedRecords(data, !isNullOrUndefined(data[0].items[records])) : [];\n    return data;\n  };\n\n  UrlAdaptor.prototype.getGroupedRecords = function (data, hasRecords) {\n    var childGroupedRecords = [];\n    var records = 'records';\n\n    for (var i = 0; i < data.length; i++) {\n      if (!hasRecords) {\n        for (var j = 0; j < data[i].items.length; j++) {\n          childGroupedRecords.push(data[i].items[j]);\n        }\n      } else {\n        childGroupedRecords = childGroupedRecords.concat(data[i].items[records]);\n      }\n    }\n\n    return childGroupedRecords;\n  };\n  /**\n   * Add the group query to the adaptor`s option.\n   * @param  {Object[]} e\n   * @returns void\n   */\n\n\n  UrlAdaptor.prototype.onGroup = function (e) {\n    this.pvt.groups = e;\n    return e;\n  };\n  /**\n   * Add the aggregate query to the adaptor`s option.\n   * @param  {Aggregates[]} e\n   * @returns void\n   */\n\n\n  UrlAdaptor.prototype.onAggregates = function (e) {\n    this.pvt.aggregates = e;\n  };\n  /**\n   * Prepare the request body based on the newly added, removed and updated records.\n   * The result is used by the batch request.\n   * @param  {DataManager} dm\n   * @param  {CrudOptions} changes\n   * @param  {Object} e\n   */\n\n\n  UrlAdaptor.prototype.batchRequest = function (dm, changes, e, query, original) {\n    var url;\n    var key;\n    return {\n      type: 'POST',\n      url: dm.dataSource.batchUrl || dm.dataSource.crudUrl || dm.dataSource.removeUrl || dm.dataSource.url,\n      contentType: 'application/json; charset=utf-8',\n      dataType: 'json',\n      data: JSON.stringify(extend({}, {\n        changed: changes.changedRecords,\n        added: changes.addedRecords,\n        deleted: changes.deletedRecords,\n        action: 'batch',\n        table: e[url],\n        key: e[key]\n      }, DataUtil.getAddParams(this, dm, query)))\n    };\n  };\n  /**\n   * Method will trigger before send the request to server side.\n   * Used to set the custom header or modify the request options.\n   * @param  {DataManager} dm\n   * @param  {XMLHttpRequest} request\n   * @returns void\n   */\n\n\n  UrlAdaptor.prototype.beforeSend = function (dm, request) {// need to extend this method\n  };\n  /**\n   * Prepare and returns request body which is used to insert a new record in the table.\n   * @param  {DataManager} dm\n   * @param  {Object} data\n   * @param  {string} tableName\n   */\n\n\n  UrlAdaptor.prototype.insert = function (dm, data, tableName, query) {\n    return {\n      url: dm.dataSource.insertUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n      data: JSON.stringify(extend({}, {\n        value: data,\n        table: tableName,\n        action: 'insert'\n      }, DataUtil.getAddParams(this, dm, query)))\n    };\n  };\n  /**\n   * Prepare and return request body which is used to remove record from the table.\n   * @param  {DataManager} dm\n   * @param  {string} keyField\n   * @param  {number|string} value\n   * @param  {string} tableName\n   */\n\n\n  UrlAdaptor.prototype.remove = function (dm, keyField, value, tableName, query) {\n    return {\n      type: 'POST',\n      url: dm.dataSource.removeUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n      data: JSON.stringify(extend({}, {\n        key: value,\n        keyColumn: keyField,\n        table: tableName,\n        action: 'remove'\n      }, DataUtil.getAddParams(this, dm, query)))\n    };\n  };\n  /**\n   * Prepare and return request body which is used to update record.\n   * @param  {DataManager} dm\n   * @param  {string} keyField\n   * @param  {Object} value\n   * @param  {string} tableName\n   */\n\n\n  UrlAdaptor.prototype.update = function (dm, keyField, value, tableName, query) {\n    return {\n      type: 'POST',\n      url: dm.dataSource.updateUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n      data: JSON.stringify(extend({}, {\n        value: value,\n        action: 'update',\n        keyColumn: keyField,\n        key: DataUtil.getObject(keyField, value),\n        table: tableName\n      }, DataUtil.getAddParams(this, dm, query)))\n    };\n  };\n  /**\n   * To generate the predicate based on the filtered query.\n   * @param  {Object[]|string[]|number[]} data\n   * @param  {Query} query\n   * @hidden\n   */\n\n\n  UrlAdaptor.prototype.getFiltersFrom = function (data, query) {\n    var key = query.fKey;\n    var value;\n    var prop = key;\n    var pKey = query.key;\n    var predicats = [];\n\n    if (typeof data[0] !== 'object') {\n      prop = null;\n    }\n\n    for (var i = 0; i < data.length; i++) {\n      if (typeof data[0] === 'object') {\n        value = DataUtil.getObject(pKey || prop, data[i]);\n      } else {\n        value = data[i];\n      }\n\n      predicats.push(new Predicate(key, 'equal', value));\n    }\n\n    return Predicate.or(predicats);\n  };\n\n  UrlAdaptor.prototype.getAggregateResult = function (pvt, data, args, groupDs, query) {\n    var pData = data;\n\n    if (data && data.result) {\n      pData = data.result;\n    }\n\n    if (pvt && pvt.aggregates && pvt.aggregates.length) {\n      var agg = pvt.aggregates;\n      var fn = void 0;\n      var aggregateData = pData;\n      var res = {};\n\n      if (data.aggregate) {\n        aggregateData = data.aggregate;\n      }\n\n      for (var i = 0; i < agg.length; i++) {\n        fn = DataUtil.aggregates[agg[i].type];\n\n        if (fn) {\n          res[agg[i].field + ' - ' + agg[i].type] = fn(aggregateData, agg[i].field);\n        }\n      }\n\n      args.aggregates = res;\n    }\n\n    var key = 'key';\n    var isServerGrouping = Array.isArray(data.result) && data.result.length && !isNullOrUndefined(data.result[0][key]);\n\n    if (pvt && pvt.groups && pvt.groups.length && !isServerGrouping) {\n      var groups = pvt.groups;\n\n      for (var i = 0; i < groups.length; i++) {\n        var level = null;\n\n        if (!isNullOrUndefined(groupDs)) {\n          groupDs = DataUtil.group(groupDs, groups[i]);\n        }\n\n        var groupQuery = Query.filterQueries(query.queries, 'onGroup')[i].e;\n        pData = DataUtil.group(pData, groups[i], pvt.aggregates, level, groupDs, groupQuery.comparer);\n      }\n\n      args.result = pData;\n    }\n\n    return args;\n  };\n\n  UrlAdaptor.prototype.getQueryRequest = function (query) {\n    var req = {\n      sorts: [],\n      groups: [],\n      filters: [],\n      searches: [],\n      aggregates: []\n    };\n    req.sorts = Query.filterQueries(query.queries, 'onSortBy');\n    req.groups = Query.filterQueries(query.queries, 'onGroup');\n    req.filters = Query.filterQueries(query.queries, 'onWhere');\n    req.searches = Query.filterQueries(query.queries, 'onSearch');\n    req.aggregates = Query.filterQueries(query.queries, 'onAggregates');\n    return req;\n  };\n\n  UrlAdaptor.prototype.addParams = function (options) {\n    var req = options.reqParams;\n\n    if (options.params.length) {\n      req.params = {};\n    }\n\n    for (var _i = 0, _a = options.params; _i < _a.length; _i++) {\n      var tmp = _a[_i];\n\n      if (req[tmp.key]) {\n        throw new Error('Query() - addParams: Custom Param is conflicting other request arguments');\n      }\n\n      req[tmp.key] = tmp.value;\n\n      if (tmp.fn) {\n        req[tmp.key] = tmp.fn.call(options.query, tmp.key, options.query, options.dm);\n      }\n\n      req.params[tmp.key] = req[tmp.key];\n    }\n  };\n\n  return UrlAdaptor;\n}(Adaptor);\n/**\n * OData Adaptor that is extended from URL Adaptor, is used for consuming data through OData Service.\n * @hidden\n */\n\n\nvar ODataAdaptor =\n/** @__PURE__ @class */\nfunction (_super) {\n  __extends(ODataAdaptor, _super);\n\n  function ODataAdaptor(props) {\n    var _this = _super.call(this) || this; // options replaced the default adaptor options\n\n\n    _this.options = extend({}, _this.options, {\n      requestType: 'get',\n      accept: 'application/json;odata=light;q=1,application/json;odata=verbose;q=0.5',\n      multipartAccept: 'multipart/mixed',\n      sortBy: '$orderby',\n      select: '$select',\n      skip: '$skip',\n      take: '$top',\n      count: '$inlinecount',\n      where: '$filter',\n      expand: '$expand',\n      batch: '$batch',\n      changeSet: '--changeset_',\n      batchPre: 'batch_',\n      contentId: 'Content-Id: ',\n      batchContent: 'Content-Type: multipart/mixed; boundary=',\n      changeSetContent: 'Content-Type: application/http\\nContent-Transfer-Encoding: binary ',\n      batchChangeSetContentType: 'Content-Type: application/json; charset=utf-8 ',\n      updateType: 'PUT'\n    });\n    extend(_this.options, props || {});\n    return _this;\n  }\n\n  ODataAdaptor.prototype.getModuleName = function () {\n    return 'ODataAdaptor';\n  };\n  /**\n   * Generate request string based on the filter criteria from query.\n   * @param  {Predicate} pred\n   * @param  {boolean} requiresCast?\n   */\n\n\n  ODataAdaptor.prototype.onPredicate = function (predicate, query, requiresCast) {\n    var returnValue = '';\n    var operator;\n    var guid;\n    var val = predicate.value;\n    var type = typeof val;\n    var field = predicate.field ? ODataAdaptor.getField(predicate.field) : null;\n\n    if (val instanceof Date) {\n      val = 'datetime\\'' + DataUtil.parse.replacer(val) + '\\'';\n    }\n\n    if (type === 'string') {\n      val = val.replace(/'/g, \"''\");\n\n      if (predicate.ignoreCase) {\n        val = val.toLowerCase();\n      }\n\n      val = encodeURIComponent(val);\n      val = '\\'' + val + '\\'';\n\n      if (requiresCast) {\n        field = 'cast(' + field + ', \\'Edm.String\\')';\n      }\n\n      if (DataUtil.parse.isGuid(val)) {\n        guid = 'guid';\n      }\n\n      if (predicate.ignoreCase) {\n        if (!guid) {\n          field = 'tolower(' + field + ')';\n        }\n\n        val = val.toLowerCase();\n      }\n    }\n\n    operator = DataUtil.odBiOperator[predicate.operator];\n\n    if (operator) {\n      returnValue += field;\n      returnValue += operator;\n\n      if (guid) {\n        returnValue += guid;\n      }\n\n      return returnValue + val;\n    }\n\n    if (!isNullOrUndefined(this.getModuleName) && this.getModuleName() === 'ODataV4Adaptor') {\n      operator = DataUtil.odv4UniOperator[predicate.operator];\n    } else {\n      operator = DataUtil.odUniOperator[predicate.operator];\n    }\n\n    if (operator === 'substringof') {\n      var temp = val;\n      val = field;\n      field = temp;\n    }\n\n    returnValue += operator + '(';\n    returnValue += field + ',';\n\n    if (guid) {\n      returnValue += guid;\n    }\n\n    returnValue += val + ')';\n    return returnValue;\n  };\n\n  ODataAdaptor.prototype.addParams = function (options) {\n    _super.prototype.addParams.call(this, options);\n\n    delete options.reqParams.params;\n  };\n  /**\n   * Generate request string based on the multiple filter criteria from query.\n   * @param  {Predicate} pred\n   * @param  {boolean} requiresCast?\n   */\n\n\n  ODataAdaptor.prototype.onComplexPredicate = function (predicate, query, requiresCast) {\n    var res = [];\n\n    for (var i = 0; i < predicate.predicates.length; i++) {\n      res.push('(' + this.onEachWhere(predicate.predicates[i], query, requiresCast) + ')');\n    }\n\n    return res.join(' ' + predicate.condition + ' ');\n  };\n  /**\n   * Generate query string based on the multiple filter criteria from query.\n   * @param  {Predicate} filter\n   * @param  {boolean} requiresCast?\n   */\n\n\n  ODataAdaptor.prototype.onEachWhere = function (filter, query, requiresCast) {\n    return filter.isComplex ? this.onComplexPredicate(filter, query, requiresCast) : this.onPredicate(filter, query, requiresCast);\n  };\n  /**\n   * Generate query string based on the multiple filter criteria from query.\n   * @param  {string[]} filters\n   */\n\n\n  ODataAdaptor.prototype.onWhere = function (filters) {\n    if (this.pvt.search) {\n      filters.push(this.onEachWhere(this.pvt.search, null, true));\n    }\n\n    return filters.join(' and ');\n  };\n  /**\n   * Generate query string based on the multiple search criteria from query.\n   * @param  {{fields:string[]} e\n   * @param  {string} operator\n   * @param  {string} key\n   * @param  {boolean}} ignoreCase\n   */\n\n\n  ODataAdaptor.prototype.onEachSearch = function (e) {\n    if (e.fields && e.fields.length === 0) {\n      DataUtil.throwError('Query() - Search : oData search requires list of field names to search');\n    }\n\n    var filter = this.pvt.search || [];\n\n    for (var i = 0; i < e.fields.length; i++) {\n      filter.push(new Predicate(e.fields[i], e.operator, e.key, e.ignoreCase));\n    }\n\n    this.pvt.search = filter;\n  };\n  /**\n   * Generate query string based on the search criteria from query.\n   * @param  {Object} e\n   */\n\n\n  ODataAdaptor.prototype.onSearch = function (e) {\n    this.pvt.search = Predicate.or(this.pvt.search);\n    return '';\n  };\n  /**\n   * Generate query string based on multiple sort criteria from query.\n   * @param  {QueryOptions} e\n   */\n\n\n  ODataAdaptor.prototype.onEachSort = function (e) {\n    var res = [];\n\n    if (e.name instanceof Array) {\n      for (var i = 0; i < e.name.length; i++) {\n        res.push(ODataAdaptor.getField(e.name[i]) + (e.direction === 'descending' ? ' desc' : ''));\n      }\n    } else {\n      res.push(ODataAdaptor.getField(e.name) + (e.direction === 'descending' ? ' desc' : ''));\n    }\n\n    return res.join(',');\n  };\n  /**\n   * Returns sort query string.\n   * @param  {string[]} e\n   */\n\n\n  ODataAdaptor.prototype.onSortBy = function (e) {\n    return e.reverse().join(',');\n  };\n  /**\n   * Adds the group query to the adaptor option.\n   * @param  {Object[]} e\n   * @returns string\n   */\n\n\n  ODataAdaptor.prototype.onGroup = function (e) {\n    this.pvt.groups = e;\n    return [];\n  };\n  /**\n   * Returns the select query string.\n   * @param  {string[]} e\n   */\n\n\n  ODataAdaptor.prototype.onSelect = function (e) {\n    for (var i = 0; i < e.length; i++) {\n      e[i] = ODataAdaptor.getField(e[i]);\n    }\n\n    return e.join(',');\n  };\n  /**\n   * Add the aggregate query to the adaptor option.\n   * @param  {Object[]} e\n   * @returns string\n   */\n\n\n  ODataAdaptor.prototype.onAggregates = function (e) {\n    this.pvt.aggregates = e;\n    return '';\n  };\n  /**\n   * Returns the query string which requests total count from the data source.\n   * @param  {boolean} e\n   * @returns string\n   */\n\n\n  ODataAdaptor.prototype.onCount = function (e) {\n    return e === true ? 'allpages' : '';\n  };\n  /**\n   * Method will trigger before send the request to server side.\n   * Used to set the custom header or modify the request options.\n   * @param  {DataManager} dm\n   * @param  {XMLHttpRequest} request\n   * @param  {Ajax} settings?\n   */\n\n\n  ODataAdaptor.prototype.beforeSend = function (dm, request, settings) {\n    if (DataUtil.endsWith(settings.url, this.options.batch) && settings.type.toLowerCase() === 'post') {\n      request.setRequestHeader('Accept', this.options.multipartAccept);\n      request.setRequestHeader('DataServiceVersion', '2.0');\n      request.overrideMimeType('text/plain; charset=x-user-defined');\n    } else {\n      request.setRequestHeader('Accept', this.options.accept);\n    }\n\n    request.setRequestHeader('DataServiceVersion', '2.0');\n    request.setRequestHeader('MaxDataServiceVersion', '2.0');\n  };\n  /**\n   * Returns the data from the query processing.\n   * @param  {DataResult} data\n   * @param  {DataOptions} ds?\n   * @param  {Query} query?\n   * @param  {XMLHttpRequest} xhr?\n   * @param  {Ajax} request?\n   * @param  {CrudOptions} changes?\n   * @returns aggregateResult\n   */\n\n\n  ODataAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n    var metaCheck = 'odata.metadata';\n\n    if (request && request.type === 'GET' && !this.rootUrl && data[metaCheck]) {\n      var dataUrls = data[metaCheck].split('/$metadata#');\n      this.rootUrl = dataUrls[0];\n      this.resourceTableName = dataUrls[1];\n    }\n\n    var pvtData = 'pvtData';\n\n    if (!isNullOrUndefined(data.d)) {\n      var dataCopy = query && query.isCountRequired ? data.d.results : data.d;\n      var metaData = '__metadata';\n\n      if (!isNullOrUndefined(dataCopy)) {\n        for (var i = 0; i < dataCopy.length; i++) {\n          if (!isNullOrUndefined(dataCopy[i][metaData])) {\n            delete dataCopy[i][metaData];\n          }\n        }\n      }\n    }\n\n    var pvt = request && request[pvtData];\n    var emptyAndBatch = this.processBatchResponse(data, query, xhr, request, changes);\n\n    if (emptyAndBatch) {\n      return emptyAndBatch;\n    }\n\n    var versionCheck = xhr && request.getResponseHeader('DataServiceVersion');\n    var count = null;\n    var version = versionCheck && parseInt(versionCheck, 10) || 2;\n\n    if (query && query.isCountRequired) {\n      var oDataCount = '__count';\n\n      if (data[oDataCount] || data['odata.count']) {\n        count = data[oDataCount] || data['odata.count'];\n      }\n\n      if (data.d) {\n        data = data.d;\n      }\n\n      if (data[oDataCount] || data['odata.count']) {\n        count = data[oDataCount] || data['odata.count'];\n      }\n    }\n\n    if (version === 3 && data.value) {\n      data = data.value;\n    }\n\n    if (data.d) {\n      data = data.d;\n    }\n\n    if (version < 3 && data.results) {\n      data = data.results;\n    }\n\n    var args = {};\n    args.count = count;\n    args.result = data;\n    this.getAggregateResult(pvt, data, args, null, query);\n    return DataUtil.isNull(count) ? args.result : {\n      result: args.result,\n      count: args.count,\n      aggregates: args.aggregates\n    };\n  };\n  /**\n   * Converts the request object to query string.\n   * @param  {Object} req\n   * @param  {Query} query\n   * @param  {DataManager} dm\n   * @returns tableName\n   */\n\n\n  ODataAdaptor.prototype.convertToQueryString = function (request, query, dm) {\n    var res = [];\n    var table = 'table';\n    var tableName = request[table] || '';\n    var format = '$format';\n    delete request[table];\n\n    if (dm.dataSource.requiresFormat) {\n      request[format] = 'json';\n    }\n\n    var keys = Object.keys(request);\n\n    for (var _i = 0, keys_4 = keys; _i < keys_4.length; _i++) {\n      var prop = keys_4[_i];\n      res.push(prop + '=' + request[prop]);\n    }\n\n    res = res.join('&');\n\n    if (dm.dataSource.url && dm.dataSource.url.indexOf('?') !== -1 && !tableName) {\n      return res;\n    }\n\n    return res.length ? tableName + '?' + res : tableName || '';\n  };\n\n  ODataAdaptor.prototype.localTimeReplacer = function (key, convertObj) {\n    for (var _i = 0, _a = !isNullOrUndefined(convertObj) ? Object.keys(convertObj) : []; _i < _a.length; _i++) {\n      var prop = _a[_i];\n\n      if (convertObj[prop] instanceof Date) {\n        convertObj[prop] = DataUtil.dateParse.toLocalTime(convertObj[prop]);\n      }\n    }\n\n    return convertObj;\n  };\n  /**\n   * Prepare and returns request body which is used to insert a new record in the table.\n   * @param  {DataManager} dm\n   * @param  {Object} data\n   * @param  {string} tableName?\n   */\n\n\n  ODataAdaptor.prototype.insert = function (dm, data, tableName) {\n    return {\n      url: (dm.dataSource.insertUrl || dm.dataSource.url).replace(/\\/*$/, tableName ? '/' + tableName : ''),\n      data: JSON.stringify(data, this.options.localTime ? this.localTimeReplacer : null)\n    };\n  };\n  /**\n   * Prepare and return request body which is used to remove record from the table.\n   * @param  {DataManager} dm\n   * @param  {string} keyField\n   * @param  {number} value\n   * @param  {string} tableName?\n   */\n\n\n  ODataAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n    var url;\n\n    if (typeof value === 'string' && !DataUtil.parse.isGuid(value)) {\n      url = \"('\" + value + \"')\";\n    } else {\n      url = \"(\" + value + \")\";\n    }\n\n    return {\n      type: 'DELETE',\n      url: (dm.dataSource.removeUrl || dm.dataSource.url).replace(/\\/*$/, tableName ? '/' + tableName : '') + url\n    };\n  };\n  /**\n   * Updates existing record and saves the changes to the table.\n   * @param  {DataManager} dm\n   * @param  {string} keyField\n   * @param  {Object} value\n   * @param  {string} tableName?\n   * @returns this\n   */\n\n\n  ODataAdaptor.prototype.update = function (dm, keyField, value, tableName, query, original) {\n    if (this.options.updateType === 'PATCH' && !isNullOrUndefined(original)) {\n      value = this.compareAndRemove(value, original, keyField);\n    }\n\n    var url;\n\n    if (typeof value[keyField] === 'string' && !DataUtil.parse.isGuid(value[keyField])) {\n      url = \"('\" + value[keyField] + \"')\";\n    } else {\n      url = \"(\" + value[keyField] + \")\";\n    }\n\n    return {\n      type: this.options.updateType,\n      url: (dm.dataSource.updateUrl || dm.dataSource.url).replace(/\\/*$/, tableName ? '/' + tableName : '') + url,\n      data: JSON.stringify(value, this.options.localTime ? this.localTimeReplacer : null),\n      accept: this.options.accept\n    };\n  };\n  /**\n   * Prepare the request body based on the newly added, removed and updated records.\n   * The result is used by the batch request.\n   * @param  {DataManager} dm\n   * @param  {CrudOptions} changes\n   * @param  {RemoteArgs} e\n   * @returns {Object}\n   */\n\n\n  ODataAdaptor.prototype.batchRequest = function (dm, changes, e, query, original) {\n    var initialGuid = e.guid = DataUtil.getGuid(this.options.batchPre);\n    var url = this.rootUrl ? this.rootUrl + '/' + this.options.batch : dm.dataSource.url.replace(/\\/*$/, '/' + this.options.batch);\n    e.url = this.resourceTableName ? this.resourceTableName : e.url;\n    var args = {\n      url: e.url,\n      key: e.key,\n      cid: 1,\n      cSet: DataUtil.getGuid(this.options.changeSet)\n    };\n    var req = '--' + initialGuid + '\\n';\n    req += 'Content-Type: multipart/mixed; boundary=' + args.cSet.replace('--', '') + '\\n';\n    this.pvt.changeSet = 0;\n    req += this.generateInsertRequest(changes.addedRecords, args, dm);\n    req += this.generateUpdateRequest(changes.changedRecords, args, dm, original ? original.changedRecords : []);\n    req += this.generateDeleteRequest(changes.deletedRecords, args, dm);\n    req += args.cSet + '--\\n';\n    req += '--' + initialGuid + '--';\n    return {\n      type: 'POST',\n      url: url,\n      dataType: 'json',\n      contentType: 'multipart/mixed; charset=UTF-8;boundary=' + initialGuid,\n      data: req\n    };\n  };\n  /**\n   * Generate the string content from the removed records.\n   * The result will be send during batch update.\n   * @param  {Object[]} arr\n   * @param  {RemoteArgs} e\n   * @returns this\n   */\n\n\n  ODataAdaptor.prototype.generateDeleteRequest = function (arr, e, dm) {\n    if (!arr) {\n      return '';\n    }\n\n    var req = '';\n    var stat = {\n      'method': 'DELETE ',\n      'url': function (data, i, key) {\n        var url = DataUtil.getObject(key, data[i]);\n\n        if (typeof url === 'number' || DataUtil.parse.isGuid(url)) {\n          return '(' + url + ')';\n        } else if (url instanceof Date) {\n          var dateTime = data[i][key];\n          return '(' + dateTime.toJSON() + ')';\n        } else {\n          return \"('\" + url + \"')\";\n        }\n      },\n      'data': function (data, i) {\n        return '';\n      }\n    };\n    req = this.generateBodyContent(arr, e, stat, dm);\n    return req + '\\n';\n  };\n  /**\n   * Generate the string content from the inserted records.\n   * The result will be send during batch update.\n   * @param  {Object[]} arr\n   * @param  {RemoteArgs} e\n   */\n\n\n  ODataAdaptor.prototype.generateInsertRequest = function (arr, e, dm) {\n    if (!arr) {\n      return '';\n    }\n\n    var req = '';\n    var stat = {\n      'method': 'POST ',\n      'url': function (data, i, key) {\n        return '';\n      },\n      'data': function (data, i) {\n        return JSON.stringify(data[i]) + '\\n\\n';\n      }\n    };\n    req = this.generateBodyContent(arr, e, stat, dm);\n    return req;\n  };\n  /**\n   * Generate the string content from the updated records.\n   * The result will be send during batch update.\n   * @param  {Object[]} arr\n   * @param  {RemoteArgs} e\n   */\n\n\n  ODataAdaptor.prototype.generateUpdateRequest = function (arr, e, dm, org) {\n    var _this = this;\n\n    if (!arr) {\n      return '';\n    }\n\n    var req = '';\n    arr.forEach(function (change) {\n      return change = _this.compareAndRemove(change, org.filter(function (o) {\n        return DataUtil.getObject(e.key, o) === DataUtil.getObject(e.key, change);\n      })[0], e.key);\n    });\n    var stat = {\n      'method': this.options.updateType + ' ',\n      'url': function (data, i, key) {\n        if (typeof data[i][key] === 'number' || DataUtil.parse.isGuid(data[i][key])) {\n          return '(' + data[i][key] + ')';\n        } else if (data[i][key] instanceof Date) {\n          var date = data[i][key];\n          return '(' + date.toJSON() + ')';\n        } else {\n          return \"('\" + data[i][key] + \"')\";\n        }\n      },\n      'data': function (data, i) {\n        return JSON.stringify(data[i]) + '\\n\\n';\n      }\n    };\n    req = this.generateBodyContent(arr, e, stat, dm);\n    return req;\n  };\n\n  ODataAdaptor.getField = function (prop) {\n    return prop.replace(/\\./g, '/');\n  };\n\n  ODataAdaptor.prototype.generateBodyContent = function (arr, e, stat, dm) {\n    var req = '';\n\n    for (var i = 0; i < arr.length; i++) {\n      req += '\\n' + e.cSet + '\\n';\n      req += this.options.changeSetContent + '\\n\\n';\n      req += stat.method;\n\n      if (stat.method === 'POST ') {\n        req += (dm.dataSource.insertUrl || dm.dataSource.crudUrl || e.url) + stat.url(arr, i, e.key) + ' HTTP/1.1\\n';\n      } else if (stat.method === 'PUT ' || stat.method === 'PATCH ') {\n        req += (dm.dataSource.updateUrl || dm.dataSource.crudUrl || e.url) + stat.url(arr, i, e.key) + ' HTTP/1.1\\n';\n      } else if (stat.method === 'DELETE ') {\n        req += (dm.dataSource.removeUrl || dm.dataSource.crudUrl || e.url) + stat.url(arr, i, e.key) + ' HTTP/1.1\\n';\n      }\n\n      req += 'Accept: ' + this.options.accept + '\\n';\n      req += 'Content-Id: ' + this.pvt.changeSet++ + '\\n';\n      req += this.options.batchChangeSetContentType + '\\n';\n\n      if (!isNullOrUndefined(arr[i]['@odata.etag'])) {\n        req += 'If-Match: ' + arr[i]['@odata.etag'] + '\\n\\n';\n        delete arr[i]['@odata.etag'];\n      } else {\n        req += '\\n';\n      }\n\n      req += stat.data(arr, i);\n    }\n\n    return req;\n  };\n\n  ODataAdaptor.prototype.processBatchResponse = function (data, query, xhr, request, changes) {\n    if (xhr && xhr.getResponseHeader('Content-Type') && xhr.getResponseHeader('Content-Type').indexOf('xml') !== -1) {\n      return query.isCountRequired ? {\n        result: [],\n        count: 0\n      } : [];\n    }\n\n    if (request && this.options.batch && DataUtil.endsWith(request.url, this.options.batch) && request.type.toLowerCase() === 'post') {\n      var guid = xhr.getResponseHeader('Content-Type');\n      var cIdx = void 0;\n      var jsonObj = void 0;\n      var d = data + '';\n      guid = guid.substring(guid.indexOf('=batchresponse') + 1);\n      d = d.split(guid);\n\n      if (d.length < 2) {\n        return {};\n      }\n\n      d = d[1];\n      var exVal = /(?:\\bContent-Type.+boundary=)(changesetresponse.+)/i.exec(d);\n\n      if (exVal) {\n        d.replace(exVal[0], '');\n      }\n\n      var changeGuid = exVal ? exVal[1] : '';\n      d = d.split(changeGuid);\n\n      for (var i = d.length; i > -1; i--) {\n        if (!/\\bContent-ID:/i.test(d[i]) || !/\\bHTTP.+201/.test(d[i])) {\n          continue;\n        }\n\n        cIdx = parseInt(/\\bContent-ID: (\\d+)/i.exec(d[i])[1], 10);\n\n        if (changes.addedRecords[cIdx]) {\n          jsonObj = DataUtil.parse.parseJson(/^\\{.+\\}/m.exec(d[i])[0]);\n          extend({}, changes.addedRecords[cIdx], this.processResponse(jsonObj));\n        }\n      }\n\n      return changes;\n    }\n\n    return null;\n  };\n\n  ODataAdaptor.prototype.compareAndRemove = function (data, original, key) {\n    var _this = this;\n\n    if (isNullOrUndefined(original)) {\n      return data;\n    }\n\n    Object.keys(data).forEach(function (prop) {\n      if (prop !== key && prop !== '@odata.etag') {\n        if (DataUtil.isPlainObject(data[prop])) {\n          _this.compareAndRemove(data[prop], original[prop]);\n\n          var final = Object.keys(data[prop]).filter(function (data) {\n            return data !== '@odata.etag';\n          });\n\n          if (final.length === 0) {\n            delete data[prop];\n          }\n        } else if (data[prop] === original[prop]) {\n          delete data[prop];\n        } else if (data[prop] && original[prop] && data[prop].valueOf() === original[prop].valueOf()) {\n          delete data[prop];\n        }\n      }\n    });\n    return data;\n  };\n\n  return ODataAdaptor;\n}(UrlAdaptor);\n/**\n * The OData v4 is an improved version of OData protocols.\n * The DataManager uses the ODataV4Adaptor to consume OData v4 services.\n * @hidden\n */\n\n\nvar ODataV4Adaptor =\n/** @__PURE__ @class */\nfunction (_super) {\n  __extends(ODataV4Adaptor, _super);\n\n  function ODataV4Adaptor(props) {\n    var _this = _super.call(this, props) || this; // options replaced the default adaptor options\n\n\n    _this.options = extend({}, _this.options, {\n      requestType: 'get',\n      accept: 'application/json, text/javascript, */*; q=0.01',\n      multipartAccept: 'multipart/mixed',\n      sortBy: '$orderby',\n      select: '$select',\n      skip: '$skip',\n      take: '$top',\n      count: '$count',\n      search: '$search',\n      where: '$filter',\n      expand: '$expand',\n      batch: '$batch',\n      changeSet: '--changeset_',\n      batchPre: 'batch_',\n      contentId: 'Content-Id: ',\n      batchContent: 'Content-Type: multipart/mixed; boundary=',\n      changeSetContent: 'Content-Type: application/http\\nContent-Transfer-Encoding: binary ',\n      batchChangeSetContentType: 'Content-Type: application/json; charset=utf-8 ',\n      updateType: 'PATCH',\n      localTime: false,\n      apply: '$apply'\n    });\n    extend(_this.options, props || {});\n    return _this;\n  }\n  /**\n   * @hidden\n   */\n\n\n  ODataV4Adaptor.prototype.getModuleName = function () {\n    return 'ODataV4Adaptor';\n  };\n  /**\n   * Returns the query string which requests total count from the data source.\n   * @param  {boolean} e\n   * @returns string\n   */\n\n\n  ODataV4Adaptor.prototype.onCount = function (e) {\n    return e === true ? 'true' : '';\n  };\n  /**\n   * Generate request string based on the filter criteria from query.\n   * @param  {Predicate} pred\n   * @param  {boolean} requiresCast?\n   */\n\n\n  ODataV4Adaptor.prototype.onPredicate = function (predicate, query, requiresCast) {\n    var returnValue = '';\n    var val = predicate.value;\n    var isDate = val instanceof Date;\n\n    if (query instanceof Query) {\n      var queries = this.getQueryRequest(query);\n\n      for (var i = 0; i < queries.filters.length; i++) {\n        if (queries.filters[i].e.key === predicate.value) {\n          requiresCast = true;\n        }\n      }\n    }\n\n    returnValue = _super.prototype.onPredicate.call(this, predicate, query, requiresCast);\n\n    if (isDate) {\n      returnValue = returnValue.replace(/datetime'(.*)'$/, '$1');\n    }\n\n    if (DataUtil.parse.isGuid(val)) {\n      returnValue = returnValue.replace('guid', '').replace(/'/g, '');\n    }\n\n    return returnValue;\n  };\n  /**\n   *  Generate query string based on the multiple search criteria from query.\n   * @param  {{fields:string[]} e\n   * @param  {string} operator\n   * @param  {string} key\n   * @param  {boolean}} ignoreCase\n   */\n\n\n  ODataV4Adaptor.prototype.onEachSearch = function (e) {\n    var search = this.pvt.searches || [];\n    search.push(e.key);\n    this.pvt.searches = search;\n  };\n  /**\n   *  Generate query string based on the search criteria from query.\n   * @param  {Object} e\n   */\n\n\n  ODataV4Adaptor.prototype.onSearch = function (e) {\n    return this.pvt.searches.join(' OR ');\n  };\n  /**\n   * Returns the expand query string.\n   * @param  {string} e\n   */\n\n\n  ODataV4Adaptor.prototype.onExpand = function (e) {\n    var _this = this;\n\n    var selected = {};\n    var expanded = {};\n    var expands = e.expands.slice();\n    var exArr = [];\n    var selects = e.selects.filter(function (item) {\n      return item.indexOf('.') > -1;\n    });\n    selects.forEach(function (select) {\n      var splits = select.split('.');\n\n      if (!(splits[0] in selected)) {\n        selected[splits[0]] = [];\n      }\n\n      if (splits.length == 2) {\n        if (selected[splits[0]].length && Object.keys(selected).indexOf(splits[0]) !== -1) {\n          if (selected[splits[0]][0].indexOf('$expand') !== -1 && selected[splits[0]][0].indexOf(';$select=') === -1) {\n            selected[splits[0]][0] = selected[splits[0]][0] + ';' + '$select=' + splits[1];\n          } else {\n            selected[splits[0]][0] = selected[splits[0]][0] + ',' + splits[1];\n          }\n        } else {\n          selected[splits[0]].push('$select=' + splits[1]);\n        }\n      } else {\n        var sel = '$select=' + splits[splits.length - 1];\n        var exp = '';\n        var close_1 = '';\n\n        for (var i = 1; i < splits.length - 1; i++) {\n          exp = exp + '$expand=' + splits[i] + '(';\n          close_1 = close_1 + ')';\n        }\n\n        var combineVal = exp + sel + close_1;\n\n        if (selected[splits[0]].length && Object.keys(selected).indexOf(splits[0]) !== -1 && _this.expandQueryIndex(selected[splits[0]], true)) {\n          var idx = _this.expandQueryIndex(selected[splits[0]]);\n\n          selected[splits[0]][idx] = selected[splits[0]][idx] + combineVal.replace('$expand=', ',');\n        } else {\n          selected[splits[0]].push(combineVal);\n        }\n      }\n    }); //Auto expand from select query\n\n    Object.keys(selected).forEach(function (expand) {\n      if (expands.indexOf(expand) === -1) {\n        expands.push(expand);\n      }\n    });\n    expands.forEach(function (expand) {\n      expanded[expand] = expand in selected ? expand + \"(\" + selected[expand].join(';') + \")\" : expand;\n    });\n    Object.keys(expanded).forEach(function (ex) {\n      return exArr.push(expanded[ex]);\n    });\n    return exArr.join(',');\n  };\n\n  ODataV4Adaptor.prototype.expandQueryIndex = function (query, isExpand) {\n    for (var i = 0; i < query.length; i++) {\n      if (query[i].indexOf('$expand') !== -1) {\n        return isExpand ? true : i;\n      }\n    }\n\n    return isExpand ? false : 0;\n  };\n  /**\n   * Returns the groupby query string.\n   * @param  {string} e\n   */\n\n\n  ODataV4Adaptor.prototype.onDistinct = function (distinctFields) {\n    var fields = distinctFields.map(function (field) {\n      return ODataAdaptor.getField(field);\n    }).join(',');\n    return \"groupby((\" + fields + \"))\";\n  };\n  /**\n   * Returns the select query string.\n   * @param  {string[]} e\n   */\n\n\n  ODataV4Adaptor.prototype.onSelect = function (e) {\n    return _super.prototype.onSelect.call(this, e.filter(function (item) {\n      return item.indexOf('.') === -1;\n    }));\n  };\n  /**\n   * Method will trigger before send the request to server side.\n   * Used to set the custom header or modify the request options.\n   * @param  {DataManager} dm\n   * @param  {XMLHttpRequest} request\n   * @param  {Ajax} settings\n   * @returns void\n   */\n\n\n  ODataV4Adaptor.prototype.beforeSend = function (dm, request, settings) {\n    if (settings.type === 'POST' || settings.type === 'PUT' || settings.type === 'PATCH') {\n      request.setRequestHeader('Prefer', 'return=representation');\n    }\n\n    request.setRequestHeader('Accept', this.options.accept);\n  };\n  /**\n   * Returns the data from the query processing.\n   * @param  {DataResult} data\n   * @param  {DataOptions} ds?\n   * @param  {Query} query?\n   * @param  {XMLHttpRequest} xhr?\n   * @param  {Ajax} request?\n   * @param  {CrudOptions} changes?\n   * @returns aggregateResult\n   */\n\n\n  ODataV4Adaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n    var metaName = '@odata.context';\n\n    if (request && request.type === 'GET' && !this.rootUrl && data[metaName]) {\n      var dataUrl = data[metaName].split('/$metadata#');\n      this.rootUrl = dataUrl[0];\n      this.resourceTableName = dataUrl[1];\n    }\n\n    var pvtData = 'pvtData';\n    var pvt = request && request[pvtData];\n\n    var emptyAndBatch = _super.prototype.processBatchResponse.call(this, data, query, xhr, request, changes);\n\n    if (emptyAndBatch) {\n      return emptyAndBatch;\n    }\n\n    var count = null;\n    var dataCount = '@odata.count';\n\n    if (query && query.isCountRequired) {\n      if (dataCount in data) {\n        count = data[dataCount];\n      }\n    }\n\n    data = !isNullOrUndefined(data.value) ? data.value : data;\n    var args = {};\n    args.count = count;\n    args.result = data;\n    this.getAggregateResult(pvt, data, args, null, query);\n    return DataUtil.isNull(count) ? args.result : {\n      result: args.result,\n      count: count,\n      aggregates: args.aggregates\n    };\n  };\n\n  return ODataV4Adaptor;\n}(ODataAdaptor);\n/**\n * The Web API is a programmatic interface to define the request and response messages system that is mostly exposed in JSON or XML.\n * The DataManager uses the WebApiAdaptor to consume Web API.\n * Since this adaptor is targeted to interact with Web API created using OData endpoint, it is extended from ODataAdaptor\n * @hidden\n */\n\n\nvar WebApiAdaptor =\n/** @__PURE__ @class */\nfunction (_super) {\n  __extends(WebApiAdaptor, _super);\n\n  function WebApiAdaptor() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  WebApiAdaptor.prototype.getModuleName = function () {\n    return 'WebApiAdaptor';\n  };\n  /**\n   * Prepare and returns request body which is used to insert a new record in the table.\n   * @param  {DataManager} dm\n   * @param  {Object} data\n   * @param  {string} tableName?\n   */\n\n\n  WebApiAdaptor.prototype.insert = function (dm, data, tableName) {\n    return {\n      type: 'POST',\n      url: dm.dataSource.url,\n      data: JSON.stringify(data)\n    };\n  };\n  /**\n   * Prepare and return request body which is used to remove record from the table.\n   * @param  {DataManager} dm\n   * @param  {string} keyField\n   * @param  {number} value\n   * @param  {string} tableName?\n   */\n\n\n  WebApiAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n    return {\n      type: 'DELETE',\n      url: dm.dataSource.url + '/' + value,\n      data: JSON.stringify(value)\n    };\n  };\n  /**\n   * Prepare and return request body which is used to update record.\n   * @param  {DataManager} dm\n   * @param  {string} keyField\n   * @param  {Object} value\n   * @param  {string} tableName?\n   */\n\n\n  WebApiAdaptor.prototype.update = function (dm, keyField, value, tableName) {\n    return {\n      type: 'PUT',\n      url: dm.dataSource.url,\n      data: JSON.stringify(value)\n    };\n  };\n\n  WebApiAdaptor.prototype.batchRequest = function (dm, changes, e) {\n    var _this = this;\n\n    var initialGuid = e.guid = DataUtil.getGuid(this.options.batchPre);\n    var url = dm.dataSource.url.replace(/\\/*$/, '/' + this.options.batch);\n    e.url = this.resourceTableName ? this.resourceTableName : e.url;\n    var req = [];\n\n    var _loop_1 = function (i, x) {\n      changes.addedRecords.forEach(function (j, d) {\n        var stat = {\n          'method': 'POST ',\n          'url': function (data, i, key) {\n            return '';\n          },\n          'data': function (data, i) {\n            return JSON.stringify(data[i]) + '\\n\\n';\n          }\n        };\n        req.push('--' + initialGuid);\n        req.push('Content-Type: application/http; msgtype=request', '');\n        req.push('POST ' + '/api/' + (dm.dataSource.insertUrl || dm.dataSource.crudUrl || e.url) + stat.url(changes.addedRecords, i, e.key) + ' HTTP/1.1');\n        req.push('Content-Type: ' + 'application/json; charset=utf-8');\n        req.push('Host: ' + location.host);\n        req.push('', j ? JSON.stringify(j) : '');\n      });\n    }; //insertion\n\n\n    for (var i = 0, x = changes.addedRecords.length; i < x; i++) {\n      _loop_1(i, x);\n    }\n\n    var _loop_2 = function (i, x) {\n      changes.changedRecords.forEach(function (j, d) {\n        var stat = {\n          'method': _this.options.updateType + ' ',\n          'url': function (data, i, key) {\n            return '';\n          },\n          'data': function (data, i) {\n            return JSON.stringify(data[i]) + '\\n\\n';\n          }\n        };\n        req.push('--' + initialGuid);\n        req.push('Content-Type: application/http; msgtype=request', '');\n        req.push('PUT ' + '/api/' + (dm.dataSource.updateUrl || dm.dataSource.crudUrl || e.url) + stat.url(changes.changedRecords, i, e.key) + ' HTTP/1.1');\n        req.push('Content-Type: ' + 'application/json; charset=utf-8');\n        req.push('Host: ' + location.host);\n        req.push('', j ? JSON.stringify(j) : '');\n      });\n    }; //updation \n\n\n    for (var i = 0, x = changes.changedRecords.length; i < x; i++) {\n      _loop_2(i, x);\n    }\n\n    var _loop_3 = function (i, x) {\n      changes.deletedRecords.forEach(function (j, d) {\n        var state = {\n          'mtd': 'DELETE ',\n          'url': function (data, i, key) {\n            var url = DataUtil.getObject(key, data[i]);\n\n            if (typeof url === 'number' || DataUtil.parse.isGuid(url)) {\n              return '/' + url;\n            } else if (url instanceof Date) {\n              var datTime = data[i][key];\n              return '/' + datTime.toJSON();\n            } else {\n              return \"/'\" + url + \"'\";\n            }\n          },\n          'data': function (data, i) {\n            return '';\n          }\n        };\n        req.push('--' + initialGuid);\n        req.push('Content-Type: application/http; msgtype=request', '');\n        req.push('DELETE ' + '/api/' + (dm.dataSource.removeUrl || dm.dataSource.crudUrl || e.url) + state.url(changes.deletedRecords, i, e.key) + ' HTTP/1.1');\n        req.push('Content-Type: ' + 'application/json; charset=utf-8');\n        req.push('Host: ' + location.host);\n        req.push('', j ? JSON.stringify(j) : '');\n      });\n    }; //deletion\n\n\n    for (var i = 0, x = changes.deletedRecords.length; i < x; i++) {\n      _loop_3(i, x);\n    }\n\n    req.push('--' + initialGuid + '--', '');\n    return {\n      type: 'POST',\n      url: url,\n      contentType: 'multipart/mixed; boundary=' + initialGuid,\n      data: req.join('\\r\\n')\n    };\n  };\n  /**\n   * Method will trigger before send the request to server side.\n   * Used to set the custom header or modify the request options.\n   * @param  {DataManager} dm\n   * @param  {XMLHttpRequest} request\n   * @param  {Ajax} settings\n   * @returns void\n   */\n\n\n  WebApiAdaptor.prototype.beforeSend = function (dm, request, settings) {\n    request.setRequestHeader('Accept', 'application/json, text/javascript, */*; q=0.01');\n  };\n  /**\n   * Returns the data from the query processing.\n   * @param  {DataResult} data\n   * @param  {DataOptions} ds?\n   * @param  {Query} query?\n   * @param  {XMLHttpRequest} xhr?\n   * @param  {Ajax} request?\n   * @param  {CrudOptions} changes?\n   * @returns aggregateResult\n   */\n\n\n  WebApiAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n    var pvtData = 'pvtData';\n    var pvt = request && request[pvtData];\n    var count = null;\n    var args = {};\n\n    if (request && request.type.toLowerCase() !== 'post') {\n      var versionCheck = xhr && request.getResponseHeader('DataServiceVersion');\n      var version = versionCheck && parseInt(versionCheck, 10) || 2;\n\n      if (query && query.isCountRequired) {\n        if (!DataUtil.isNull(data.Count)) {\n          count = data.Count;\n        }\n      }\n\n      if (version < 3 && data.Items) {\n        data = data.Items;\n      }\n\n      args.count = count;\n      args.result = data;\n      this.getAggregateResult(pvt, data, args, null, query);\n    }\n\n    args.result = args.result || data;\n    return DataUtil.isNull(count) ? args.result : {\n      result: args.result,\n      count: args.count,\n      aggregates: args.aggregates\n    };\n  };\n\n  return WebApiAdaptor;\n}(ODataAdaptor);\n/**\n * WebMethodAdaptor can be used by DataManager to interact with web method.\n * @hidden\n */\n\n\nvar WebMethodAdaptor =\n/** @__PURE__ @class */\nfunction (_super) {\n  __extends(WebMethodAdaptor, _super);\n\n  function WebMethodAdaptor() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * Prepare the request body based on the query.\n   * The query information can be accessed at the WebMethod using variable named `value`.\n   * @param  {DataManager} dm\n   * @param  {Query} query\n   * @param  {Object[]} hierarchyFilters?\n   * @returns application\n   */\n\n\n  WebMethodAdaptor.prototype.processQuery = function (dm, query, hierarchyFilters) {\n    var obj = new UrlAdaptor().processQuery(dm, query, hierarchyFilters);\n    var getData = 'data';\n    var data = DataUtil.parse.parseJson(obj[getData]);\n    var result = {};\n    var value = 'value';\n\n    if (data.param) {\n      for (var i = 0; i < data.param.length; i++) {\n        var param = data.param[i];\n        var key = Object.keys(param)[0];\n        result[key] = param[key];\n      }\n    }\n\n    result[value] = data;\n    var pvtData = 'pvtData';\n    var url = 'url';\n    return {\n      data: JSON.stringify(result),\n      url: obj[url],\n      pvtData: obj[pvtData],\n      type: 'POST',\n      contentType: 'application/json; charset=utf-8'\n    };\n  };\n\n  return WebMethodAdaptor;\n}(UrlAdaptor);\n/**\n * RemoteSaveAdaptor, extended from JsonAdaptor and it is used for binding local data and performs all DataManager queries in client-side.\n * It interacts with server-side only for CRUD operations.\n * @hidden\n */\n\n\nvar RemoteSaveAdaptor =\n/** @__PURE__ @class */\nfunction (_super) {\n  __extends(RemoteSaveAdaptor, _super);\n  /**\n   * @hidden\n   */\n\n\n  function RemoteSaveAdaptor() {\n    var _this = _super.call(this) || this;\n\n    setValue('beforeSend', UrlAdaptor.prototype.beforeSend, _this);\n    return _this;\n  }\n\n  RemoteSaveAdaptor.prototype.insert = function (dm, data, tableName, query, position) {\n    this.pvt.position = position;\n    this.updateType = 'add';\n    return {\n      url: dm.dataSource.insertUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n      data: JSON.stringify(extend({}, {\n        value: data,\n        table: tableName,\n        action: 'insert'\n      }, DataUtil.getAddParams(this, dm, query)))\n    };\n  };\n\n  RemoteSaveAdaptor.prototype.remove = function (dm, keyField, val, tableName, query) {\n    _super.prototype.remove.call(this, dm, keyField, val);\n\n    return {\n      type: 'POST',\n      url: dm.dataSource.removeUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n      data: JSON.stringify(extend({}, {\n        key: val,\n        keyColumn: keyField,\n        table: tableName,\n        action: 'remove'\n      }, DataUtil.getAddParams(this, dm, query)))\n    };\n  };\n\n  RemoteSaveAdaptor.prototype.update = function (dm, keyField, val, tableName, query) {\n    this.updateType = 'update';\n    this.updateKey = keyField;\n    return {\n      type: 'POST',\n      url: dm.dataSource.updateUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n      data: JSON.stringify(extend({}, {\n        value: val,\n        action: 'update',\n        keyColumn: keyField,\n        key: val[keyField],\n        table: tableName\n      }, DataUtil.getAddParams(this, dm, query)))\n    };\n  };\n\n  RemoteSaveAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes, e) {\n    var i;\n    var newData = request ? JSON.parse(request.data) : data;\n    data = newData.action === 'batch' ? DataUtil.parse.parseJson(data) : data;\n\n    if (this.updateType === 'add') {\n      _super.prototype.insert.call(this, ds, data, null, null, this.pvt.position);\n    }\n\n    if (this.updateType === 'update') {\n      _super.prototype.update.call(this, ds, this.updateKey, data);\n    }\n\n    this.updateType = undefined;\n\n    if (data.added) {\n      for (i = 0; i < data.added.length; i++) {\n        _super.prototype.insert.call(this, ds, data.added[i]);\n      }\n    }\n\n    if (data.changed) {\n      for (i = 0; i < data.changed.length; i++) {\n        _super.prototype.update.call(this, ds, e.key, data.changed[i]);\n      }\n    }\n\n    if (data.deleted) {\n      for (i = 0; i < data.deleted.length; i++) {\n        _super.prototype.remove.call(this, ds, e.key, data.deleted[i]);\n      }\n    }\n\n    return data;\n  };\n  /**\n   * Prepare the request body based on the newly added, removed and updated records.\n   * Also perform the changes in the locally cached data to sync with the remote data.\n   * The result is used by the batch request.\n   * @param  {DataManager} dm\n   * @param  {CrudOptions} changes\n   * @param  {RemoteArgs} e\n   */\n\n\n  RemoteSaveAdaptor.prototype.batchRequest = function (dm, changes, e, query, original) {\n    return {\n      type: 'POST',\n      url: dm.dataSource.batchUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n      contentType: 'application/json; charset=utf-8',\n      dataType: 'json',\n      data: JSON.stringify(extend({}, {\n        changed: changes.changedRecords,\n        added: changes.addedRecords,\n        deleted: changes.deletedRecords,\n        action: 'batch',\n        table: e.url,\n        key: e.key\n      }, DataUtil.getAddParams(this, dm, query)))\n    };\n  };\n\n  RemoteSaveAdaptor.prototype.addParams = function (options) {\n    var urlParams = new UrlAdaptor();\n    urlParams.addParams(options);\n  };\n\n  return RemoteSaveAdaptor;\n}(JsonAdaptor);\n/**\n * Ajax Adaptor that is extended from URL Adaptor, is used for handle data operations with user defined functions.\n * @hidden\n */\n\n\nvar CustomDataAdaptor =\n/** @__PURE__ @class */\nfunction (_super) {\n  __extends(CustomDataAdaptor, _super);\n\n  function CustomDataAdaptor(props) {\n    var _this = _super.call(this) || this; // options replaced the default adaptor options\n\n\n    _this.options = extend({}, _this.options, {\n      getData: new Function(),\n      addRecord: new Function(),\n      updateRecord: new Function(),\n      deleteRecord: new Function(),\n      batchUpdate: new Function()\n    });\n    extend(_this.options, props || {});\n    return _this;\n  }\n\n  CustomDataAdaptor.prototype.getModuleName = function () {\n    return 'CustomDataAdaptor';\n  };\n\n  return CustomDataAdaptor;\n}(UrlAdaptor);\n/**\n * The GraphqlAdaptor that is extended from URL Adaptor, is used for retrieving data from the Graphql server.\n * It interacts with the Graphql server with all the DataManager Queries and performs CRUD operations.\n * @hidden\n */\n\n\nvar GraphQLAdaptor =\n/** @__PURE__ @class */\nfunction (_super) {\n  __extends(GraphQLAdaptor, _super);\n\n  function GraphQLAdaptor(options) {\n    var _this = _super.call(this) || this;\n\n    _this.opt = options;\n    _this.schema = _this.opt.response;\n    _this.query = _this.opt.query;\n    _this.getVariables = _this.opt.getVariables ? _this.opt.getVariables : function () {};\n\n    _this.getQuery = function () {\n      return _this.query;\n    };\n\n    return _this;\n  }\n\n  GraphQLAdaptor.prototype.getModuleName = function () {\n    return 'GraphQLAdaptor';\n  };\n  /**\n   * Process the JSON data based on the provided queries.\n   * @param  {DataManager} dm\n   * @param  {Query} query?\n   */\n\n\n  GraphQLAdaptor.prototype.processQuery = function (datamanager, query) {\n    var urlQuery = _super.prototype.processQuery.apply(this, arguments);\n\n    var dm = JSON.parse(urlQuery.data); // constructing GraphQL parameters\n\n    var keys = ['skip', 'take', 'sorted', 'table', 'select', 'where', 'search', 'requiresCounts', 'aggregates', 'params'];\n    var temp = {};\n    var str = 'searchwhereparams';\n    keys.filter(function (e) {\n      temp[e] = str.indexOf(e) > -1 ? JSON.stringify(dm[e]) : dm[e];\n    });\n    var vars = this.getVariables() || {};\n    vars['datamanager'] = temp;\n    var data = JSON.stringify({\n      query: this.getQuery(),\n      variables: vars\n    });\n    urlQuery.data = data;\n    return urlQuery;\n  };\n  /**\n   * Returns the data from the query processing.\n   * It will also cache the data for later usage.\n   * @param  {DataResult} data\n   * @param  {DataManager} ds?\n   * @param  {Query} query?\n   * @param  {XMLHttpRequest} xhr?\n   * @param  {Object} request?\n   * @returns DataResult\n   */\n\n\n  GraphQLAdaptor.prototype.processResponse = function (resData, ds, query, xhr, request) {\n    var res = resData;\n    var count;\n    var aggregates;\n    var result = getValue(this.schema.result, res.data);\n\n    if (this.schema.count) {\n      count = getValue(this.schema.count, res.data);\n    }\n\n    if (this.schema.aggregates) {\n      aggregates = getValue(this.schema.aggregates, res.data);\n      aggregates = !isNullOrUndefined(aggregates) ? DataUtil.parse.parseJson(aggregates) : aggregates;\n    }\n\n    var pvt = request.pvtData || {};\n    var args = {\n      result: result,\n      aggregates: aggregates\n    };\n    var data = args;\n\n    if (pvt && pvt.groups && pvt.groups.length) {\n      this.getAggregateResult(pvt, data, args, null, query);\n    }\n\n    return !isNullOrUndefined(count) ? {\n      result: args.result,\n      count: count,\n      aggregates: aggregates\n    } : args.result;\n  };\n  /**\n   * Prepare and returns request body which is used to insert a new record in the table.\n   */\n\n\n  GraphQLAdaptor.prototype.insert = function () {\n    var inserted = _super.prototype.insert.apply(this, arguments);\n\n    return this.generateCrudData(inserted, 'insert');\n  };\n  /**\n   * Prepare and returns request body which is used to update a new record in the table.\n   */\n\n\n  GraphQLAdaptor.prototype.update = function () {\n    var inserted = _super.prototype.update.apply(this, arguments);\n\n    return this.generateCrudData(inserted, 'update');\n  };\n  /**\n   * Prepare and returns request body which is used to remove a new record in the table.\n   */\n\n\n  GraphQLAdaptor.prototype.remove = function () {\n    var inserted = _super.prototype.remove.apply(this, arguments);\n\n    return this.generateCrudData(inserted, 'remove');\n  };\n  /**\n   * Prepare the request body based on the newly added, removed and updated records.\n   * The result is used by the batch request.\n   * @param  {DataManager} dm\n   * @param  {CrudOptions} changes\n   * @param  {Object} e\n   * @param  {Query} query\n   * @param  {Object} original\n   */\n\n\n  GraphQLAdaptor.prototype.batchRequest = function (dm, changes, e, query, original) {\n    var batch = _super.prototype.batchRequest.apply(this, arguments);\n\n    var bData = JSON.parse(batch.data);\n    bData.key = e.key;\n    batch.data = JSON.stringify(bData);\n    return this.generateCrudData(batch, 'batch');\n  };\n\n  GraphQLAdaptor.prototype.generateCrudData = function (crudData, action) {\n    var parsed = JSON.parse(crudData.data);\n    crudData.data = JSON.stringify({\n      query: this.opt.getMutation(action),\n      variables: parsed\n    });\n    return crudData;\n  };\n\n  return GraphQLAdaptor;\n}(UrlAdaptor);\n/**\n * Cache Adaptor is used to cache the data of the visited pages. It prevents new requests for the previously visited pages.\n * You can configure cache page size and duration of caching by using cachingPageSize and timeTillExpiration properties of the DataManager\n * @hidden\n */\n\n\nvar CacheAdaptor =\n/** @__PURE__ @class */\nfunction (_super) {\n  __extends(CacheAdaptor, _super);\n  /**\n   * Constructor for CacheAdaptor class.\n   * @param  {CacheAdaptor} adaptor?\n   * @param  {number} timeStamp?\n   * @param  {number} pageSize?\n   * @hidden\n   */\n\n\n  function CacheAdaptor(adaptor, timeStamp, pageSize) {\n    var _this = _super.call(this) || this;\n\n    _this.isCrudAction = false;\n    _this.isInsertAction = false;\n\n    if (!isNullOrUndefined(adaptor)) {\n      _this.cacheAdaptor = adaptor;\n    }\n\n    _this.pageSize = pageSize;\n    _this.guidId = DataUtil.getGuid('cacheAdaptor');\n    var obj = {\n      keys: [],\n      results: []\n    };\n    window.localStorage.setItem(_this.guidId, JSON.stringify(obj));\n    var guid = _this.guidId;\n\n    if (!isNullOrUndefined(timeStamp)) {\n      setInterval(function () {\n        var data;\n        data = DataUtil.parse.parseJson(window.localStorage.getItem(guid));\n        var forDel = [];\n\n        for (var i = 0; i < data.results.length; i++) {\n          var currentTime = +new Date();\n          var requestTime = +new Date(data.results[i].timeStamp);\n          data.results[i].timeStamp = currentTime - requestTime;\n\n          if (currentTime - requestTime > timeStamp) {\n            forDel.push(i);\n          }\n        }\n\n        for (var i = 0; i < forDel.length; i++) {\n          data.results.splice(forDel[i], 1);\n          data.keys.splice(forDel[i], 1);\n        }\n\n        window.localStorage.removeItem(guid);\n        window.localStorage.setItem(guid, JSON.stringify(data));\n      }, timeStamp);\n    }\n\n    return _this;\n  }\n  /**\n   * It will generate the key based on the URL when we send a request to server.\n   * @param  {string} url\n   * @param  {Query} query?\n   * @hidden\n   */\n\n\n  CacheAdaptor.prototype.generateKey = function (url, query) {\n    var queries = this.getQueryRequest(query);\n    var singles = Query.filterQueryLists(query.queries, ['onSelect', 'onPage', 'onSkip', 'onTake', 'onRange']);\n    var key = url;\n    var page = 'onPage';\n\n    if (page in singles) {\n      key += singles[page].pageIndex;\n    }\n\n    queries.sorts.forEach(function (obj) {\n      key += obj.e.direction + obj.e.fieldName;\n    });\n    queries.groups.forEach(function (obj) {\n      key += obj.e.fieldName;\n    });\n    queries.searches.forEach(function (obj) {\n      key += obj.e.searchKey;\n    });\n\n    for (var filter = 0; filter < queries.filters.length; filter++) {\n      var currentFilter = queries.filters[filter];\n\n      if (currentFilter.e.isComplex) {\n        var newQuery = query.clone();\n        newQuery.queries = [];\n\n        for (var i = 0; i < currentFilter.e.predicates.length; i++) {\n          newQuery.queries.push({\n            fn: 'onWhere',\n            e: currentFilter.e.predicates[i],\n            filter: query.queries.filter\n          });\n        }\n\n        key += currentFilter.e.condition + this.generateKey(url, newQuery);\n      } else {\n        key += currentFilter.e.field + currentFilter.e.operator + currentFilter.e.value;\n      }\n    }\n\n    return key;\n  };\n  /**\n   * Process the query to generate request body.\n   * If the data is already cached, it will return the cached data.\n   * @param  {DataManager} dm\n   * @param  {Query} query?\n   * @param  {Object[]} hierarchyFilters?\n   */\n\n\n  CacheAdaptor.prototype.processQuery = function (dm, query, hierarchyFilters) {\n    var key = this.generateKey(dm.dataSource.url, query);\n    var cachedItems;\n    cachedItems = DataUtil.parse.parseJson(window.localStorage.getItem(this.guidId));\n    var data = cachedItems ? cachedItems.results[cachedItems.keys.indexOf(key)] : null;\n\n    if (data != null && !this.isCrudAction && !this.isInsertAction) {\n      return data;\n    }\n\n    this.isCrudAction = null;\n    this.isInsertAction = null;\n    return this.cacheAdaptor.processQuery.apply(this.cacheAdaptor, [].slice.call(arguments, 0));\n  };\n  /**\n   * Returns the data from the query processing.\n   * It will also cache the data for later usage.\n   * @param  {DataResult} data\n   * @param  {DataManager} ds?\n   * @param  {Query} query?\n   * @param  {XMLHttpRequest} xhr?\n   * @param  {Ajax} request?\n   * @param  {CrudOptions} changes?\n   */\n\n\n  CacheAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n    if (this.isInsertAction || request && this.cacheAdaptor.options.batch && DataUtil.endsWith(request.url, this.cacheAdaptor.options.batch) && request.type.toLowerCase() === 'post') {\n      return this.cacheAdaptor.processResponse(data, ds, query, xhr, request, changes);\n    }\n\n    data = this.cacheAdaptor.processResponse.apply(this.cacheAdaptor, [].slice.call(arguments, 0));\n    var key = query ? this.generateKey(ds.dataSource.url, query) : ds.dataSource.url;\n    var obj = {};\n    obj = DataUtil.parse.parseJson(window.localStorage.getItem(this.guidId));\n    var index = obj.keys.indexOf(key);\n\n    if (index !== -1) {\n      obj.results.splice(index, 1);\n      obj.keys.splice(index, 1);\n    }\n\n    obj.results[obj.keys.push(key) - 1] = {\n      keys: key,\n      result: data.result,\n      timeStamp: new Date(),\n      count: data.count\n    };\n\n    while (obj.results.length > this.pageSize) {\n      obj.results.splice(0, 1);\n      obj.keys.splice(0, 1);\n    }\n\n    window.localStorage.setItem(this.guidId, JSON.stringify(obj));\n    return data;\n  };\n  /**\n   * Method will trigger before send the request to server side. Used to set the custom header or modify the request options.\n   * @param  {DataManager} dm\n   * @param  {XMLHttpRequest} request\n   * @param  {Ajax} settings?\n   */\n\n\n  CacheAdaptor.prototype.beforeSend = function (dm, request, settings) {\n    if (!isNullOrUndefined(this.cacheAdaptor.options.batch) && DataUtil.endsWith(settings.url, this.cacheAdaptor.options.batch) && settings.type.toLowerCase() === 'post') {\n      request.setRequestHeader('Accept', this.cacheAdaptor.options.multipartAccept);\n    }\n\n    if (!dm.dataSource.crossDomain) {\n      request.setRequestHeader('Accept', this.cacheAdaptor.options.accept);\n    }\n  };\n  /**\n   * Updates existing record and saves the changes to the table.\n   * @param  {DataManager} dm\n   * @param  {string} keyField\n   * @param  {Object} value\n   * @param  {string} tableName\n   */\n\n\n  CacheAdaptor.prototype.update = function (dm, keyField, value, tableName) {\n    this.isCrudAction = true;\n    return this.cacheAdaptor.update(dm, keyField, value, tableName);\n  };\n  /**\n   * Prepare and returns request body which is used to insert a new record in the table.\n   * @param  {DataManager} dm\n   * @param  {Object} data\n   * @param  {string} tableName?\n   */\n\n\n  CacheAdaptor.prototype.insert = function (dm, data, tableName) {\n    this.isInsertAction = true;\n    return this.cacheAdaptor.insert(dm, data, tableName);\n  };\n  /**\n   * Prepare and return request body which is used to remove record from the table.\n   * @param  {DataManager} dm\n   * @param  {string} keyField\n   * @param  {Object} value\n   * @param  {string} tableName?\n   */\n\n\n  CacheAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n    this.isCrudAction = true;\n    return this.cacheAdaptor.remove(dm, keyField, value, tableName);\n  };\n  /**\n   * Prepare the request body based on the newly added, removed and updated records.\n   * The result is used by the batch request.\n   * @param  {DataManager} dm\n   * @param  {CrudOptions} changes\n   * @param  {RemoteArgs} e\n   */\n\n\n  CacheAdaptor.prototype.batchRequest = function (dm, changes, e) {\n    return this.cacheAdaptor.batchRequest(dm, changes, e);\n  };\n\n  return CacheAdaptor;\n}(UrlAdaptor);\n/**\n * DataManager is used to manage and manipulate relational data.\n */\n\n\nvar DataManager =\n/** @__PURE__ @class */\nfunction () {\n  /**\n   * Constructor for DataManager class\n   * @param  {DataOptions|JSON[]} dataSource?\n   * @param  {Query} query?\n   * @param  {AdaptorOptions|string} adaptor?\n   * @hidden\n   */\n  function DataManager(dataSource, query, adaptor) {\n    var _this = this;\n    /** @hidden */\n\n\n    this.dateParse = true;\n    /** @hidden */\n\n    this.timeZoneHandling = true;\n    this.requests = [];\n\n    if (!dataSource && !this.dataSource) {\n      dataSource = [];\n    }\n\n    adaptor = adaptor || dataSource.adaptor;\n\n    if (dataSource && dataSource.timeZoneHandling === false) {\n      this.timeZoneHandling = dataSource.timeZoneHandling;\n    }\n\n    var data;\n\n    if (dataSource instanceof Array) {\n      data = {\n        json: dataSource,\n        offline: true\n      };\n    } else if (typeof dataSource === 'object') {\n      if (!dataSource.json) {\n        dataSource.json = [];\n      }\n\n      data = {\n        url: dataSource.url,\n        insertUrl: dataSource.insertUrl,\n        removeUrl: dataSource.removeUrl,\n        updateUrl: dataSource.updateUrl,\n        crudUrl: dataSource.crudUrl,\n        batchUrl: dataSource.batchUrl,\n        json: dataSource.json,\n        headers: dataSource.headers,\n        accept: dataSource.accept,\n        data: dataSource.data,\n        timeTillExpiration: dataSource.timeTillExpiration,\n        cachingPageSize: dataSource.cachingPageSize,\n        enableCaching: dataSource.enableCaching,\n        requestType: dataSource.requestType,\n        key: dataSource.key,\n        crossDomain: dataSource.crossDomain,\n        jsonp: dataSource.jsonp,\n        dataType: dataSource.dataType,\n        offline: dataSource.offline !== undefined ? dataSource.offline : dataSource.adaptor instanceof RemoteSaveAdaptor || dataSource.adaptor instanceof CustomDataAdaptor ? false : dataSource.url ? false : true,\n        requiresFormat: dataSource.requiresFormat\n      };\n    } else {\n      DataUtil.throwError('DataManager: Invalid arguments');\n    }\n\n    if (data.requiresFormat === undefined && !DataUtil.isCors()) {\n      data.requiresFormat = isNullOrUndefined(data.crossDomain) ? true : data.crossDomain;\n    }\n\n    if (data.dataType === undefined) {\n      data.dataType = 'json';\n    }\n\n    this.dataSource = data;\n    this.defaultQuery = query;\n\n    if (data.url && data.offline && !data.json.length) {\n      this.isDataAvailable = false;\n      this.adaptor = adaptor || new ODataAdaptor();\n      this.dataSource.offline = false;\n      this.ready = this.executeQuery(query || new Query());\n      this.ready.then(function (e) {\n        _this.dataSource.offline = true;\n        _this.isDataAvailable = true;\n        data.json = e.result;\n        _this.adaptor = new JsonAdaptor();\n      });\n    } else {\n      this.adaptor = data.offline ? new JsonAdaptor() : new ODataAdaptor();\n    }\n\n    if (!data.jsonp && this.adaptor instanceof ODataAdaptor) {\n      data.jsonp = 'callback';\n    }\n\n    this.adaptor = adaptor || this.adaptor;\n\n    if (data.enableCaching) {\n      this.adaptor = new CacheAdaptor(this.adaptor, data.timeTillExpiration, data.cachingPageSize);\n    }\n\n    return this;\n  }\n  /**\n   * Overrides DataManager's default query with given query.\n   * @param  {Query} query - Defines the new default query.\n   */\n\n\n  DataManager.prototype.setDefaultQuery = function (query) {\n    this.defaultQuery = query;\n    return this;\n  };\n  /**\n   * Executes the given query with local data source.\n   * @param  {Query} query - Defines the query to retrieve data.\n   */\n\n\n  DataManager.prototype.executeLocal = function (query) {\n    if (!this.defaultQuery && !(query instanceof Query)) {\n      DataUtil.throwError('DataManager - executeLocal() : A query is required to execute');\n    }\n\n    if (!this.dataSource.json) {\n      DataUtil.throwError('DataManager - executeLocal() : Json data is required to execute');\n    }\n\n    query = query || this.defaultQuery;\n    var result = this.adaptor.processQuery(this, query);\n\n    if (query.subQuery) {\n      var from = query.subQuery.fromTable;\n      var lookup = query.subQuery.lookups;\n      var res = query.isCountRequired ? result.result : result;\n\n      if (lookup && lookup instanceof Array) {\n        DataUtil.buildHierarchy(query.subQuery.fKey, from, res, lookup, query.subQuery.key);\n      }\n\n      for (var j = 0; j < res.length; j++) {\n        if (res[j][from] instanceof Array) {\n          res[j] = extend({}, {}, res[j]);\n          res[j][from] = this.adaptor.processResponse(query.subQuery.using(new DataManager(res[j][from].slice(0))).executeLocal(), this, query);\n        }\n      }\n    }\n\n    return this.adaptor.processResponse(result, this, query);\n  };\n  /**\n   * Executes the given query with either local or remote data source.\n   * It will be executed as asynchronously and returns Promise object which will be resolved or rejected after action completed.\n   * @param  {Query|Function} query - Defines the query to retrieve data.\n   * @param  {Function} done - Defines the callback function and triggers when the Promise is resolved.\n   * @param  {Function} fail - Defines the callback function and triggers when the Promise is rejected.\n   * @param  {Function} always - Defines the callback function and triggers when the Promise is resolved or rejected.\n   */\n\n\n  DataManager.prototype.executeQuery = function (query, done, fail, always) {\n    var _this = this;\n\n    var makeRequest = 'makeRequest';\n\n    if (typeof query === 'function') {\n      always = fail;\n      fail = done;\n      done = query;\n      query = null;\n    }\n\n    if (!query) {\n      query = this.defaultQuery;\n    }\n\n    if (!(query instanceof Query)) {\n      DataUtil.throwError('DataManager - executeQuery() : A query is required to execute');\n    }\n\n    var deffered = new Deferred();\n    var args = {\n      query: query\n    };\n\n    if (!this.dataSource.offline && this.dataSource.url !== undefined && this.dataSource.url !== '' || !isNullOrUndefined(this.adaptor[makeRequest]) || this.isCustomDataAdaptor(this.adaptor)) {\n      var result = this.adaptor.processQuery(this, query);\n\n      if (!isNullOrUndefined(this.adaptor[makeRequest])) {\n        this.adaptor[makeRequest](result, deffered, args, query);\n      } else if (!isNullOrUndefined(result.url) || this.isCustomDataAdaptor(this.adaptor)) {\n        this.makeRequest(result, deffered, args, query);\n      } else {\n        args = DataManager.getDeferedArgs(query, result, args);\n        deffered.resolve(args);\n      }\n    } else {\n      DataManager.nextTick(function () {\n        var res = _this.executeLocal(query);\n\n        args = DataManager.getDeferedArgs(query, res, args);\n        deffered.resolve(args);\n      });\n    }\n\n    if (done || fail) {\n      deffered.promise.then(done, fail);\n    }\n\n    if (always) {\n      deffered.promise.then(always, always);\n    }\n\n    return deffered.promise;\n  };\n\n  DataManager.getDeferedArgs = function (query, result, args) {\n    if (query.isCountRequired) {\n      args.result = result.result;\n      args.count = result.count;\n      args.aggregates = result.aggregates;\n    } else {\n      args.result = result;\n    }\n\n    return args;\n  };\n\n  DataManager.nextTick = function (fn) {\n    (window.setImmediate || window.setTimeout)(fn, 0);\n  };\n\n  DataManager.prototype.extendRequest = function (url, fnSuccess, fnFail) {\n    return extend({}, {\n      type: 'GET',\n      dataType: this.dataSource.dataType,\n      crossDomain: this.dataSource.crossDomain,\n      jsonp: this.dataSource.jsonp,\n      cache: true,\n      processData: false,\n      onSuccess: fnSuccess,\n      onFailure: fnFail\n    }, url);\n  }; // tslint:disable-next-line:max-func-body-length\n\n\n  DataManager.prototype.makeRequest = function (url, deffered, args, query) {\n    var _this = this;\n\n    var isSelector = !!query.subQuerySelector;\n\n    var fnFail = function (e) {\n      args.error = e;\n      deffered.reject(args);\n    };\n\n    var process = function (data, count, xhr, request, actual, aggregates, virtualSelectRecords) {\n      args.xhr = xhr;\n      args.count = count ? parseInt(count.toString(), 10) : 0;\n      args.result = data;\n      args.request = request;\n      args.aggregates = aggregates;\n      args.actual = actual;\n      args.virtualSelectRecords = virtualSelectRecords;\n      deffered.resolve(args);\n    };\n\n    var fnQueryChild = function (data, selector) {\n      var subDeffer = new Deferred();\n      var childArgs = {\n        parent: args\n      };\n      query.subQuery.isChild = true;\n\n      var subUrl = _this.adaptor.processQuery(_this, query.subQuery, data ? _this.adaptor.processResponse(data) : selector);\n\n      var childReq = _this.makeRequest(subUrl, subDeffer, childArgs, query.subQuery);\n\n      if (!isSelector) {\n        subDeffer.then(function (subData) {\n          if (data) {\n            DataUtil.buildHierarchy(query.subQuery.fKey, query.subQuery.fromTable, data, subData, query.subQuery.key);\n            process(data, subData.count, subData.xhr);\n          }\n        }, fnFail);\n      }\n\n      return childReq;\n    };\n\n    var fnSuccess = function (data, request) {\n      if (_this.isGraphQLAdaptor(_this.adaptor)) {\n        if (!isNullOrUndefined(data['errors'])) {\n          return fnFail(data['errors'], request);\n        }\n      }\n\n      if (_this.isCustomDataAdaptor(_this.adaptor)) {\n        request = extend({}, _this.ajaxReqOption, request);\n      }\n\n      if (request.httpRequest.getResponseHeader('Content-Type').indexOf('xml') === -1 && _this.dateParse) {\n        data = DataUtil.parse.parseJson(data);\n      }\n\n      var result = _this.adaptor.processResponse(data, _this, query, request.httpRequest, request);\n\n      var count = 0;\n      var aggregates = null;\n      var virtualSelectRecords = 'virtualSelectRecords';\n      var virtualRecords = data[virtualSelectRecords];\n\n      if (query.isCountRequired) {\n        count = result.count;\n        aggregates = result.aggregates;\n        result = result.result;\n      }\n\n      if (!query.subQuery) {\n        process(result, count, request.httpRequest, request.type, data, aggregates, virtualRecords);\n        return;\n      }\n\n      if (!isSelector) {\n        fnQueryChild(result, request);\n      }\n    };\n\n    var req = this.extendRequest(url, fnSuccess, fnFail);\n\n    if (!this.isCustomDataAdaptor(this.adaptor)) {\n      var ajax_1 = new Ajax(req);\n\n      ajax_1.beforeSend = function () {\n        _this.beforeSend(ajax_1.httpRequest, ajax_1);\n      };\n\n      req = ajax_1.send();\n      req.catch(function (e) {\n        return true;\n      }); // to handle failure remote requests.        \n\n      this.requests.push(ajax_1);\n    } else {\n      this.ajaxReqOption = req;\n      var request = req;\n      this.adaptor.options.getData({\n        data: request.data,\n        onSuccess: request.onSuccess,\n        onFailure: request.onFailure\n      });\n    }\n\n    if (isSelector) {\n      var promise = void 0;\n      var res = query.subQuerySelector.call(this, {\n        query: query.subQuery,\n        parent: query\n      });\n\n      if (res && res.length) {\n        promise = Promise.all([req, fnQueryChild(null, res)]);\n        promise.then(function () {\n          var args = [];\n\n          for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n          }\n\n          var result = args[0];\n\n          var pResult = _this.adaptor.processResponse(result[0], _this, query, _this.requests[0].httpRequest, _this.requests[0]);\n\n          var count = 0;\n\n          if (query.isCountRequired) {\n            count = pResult.count;\n            pResult = pResult.result;\n          }\n\n          var cResult = _this.adaptor.processResponse(result[1], _this, query.subQuery, _this.requests[1].httpRequest, _this.requests[1]);\n\n          count = 0;\n\n          if (query.subQuery.isCountRequired) {\n            count = cResult.count;\n            cResult = cResult.result;\n          }\n\n          DataUtil.buildHierarchy(query.subQuery.fKey, query.subQuery.fromTable, pResult, cResult, query.subQuery.key);\n          isSelector = false;\n          process(pResult, count, _this.requests[0].httpRequest);\n        });\n      } else {\n        isSelector = false;\n      }\n    }\n\n    return req;\n  };\n\n  DataManager.prototype.beforeSend = function (request, settings) {\n    this.adaptor.beforeSend(this, request, settings);\n    var headers = this.dataSource.headers;\n    var props;\n\n    for (var i = 0; headers && i < headers.length; i++) {\n      props = [];\n      var keys = Object.keys(headers[i]);\n\n      for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n        var prop = keys_1[_i];\n        props.push(prop);\n        request.setRequestHeader(prop, headers[i][prop]);\n      }\n    }\n  };\n  /**\n   * Save bulk changes to the given table name.\n   * User can add a new record, edit an existing record, and delete a record at the same time.\n   * If the datasource from remote, then updated in a single post.\n   * @param  {Object} changes - Defines the CrudOptions.\n   * @param  {string} key - Defines the column field.\n   * @param  {string|Query} tableName - Defines the table name.\n   * @param  {Query} query - Sets default query for the DataManager.\n   */\n\n\n  DataManager.prototype.saveChanges = function (changes, key, tableName, query, original) {\n    var _this = this;\n\n    if (tableName instanceof Query) {\n      query = tableName;\n      tableName = null;\n    }\n\n    var args = {\n      url: tableName,\n      key: key || this.dataSource.key\n    };\n    var req = this.adaptor.batchRequest(this, changes, args, query || new Query(), original);\n    var doAjaxRequest = 'doAjaxRequest';\n\n    if (this.dataSource.offline) {\n      return req;\n    }\n\n    if (!isNullOrUndefined(this.adaptor[doAjaxRequest])) {\n      return this.adaptor[doAjaxRequest](req);\n    } else if (!this.isCustomDataAdaptor(this.adaptor)) {\n      var deff_1 = new Deferred();\n      var ajax_2 = new Ajax(req);\n\n      ajax_2.beforeSend = function () {\n        _this.beforeSend(ajax_2.httpRequest, ajax_2);\n      };\n\n      ajax_2.onSuccess = function (data, request) {\n        if (_this.isGraphQLAdaptor(_this.adaptor)) {\n          if (!isNullOrUndefined(data['errors'])) {\n            ajax_2.onFailure(JSON.stringify(data['errors']));\n          }\n        }\n\n        deff_1.resolve(_this.adaptor.processResponse(data, _this, null, request.httpRequest, request, changes, args));\n      };\n\n      ajax_2.onFailure = function (e) {\n        deff_1.reject([{\n          error: e\n        }]);\n      };\n\n      ajax_2.send().catch(function (e) {\n        return true;\n      }); // to handle the failure requests.        \n\n      return deff_1.promise;\n    } else {\n      return this.doAjaxRequest(req, this.adaptor.options.batchUpdate);\n    }\n  };\n  /**\n   * Inserts new record in the given table.\n   * @param  {Object} data - Defines the data to insert.\n   * @param  {string|Query} tableName - Defines the table name.\n   * @param  {Query} query - Sets default query for the DataManager.\n   */\n\n\n  DataManager.prototype.insert = function (data, tableName, query, position) {\n    if (tableName instanceof Query) {\n      query = tableName;\n      tableName = null;\n    }\n\n    var req = this.adaptor.insert(this, data, tableName, query, position);\n    var doAjaxRequest = 'doAjaxRequest';\n\n    if (this.dataSource.offline) {\n      return req;\n    }\n\n    if (!isNullOrUndefined(this.adaptor[doAjaxRequest])) {\n      return this.adaptor[doAjaxRequest](req);\n    } else {\n      return this.doAjaxRequest(req, this.adaptor.options.addRecord);\n    }\n  };\n  /**\n   * Removes data from the table with the given key.\n   * @param  {string} keyField - Defines the column field.\n   * @param  {Object} value - Defines the value to find the data in the specified column.\n   * @param  {string|Query} tableName - Defines the table name\n   * @param  {Query} query - Sets default query for the DataManager.\n   */\n\n\n  DataManager.prototype.remove = function (keyField, value, tableName, query) {\n    if (typeof value === 'object') {\n      value = DataUtil.getObject(keyField, value);\n    }\n\n    if (tableName instanceof Query) {\n      query = tableName;\n      tableName = null;\n    }\n\n    var res = this.adaptor.remove(this, keyField, value, tableName, query);\n    var doAjaxRequest = 'doAjaxRequest';\n\n    if (this.dataSource.offline) {\n      return res;\n    }\n\n    if (!isNullOrUndefined(this.adaptor[doAjaxRequest])) {\n      return this.adaptor[doAjaxRequest](res);\n    } else {\n      var remove = this.adaptor.options.deleteRecord;\n      return this.doAjaxRequest(res, remove);\n    }\n  };\n  /**\n   * Updates existing record in the given table.\n   * @param  {string} keyField - Defines the column field.\n   * @param  {Object} value - Defines the value to find the data in the specified column.\n   * @param  {string|Query} tableName - Defines the table name\n   * @param  {Query} query - Sets default query for the DataManager.\n   */\n\n\n  DataManager.prototype.update = function (keyField, value, tableName, query, original) {\n    if (tableName instanceof Query) {\n      query = tableName;\n      tableName = null;\n    }\n\n    var res = this.adaptor.update(this, keyField, value, tableName, query, original);\n    var doAjaxRequest = 'doAjaxRequest';\n\n    if (this.dataSource.offline) {\n      return res;\n    }\n\n    if (!isNullOrUndefined(this.adaptor[doAjaxRequest])) {\n      return this.adaptor[doAjaxRequest](res);\n    } else {\n      var update = this.adaptor.options.updateRecord;\n      return this.doAjaxRequest(res, update);\n    }\n  };\n\n  DataManager.prototype.isCustomDataAdaptor = function (dataSource) {\n    return this.adaptor.getModuleName && this.adaptor.getModuleName() === 'CustomDataAdaptor';\n  };\n\n  DataManager.prototype.isGraphQLAdaptor = function (dataSource) {\n    return this.adaptor.getModuleName && this.adaptor.getModuleName() === 'GraphQLAdaptor';\n  };\n\n  DataManager.prototype.successFunc = function (record, request) {\n    if (this.isGraphQLAdaptor(this.adaptor)) {\n      var data = JSON.parse(record);\n\n      if (!isNullOrUndefined(data['errors'])) {\n        this.failureFunc(JSON.stringify(data['errors']));\n      }\n    }\n\n    if (this.isCustomDataAdaptor(this.adaptor)) {\n      request = extend({}, this.ajaxReqOption, request);\n    }\n\n    try {\n      DataUtil.parse.parseJson(record);\n    } catch (e) {\n      record = [];\n    }\n\n    record = this.adaptor.processResponse(DataUtil.parse.parseJson(record), this, null, request.httpRequest, request);\n    this.ajaxDeffered.resolve(record);\n  };\n\n  DataManager.prototype.failureFunc = function (e) {\n    this.ajaxDeffered.reject([{\n      error: e\n    }]);\n  };\n\n  DataManager.prototype.doAjaxRequest = function (res, ajaxFunc) {\n    var _this = this;\n\n    res = extend({}, {\n      type: 'POST',\n      contentType: 'application/json; charset=utf-8',\n      processData: false\n    }, res);\n    this.ajaxDeffered = new Deferred();\n\n    if (!this.isCustomDataAdaptor(this.adaptor)) {\n      var ajax_3 = new Ajax(res);\n\n      ajax_3.beforeSend = function () {\n        _this.beforeSend(ajax_3.httpRequest, ajax_3);\n      };\n\n      ajax_3.onSuccess = this.successFunc.bind(this);\n      ajax_3.onFailure = this.failureFunc.bind(this);\n      ajax_3.send().catch(function (e) {\n        return true;\n      }); // to handle the failure requests.\n    } else {\n      this.ajaxReqOption = res;\n      ajaxFunc.call(this, {\n        data: res.data,\n        onSuccess: this.successFunc.bind(this),\n        onFailure: this.failureFunc.bind(this)\n      });\n    }\n\n    return this.ajaxDeffered.promise;\n  };\n\n  return DataManager;\n}();\n/**\n * Deferred is used to handle asynchronous operation.\n */\n\n\nvar Deferred =\n/** @__PURE__ @class */\nfunction () {\n  function Deferred() {\n    var _this = this;\n    /**\n     * Promise is an object that represents a value that may not be available yet, but will be resolved at some point in the future.\n     */\n\n\n    this.promise = new Promise(function (resolve, reject) {\n      _this.resolve = resolve;\n      _this.reject = reject;\n    });\n    /**\n     * Defines the callback function triggers when the Deferred object is resolved.\n     */\n\n    this.then = this.promise.then.bind(this.promise);\n    /**\n     * Defines the callback function triggers when the Deferred object is rejected.\n     */\n\n    this.catch = this.promise.catch.bind(this.promise);\n  }\n\n  return Deferred;\n}();\n/**\n * Data modules\n */\n\n\nexport { DataManager, Deferred, Query, Predicate, Adaptor, JsonAdaptor, UrlAdaptor, ODataAdaptor, ODataV4Adaptor, WebApiAdaptor, WebMethodAdaptor, RemoteSaveAdaptor, CustomDataAdaptor, GraphQLAdaptor, CacheAdaptor, DataUtil };","map":{"version":3,"names":["Ajax","extend","getValue","isNullOrUndefined","merge","setValue","Query","from","subQuery","isChild","distincts","queries","key","fKey","fromTable","Array","lookups","expands","sortedColumns","groupedColumns","params","lazyLoad","prototype","setKey","field","using","dataManager","execute","done","fail","always","executeQuery","DataUtil","throwError","executeLocal","clone","cloned","slice","subQuerySelector","isCountRequired","tableName","addParams","value","push","fn","distinct","fields","call","expand","tables","where","fieldName","operator","ignoreCase","ignoreAccent","toLowerCase","predicate","Predicate","e","search","searchKey","fieldNames","comparer","fnOperators","sortBy","isFromGroup","sortByForeignKey","direction","order","sorts","temp","endsWith","replace","fnSort","filterQueries","i","length","j","sortByDesc","group","format","page","pageIndex","pageSize","range","start","end","take","nos","skip","select","hierarchy","query","selectorFn","foreignKey","requiresCount","aggregate","type","name","filter","q","filterQueryLists","singles","filtered","indexOf","res","isComplex","processOperator","condition","predicates","apply","and","args","_i","arguments","combinePredicates","combine","or","fromJson","json","len","fromJSONData","pred","validate","record","isAnd","ret","getObject","toJson","p","preds","result","consts","GroupGuid","inst","input","substr","startsWith","fnAscending","fnDescending","x","y","undefined","localeCompare","extractFields","obj","newObj","jsonArray","newData","aggregates","level","groupDs","isLazyLoad","jsonData","guid","_loop_1","indx","items","this_1","count","childLevels","grouped","groupedArray","records","_loop_2","val","this_2","getVal","tempObj","_loop_3","aggs","buildHierarchy","source","lookup","pKey","grp","fKeyData","getFieldList","prefix","copyObj","keys","Object","keys_1","prop","nameSpace","splits","split","toString","fromObj","sort","ds","middle","parseInt","left","right","ignoreDiacritics","newValue","map","diacritics","join","current","shift","array","index","callAdaptorFunction","adaptor","fnName","param1","param2","getAddParams","adp","dm","req","reqParams","isPlainObject","constructor","isCors","xhr","request","window","getGuid","hexs","rand","crypto","arr","Uint8Array","getRandomValues","Math","random","isNull","getItemFromComparer","keyVal","castRequired","requiresCompleteRecord","tmp","forEach","data","processData","prepareQuery","sampledata","DataManager","requiresCounts","returnValue","JSON","stringify","_this","parse","parseJson","predicateList","concat","getPredicate","sorted","mainPred","childPred","cpre","_a","serverTimezoneOffset","timeZoneHandling","error","Error","message","stack","sum","isNaN","average","min","max","truecount","falsecount","operatorSymbols","odBiOperator","odUniOperator","odv4UniOperator","equal","actual","expected","notequal","lessthan","greaterthan","lessthanorequal","greaterthanorequal","contains","notnull","isnull","startswith","endswith","processSymbols","jsonText","jsonReviver","iterateAndReviveArray","iterateAndReviveJson","test","keys_2","ms","exec","offSet","dateParse","toTimeZone","Date","isUTC","utcFormat","hrs","mins","setHours","getHours","getMinutes","addSelfOffset","isJson","isGuid","regex","match","replacer","jsonReplacer","arrayReplacer","keys_3","d","toJSON","date","jsonDateReplacer","getTimezoneOffset","toUTC","offset","utc","unix","toLocalTime","datefn","timeZone","differenceString","localtimefn","num","norm","floor","abs","getFullYear","getMonth","getDate","getSeconds","__extends","extendStatics","b","setPrototypeOf","__proto__","hasOwnProperty","__","create","consts$1","Adaptor","options","requestType","dataSource","pvt","processResponse","JsonAdaptor","_super","processQuery","countFlg","keyCount","agg","lazyLoadData","lazyLoadGroup","getAggregate","onDemandGroupInfo","onWhere","formGroupResult","onPage","uid","childLevel","aggQuery","batchRequest","changes","deletedRecordsLen","deletedRecords","addedRecords","insert","changedRecords","update","remove","onAggregates","onSearch","onSortBy","fnCompare","onGroup","size","onRange","onTake","onSkip","onSelect","position","splice","keyField","UrlAdaptor","hierarchyFilters","getQueryRequest","url","groups","filters","searches","getFiltersFrom","getModuleName","getRequestQuery","pvtData","contentType","convertToQueryString","request1","param","selects","getResponseHeader","handleTimeZone","requests","action","isExpand","isArray","formRemoteGroupedData","getAggregateResult","childLvl","lvl","getGroupedRecords","hasRecords","childGroupedRecords","original","batchUrl","crudUrl","removeUrl","dataType","changed","added","deleted","table","beforeSend","insertUrl","keyColumn","updateUrl","predicats","pData","aggregateData","isServerGrouping","groupQuery","ODataAdaptor","props","accept","multipartAccept","batch","changeSet","batchPre","contentId","batchContent","changeSetContent","batchChangeSetContentType","updateType","onPredicate","requiresCast","getField","encodeURIComponent","onComplexPredicate","onEachWhere","onEachSearch","onEachSort","reverse","onCount","settings","setRequestHeader","overrideMimeType","metaCheck","rootUrl","dataUrls","resourceTableName","dataCopy","results","metaData","emptyAndBatch","processBatchResponse","versionCheck","version","oDataCount","requiresFormat","keys_4","localTimeReplacer","convertObj","localTime","compareAndRemove","initialGuid","cid","cSet","generateInsertRequest","generateUpdateRequest","generateDeleteRequest","stat","dateTime","generateBodyContent","org","change","o","method","cIdx","jsonObj","substring","exVal","changeGuid","final","valueOf","ODataV4Adaptor","isDate","onExpand","selected","expanded","exArr","item","sel","exp","close_1","combineVal","expandQueryIndex","idx","ex","onDistinct","distinctFields","metaName","dataUrl","dataCount","WebApiAdaptor","location","host","state","datTime","Count","Items","WebMethodAdaptor","getData","RemoteSaveAdaptor","updateKey","urlParams","CustomDataAdaptor","Function","addRecord","updateRecord","deleteRecord","batchUpdate","GraphQLAdaptor","opt","schema","response","getVariables","getQuery","datamanager","urlQuery","str","vars","variables","resData","inserted","generateCrudData","bData","crudData","parsed","getMutation","CacheAdaptor","timeStamp","isCrudAction","isInsertAction","cacheAdaptor","guidId","localStorage","setItem","setInterval","getItem","forDel","currentTime","requestTime","removeItem","generateKey","currentFilter","newQuery","cachedItems","crossDomain","offline","headers","timeTillExpiration","cachingPageSize","enableCaching","jsonp","defaultQuery","isDataAvailable","ready","then","setDefaultQuery","makeRequest","deffered","Deferred","isCustomDataAdaptor","getDeferedArgs","resolve","nextTick","promise","setImmediate","setTimeout","extendRequest","fnSuccess","fnFail","cache","onSuccess","onFailure","isSelector","reject","process","virtualSelectRecords","fnQueryChild","selector","subDeffer","childArgs","parent","subUrl","childReq","subData","isGraphQLAdaptor","ajaxReqOption","httpRequest","virtualRecords","ajax_1","send","catch","Promise","all","pResult","cResult","saveChanges","doAjaxRequest","deff_1","ajax_2","successFunc","failureFunc","ajaxDeffered","ajaxFunc","ajax_3","bind"],"sources":["C:/Users/High Tech Assistance/Desktop/e-learningProject__frontend - Copie/e-learningProject__frontend - Copie/frontend/node_modules/@syncfusion/ej2-filemanager/node_modules/@syncfusion/ej2-data/dist/es6/ej2-data.es5.js"],"sourcesContent":["import { Ajax, extend, getValue, isNullOrUndefined, merge, setValue } from '@syncfusion/ej2-base';\n\n/**\n * Query class is used to build query which is used by the DataManager to communicate with datasource.\n */\nvar Query = /** @__PURE__ @class */ (function () {\n    /**\n     * Constructor for Query class.\n     * @param  {string|string[]} from?\n     * @hidden\n     */\n    function Query(from) {\n        /** @hidden */\n        this.subQuery = null;\n        /** @hidden */\n        this.isChild = false;\n        /** @hidden */\n        this.distincts = [];\n        this.queries = [];\n        this.key = '';\n        this.fKey = '';\n        if (typeof from === 'string') {\n            this.fromTable = from;\n        }\n        else if (from && from instanceof Array) {\n            this.lookups = from;\n        }\n        this.expands = [];\n        this.sortedColumns = [];\n        this.groupedColumns = [];\n        this.subQuery = null;\n        this.isChild = false;\n        this.params = [];\n        this.lazyLoad = [];\n        return this;\n    }\n    /**\n     * Sets the primary key.\n     * @param  {string} field - Defines the column field.\n     */\n    Query.prototype.setKey = function (field) {\n        this.key = field;\n        return this;\n    };\n    /**\n     * Sets default DataManager to execute query.\n     * @param  {DataManager} dataManager - Defines the DataManager.\n     */\n    Query.prototype.using = function (dataManager) {\n        this.dataManager = dataManager;\n        return this;\n    };\n    /**\n     * Executes query with the given DataManager.\n     * @param  {DataManager} dataManager - Defines the DataManager.\n     * @param  {Function} done - Defines the success callback.\n     * @param  {Function} fail - Defines the failure callback.\n     * @param  {Function} always - Defines the callback which will be invoked on either success or failure.\n     *\n     * <pre>\n     * let dataManager: DataManager = new DataManager([{ ID: '10' }, { ID: '2' }, { ID: '1' }, { ID: '20' }]);\n     * let query: Query = new Query();\n     * query.sortBy('ID', (x: string, y: string): number => { return parseInt(x, 10) - parseInt(y, 10) });\n     * let promise: Promise< Object > = query.execute(dataManager);\n     * promise.then((e: { result: Object }) => { });\n     * </pre>\n     */\n    Query.prototype.execute = function (dataManager, done, fail, always) {\n        dataManager = dataManager || this.dataManager;\n        if (dataManager) {\n            return dataManager.executeQuery(this, done, fail, always);\n        }\n        return DataUtil.throwError('Query - execute() : dataManager needs to be is set using \"using\" function or should be passed as argument');\n    };\n    /**\n     * Executes query with the local datasource.\n     * @param  {DataManager} dataManager - Defines the DataManager.\n     */\n    Query.prototype.executeLocal = function (dataManager) {\n        dataManager = dataManager || this.dataManager;\n        if (dataManager) {\n            return dataManager.executeLocal(this);\n        }\n        return DataUtil.throwError('Query - executeLocal() : dataManager needs to be is set using \"using\" function or should be passed as argument');\n    };\n    /**\n     * Creates deep copy of the Query object.\n     */\n    Query.prototype.clone = function () {\n        var cloned = new Query();\n        cloned.queries = this.queries.slice(0);\n        cloned.key = this.key;\n        cloned.isChild = this.isChild;\n        cloned.dataManager = this.dataManager;\n        cloned.fromTable = this.fromTable;\n        cloned.params = this.params.slice(0);\n        cloned.expands = this.expands.slice(0);\n        cloned.sortedColumns = this.sortedColumns.slice(0);\n        cloned.groupedColumns = this.groupedColumns.slice(0);\n        cloned.subQuerySelector = this.subQuerySelector;\n        cloned.subQuery = this.subQuery;\n        cloned.fKey = this.fKey;\n        cloned.isCountRequired = this.isCountRequired;\n        cloned.distincts = this.distincts.slice(0);\n        cloned.lazyLoad = this.lazyLoad.slice(0);\n        return cloned;\n    };\n    /**\n     * Specifies the name of table to retrieve data in query execution.\n     * @param  {string} tableName - Defines the table name.\n     */\n    Query.prototype.from = function (tableName) {\n        this.fromTable = tableName;\n        return this;\n    };\n    /**\n     * Adds additional parameter which will be sent along with the request which will be generated while DataManager execute.\n     * @param  {string} key - Defines the key of additional parameter.\n     * @param  {Function|string} value - Defines the value for the key.\n     */\n    Query.prototype.addParams = function (key, value) {\n        if (typeof value === 'function') {\n            this.params.push({ key: key, fn: value });\n        }\n        else {\n            this.params.push({ key: key, value: value });\n        }\n        return this;\n    };\n    /**\n     * @hidden\n     */\n    Query.prototype.distinct = function (fields) {\n        if (typeof fields === 'string') {\n            this.distincts = [].slice.call([fields], 0);\n        }\n        else {\n            this.distincts = fields.slice(0);\n        }\n        return this;\n    };\n    /**\n     * Expands the related table.\n     * @param  {string|Object[]} tables\n     */\n    Query.prototype.expand = function (tables) {\n        if (typeof tables === 'string') {\n            this.expands = [].slice.call([tables], 0);\n        }\n        else {\n            this.expands = tables.slice(0);\n        }\n        return this;\n    };\n    /**\n     * Filter data with given filter criteria.\n     * @param  {string|Predicate} fieldName - Defines the column field or Predicate.\n     * @param  {string} operator - Defines the operator how to filter data.\n     * @param  {string|number|boolean} value - Defines the values to match with data.\n     * @param  {boolean} ignoreCase - If ignore case set to false, then filter data with exact match or else\n     * filter data with case insensitive.\n     */\n    Query.prototype.where = function (fieldName, operator, value, ignoreCase, ignoreAccent) {\n        operator = operator ? (operator).toLowerCase() : null;\n        var predicate = null;\n        if (typeof fieldName === 'string') {\n            predicate = new Predicate(fieldName, operator, value, ignoreCase, ignoreAccent);\n        }\n        else if (fieldName instanceof Predicate) {\n            predicate = fieldName;\n        }\n        this.queries.push({\n            fn: 'onWhere',\n            e: predicate\n        });\n        return this;\n    };\n    /**\n     * Search data with given search criteria.\n     * @param  {string|number|boolean} searchKey - Defines the search key.\n     * @param  {string|string[]} fieldNames - Defines the collection of column fields.\n     * @param  {string} operator - Defines the operator how to search data.\n     * @param  {boolean} ignoreCase - If ignore case set to false, then filter data with exact match or else\n     * filter data with case insensitive.\n     */\n    Query.prototype.search = function (searchKey, fieldNames, operator, ignoreCase, ignoreAccent) {\n        if (typeof fieldNames === 'string') {\n            fieldNames = [fieldNames];\n        }\n        if (!operator || operator === 'none') {\n            operator = 'contains';\n        }\n        var comparer = DataUtil.fnOperators[operator];\n        this.queries.push({\n            fn: 'onSearch',\n            e: {\n                fieldNames: fieldNames,\n                operator: operator,\n                searchKey: searchKey,\n                ignoreCase: ignoreCase,\n                ignoreAccent: ignoreAccent,\n                comparer: comparer\n            }\n        });\n        return this;\n    };\n    /**\n     * Sort the data with given sort criteria.\n     * By default, sort direction is ascending.\n     * @param  {string|string[]} fieldName - Defines the single or collection of column fields.\n     * @param  {string|Function} comparer - Defines the sort direction or custom sort comparer function.\n     */\n    Query.prototype.sortBy = function (fieldName, comparer, isFromGroup) {\n        return this.sortByForeignKey(fieldName, comparer, isFromGroup);\n    };\n    /**\n     * Sort the data with given sort criteria.\n     * By default, sort direction is ascending.\n     * @param  {string|string[]} fieldName - Defines the single or collection of column fields.\n     * @param  {string|Function} comparer - Defines the sort direction or custom sort comparer function.\n     * @param  {string} direction - Defines the sort direction .\n     */\n    Query.prototype.sortByForeignKey = function (fieldName, comparer, isFromGroup, direction) {\n        var order = !isNullOrUndefined(direction) ? direction : 'ascending';\n        var sorts;\n        var temp;\n        if (typeof fieldName === 'string' && DataUtil.endsWith(fieldName.toLowerCase(), ' desc')) {\n            fieldName = fieldName.replace(/ desc$/i, '');\n            comparer = 'descending';\n        }\n        if (!comparer || typeof comparer === 'string') {\n            order = comparer ? comparer.toLowerCase() : 'ascending';\n            comparer = DataUtil.fnSort(comparer);\n        }\n        if (isFromGroup) {\n            sorts = Query.filterQueries(this.queries, 'onSortBy');\n            for (var i = 0; i < sorts.length; i++) {\n                temp = sorts[i].e.fieldName;\n                if (typeof temp === 'string') {\n                    if (temp === fieldName) {\n                        return this;\n                    }\n                }\n                else if (temp instanceof Array) {\n                    for (var j = 0; j < temp.length; j++) {\n                        if (temp[j] === fieldName || fieldName.toLowerCase() === temp[j] + ' desc') {\n                            return this;\n                        }\n                    }\n                }\n            }\n        }\n        this.queries.push({\n            fn: 'onSortBy',\n            e: {\n                fieldName: fieldName,\n                comparer: comparer,\n                direction: order\n            }\n        });\n        return this;\n    };\n    /**\n     * Sorts data in descending order.\n     * @param  {string} fieldName - Defines the column field.\n     */\n    Query.prototype.sortByDesc = function (fieldName) {\n        return this.sortBy(fieldName, 'descending');\n    };\n    /**\n     * Groups data with the given field name.\n     * @param  {string} fieldName - Defines the column field.\n     */\n    Query.prototype.group = function (fieldName, fn, format) {\n        this.sortBy(fieldName, null, true);\n        this.queries.push({\n            fn: 'onGroup',\n            e: {\n                fieldName: fieldName,\n                comparer: fn ? fn : null,\n                format: format ? format : null\n            }\n        });\n        return this;\n    };\n    /**\n     * Gets data based on the given page index and size.\n     * @param  {number} pageIndex - Defines the current page index.\n     * @param  {number} pageSize - Defines the no of records per page.\n     */\n    Query.prototype.page = function (pageIndex, pageSize) {\n        this.queries.push({\n            fn: 'onPage',\n            e: {\n                pageIndex: pageIndex,\n                pageSize: pageSize\n            }\n        });\n        return this;\n    };\n    /**\n     * Gets data based on the given start and end index.\n     * @param  {number} start - Defines the start index of the datasource.\n     * @param  {number} end - Defines the end index of the datasource.\n     */\n    Query.prototype.range = function (start, end) {\n        this.queries.push({\n            fn: 'onRange',\n            e: {\n                start: start,\n                end: end\n            }\n        });\n        return this;\n    };\n    /**\n     * Gets data from the top of the data source based on given number of records count.\n     * @param  {number} nos - Defines the no of records to retrieve from datasource.\n     */\n    Query.prototype.take = function (nos) {\n        this.queries.push({\n            fn: 'onTake',\n            e: {\n                nos: nos\n            }\n        });\n        return this;\n    };\n    /**\n     * Skips data with given number of records count from the top of the data source.\n     * @param  {number} nos - Defines the no of records skip in the datasource.\n     */\n    Query.prototype.skip = function (nos) {\n        this.queries.push({\n            fn: 'onSkip',\n            e: { nos: nos }\n        });\n        return this;\n    };\n    /**\n     * Selects specified columns from the data source.\n     * @param  {string|string[]} fieldNames - Defines the collection of column fields.\n     */\n    Query.prototype.select = function (fieldNames) {\n        if (typeof fieldNames === 'string') {\n            fieldNames = [].slice.call([fieldNames], 0);\n        }\n        this.queries.push({\n            fn: 'onSelect',\n            e: { fieldNames: fieldNames }\n        });\n        return this;\n    };\n    /**\n     * Gets the records in hierarchical relationship from two tables. It requires the foreign key to relate two tables.\n     * @param  {Query} query - Defines the query to relate two tables.\n     * @param  {Function} selectorFn - Defines the custom function to select records.\n     */\n    Query.prototype.hierarchy = function (query, selectorFn) {\n        this.subQuerySelector = selectorFn;\n        this.subQuery = query;\n        return this;\n    };\n    /**\n     * Sets the foreign key which is used to get data from the related table.\n     * @param  {string} key - Defines the foreign key.\n     */\n    Query.prototype.foreignKey = function (key) {\n        this.fKey = key;\n        return this;\n    };\n    /**\n     * It is used to get total number of records in the DataManager execution result.\n     */\n    Query.prototype.requiresCount = function () {\n        this.isCountRequired = true;\n        return this;\n    };\n    //type - sum, avg, min, max\n    /**\n     * Aggregate the data with given type and field name.\n     * @param  {string} type - Defines the aggregate type.\n     * @param  {string} field - Defines the column field to aggregate.\n     */\n    Query.prototype.aggregate = function (type, field) {\n        this.queries.push({\n            fn: 'onAggregates',\n            e: { field: field, type: type }\n        });\n        return this;\n    };\n    /**\n     * Pass array of filterColumn query for performing filter operation.\n     * @param  {QueryOptions[]} queries\n     * @param  {string} name\n     * @hidden\n     */\n    Query.filterQueries = function (queries, name) {\n        return queries.filter(function (q) {\n            return q.fn === name;\n        });\n    };\n    /**\n     * To get the list of queries which is already filtered in current data source.\n     * @param  {Object[]} queries\n     * @param  {string[]} singles\n     * @hidden\n     */\n    Query.filterQueryLists = function (queries, singles) {\n        var filtered = queries.filter(function (q) {\n            return singles.indexOf(q.fn) !== -1;\n        });\n        var res = {};\n        for (var i = 0; i < filtered.length; i++) {\n            if (!res[filtered[i].fn]) {\n                res[filtered[i].fn] = filtered[i].e;\n            }\n        }\n        return res;\n    };\n    return Query;\n}());\n/**\n * Predicate class is used to generate complex filter criteria.\n * This will be used by DataManager to perform multiple filtering operation.\n */\nvar Predicate = /** @__PURE__ @class */ (function () {\n    /**\n     * Constructor for Predicate class.\n     * @param  {string|Predicate} field\n     * @param  {string} operator\n     * @param  {string|number|boolean|Predicate|Predicate[]} value\n     * @param  {boolean=false} ignoreCase\n     * @hidden\n     */\n    function Predicate(field, operator, value, ignoreCase, ignoreAccent) {\n        if (ignoreCase === void 0) { ignoreCase = false; }\n        /** @hidden */\n        this.ignoreAccent = false;\n        /** @hidden */\n        this.isComplex = false;\n        if (typeof field === 'string') {\n            this.field = field;\n            this.operator = operator.toLowerCase();\n            this.value = value;\n            this.ignoreCase = ignoreCase;\n            this.ignoreAccent = ignoreAccent;\n            this.isComplex = false;\n            this.comparer = DataUtil.fnOperators.processOperator(this.operator);\n        }\n        else if (field instanceof Predicate && value instanceof Predicate || value instanceof Array) {\n            this.isComplex = true;\n            this.condition = operator.toLowerCase();\n            this.predicates = [field];\n            if (value instanceof Array) {\n                [].push.apply(this.predicates, value);\n            }\n            else {\n                this.predicates.push(value);\n            }\n        }\n        return this;\n    }\n    /**\n     * Adds n-number of new predicates on existing predicate with “and” condition.\n     * @param  {Object[]} args - Defines the collection of predicates.\n     */\n    Predicate.and = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return Predicate.combinePredicates([].slice.call(args, 0), 'and');\n    };\n    /**\n     * Adds new predicate on existing predicate with “and” condition.\n     * @param  {string} field - Defines the column field.\n     * @param  {string} operator - Defines the operator how to filter data.\n     * @param  {string} value - Defines the values to match with data.\n     * @param  {boolean} ignoreCase? - If ignore case set to false, then filter data with exact match or else\n     * filter data with case insensitive.\n     */\n    Predicate.prototype.and = function (field, operator, value, ignoreCase, ignoreAccent) {\n        return Predicate.combine(this, field, operator, value, 'and', ignoreCase, ignoreAccent);\n    };\n    /**\n     * Adds n-number of new predicates on existing predicate with “or” condition.\n     * @param  {Object[]} args - Defines the collection of predicates.\n     */\n    Predicate.or = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return Predicate.combinePredicates([].slice.call(args, 0), 'or');\n    };\n    /**\n     * Adds new predicate on existing predicate with “or” condition.\n     * @param  {string} field - Defines the column field.\n     * @param  {string} operator - Defines the operator how to filter data.\n     * @param  {string} value - Defines the values to match with data.\n     * @param  {boolean} ignoreCase? - If ignore case set to false, then filter data with exact match or else\n     * filter data with case insensitive.\n     */\n    Predicate.prototype.or = function (field, operator, value, ignoreCase, ignoreAccent) {\n        return Predicate.combine(this, field, operator, value, 'or', ignoreCase, ignoreAccent);\n    };\n    /**\n     * Converts plain JavaScript object to Predicate object.\n     * @param  {Predicate[]|Predicate} json - Defines single or collection of Predicate.\n     */\n    Predicate.fromJson = function (json) {\n        if (json instanceof Array) {\n            var res = [];\n            for (var i = 0, len = json.length; i < len; i++) {\n                res.push(this.fromJSONData(json[i]));\n            }\n            return res;\n        }\n        var pred = json;\n        return this.fromJSONData(pred);\n    };\n    /**\n     * Validate the record based on the predicates.\n     * @param  {Object} record - Defines the datasource record.\n     */\n    Predicate.prototype.validate = function (record) {\n        var predicate = this.predicates ? this.predicates : [];\n        var isAnd;\n        var ret;\n        if (!this.isComplex && this.comparer) {\n            return this.comparer.call(this, DataUtil.getObject(this.field, record), this.value, this.ignoreCase, this.ignoreAccent);\n        }\n        isAnd = this.condition === 'and';\n        for (var i = 0; i < predicate.length; i++) {\n            ret = predicate[i].validate(record);\n            if (isAnd) {\n                if (!ret) {\n                    return false;\n                }\n            }\n            else {\n                if (ret) {\n                    return true;\n                }\n            }\n        }\n        return isAnd;\n    };\n    /**\n     * Converts predicates to plain JavaScript.\n     * This method is uses Json stringify when serializing Predicate object.\n     */\n    Predicate.prototype.toJson = function () {\n        var predicates;\n        var p;\n        if (this.isComplex) {\n            predicates = [];\n            p = this.predicates;\n            for (var i = 0; i < p.length; i++) {\n                predicates.push(p[i].toJson());\n            }\n        }\n        return {\n            isComplex: this.isComplex,\n            field: this.field,\n            operator: this.operator,\n            value: this.value,\n            ignoreCase: this.ignoreCase,\n            ignoreAccent: this.ignoreAccent,\n            condition: this.condition,\n            predicates: predicates\n        };\n    };\n    Predicate.combinePredicates = function (predicates, operator) {\n        if (predicates.length === 1) {\n            if (!(predicates[0] instanceof Array)) {\n                return predicates[0];\n            }\n            predicates = predicates[0];\n        }\n        return new Predicate(predicates[0], operator, predicates.slice(1));\n    };\n    Predicate.combine = function (pred, field, operator, value, condition, ignoreCase, ignoreAccent) {\n        if (field instanceof Predicate) {\n            return Predicate[condition](pred, field);\n        }\n        if (typeof field === 'string') {\n            return Predicate[condition](pred, new Predicate(field, operator, value, ignoreCase, ignoreAccent));\n        }\n        return DataUtil.throwError('Predicate - ' + condition + ' : invalid arguments');\n    };\n    Predicate.fromJSONData = function (json) {\n        var preds = json.predicates || [];\n        var len = preds.length;\n        var predicates = [];\n        var result;\n        for (var i = 0; i < len; i++) {\n            predicates.push(this.fromJSONData(preds[i]));\n        }\n        if (!json.isComplex) {\n            result = new Predicate(json.field, json.operator, json.value, json.ignoreCase, json.ignoreAccent);\n        }\n        else {\n            result = new Predicate(predicates[0], json.condition, predicates.slice(1));\n        }\n        return result;\n    };\n    return Predicate;\n}());\n\nvar consts = { GroupGuid: '{271bbba0-1ee7}' };\n/**\n * Data manager common utility methods.\n * @hidden\n */\nvar DataUtil = /** @__PURE__ @class */ (function () {\n    function DataUtil() {\n    }\n    /**\n     * Returns the value by invoking the provided parameter function.\n     * If the paramater is not of type function then it will be returned as it is.\n     * @param  {Function|string|string[]|number} value\n     * @param  {Object} inst?\n     * @hidden\n     */\n    DataUtil.getValue = function (value, inst) {\n        if (typeof value === 'function') {\n            return value.call(inst || {});\n        }\n        return value;\n    };\n    /**\n     * Returns true if the input string ends with given string.\n     * @param  {string} input\n     * @param  {string} substr\n     */\n    DataUtil.endsWith = function (input, substr) {\n        return input.slice && input.slice(-substr.length) === substr;\n    };\n    /**\n     * Returns true if the input string starts with given string.\n     * @param  {string} str\n     * @param  {string} startstr\n     */\n    DataUtil.startsWith = function (input, start) {\n        return input.slice(0, start.length) === start;\n    };\n    /**\n     * To return the sorting function based on the string.\n     * @param  {string} order\n     * @hidden\n     */\n    DataUtil.fnSort = function (order) {\n        order = order ? DataUtil.toLowerCase(order) : 'ascending';\n        if (order === 'ascending') {\n            return this.fnAscending;\n        }\n        return this.fnDescending;\n    };\n    /**\n     * Comparer function which is used to sort the data in ascending order.\n     * @param  {string|number} x\n     * @param  {string|number} y\n     * @returns number\n     */\n    DataUtil.fnAscending = function (x, y) {\n        if (isNullOrUndefined(x) && isNullOrUndefined(y)) {\n            return -1;\n        }\n        if (y === null || y === undefined) {\n            return -1;\n        }\n        if (typeof x === 'string') {\n            return x.localeCompare(y);\n        }\n        if (x === null || x === undefined) {\n            return 1;\n        }\n        return x - y;\n    };\n    /**\n     * Comparer function which is used to sort the data in descending order.\n     * @param  {string|number} x\n     * @param  {string|number} y\n     * @returns number\n     */\n    DataUtil.fnDescending = function (x, y) {\n        if (isNullOrUndefined(x) && isNullOrUndefined(y)) {\n            return -1;\n        }\n        if (y === null || y === undefined) {\n            return 1;\n        }\n        if (typeof x === 'string') {\n            return x.localeCompare(y) * -1;\n        }\n        if (x === null || x === undefined) {\n            return -1;\n        }\n        return y - x;\n    };\n    DataUtil.extractFields = function (obj, fields) {\n        var newObj = {};\n        for (var i = 0; i < fields.length; i++) {\n            newObj = this.setValue(fields[i], this.getObject(fields[i], obj), newObj);\n        }\n        return newObj;\n    };\n    /**\n     * Select objects by given fields from jsonArray.\n     * @param  {Object[]} jsonArray\n     * @param  {string[]} fields\n     */\n    DataUtil.select = function (jsonArray, fields) {\n        var newData = [];\n        for (var i = 0; i < jsonArray.length; i++) {\n            newData.push(this.extractFields(jsonArray[i], fields));\n        }\n        return newData;\n    };\n    /**\n     * Group the input data based on the field name.\n     * It also performs aggregation of the grouped records based on the aggregates paramater.\n     * @param  {Object[]} jsonArray\n     * @param  {string} field?\n     * @param  {Object[]} agg?\n     * @param  {number} level?\n     * @param  {Object[]} groupDs?\n     */\n    DataUtil.group = function (jsonArray, field, aggregates, level, groupDs, format, isLazyLoad) {\n        level = level || 1;\n        var jsonData = jsonArray;\n        var guid = 'GroupGuid';\n        if (jsonData.GroupGuid === consts[guid]) {\n            var _loop_1 = function (j) {\n                if (!isNullOrUndefined(groupDs)) {\n                    var indx = -1;\n                    var temp = groupDs.filter(function (e) { return e.key === jsonData[j].key; });\n                    indx = groupDs.indexOf(temp[0]);\n                    jsonData[j].items = this_1.group(jsonData[j].items, field, aggregates, jsonData.level + 1, groupDs[indx].items, format, isLazyLoad);\n                    jsonData[j].count = groupDs[indx].count;\n                }\n                else {\n                    jsonData[j].items = this_1.group(jsonData[j].items, field, aggregates, jsonData.level + 1, null, format, isLazyLoad);\n                    jsonData[j].count = jsonData[j].items.length;\n                }\n            };\n            var this_1 = this;\n            for (var j = 0; j < jsonData.length; j++) {\n                _loop_1(j);\n            }\n            jsonData.childLevels += 1;\n            return jsonData;\n        }\n        var grouped = {};\n        var groupedArray = [];\n        groupedArray.GroupGuid = consts[guid];\n        groupedArray.level = level;\n        groupedArray.childLevels = 0;\n        groupedArray.records = jsonData;\n        var _loop_2 = function (i) {\n            var val = this_2.getVal(jsonData, i, field);\n            if (!isNullOrUndefined(format)) {\n                val = format(val, field);\n            }\n            if (!grouped[val]) {\n                grouped[val] = {\n                    key: val,\n                    count: 0,\n                    items: [],\n                    aggregates: {},\n                    field: field\n                };\n                groupedArray.push(grouped[val]);\n                if (!isNullOrUndefined(groupDs)) {\n                    var tempObj = groupDs.filter(function (e) { return e.key === grouped[val].key; });\n                    grouped[val].count = tempObj[0].count;\n                }\n            }\n            grouped[val].count = !isNullOrUndefined(groupDs) ? grouped[val].count : grouped[val].count += 1;\n            if (!isLazyLoad || (isLazyLoad && aggregates.length)) {\n                grouped[val].items.push(jsonData[i]);\n            }\n        };\n        var this_2 = this;\n        for (var i = 0; i < jsonData.length; i++) {\n            _loop_2(i);\n        }\n        if (aggregates && aggregates.length) {\n            var _loop_3 = function (i) {\n                var res = {};\n                var fn = void 0;\n                var aggs = aggregates;\n                for (var j = 0; j < aggregates.length; j++) {\n                    fn = DataUtil.aggregates[aggregates[j].type];\n                    if (!isNullOrUndefined(groupDs)) {\n                        var temp = groupDs.filter(function (e) { return e.key === groupedArray[i].key; });\n                        if (fn) {\n                            res[aggs[j].field + ' - ' + aggs[j].type] = fn(temp[0].items, aggs[j].field);\n                        }\n                    }\n                    else {\n                        if (fn) {\n                            res[aggs[j].field + ' - ' + aggs[j].type] = fn(groupedArray[i].items, aggs[j].field);\n                        }\n                    }\n                }\n                groupedArray[i].aggregates = res;\n            };\n            for (var i = 0; i < groupedArray.length; i++) {\n                _loop_3(i);\n            }\n        }\n        if (isLazyLoad && groupedArray.length && aggregates.length) {\n            for (var i = 0; i < groupedArray.length; i++) {\n                groupedArray[i].items = [];\n            }\n        }\n        return jsonData.length && groupedArray || jsonData;\n    };\n    /**\n     * It is used to categorize the multiple items based on a specific field in jsonArray.\n     * The hierarchical queries are commonly required when you use foreign key binding.\n     * @param  {string} fKey\n     * @param  {string} from\n     * @param  {Object[]} source\n     * @param  {Group} lookup?\n     * @param  {string} pKey?\n     * @hidden\n     */\n    DataUtil.buildHierarchy = function (fKey, from, source, lookup, pKey) {\n        var i;\n        var grp = {};\n        var temp;\n        if (lookup.result) {\n            lookup = lookup.result;\n        }\n        if (lookup.GroupGuid) {\n            this.throwError('DataManager: Do not have support Grouping in hierarchy');\n        }\n        for (i = 0; i < lookup.length; i++) {\n            var fKeyData = this.getObject(fKey, lookup[i]);\n            temp = grp[fKeyData] || (grp[fKeyData] = []);\n            temp.push(lookup[i]);\n        }\n        for (i = 0; i < source.length; i++) {\n            var fKeyData = this.getObject(pKey || fKey, source[i]);\n            source[i][from] = grp[fKeyData];\n        }\n    };\n    /**\n     * The method used to get the field names which started with specified characters.\n     * @param  {Object} obj\n     * @param  {string[]} fields?\n     * @param  {string} prefix?\n     * @hidden\n     */\n    DataUtil.getFieldList = function (obj, fields, prefix) {\n        if (prefix === undefined) {\n            prefix = '';\n        }\n        if (fields === undefined || fields === null) {\n            return this.getFieldList(obj, [], prefix);\n        }\n        var copyObj = obj;\n        var keys = Object.keys(obj);\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var prop = keys_1[_i];\n            if (typeof copyObj[prop] === 'object' && !(copyObj[prop] instanceof Array)) {\n                this.getFieldList(copyObj[prop], fields, prefix + prop + '.');\n            }\n            else {\n                fields.push(prefix + prop);\n            }\n        }\n        return fields;\n    };\n    /**\n     * Gets the value of the property in the given object.\n     * The complex object can be accessed by providing the field names concatenated with dot(.).\n     * @param  {string} nameSpace - The name of the property to be accessed.\n     * @param  {Object} from - Defines the source object.\n     */\n    DataUtil.getObject = function (nameSpace, from) {\n        if (!nameSpace) {\n            return from;\n        }\n        if (!from) {\n            return undefined;\n        }\n        if (nameSpace.indexOf('.') === -1) {\n            return from[nameSpace];\n        }\n        var value = from;\n        var splits = nameSpace.split('.');\n        for (var i = 0; i < splits.length; i++) {\n            if (value == null) {\n                break;\n            }\n            value = value[splits[i]];\n        }\n        return value;\n    };\n    /**\n     * To set value for the nameSpace in desired object.\n     * @param {string} nameSpace - String value to the get the inner object.\n     * @param {Object} value - Value that you need to set.\n     * @param {Object} obj - Object to get the inner object value.\n     * @return { [key: string]: Object; } | Object\n     * @hidden\n     */\n    DataUtil.setValue = function (nameSpace, value, obj) {\n        var keys = nameSpace.toString().split('.');\n        var start = obj || {};\n        var fromObj = start;\n        var i;\n        var length = keys.length;\n        var key;\n        for (i = 0; i < length; i++) {\n            key = keys[i];\n            if (i + 1 === length) {\n                fromObj[key] = value === undefined ? undefined : value;\n            }\n            else if (isNullOrUndefined(fromObj[key])) {\n                fromObj[key] = {};\n            }\n            fromObj = fromObj[key];\n        }\n        return start;\n    };\n    /**\n     * Sort the given data based on the field and comparer.\n     * @param  {Object[]} ds - Defines the input data.\n     * @param  {string} field - Defines the field to be sorted.\n     * @param  {Function} comparer - Defines the comparer function used to sort the records.\n     */\n    DataUtil.sort = function (ds, field, comparer) {\n        if (ds.length <= 1) {\n            return ds;\n        }\n        var middle = parseInt((ds.length / 2).toString(), 10);\n        var left = ds.slice(0, middle);\n        var right = ds.slice(middle);\n        left = this.sort(left, field, comparer);\n        right = this.sort(right, field, comparer);\n        return this.merge(left, right, field, comparer);\n    };\n    DataUtil.ignoreDiacritics = function (value) {\n        if (typeof value !== 'string') {\n            return value;\n        }\n        var result = value.split('');\n        var newValue = result.map(function (temp) { return temp in DataUtil.diacritics ? DataUtil.diacritics[temp] : temp; });\n        return newValue.join('');\n    };\n    DataUtil.merge = function (left, right, fieldName, comparer) {\n        var result = [];\n        var current;\n        while (left.length > 0 || right.length > 0) {\n            if (left.length > 0 && right.length > 0) {\n                if (comparer) {\n                    current = comparer(this.getVal(left, 0, fieldName), this.getVal(right, 0, fieldName), left[0], right[0]) <= 0 ? left : right;\n                }\n                else {\n                    current = left[0][fieldName] < left[0][fieldName] ? left : right;\n                }\n            }\n            else {\n                current = left.length > 0 ? left : right;\n            }\n            result.push(current.shift());\n        }\n        return result;\n    };\n    DataUtil.getVal = function (array, index, field) {\n        return field ? this.getObject(field, array[index]) : array[index];\n    };\n    DataUtil.toLowerCase = function (val) {\n        return val ? typeof val === 'string' ? val.toLowerCase() : val.toString() : (val === 0 || val === false) ? val.toString() : '';\n    };\n    /**\n     * To perform the filter operation with specified adaptor and returns the result.\n     * @param  {Object} adaptor\n     * @param  {string} fnName\n     * @param  {Object} param1?\n     * @param  {Object} param2?\n     * @hidden\n     */\n    DataUtil.callAdaptorFunction = function (adaptor, fnName, param1, param2) {\n        if (fnName in adaptor) {\n            var res = adaptor[fnName](param1, param2);\n            if (!isNullOrUndefined(res)) {\n                param1 = res;\n            }\n        }\n        return param1;\n    };\n    DataUtil.getAddParams = function (adp, dm, query) {\n        var req = {};\n        DataUtil.callAdaptorFunction(adp, 'addParams', {\n            dm: dm,\n            query: query,\n            params: query.params,\n            reqParams: req\n        });\n        return req;\n    };\n    /**\n     * Checks wheather the given input is a plain object or not.\n     * @param  {Object|Object[]} obj\n     */\n    DataUtil.isPlainObject = function (obj) {\n        return (!!obj) && (obj.constructor === Object);\n    };\n    /**\n     * Returns true when the browser cross origin request.\n     */\n    DataUtil.isCors = function () {\n        var xhr = null;\n        var request = 'XMLHttpRequest';\n        try {\n            xhr = new window[request]();\n        }\n        catch (e) {\n            // No exception handling\n        }\n        return !!xhr && ('withCredentials' in xhr);\n    };\n    /**\n     * Generate random GUID value which will be prefixed with the given value.\n     * @param  {string} prefix\n     */\n    DataUtil.getGuid = function (prefix) {\n        var hexs = '0123456789abcdef';\n        var rand;\n        return (prefix || '') + '00000000-0000-4000-0000-000000000000'.replace(/0/g, function (val, i) {\n            if ('crypto' in window && 'getRandomValues' in crypto) {\n                var arr = new Uint8Array(1);\n                window.crypto.getRandomValues(arr);\n                rand = arr[0] % 16 | 0;\n            }\n            else {\n                rand = Math.random() * 16 | 0;\n            }\n            return hexs[i === 19 ? rand & 0x3 | 0x8 : rand];\n        });\n    };\n    /**\n     * Checks wheather the given value is null or not.\n     * @param  {string|Object} val\n     * @returns boolean\n     */\n    DataUtil.isNull = function (val) {\n        return val === undefined || val === null;\n    };\n    /**\n     * To get the required items from collection of objects.\n     * @param  {Object[]} array\n     * @param  {string} field\n     * @param  {Function} comparer\n     * @returns Object\n     * @hidden\n     */\n    DataUtil.getItemFromComparer = function (array, field, comparer) {\n        var keyVal;\n        var current;\n        var key;\n        var i = 0;\n        var castRequired = typeof DataUtil.getVal(array, 0, field) === 'string';\n        if (array.length) {\n            while (isNullOrUndefined(keyVal) && i < array.length) {\n                keyVal = DataUtil.getVal(array, i, field);\n                key = array[i++];\n            }\n        }\n        for (; i < array.length; i++) {\n            current = DataUtil.getVal(array, i, field);\n            if (isNullOrUndefined(current)) {\n                continue;\n            }\n            if (castRequired) {\n                keyVal = +keyVal;\n                current = +current;\n            }\n            if (comparer(keyVal, current) > 0) {\n                keyVal = current;\n                key = array[i];\n            }\n        }\n        return key;\n    };\n    /**\n     * To get distinct values of Array or Array of Objects.\n     * @param  {Object[]} json\n     * @param  {string} field\n     * @param  {boolean} requiresCompleteRecord\n     * @returns Object[]\n     * * distinct array of objects is return when requiresCompleteRecord set as true.\n     * @hidden\n     */\n    DataUtil.distinct = function (json, fieldName, requiresCompleteRecord) {\n        requiresCompleteRecord = isNullOrUndefined(requiresCompleteRecord) ? false : requiresCompleteRecord;\n        var result = [];\n        var val;\n        var tmp = {};\n        json.forEach(function (data, index) {\n            val = typeof (json[index]) === 'object' ? DataUtil.getVal(json, index, fieldName) : json[index];\n            if (!(val in tmp)) {\n                result.push(!requiresCompleteRecord ? val : json[index]);\n                tmp[val] = 1;\n            }\n        });\n        return result;\n    };\n    /**\n     * Process the given records based on the datamanager string.\n     * @param  {string} datamanager\n     * @param  {Object[]} records\n     */\n    DataUtil.processData = function (dm, records) {\n        var query = this.prepareQuery(dm);\n        var sampledata = new DataManager(records);\n        if (dm.requiresCounts) {\n            query.requiresCount();\n        }\n        var result = sampledata.executeLocal(query);\n        var returnValue = {\n            result: dm.requiresCounts ? result.result : result,\n            count: result.count,\n            aggregates: JSON.stringify(result.aggregates)\n        };\n        return dm.requiresCounts ? returnValue : result;\n    };\n    DataUtil.prepareQuery = function (dm) {\n        var _this = this;\n        var query = new Query();\n        if (dm.select) {\n            query.select(dm.select);\n        }\n        if (dm.where) {\n            var where = DataUtil.parse.parseJson(dm.where);\n            where.filter(function (pred) {\n                if (isNullOrUndefined(pred.condition)) {\n                    query.where(pred.field, pred.operator, pred.value, pred.ignoreCase, pred.ignoreAccent);\n                }\n                else {\n                    var predicateList = [];\n                    if (pred.field) {\n                        predicateList.push(new Predicate(pred.field, pred.operator, pred.value, pred.ignoreCase, pred.ignoreAccent));\n                    }\n                    else {\n                        predicateList = predicateList.concat(_this.getPredicate(pred.predicates));\n                    }\n                    if (pred.condition == 'or') {\n                        query.where(Predicate.or(predicateList));\n                    }\n                    else if (pred.condition == 'and') {\n                        query.where(Predicate.and(predicateList));\n                    }\n                }\n            });\n        }\n        if (dm.search) {\n            var search = DataUtil.parse.parseJson(dm.search);\n            search.filter(function (e) { return query.search(e.key, e.fields, e['operator'], e['ignoreCase'], e['ignoreAccent']); });\n        }\n        if (dm.aggregates) {\n            dm.aggregates.filter(function (e) { return query.aggregate(e.type, e.field); });\n        }\n        if (dm.sorted) {\n            dm.sorted.filter(function (e) { return query.sortBy(e.name, e.direction); });\n        }\n        if (dm.skip) {\n            query.skip(dm.skip);\n        }\n        if (dm.take) {\n            query.take(dm.take);\n        }\n        if (dm.group) {\n            dm.group.filter(function (grp) { return query.group(grp); });\n        }\n        return query;\n    };\n    DataUtil.getPredicate = function (pred) {\n        var mainPred = [];\n        for (var i = 0; i < pred.length; i++) {\n            var e = pred[i];\n            if (e.field) {\n                mainPred.push(new Predicate(e.field, e.operator, e.value, e.ignoreCase, e.ignoreAccent));\n            }\n            else {\n                var childPred = [];\n                var cpre = this.getPredicate(e.predicates);\n                for (var _i = 0, _a = Object.keys(cpre); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    childPred.push(cpre[prop]);\n                }\n                mainPred.push(e.condition == 'or' ? Predicate.or(childPred) : Predicate.and(childPred));\n            }\n        }\n        return mainPred;\n    };\n    /**\n     * Specifies the value which will be used to adjust the date value to server timezone.\n     * @default null\n     */\n    DataUtil.serverTimezoneOffset = null;\n    /**\n     * Species whether are not to be parsed with serverTimezoneOffset value.\n     * @hidden\n     */\n    DataUtil.timeZoneHandling = true;\n    /**\n     * Throw error with the given string as message.\n     * @param  {string} er\n     */\n    DataUtil.throwError = function (error) {\n        try {\n            throw new Error(error);\n        }\n        catch (e) {\n            throw e.message + '\\n' + e.stack;\n        }\n    };\n    DataUtil.aggregates = {\n        /**\n         * Calculate sum of the given field in the data.\n         * @param  {Object[]} ds\n         * @param  {string} field\n         */\n        sum: function (ds, field) {\n            var result = 0;\n            var val;\n            var castRequired = typeof DataUtil.getVal(ds, 0, field) !== 'number';\n            for (var i = 0; i < ds.length; i++) {\n                val = DataUtil.getVal(ds, i, field);\n                if (!isNaN(val) && val !== null) {\n                    if (castRequired) {\n                        val = +val;\n                    }\n                    result += val;\n                }\n            }\n            return result;\n        },\n        /**\n         * Calculate average value of the given field in the data.\n         * @param  {Object[]} ds\n         * @param  {string} field\n         */\n        average: function (ds, field) {\n            return DataUtil.aggregates.sum(ds, field) / ds.length;\n        },\n        /**\n         * Returns the min value of the data based on the field.\n         * @param  {Object[]} ds\n         * @param  {string|Function} field\n         */\n        min: function (ds, field) {\n            var comparer;\n            if (typeof field === 'function') {\n                comparer = field;\n                field = null;\n            }\n            return DataUtil.getObject(field, DataUtil.getItemFromComparer(ds, field, comparer || DataUtil.fnAscending));\n        },\n        /**\n         * Returns the max value of the data based on the field.\n         * @param  {Object[]} ds\n         * @param  {string} field\n         * @returns number\n         */\n        max: function (ds, field) {\n            var comparer;\n            if (typeof field === 'function') {\n                comparer = field;\n                field = null;\n            }\n            return DataUtil.getObject(field, DataUtil.getItemFromComparer(ds, field, comparer || DataUtil.fnDescending));\n        },\n        /**\n         * Returns the total number of true value present in the data based on the given boolean field name.\n         * @param  {Object[]} ds\n         * @param  {string} field\n         */\n        truecount: function (ds, field) {\n            return new DataManager(ds).executeLocal(new Query().where(field, 'equal', true, true)).length;\n        },\n        /**\n         * Returns the total number of false value present in the data based on the given boolean field name.\n         * @param  {Object[]} ds\n         * @param  {string} field\n         */\n        falsecount: function (ds, field) {\n            return new DataManager(ds).executeLocal(new Query().where(field, 'equal', false, true)).length;\n        },\n        /**\n         * Returns the length of the given data.\n         * @param  {Object[]} ds\n         * @param  {string} field?\n         * @returns number\n         */\n        count: function (ds, field) {\n            return ds.length;\n        }\n    };\n    /**\n     * Specifies the Object with filter operators.\n     */\n    DataUtil.operatorSymbols = {\n        '<': 'lessthan',\n        '>': 'greaterthan',\n        '<=': 'lessthanorequal',\n        '>=': 'greaterthanorequal',\n        '==': 'equal',\n        '!=': 'notequal',\n        '*=': 'contains',\n        '$=': 'endswith',\n        '^=': 'startswith'\n    };\n    /**\n     * Specifies the Object with filter operators which will be used for OData filter query generation.\n     * * It will be used for date/number type filter query.\n     */\n    DataUtil.odBiOperator = {\n        '<': ' lt ',\n        '>': ' gt ',\n        '<=': ' le ',\n        '>=': ' ge ',\n        '==': ' eq ',\n        '!=': ' ne ',\n        'lessthan': ' lt ',\n        'lessthanorequal': ' le ',\n        'greaterthan': ' gt ',\n        'greaterthanorequal': ' ge ',\n        'equal': ' eq ',\n        'notequal': ' ne '\n    };\n    /**\n     * Specifies the Object with filter operators which will be used for OData filter query generation.\n     * It will be used for string type filter query.\n     */\n    DataUtil.odUniOperator = {\n        '$=': 'endswith',\n        '^=': 'startswith',\n        '*=': 'substringof',\n        'endswith': 'endswith',\n        'startswith': 'startswith',\n        'contains': 'substringof'\n    };\n    /**\n     * Specifies the Object with filter operators which will be used for ODataV4 filter query generation.\n     * It will be used for string type filter query.\n     */\n    DataUtil.odv4UniOperator = {\n        '$=': 'endswith',\n        '^=': 'startswith',\n        '*=': 'contains',\n        'endswith': 'endswith',\n        'startswith': 'startswith',\n        'contains': 'contains'\n    };\n    DataUtil.diacritics = {\n        '\\u24B6': 'A',\n        '\\uFF21': 'A',\n        '\\u00C0': 'A',\n        '\\u00C1': 'A',\n        '\\u00C2': 'A',\n        '\\u1EA6': 'A',\n        '\\u1EA4': 'A',\n        '\\u1EAA': 'A',\n        '\\u1EA8': 'A',\n        '\\u00C3': 'A',\n        '\\u0100': 'A',\n        '\\u0102': 'A',\n        '\\u1EB0': 'A',\n        '\\u1EAE': 'A',\n        '\\u1EB4': 'A',\n        '\\u1EB2': 'A',\n        '\\u0226': 'A',\n        '\\u01E0': 'A',\n        '\\u00C4': 'A',\n        '\\u01DE': 'A',\n        '\\u1EA2': 'A',\n        '\\u00C5': 'A',\n        '\\u01FA': 'A',\n        '\\u01CD': 'A',\n        '\\u0200': 'A',\n        '\\u0202': 'A',\n        '\\u1EA0': 'A',\n        '\\u1EAC': 'A',\n        '\\u1EB6': 'A',\n        '\\u1E00': 'A',\n        '\\u0104': 'A',\n        '\\u023A': 'A',\n        '\\u2C6F': 'A',\n        '\\uA732': 'AA',\n        '\\u00C6': 'AE',\n        '\\u01FC': 'AE',\n        '\\u01E2': 'AE',\n        '\\uA734': 'AO',\n        '\\uA736': 'AU',\n        '\\uA738': 'AV',\n        '\\uA73A': 'AV',\n        '\\uA73C': 'AY',\n        '\\u24B7': 'B',\n        '\\uFF22': 'B',\n        '\\u1E02': 'B',\n        '\\u1E04': 'B',\n        '\\u1E06': 'B',\n        '\\u0243': 'B',\n        '\\u0182': 'B',\n        '\\u0181': 'B',\n        '\\u24B8': 'C',\n        '\\uFF23': 'C',\n        '\\u0106': 'C',\n        '\\u0108': 'C',\n        '\\u010A': 'C',\n        '\\u010C': 'C',\n        '\\u00C7': 'C',\n        '\\u1E08': 'C',\n        '\\u0187': 'C',\n        '\\u023B': 'C',\n        '\\uA73E': 'C',\n        '\\u24B9': 'D',\n        '\\uFF24': 'D',\n        '\\u1E0A': 'D',\n        '\\u010E': 'D',\n        '\\u1E0C': 'D',\n        '\\u1E10': 'D',\n        '\\u1E12': 'D',\n        '\\u1E0E': 'D',\n        '\\u0110': 'D',\n        '\\u018B': 'D',\n        '\\u018A': 'D',\n        '\\u0189': 'D',\n        '\\uA779': 'D',\n        '\\u01F1': 'DZ',\n        '\\u01C4': 'DZ',\n        '\\u01F2': 'Dz',\n        '\\u01C5': 'Dz',\n        '\\u24BA': 'E',\n        '\\uFF25': 'E',\n        '\\u00C8': 'E',\n        '\\u00C9': 'E',\n        '\\u00CA': 'E',\n        '\\u1EC0': 'E',\n        '\\u1EBE': 'E',\n        '\\u1EC4': 'E',\n        '\\u1EC2': 'E',\n        '\\u1EBC': 'E',\n        '\\u0112': 'E',\n        '\\u1E14': 'E',\n        '\\u1E16': 'E',\n        '\\u0114': 'E',\n        '\\u0116': 'E',\n        '\\u00CB': 'E',\n        '\\u1EBA': 'E',\n        '\\u011A': 'E',\n        '\\u0204': 'E',\n        '\\u0206': 'E',\n        '\\u1EB8': 'E',\n        '\\u1EC6': 'E',\n        '\\u0228': 'E',\n        '\\u1E1C': 'E',\n        '\\u0118': 'E',\n        '\\u1E18': 'E',\n        '\\u1E1A': 'E',\n        '\\u0190': 'E',\n        '\\u018E': 'E',\n        '\\u24BB': 'F',\n        '\\uFF26': 'F',\n        '\\u1E1E': 'F',\n        '\\u0191': 'F',\n        '\\uA77B': 'F',\n        '\\u24BC': 'G',\n        '\\uFF27': 'G',\n        '\\u01F4': 'G',\n        '\\u011C': 'G',\n        '\\u1E20': 'G',\n        '\\u011E': 'G',\n        '\\u0120': 'G',\n        '\\u01E6': 'G',\n        '\\u0122': 'G',\n        '\\u01E4': 'G',\n        '\\u0193': 'G',\n        '\\uA7A0': 'G',\n        '\\uA77D': 'G',\n        '\\uA77E': 'G',\n        '\\u24BD': 'H',\n        '\\uFF28': 'H',\n        '\\u0124': 'H',\n        '\\u1E22': 'H',\n        '\\u1E26': 'H',\n        '\\u021E': 'H',\n        '\\u1E24': 'H',\n        '\\u1E28': 'H',\n        '\\u1E2A': 'H',\n        '\\u0126': 'H',\n        '\\u2C67': 'H',\n        '\\u2C75': 'H',\n        '\\uA78D': 'H',\n        '\\u24BE': 'I',\n        '\\uFF29': 'I',\n        '\\u00CC': 'I',\n        '\\u00CD': 'I',\n        '\\u00CE': 'I',\n        '\\u0128': 'I',\n        '\\u012A': 'I',\n        '\\u012C': 'I',\n        '\\u0130': 'I',\n        '\\u00CF': 'I',\n        '\\u1E2E': 'I',\n        '\\u1EC8': 'I',\n        '\\u01CF': 'I',\n        '\\u0208': 'I',\n        '\\u020A': 'I',\n        '\\u1ECA': 'I',\n        '\\u012E': 'I',\n        '\\u1E2C': 'I',\n        '\\u0197': 'I',\n        '\\u24BF': 'J',\n        '\\uFF2A': 'J',\n        '\\u0134': 'J',\n        '\\u0248': 'J',\n        '\\u24C0': 'K',\n        '\\uFF2B': 'K',\n        '\\u1E30': 'K',\n        '\\u01E8': 'K',\n        '\\u1E32': 'K',\n        '\\u0136': 'K',\n        '\\u1E34': 'K',\n        '\\u0198': 'K',\n        '\\u2C69': 'K',\n        '\\uA740': 'K',\n        '\\uA742': 'K',\n        '\\uA744': 'K',\n        '\\uA7A2': 'K',\n        '\\u24C1': 'L',\n        '\\uFF2C': 'L',\n        '\\u013F': 'L',\n        '\\u0139': 'L',\n        '\\u013D': 'L',\n        '\\u1E36': 'L',\n        '\\u1E38': 'L',\n        '\\u013B': 'L',\n        '\\u1E3C': 'L',\n        '\\u1E3A': 'L',\n        '\\u0141': 'L',\n        '\\u023D': 'L',\n        '\\u2C62': 'L',\n        '\\u2C60': 'L',\n        '\\uA748': 'L',\n        '\\uA746': 'L',\n        '\\uA780': 'L',\n        '\\u01C7': 'LJ',\n        '\\u01C8': 'Lj',\n        '\\u24C2': 'M',\n        '\\uFF2D': 'M',\n        '\\u1E3E': 'M',\n        '\\u1E40': 'M',\n        '\\u1E42': 'M',\n        '\\u2C6E': 'M',\n        '\\u019C': 'M',\n        '\\u24C3': 'N',\n        '\\uFF2E': 'N',\n        '\\u01F8': 'N',\n        '\\u0143': 'N',\n        '\\u00D1': 'N',\n        '\\u1E44': 'N',\n        '\\u0147': 'N',\n        '\\u1E46': 'N',\n        '\\u0145': 'N',\n        '\\u1E4A': 'N',\n        '\\u1E48': 'N',\n        '\\u0220': 'N',\n        '\\u019D': 'N',\n        '\\uA790': 'N',\n        '\\uA7A4': 'N',\n        '\\u01CA': 'NJ',\n        '\\u01CB': 'Nj',\n        '\\u24C4': 'O',\n        '\\uFF2F': 'O',\n        '\\u00D2': 'O',\n        '\\u00D3': 'O',\n        '\\u00D4': 'O',\n        '\\u1ED2': 'O',\n        '\\u1ED0': 'O',\n        '\\u1ED6': 'O',\n        '\\u1ED4': 'O',\n        '\\u00D5': 'O',\n        '\\u1E4C': 'O',\n        '\\u022C': 'O',\n        '\\u1E4E': 'O',\n        '\\u014C': 'O',\n        '\\u1E50': 'O',\n        '\\u1E52': 'O',\n        '\\u014E': 'O',\n        '\\u022E': 'O',\n        '\\u0230': 'O',\n        '\\u00D6': 'O',\n        '\\u022A': 'O',\n        '\\u1ECE': 'O',\n        '\\u0150': 'O',\n        '\\u01D1': 'O',\n        '\\u020C': 'O',\n        '\\u020E': 'O',\n        '\\u01A0': 'O',\n        '\\u1EDC': 'O',\n        '\\u1EDA': 'O',\n        '\\u1EE0': 'O',\n        '\\u1EDE': 'O',\n        '\\u1EE2': 'O',\n        '\\u1ECC': 'O',\n        '\\u1ED8': 'O',\n        '\\u01EA': 'O',\n        '\\u01EC': 'O',\n        '\\u00D8': 'O',\n        '\\u01FE': 'O',\n        '\\u0186': 'O',\n        '\\u019F': 'O',\n        '\\uA74A': 'O',\n        '\\uA74C': 'O',\n        '\\u01A2': 'OI',\n        '\\uA74E': 'OO',\n        '\\u0222': 'OU',\n        '\\u24C5': 'P',\n        '\\uFF30': 'P',\n        '\\u1E54': 'P',\n        '\\u1E56': 'P',\n        '\\u01A4': 'P',\n        '\\u2C63': 'P',\n        '\\uA750': 'P',\n        '\\uA752': 'P',\n        '\\uA754': 'P',\n        '\\u24C6': 'Q',\n        '\\uFF31': 'Q',\n        '\\uA756': 'Q',\n        '\\uA758': 'Q',\n        '\\u024A': 'Q',\n        '\\u24C7': 'R',\n        '\\uFF32': 'R',\n        '\\u0154': 'R',\n        '\\u1E58': 'R',\n        '\\u0158': 'R',\n        '\\u0210': 'R',\n        '\\u0212': 'R',\n        '\\u1E5A': 'R',\n        '\\u1E5C': 'R',\n        '\\u0156': 'R',\n        '\\u1E5E': 'R',\n        '\\u024C': 'R',\n        '\\u2C64': 'R',\n        '\\uA75A': 'R',\n        '\\uA7A6': 'R',\n        '\\uA782': 'R',\n        '\\u24C8': 'S',\n        '\\uFF33': 'S',\n        '\\u1E9E': 'S',\n        '\\u015A': 'S',\n        '\\u1E64': 'S',\n        '\\u015C': 'S',\n        '\\u1E60': 'S',\n        '\\u0160': 'S',\n        '\\u1E66': 'S',\n        '\\u1E62': 'S',\n        '\\u1E68': 'S',\n        '\\u0218': 'S',\n        '\\u015E': 'S',\n        '\\u2C7E': 'S',\n        '\\uA7A8': 'S',\n        '\\uA784': 'S',\n        '\\u24C9': 'T',\n        '\\uFF34': 'T',\n        '\\u1E6A': 'T',\n        '\\u0164': 'T',\n        '\\u1E6C': 'T',\n        '\\u021A': 'T',\n        '\\u0162': 'T',\n        '\\u1E70': 'T',\n        '\\u1E6E': 'T',\n        '\\u0166': 'T',\n        '\\u01AC': 'T',\n        '\\u01AE': 'T',\n        '\\u023E': 'T',\n        '\\uA786': 'T',\n        '\\uA728': 'TZ',\n        '\\u24CA': 'U',\n        '\\uFF35': 'U',\n        '\\u00D9': 'U',\n        '\\u00DA': 'U',\n        '\\u00DB': 'U',\n        '\\u0168': 'U',\n        '\\u1E78': 'U',\n        '\\u016A': 'U',\n        '\\u1E7A': 'U',\n        '\\u016C': 'U',\n        '\\u00DC': 'U',\n        '\\u01DB': 'U',\n        '\\u01D7': 'U',\n        '\\u01D5': 'U',\n        '\\u01D9': 'U',\n        '\\u1EE6': 'U',\n        '\\u016E': 'U',\n        '\\u0170': 'U',\n        '\\u01D3': 'U',\n        '\\u0214': 'U',\n        '\\u0216': 'U',\n        '\\u01AF': 'U',\n        '\\u1EEA': 'U',\n        '\\u1EE8': 'U',\n        '\\u1EEE': 'U',\n        '\\u1EEC': 'U',\n        '\\u1EF0': 'U',\n        '\\u1EE4': 'U',\n        '\\u1E72': 'U',\n        '\\u0172': 'U',\n        '\\u1E76': 'U',\n        '\\u1E74': 'U',\n        '\\u0244': 'U',\n        '\\u24CB': 'V',\n        '\\uFF36': 'V',\n        '\\u1E7C': 'V',\n        '\\u1E7E': 'V',\n        '\\u01B2': 'V',\n        '\\uA75E': 'V',\n        '\\u0245': 'V',\n        '\\uA760': 'VY',\n        '\\u24CC': 'W',\n        '\\uFF37': 'W',\n        '\\u1E80': 'W',\n        '\\u1E82': 'W',\n        '\\u0174': 'W',\n        '\\u1E86': 'W',\n        '\\u1E84': 'W',\n        '\\u1E88': 'W',\n        '\\u2C72': 'W',\n        '\\u24CD': 'X',\n        '\\uFF38': 'X',\n        '\\u1E8A': 'X',\n        '\\u1E8C': 'X',\n        '\\u24CE': 'Y',\n        '\\uFF39': 'Y',\n        '\\u1EF2': 'Y',\n        '\\u00DD': 'Y',\n        '\\u0176': 'Y',\n        '\\u1EF8': 'Y',\n        '\\u0232': 'Y',\n        '\\u1E8E': 'Y',\n        '\\u0178': 'Y',\n        '\\u1EF6': 'Y',\n        '\\u1EF4': 'Y',\n        '\\u01B3': 'Y',\n        '\\u024E': 'Y',\n        '\\u1EFE': 'Y',\n        '\\u24CF': 'Z',\n        '\\uFF3A': 'Z',\n        '\\u0179': 'Z',\n        '\\u1E90': 'Z',\n        '\\u017B': 'Z',\n        '\\u017D': 'Z',\n        '\\u1E92': 'Z',\n        '\\u1E94': 'Z',\n        '\\u01B5': 'Z',\n        '\\u0224': 'Z',\n        '\\u2C7F': 'Z',\n        '\\u2C6B': 'Z',\n        '\\uA762': 'Z',\n        '\\u24D0': 'a',\n        '\\uFF41': 'a',\n        '\\u1E9A': 'a',\n        '\\u00E0': 'a',\n        '\\u00E1': 'a',\n        '\\u00E2': 'a',\n        '\\u1EA7': 'a',\n        '\\u1EA5': 'a',\n        '\\u1EAB': 'a',\n        '\\u1EA9': 'a',\n        '\\u00E3': 'a',\n        '\\u0101': 'a',\n        '\\u0103': 'a',\n        '\\u1EB1': 'a',\n        '\\u1EAF': 'a',\n        '\\u1EB5': 'a',\n        '\\u1EB3': 'a',\n        '\\u0227': 'a',\n        '\\u01E1': 'a',\n        '\\u00E4': 'a',\n        '\\u01DF': 'a',\n        '\\u1EA3': 'a',\n        '\\u00E5': 'a',\n        '\\u01FB': 'a',\n        '\\u01CE': 'a',\n        '\\u0201': 'a',\n        '\\u0203': 'a',\n        '\\u1EA1': 'a',\n        '\\u1EAD': 'a',\n        '\\u1EB7': 'a',\n        '\\u1E01': 'a',\n        '\\u0105': 'a',\n        '\\u2C65': 'a',\n        '\\u0250': 'a',\n        '\\uA733': 'aa',\n        '\\u00E6': 'ae',\n        '\\u01FD': 'ae',\n        '\\u01E3': 'ae',\n        '\\uA735': 'ao',\n        '\\uA737': 'au',\n        '\\uA739': 'av',\n        '\\uA73B': 'av',\n        '\\uA73D': 'ay',\n        '\\u24D1': 'b',\n        '\\uFF42': 'b',\n        '\\u1E03': 'b',\n        '\\u1E05': 'b',\n        '\\u1E07': 'b',\n        '\\u0180': 'b',\n        '\\u0183': 'b',\n        '\\u0253': 'b',\n        '\\u24D2': 'c',\n        '\\uFF43': 'c',\n        '\\u0107': 'c',\n        '\\u0109': 'c',\n        '\\u010B': 'c',\n        '\\u010D': 'c',\n        '\\u00E7': 'c',\n        '\\u1E09': 'c',\n        '\\u0188': 'c',\n        '\\u023C': 'c',\n        '\\uA73F': 'c',\n        '\\u2184': 'c',\n        '\\u24D3': 'd',\n        '\\uFF44': 'd',\n        '\\u1E0B': 'd',\n        '\\u010F': 'd',\n        '\\u1E0D': 'd',\n        '\\u1E11': 'd',\n        '\\u1E13': 'd',\n        '\\u1E0F': 'd',\n        '\\u0111': 'd',\n        '\\u018C': 'd',\n        '\\u0256': 'd',\n        '\\u0257': 'd',\n        '\\uA77A': 'd',\n        '\\u01F3': 'dz',\n        '\\u01C6': 'dz',\n        '\\u24D4': 'e',\n        '\\uFF45': 'e',\n        '\\u00E8': 'e',\n        '\\u00E9': 'e',\n        '\\u00EA': 'e',\n        '\\u1EC1': 'e',\n        '\\u1EBF': 'e',\n        '\\u1EC5': 'e',\n        '\\u1EC3': 'e',\n        '\\u1EBD': 'e',\n        '\\u0113': 'e',\n        '\\u1E15': 'e',\n        '\\u1E17': 'e',\n        '\\u0115': 'e',\n        '\\u0117': 'e',\n        '\\u00EB': 'e',\n        '\\u1EBB': 'e',\n        '\\u011B': 'e',\n        '\\u0205': 'e',\n        '\\u0207': 'e',\n        '\\u1EB9': 'e',\n        '\\u1EC7': 'e',\n        '\\u0229': 'e',\n        '\\u1E1D': 'e',\n        '\\u0119': 'e',\n        '\\u1E19': 'e',\n        '\\u1E1B': 'e',\n        '\\u0247': 'e',\n        '\\u025B': 'e',\n        '\\u01DD': 'e',\n        '\\u24D5': 'f',\n        '\\uFF46': 'f',\n        '\\u1E1F': 'f',\n        '\\u0192': 'f',\n        '\\uA77C': 'f',\n        '\\u24D6': 'g',\n        '\\uFF47': 'g',\n        '\\u01F5': 'g',\n        '\\u011D': 'g',\n        '\\u1E21': 'g',\n        '\\u011F': 'g',\n        '\\u0121': 'g',\n        '\\u01E7': 'g',\n        '\\u0123': 'g',\n        '\\u01E5': 'g',\n        '\\u0260': 'g',\n        '\\uA7A1': 'g',\n        '\\u1D79': 'g',\n        '\\uA77F': 'g',\n        '\\u24D7': 'h',\n        '\\uFF48': 'h',\n        '\\u0125': 'h',\n        '\\u1E23': 'h',\n        '\\u1E27': 'h',\n        '\\u021F': 'h',\n        '\\u1E25': 'h',\n        '\\u1E29': 'h',\n        '\\u1E2B': 'h',\n        '\\u1E96': 'h',\n        '\\u0127': 'h',\n        '\\u2C68': 'h',\n        '\\u2C76': 'h',\n        '\\u0265': 'h',\n        '\\u0195': 'hv',\n        '\\u24D8': 'i',\n        '\\uFF49': 'i',\n        '\\u00EC': 'i',\n        '\\u00ED': 'i',\n        '\\u00EE': 'i',\n        '\\u0129': 'i',\n        '\\u012B': 'i',\n        '\\u012D': 'i',\n        '\\u00EF': 'i',\n        '\\u1E2F': 'i',\n        '\\u1EC9': 'i',\n        '\\u01D0': 'i',\n        '\\u0209': 'i',\n        '\\u020B': 'i',\n        '\\u1ECB': 'i',\n        '\\u012F': 'i',\n        '\\u1E2D': 'i',\n        '\\u0268': 'i',\n        '\\u0131': 'i',\n        '\\u24D9': 'j',\n        '\\uFF4A': 'j',\n        '\\u0135': 'j',\n        '\\u01F0': 'j',\n        '\\u0249': 'j',\n        '\\u24DA': 'k',\n        '\\uFF4B': 'k',\n        '\\u1E31': 'k',\n        '\\u01E9': 'k',\n        '\\u1E33': 'k',\n        '\\u0137': 'k',\n        '\\u1E35': 'k',\n        '\\u0199': 'k',\n        '\\u2C6A': 'k',\n        '\\uA741': 'k',\n        '\\uA743': 'k',\n        '\\uA745': 'k',\n        '\\uA7A3': 'k',\n        '\\u24DB': 'l',\n        '\\uFF4C': 'l',\n        '\\u0140': 'l',\n        '\\u013A': 'l',\n        '\\u013E': 'l',\n        '\\u1E37': 'l',\n        '\\u1E39': 'l',\n        '\\u013C': 'l',\n        '\\u1E3D': 'l',\n        '\\u1E3B': 'l',\n        '\\u017F': 'l',\n        '\\u0142': 'l',\n        '\\u019A': 'l',\n        '\\u026B': 'l',\n        '\\u2C61': 'l',\n        '\\uA749': 'l',\n        '\\uA781': 'l',\n        '\\uA747': 'l',\n        '\\u01C9': 'lj',\n        '\\u24DC': 'm',\n        '\\uFF4D': 'm',\n        '\\u1E3F': 'm',\n        '\\u1E41': 'm',\n        '\\u1E43': 'm',\n        '\\u0271': 'm',\n        '\\u026F': 'm',\n        '\\u24DD': 'n',\n        '\\uFF4E': 'n',\n        '\\u01F9': 'n',\n        '\\u0144': 'n',\n        '\\u00F1': 'n',\n        '\\u1E45': 'n',\n        '\\u0148': 'n',\n        '\\u1E47': 'n',\n        '\\u0146': 'n',\n        '\\u1E4B': 'n',\n        '\\u1E49': 'n',\n        '\\u019E': 'n',\n        '\\u0272': 'n',\n        '\\u0149': 'n',\n        '\\uA791': 'n',\n        '\\uA7A5': 'n',\n        '\\u01CC': 'nj',\n        '\\u24DE': 'o',\n        '\\uFF4F': 'o',\n        '\\u00F2': 'o',\n        '\\u00F3': 'o',\n        '\\u00F4': 'o',\n        '\\u1ED3': 'o',\n        '\\u1ED1': 'o',\n        '\\u1ED7': 'o',\n        '\\u1ED5': 'o',\n        '\\u00F5': 'o',\n        '\\u1E4D': 'o',\n        '\\u022D': 'o',\n        '\\u1E4F': 'o',\n        '\\u014D': 'o',\n        '\\u1E51': 'o',\n        '\\u1E53': 'o',\n        '\\u014F': 'o',\n        '\\u022F': 'o',\n        '\\u0231': 'o',\n        '\\u00F6': 'o',\n        '\\u022B': 'o',\n        '\\u1ECF': 'o',\n        '\\u0151': 'o',\n        '\\u01D2': 'o',\n        '\\u020D': 'o',\n        '\\u020F': 'o',\n        '\\u01A1': 'o',\n        '\\u1EDD': 'o',\n        '\\u1EDB': 'o',\n        '\\u1EE1': 'o',\n        '\\u1EDF': 'o',\n        '\\u1EE3': 'o',\n        '\\u1ECD': 'o',\n        '\\u1ED9': 'o',\n        '\\u01EB': 'o',\n        '\\u01ED': 'o',\n        '\\u00F8': 'o',\n        '\\u01FF': 'o',\n        '\\u0254': 'o',\n        '\\uA74B': 'o',\n        '\\uA74D': 'o',\n        '\\u0275': 'o',\n        '\\u01A3': 'oi',\n        '\\u0223': 'ou',\n        '\\uA74F': 'oo',\n        '\\u24DF': 'p',\n        '\\uFF50': 'p',\n        '\\u1E55': 'p',\n        '\\u1E57': 'p',\n        '\\u01A5': 'p',\n        '\\u1D7D': 'p',\n        '\\uA751': 'p',\n        '\\uA753': 'p',\n        '\\uA755': 'p',\n        '\\u24E0': 'q',\n        '\\uFF51': 'q',\n        '\\u024B': 'q',\n        '\\uA757': 'q',\n        '\\uA759': 'q',\n        '\\u24E1': 'r',\n        '\\uFF52': 'r',\n        '\\u0155': 'r',\n        '\\u1E59': 'r',\n        '\\u0159': 'r',\n        '\\u0211': 'r',\n        '\\u0213': 'r',\n        '\\u1E5B': 'r',\n        '\\u1E5D': 'r',\n        '\\u0157': 'r',\n        '\\u1E5F': 'r',\n        '\\u024D': 'r',\n        '\\u027D': 'r',\n        '\\uA75B': 'r',\n        '\\uA7A7': 'r',\n        '\\uA783': 'r',\n        '\\u24E2': 's',\n        '\\uFF53': 's',\n        '\\u00DF': 's',\n        '\\u015B': 's',\n        '\\u1E65': 's',\n        '\\u015D': 's',\n        '\\u1E61': 's',\n        '\\u0161': 's',\n        '\\u1E67': 's',\n        '\\u1E63': 's',\n        '\\u1E69': 's',\n        '\\u0219': 's',\n        '\\u015F': 's',\n        '\\u023F': 's',\n        '\\uA7A9': 's',\n        '\\uA785': 's',\n        '\\u1E9B': 's',\n        '\\u24E3': 't',\n        '\\uFF54': 't',\n        '\\u1E6B': 't',\n        '\\u1E97': 't',\n        '\\u0165': 't',\n        '\\u1E6D': 't',\n        '\\u021B': 't',\n        '\\u0163': 't',\n        '\\u1E71': 't',\n        '\\u1E6F': 't',\n        '\\u0167': 't',\n        '\\u01AD': 't',\n        '\\u0288': 't',\n        '\\u2C66': 't',\n        '\\uA787': 't',\n        '\\uA729': 'tz',\n        '\\u24E4': 'u',\n        '\\uFF55': 'u',\n        '\\u00F9': 'u',\n        '\\u00FA': 'u',\n        '\\u00FB': 'u',\n        '\\u0169': 'u',\n        '\\u1E79': 'u',\n        '\\u016B': 'u',\n        '\\u1E7B': 'u',\n        '\\u016D': 'u',\n        '\\u00FC': 'u',\n        '\\u01DC': 'u',\n        '\\u01D8': 'u',\n        '\\u01D6': 'u',\n        '\\u01DA': 'u',\n        '\\u1EE7': 'u',\n        '\\u016F': 'u',\n        '\\u0171': 'u',\n        '\\u01D4': 'u',\n        '\\u0215': 'u',\n        '\\u0217': 'u',\n        '\\u01B0': 'u',\n        '\\u1EEB': 'u',\n        '\\u1EE9': 'u',\n        '\\u1EEF': 'u',\n        '\\u1EED': 'u',\n        '\\u1EF1': 'u',\n        '\\u1EE5': 'u',\n        '\\u1E73': 'u',\n        '\\u0173': 'u',\n        '\\u1E77': 'u',\n        '\\u1E75': 'u',\n        '\\u0289': 'u',\n        '\\u24E5': 'v',\n        '\\uFF56': 'v',\n        '\\u1E7D': 'v',\n        '\\u1E7F': 'v',\n        '\\u028B': 'v',\n        '\\uA75F': 'v',\n        '\\u028C': 'v',\n        '\\uA761': 'vy',\n        '\\u24E6': 'w',\n        '\\uFF57': 'w',\n        '\\u1E81': 'w',\n        '\\u1E83': 'w',\n        '\\u0175': 'w',\n        '\\u1E87': 'w',\n        '\\u1E85': 'w',\n        '\\u1E98': 'w',\n        '\\u1E89': 'w',\n        '\\u2C73': 'w',\n        '\\u24E7': 'x',\n        '\\uFF58': 'x',\n        '\\u1E8B': 'x',\n        '\\u1E8D': 'x',\n        '\\u24E8': 'y',\n        '\\uFF59': 'y',\n        '\\u1EF3': 'y',\n        '\\u00FD': 'y',\n        '\\u0177': 'y',\n        '\\u1EF9': 'y',\n        '\\u0233': 'y',\n        '\\u1E8F': 'y',\n        '\\u00FF': 'y',\n        '\\u1EF7': 'y',\n        '\\u1E99': 'y',\n        '\\u1EF5': 'y',\n        '\\u01B4': 'y',\n        '\\u024F': 'y',\n        '\\u1EFF': 'y',\n        '\\u24E9': 'z',\n        '\\uFF5A': 'z',\n        '\\u017A': 'z',\n        '\\u1E91': 'z',\n        '\\u017C': 'z',\n        '\\u017E': 'z',\n        '\\u1E93': 'z',\n        '\\u1E95': 'z',\n        '\\u01B6': 'z',\n        '\\u0225': 'z',\n        '\\u0240': 'z',\n        '\\u2C6C': 'z',\n        '\\uA763': 'z',\n        '\\u0386': '\\u0391',\n        '\\u0388': '\\u0395',\n        '\\u0389': '\\u0397',\n        '\\u038A': '\\u0399',\n        '\\u03AA': '\\u0399',\n        '\\u038C': '\\u039F',\n        '\\u038E': '\\u03A5',\n        '\\u03AB': '\\u03A5',\n        '\\u038F': '\\u03A9',\n        '\\u03AC': '\\u03B1',\n        '\\u03AD': '\\u03B5',\n        '\\u03AE': '\\u03B7',\n        '\\u03AF': '\\u03B9',\n        '\\u03CA': '\\u03B9',\n        '\\u0390': '\\u03B9',\n        '\\u03CC': '\\u03BF',\n        '\\u03CD': '\\u03C5',\n        '\\u03CB': '\\u03C5',\n        '\\u03B0': '\\u03C5',\n        '\\u03C9': '\\u03C9',\n        '\\u03C2': '\\u03C3'\n    };\n    DataUtil.fnOperators = {\n        /**\n         * Returns true when the actual input is equal to the given input.\n         * @param  {string|number|boolean} actual\n         * @param  {string|number|boolean} expected\n         * @param  {boolean} ignoreCase?\n         * @param  {boolean} ignoreAccent?\n         */\n        equal: function (actual, expected, ignoreCase, ignoreAccent) {\n            if (ignoreAccent) {\n                actual = DataUtil.ignoreDiacritics(actual);\n                expected = DataUtil.ignoreDiacritics(expected);\n            }\n            if (ignoreCase) {\n                return DataUtil.toLowerCase(actual) === DataUtil.toLowerCase(expected);\n            }\n            return actual === expected;\n        },\n        /**\n         * Returns true when the actual input is not equal to the given input.\n         * @param  {string|number|boolean} actual\n         * @param  {string|number|boolean} expected\n         * @param  {boolean} ignoreCase?\n         */\n        notequal: function (actual, expected, ignoreCase, ignoreAccent) {\n            if (ignoreAccent) {\n                actual = DataUtil.ignoreDiacritics(actual);\n                expected = DataUtil.ignoreDiacritics(expected);\n            }\n            return !DataUtil.fnOperators.equal(actual, expected, ignoreCase);\n        },\n        /**\n         * Returns true when the actual input is less than to the given input.\n         * @param  {string|number|boolean} actual\n         * @param  {string|number|boolean} expected\n         * @param  {boolean} ignoreCase?\n         */\n        lessthan: function (actual, expected, ignoreCase) {\n            if (ignoreCase) {\n                return DataUtil.toLowerCase(actual) < DataUtil.toLowerCase(expected);\n            }\n            if (isNullOrUndefined(actual)) {\n                actual = undefined;\n            }\n            return actual < expected;\n        },\n        /**\n         * Returns true when the actual input is greater than to the given input.\n         * @param  {string|number|boolean} actual\n         * @param  {string|number|boolean} expected\n         * @param  {boolean} ignoreCase?\n         */\n        greaterthan: function (actual, expected, ignoreCase) {\n            if (ignoreCase) {\n                return DataUtil.toLowerCase(actual) > DataUtil.toLowerCase(expected);\n            }\n            return actual > expected;\n        },\n        /**\n         * Returns true when the actual input is less than or equal to the given input.\n         * @param  {string|number|boolean} actual\n         * @param  {string|number|boolean} expected\n         * @param  {boolean} ignoreCase?\n         */\n        lessthanorequal: function (actual, expected, ignoreCase) {\n            if (ignoreCase) {\n                return DataUtil.toLowerCase(actual) <= DataUtil.toLowerCase(expected);\n            }\n            if (isNullOrUndefined(actual)) {\n                actual = undefined;\n            }\n            return actual <= expected;\n        },\n        /**\n         * Returns true when the actual input is greater than or equal to the given input.\n         * @param  {string|number|boolean} actual\n         * @param  {string|number|boolean} expected\n         * @param  {boolean} ignoreCase?\n         */\n        greaterthanorequal: function (actual, expected, ignoreCase) {\n            if (ignoreCase) {\n                return DataUtil.toLowerCase(actual) >= DataUtil.toLowerCase(expected);\n            }\n            return actual >= expected;\n        },\n        /**\n         * Returns true when the actual input contains the given string.\n         * @param  {string|number} actual\n         * @param  {string|number} expected\n         * @param  {boolean} ignoreCase?\n         */\n        contains: function (actual, expected, ignoreCase, ignoreAccent) {\n            if (ignoreAccent) {\n                actual = DataUtil.ignoreDiacritics(actual);\n                expected = DataUtil.ignoreDiacritics(expected);\n            }\n            if (ignoreCase) {\n                return !isNullOrUndefined(actual) && !isNullOrUndefined(expected) &&\n                    DataUtil.toLowerCase(actual).indexOf(DataUtil.toLowerCase(expected)) !== -1;\n            }\n            return !isNullOrUndefined(actual) && !isNullOrUndefined(expected) &&\n                actual.toString().indexOf(expected) !== -1;\n        },\n        /**\n         * Returns true when the given input value is not null.\n         * @param  {string|number} actual\n         * @returns boolean\n         */\n        notnull: function (actual) {\n            return actual !== null;\n        },\n        /**\n         * Returns true when the given input value is null.\n         * @param  {string|number} actual\n         * @returns boolean\n         */\n        isnull: function (actual) {\n            return actual === null;\n        },\n        /**\n         * Returns true when the actual input starts with the given string\n         * @param  {string} actual\n         * @param  {string} expected\n         * @param  {boolean} ignoreCase?\n         */\n        startswith: function (actual, expected, ignoreCase, ignoreAccent) {\n            if (ignoreAccent) {\n                actual = DataUtil.ignoreDiacritics(actual);\n                expected = DataUtil.ignoreDiacritics(expected);\n            }\n            if (ignoreCase) {\n                return actual && expected && DataUtil.startsWith(DataUtil.toLowerCase(actual), DataUtil.toLowerCase(expected));\n            }\n            return actual && expected && DataUtil.startsWith(actual, expected);\n        },\n        /**\n         * Returns true when the actual input ends with the given string.\n         * @param  {string} actual\n         * @param  {string} expected\n         * @param  {boolean} ignoreCase?\n         */\n        endswith: function (actual, expected, ignoreCase, ignoreAccent) {\n            if (ignoreAccent) {\n                actual = DataUtil.ignoreDiacritics(actual);\n                expected = DataUtil.ignoreDiacritics(expected);\n            }\n            if (ignoreCase) {\n                return actual && expected && DataUtil.endsWith(DataUtil.toLowerCase(actual), DataUtil.toLowerCase(expected));\n            }\n            return actual && expected && DataUtil.endsWith(actual, expected);\n        },\n        /**\n         * It will return the filter operator based on the filter symbol.\n         * @param  {string} operator\n         * @hidden\n         */\n        processSymbols: function (operator) {\n            var fnName = DataUtil.operatorSymbols[operator];\n            if (fnName) {\n                var fn = DataUtil.fnOperators[fnName];\n                return fn;\n            }\n            return DataUtil.throwError('Query - Process Operator : Invalid operator');\n        },\n        /**\n         * It will return the valid filter operator based on the specified operators.\n         * @param  {string} operator\n         * @hidden\n         */\n        processOperator: function (operator) {\n            var fn = DataUtil.fnOperators[operator];\n            if (fn) {\n                return fn;\n            }\n            return DataUtil.fnOperators.processSymbols(operator);\n        }\n    };\n    /**\n     * To perform the parse operation on JSON data, like convert to string from JSON or convert to JSON from string.\n     */\n    DataUtil.parse = {\n        /**\n         * Parse the given string to the plain JavaScript object.\n         * @param  {string|Object|Object[]} jsonText\n         */\n        parseJson: function (jsonText) {\n            if (typeof jsonText === 'string') {\n                jsonText = JSON.parse(jsonText, DataUtil.parse.jsonReviver);\n            }\n            else if (jsonText instanceof Array) {\n                DataUtil.parse.iterateAndReviveArray(jsonText);\n            }\n            else if (typeof jsonText === 'object' && jsonText !== null) {\n                DataUtil.parse.iterateAndReviveJson(jsonText);\n            }\n            return jsonText;\n        },\n        /**\n         * It will perform on array of values.\n         * @param  {string[]|Object[]} array\n         * @hidden\n         */\n        iterateAndReviveArray: function (array) {\n            for (var i = 0; i < array.length; i++) {\n                if (typeof array[i] === 'object' && array[i] !== null) {\n                    DataUtil.parse.iterateAndReviveJson(array[i]);\n                }\n                else if (typeof array[i] === 'string' && !/^[\\s]*\\[|^[\\s]*\\{(.)+:|\\\"/g.test(array[i])) {\n                    array[i] = DataUtil.parse.jsonReviver('', array[i]);\n                }\n                else {\n                    array[i] = DataUtil.parse.parseJson(array[i]);\n                }\n            }\n        },\n        /**\n         * It will perform on JSON values\n         * @param  {JSON} json\n         * @hidden\n         */\n        iterateAndReviveJson: function (json) {\n            var value;\n            var keys = Object.keys(json);\n            for (var _i = 0, keys_2 = keys; _i < keys_2.length; _i++) {\n                var prop = keys_2[_i];\n                if (DataUtil.startsWith(prop, '__')) {\n                    continue;\n                }\n                value = json[prop];\n                if (typeof value === 'object') {\n                    if (value instanceof Array) {\n                        DataUtil.parse.iterateAndReviveArray(value);\n                    }\n                    else if (value) {\n                        DataUtil.parse.iterateAndReviveJson(value);\n                    }\n                }\n                else {\n                    json[prop] = DataUtil.parse.jsonReviver(json[prop], value);\n                }\n            }\n        },\n        /**\n         * It will perform on JSON values\n         * @param  {string} field\n         * @param  {string|Date} value\n         * @hidden\n         */\n        jsonReviver: function (field, value) {\n            if (typeof value === 'string') {\n                var ms = /^\\/Date\\(([+-]?[0-9]+)([+-][0-9]{4})?\\)\\/$/.exec(value);\n                var offSet = DataUtil.timeZoneHandling ? DataUtil.serverTimezoneOffset : null;\n                if (ms) {\n                    return DataUtil.dateParse.toTimeZone(new Date(parseInt(ms[1], 10)), offSet, true);\n                }\n                else if (/^(\\d{4}\\-\\d\\d\\-\\d\\d([tT][\\d:\\.]*){1})([zZ]|([+\\-])(\\d\\d):?(\\d\\d))?$/.test(value)) {\n                    var isUTC = value.indexOf('Z') > -1 || value.indexOf('z') > -1;\n                    var arr = value.split(/[^0-9.]/);\n                    if (isUTC) {\n                        value = DataUtil.dateParse\n                            .toTimeZone(new Date(parseInt(arr[0], 10), parseInt(arr[1], 10) - 1, parseInt(arr[2], 10), parseInt(arr[3], 10), parseInt(arr[4], 10), parseInt(arr[5], 10)), DataUtil.serverTimezoneOffset, false);\n                    }\n                    else {\n                        var utcFormat = new Date(parseInt(arr[0], 10), parseInt(arr[1], 10) - 1, parseInt(arr[2], 10), parseInt(arr[3], 10), parseInt(arr[4], 10), parseInt(arr[5], 10));\n                        var hrs = parseInt(arr[6], 10);\n                        var mins = parseInt(arr[7], 10);\n                        if (isNaN(hrs) && isNaN(mins)) {\n                            return utcFormat;\n                        }\n                        if (value.indexOf('+') > -1) {\n                            utcFormat.setHours(utcFormat.getHours() - hrs, utcFormat.getMinutes() - mins);\n                        }\n                        else {\n                            utcFormat.setHours(utcFormat.getHours() + hrs, utcFormat.getMinutes() + mins);\n                        }\n                        value = DataUtil.dateParse\n                            .toTimeZone(utcFormat, DataUtil.serverTimezoneOffset, false);\n                    }\n                    if (DataUtil.serverTimezoneOffset == null) {\n                        value = DataUtil.dateParse.addSelfOffset(value);\n                    }\n                }\n            }\n            return value;\n        },\n        /**\n         * Check wheather the given value is JSON or not.\n         * @param  {Object[]} jsonData\n         */\n        isJson: function (jsonData) {\n            if (typeof jsonData[0] === 'string') {\n                return jsonData;\n            }\n            return DataUtil.parse.parseJson(jsonData);\n        },\n        /**\n         * Checks wheather the given value is GUID or not.\n         * @param  {string} value\n         */\n        isGuid: function (value) {\n            var regex = /[A-Fa-f0-9]{8}(?:-[A-Fa-f0-9]{4}){3}-[A-Fa-f0-9]{12}/i;\n            var match = regex.exec(value);\n            return match != null;\n        },\n        /**\n         * The method used to replace the value based on the type.\n         * @param  {Object} value\n         * @param  {boolean} stringify\n         * @hidden\n         */\n        replacer: function (value, stringify) {\n            if (DataUtil.isPlainObject(value)) {\n                return DataUtil.parse.jsonReplacer(value, stringify);\n            }\n            if (value instanceof Array) {\n                return DataUtil.parse.arrayReplacer(value);\n            }\n            if (value instanceof Date) {\n                return DataUtil.parse.jsonReplacer({ val: value }, stringify).val;\n            }\n            return value;\n        },\n        /**\n         * It will replace the JSON value.\n         * @param  {string} key\n         * @param  {Object} val\n         * @hidden\n         */\n        jsonReplacer: function (val, stringify) {\n            var value;\n            var keys = Object.keys(val);\n            for (var _i = 0, keys_3 = keys; _i < keys_3.length; _i++) {\n                var prop = keys_3[_i];\n                value = val[prop];\n                if (!(value instanceof Date)) {\n                    continue;\n                }\n                var d = value;\n                if (DataUtil.serverTimezoneOffset == null) {\n                    val[prop] = DataUtil.dateParse.toTimeZone(d, null).toJSON();\n                }\n                else {\n                    d = new Date(+d + DataUtil.serverTimezoneOffset * 3600000);\n                    val[prop] = DataUtil.dateParse.toTimeZone(DataUtil.dateParse.addSelfOffset(d), null).toJSON();\n                }\n            }\n            return val;\n        },\n        /**\n         * It will replace the Array of value.\n         * @param  {string} key\n         * @param  {Object[]} val\n         * @hidden\n         */\n        arrayReplacer: function (val) {\n            for (var i = 0; i < val.length; i++) {\n                if (DataUtil.isPlainObject(val[i])) {\n                    val[i] = DataUtil.parse.jsonReplacer(val[i]);\n                }\n                else if (val[i] instanceof Date) {\n                    val[i] = DataUtil.parse.jsonReplacer({ date: val[i] }).date;\n                }\n            }\n            return val;\n        },\n        /**\n         * It will replace the Date object with respective to UTC format value.\n         * @param  {string} key\n         * @param  {any} value\n         * @hidden\n         */\n        /* tslint:disable-next-line:no-any */\n        jsonDateReplacer: function (key, value) {\n            if (key === 'value' && value) {\n                if (typeof value === 'string') {\n                    var ms = /^\\/Date\\(([+-]?[0-9]+)([+-][0-9]{4})?\\)\\/$/.exec(value);\n                    if (ms) {\n                        value = DataUtil.dateParse.toTimeZone(new Date(parseInt(ms[1], 10)), null, true);\n                    }\n                    else if (/^(\\d{4}\\-\\d\\d\\-\\d\\d([tT][\\d:\\.]*){1})([zZ]|([+\\-])(\\d\\d):?(\\d\\d))?$/.test(value)) {\n                        var arr = value.split(/[^0-9]/);\n                        value = DataUtil.dateParse\n                            .toTimeZone(new Date(parseInt(arr[0], 10), parseInt(arr[1], 10) - 1, parseInt(arr[2], 10), parseInt(arr[3], 10), parseInt(arr[4], 10), parseInt(arr[5], 10)), null, true);\n                    }\n                }\n                if (value instanceof Date) {\n                    value = DataUtil.dateParse.addSelfOffset(value);\n                    if (DataUtil.serverTimezoneOffset === null) {\n                        return DataUtil.dateParse.toTimeZone(DataUtil.dateParse.addSelfOffset(value), null).toJSON();\n                    }\n                    else {\n                        value = DataUtil.dateParse.toTimeZone(value, (((value.getTimezoneOffset() / 60) * 2)\n                            - DataUtil.serverTimezoneOffset), false);\n                        return value.toJSON();\n                    }\n                }\n            }\n            return value;\n        }\n    };\n    /**\n     * @hidden\n     */\n    DataUtil.dateParse = {\n        addSelfOffset: function (input) {\n            return new Date(+input - (input.getTimezoneOffset() * 60000));\n        },\n        toUTC: function (input) {\n            return new Date(+input + (input.getTimezoneOffset() * 60000));\n        },\n        toTimeZone: function (input, offset, utc) {\n            if (offset === null) {\n                return input;\n            }\n            var unix = utc ? DataUtil.dateParse.toUTC(input) : input;\n            return new Date(+unix - (offset * 3600000));\n        },\n        toLocalTime: function (input) {\n            var datefn = input;\n            var timeZone = -datefn.getTimezoneOffset();\n            var differenceString = timeZone >= 0 ? '+' : '-';\n            var localtimefn = function (num) {\n                var norm = Math.floor(Math.abs(num));\n                return (norm < 10 ? '0' : '') + norm;\n            };\n            var val = datefn.getFullYear() + '-' + localtimefn(datefn.getMonth() + 1) + '-' + localtimefn(datefn.getDate()) +\n                'T' + localtimefn(datefn.getHours()) +\n                ':' + localtimefn(datefn.getMinutes()) +\n                ':' + localtimefn(datefn.getSeconds()) +\n                differenceString + localtimefn(timeZone / 60) +\n                ':' + localtimefn(timeZone % 60);\n            return val;\n        }\n    };\n    return DataUtil;\n}());\n\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar consts$1 = { GroupGuid: '{271bbba0-1ee7}' };\n/**\n * Adaptors are specific data source type aware interfaces that are used by DataManager to communicate with DataSource.\n * This is the base adaptor class that other adaptors can extend.\n * @hidden\n */\nvar Adaptor = /** @__PURE__ @class */ (function () {\n    /**\n     * Constructor for Adaptor class\n     * @param  {DataOptions} ds?\n     * @hidden\n     * @returns aggregates\n     */\n    function Adaptor(ds) {\n        // common options for all the adaptors \n        this.options = {\n            from: 'table',\n            requestType: 'json',\n            sortBy: 'sorted',\n            select: 'select',\n            skip: 'skip',\n            group: 'group',\n            take: 'take',\n            search: 'search',\n            count: 'requiresCounts',\n            where: 'where',\n            aggregates: 'aggregates',\n            expand: 'expand'\n        };\n        /**\n         * Specifies the type of adaptor.\n         * @default Adaptor\n         */\n        this.type = Adaptor;\n        this.dataSource = ds;\n        this.pvt = {};\n    }\n    /**\n     * Returns the data from the query processing.\n     * @param  {Object} data\n     * @param  {DataOptions} ds?\n     * @param  {Query} query?\n     * @param  {XMLHttpRequest} xhr?\n     * @returns Object\n     */\n    Adaptor.prototype.processResponse = function (data, ds, query, xhr) {\n        return data;\n    };\n    return Adaptor;\n}());\n/**\n * JsonAdaptor is used to process JSON data. It contains methods to process the given JSON data based on the queries.\n * @hidden\n */\nvar JsonAdaptor = /** @__PURE__ @class */ (function (_super) {\n    __extends(JsonAdaptor, _super);\n    function JsonAdaptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Process the JSON data based on the provided queries.\n     * @param  {DataManager} dataManager\n     * @param  {Query} query\n     * @returns Object\n     */\n    JsonAdaptor.prototype.processQuery = function (dataManager, query) {\n        var result = dataManager.dataSource.json.slice(0);\n        var count = result.length;\n        var countFlg = true;\n        var ret;\n        var key;\n        var lazyLoad = {};\n        var keyCount = 0;\n        var group = [];\n        var page;\n        for (var i = 0; i < query.lazyLoad.length; i++) {\n            keyCount++;\n            lazyLoad[query.lazyLoad[i].key] = query.lazyLoad[i].value;\n        }\n        var agg = {};\n        for (var i = 0; i < query.queries.length; i++) {\n            key = query.queries[i];\n            if ((key.fn === 'onPage' || key.fn === 'onGroup') && query.lazyLoad.length) {\n                if (key.fn === 'onGroup') {\n                    group.push(key.e);\n                }\n                if (key.fn === 'onPage') {\n                    page = key.e;\n                }\n                continue;\n            }\n            ret = this[key.fn].call(this, result, key.e, query);\n            if (key.fn === 'onAggregates') {\n                agg[key.e.field + ' - ' + key.e.type] = ret;\n            }\n            else {\n                result = ret !== undefined ? ret : result;\n            }\n            if (key.fn === 'onPage' || key.fn === 'onSkip' || key.fn === 'onTake' || key.fn === 'onRange') {\n                countFlg = false;\n            }\n            if (countFlg) {\n                count = result.length;\n            }\n        }\n        if (keyCount) {\n            var args = {\n                query: query, lazyLoad: lazyLoad, result: result, group: group, page: page\n            };\n            var lazyLoadData = this.lazyLoadGroup(args);\n            result = lazyLoadData.result;\n            count = lazyLoadData.count;\n        }\n        if (query.isCountRequired) {\n            result = {\n                result: result,\n                count: count,\n                aggregates: agg\n            };\n        }\n        return result;\n    };\n    /**\n     * Perform lazy load grouping in JSON array based on the given query and lazy load details.\n     * @param  {LazyLoadGroupArgs} args\n     */\n    JsonAdaptor.prototype.lazyLoadGroup = function (args) {\n        var count = 0;\n        var agg = this.getAggregate(args.query);\n        var result = args.result;\n        if (!isNullOrUndefined(args.lazyLoad.onDemandGroupInfo)) {\n            var req = args.lazyLoad.onDemandGroupInfo;\n            for (var i = req.where.length - 1; i >= 0; i--) {\n                result = this.onWhere(result, req.where[i]);\n            }\n            if (args.group.length !== req.level) {\n                var field = args.group[req.level].fieldName;\n                result = DataUtil.group(result, field, agg, null, null, args.group[0].comparer, true);\n            }\n            count = result.length;\n            var data = result;\n            result = result.slice(req.skip);\n            result = result.slice(0, req.take);\n            if (args.group.length !== req.level) {\n                this.formGroupResult(result, data);\n            }\n        }\n        else {\n            var field = args.group[0].fieldName;\n            result = DataUtil.group(result, field, agg, null, null, args.group[0].comparer, true);\n            count = result.length;\n            var data = result;\n            if (args.page) {\n                result = this.onPage(result, args.page, args.query);\n            }\n            this.formGroupResult(result, data);\n        }\n        return { result: result, count: count };\n    };\n    JsonAdaptor.prototype.formGroupResult = function (result, data) {\n        if (result.length && data.length) {\n            var uid = 'GroupGuid';\n            var childLevel = 'childLevels';\n            var level = 'level';\n            var records = 'records';\n            result[uid] = data[uid];\n            result[childLevel] = data[childLevel];\n            result[level] = data[level];\n            result[records] = data[records];\n        }\n        return result;\n    };\n    /**\n     * Separate the aggregate query from the given queries\n     * @param  {Query} query\n     */\n    JsonAdaptor.prototype.getAggregate = function (query) {\n        var aggQuery = Query.filterQueries(query.queries, 'onAggregates');\n        var agg = [];\n        if (aggQuery.length) {\n            var tmp = void 0;\n            for (var i = 0; i < aggQuery.length; i++) {\n                tmp = aggQuery[i].e;\n                agg.push({ type: tmp.type, field: DataUtil.getValue(tmp.field, query) });\n            }\n        }\n        return agg;\n    };\n    /**\n     * Performs batch update in the JSON array which add, remove and update records.\n     * @param  {DataManager} dm\n     * @param  {CrudOptions} changes\n     * @param  {RemoteArgs} e\n     */\n    JsonAdaptor.prototype.batchRequest = function (dm, changes, e) {\n        var i;\n        var deletedRecordsLen = changes.deletedRecords.length;\n        for (i = 0; i < changes.addedRecords.length; i++) {\n            this.insert(dm, changes.addedRecords[i]);\n        }\n        for (i = 0; i < changes.changedRecords.length; i++) {\n            this.update(dm, e.key, changes.changedRecords[i]);\n        }\n        for (i = 0; i < deletedRecordsLen; i++) {\n            this.remove(dm, e.key, changes.deletedRecords[i]);\n        }\n        return changes;\n    };\n    /**\n     * Performs filter operation with the given data and where query.\n     * @param  {Object[]} ds\n     * @param  {{validate:Function}} e\n     */\n    JsonAdaptor.prototype.onWhere = function (ds, e) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        return ds.filter(function (obj) {\n            if (e) {\n                return e.validate(obj);\n            }\n        });\n    };\n    /**\n     * Returns aggregate function based on the aggregate type.\n     * @param  {Object[]} ds\n     * @param  {{field:string} e\n     * @param  {string}} type\n     */\n    JsonAdaptor.prototype.onAggregates = function (ds, e) {\n        var fn = DataUtil.aggregates[e.type];\n        if (!ds || !fn || ds.length === 0) {\n            return null;\n        }\n        return fn(ds, e.field);\n    };\n    /**\n     * Performs search operation based on the given query.\n     * @param  {Object[]} ds\n     * @param  {QueryOptions} e\n     */\n    JsonAdaptor.prototype.onSearch = function (ds, e) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        if (e.fieldNames.length === 0) {\n            DataUtil.getFieldList(ds[0], e.fieldNames);\n        }\n        return ds.filter(function (obj) {\n            for (var j = 0; j < e.fieldNames.length; j++) {\n                if (e.comparer.call(obj, DataUtil.getObject(e.fieldNames[j], obj), e.searchKey, e.ignoreCase, e.ignoreAccent)) {\n                    return true;\n                }\n            }\n            return false;\n        });\n    };\n    /**\n     * Sort the data with given direction and field.\n     * @param  {Object[]} ds\n     * @param  {{comparer:(a:Object} e\n     * @param  {Object} b\n     */\n    JsonAdaptor.prototype.onSortBy = function (ds, e, query) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        var fnCompare;\n        var field = DataUtil.getValue(e.fieldName, query);\n        if (!field) {\n            return ds.sort(e.comparer);\n        }\n        if (field instanceof Array) {\n            field = field.slice(0);\n            for (var i = field.length - 1; i >= 0; i--) {\n                if (!field[i]) {\n                    continue;\n                }\n                fnCompare = e.comparer;\n                if (DataUtil.endsWith(field[i], ' desc')) {\n                    fnCompare = DataUtil.fnSort('descending');\n                    field[i] = field[i].replace(' desc', '');\n                }\n                ds = DataUtil.sort(ds, field[i], fnCompare);\n            }\n            return ds;\n        }\n        return DataUtil.sort(ds, field, e.comparer);\n    };\n    /**\n     * Group the data based on the given query.\n     * @param  {Object[]} ds\n     * @param  {QueryOptions} e\n     * @param  {Query} query\n     */\n    JsonAdaptor.prototype.onGroup = function (ds, e, query) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        var agg = this.getAggregate(query);\n        return DataUtil.group(ds, DataUtil.getValue(e.fieldName, query), agg, null, null, e.comparer);\n    };\n    /**\n     * Retrieves records based on the given page index and size.\n     * @param  {Object[]} ds\n     * @param  {{pageSize:number} e\n     * @param  {number}} pageIndex\n     * @param  {Query} query\n     */\n    JsonAdaptor.prototype.onPage = function (ds, e, query) {\n        var size = DataUtil.getValue(e.pageSize, query);\n        var start = (DataUtil.getValue(e.pageIndex, query) - 1) * size;\n        var end = start + size;\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        return ds.slice(start, end);\n    };\n    /**\n     * Retrieves records based on the given start and end index from query.\n     * @param  {Object[]} ds\n     * @param  {{start:number} e\n     * @param  {number}} end\n     */\n    JsonAdaptor.prototype.onRange = function (ds, e) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        return ds.slice(DataUtil.getValue(e.start), DataUtil.getValue(e.end));\n    };\n    /**\n     * Picks the given count of records from the top of the datasource.\n     * @param  {Object[]} ds\n     * @param  {{nos:number}} e\n     */\n    JsonAdaptor.prototype.onTake = function (ds, e) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        return ds.slice(0, DataUtil.getValue(e.nos));\n    };\n    /**\n     * Skips the given count of records from the data source.\n     * @param  {Object[]} ds\n     * @param  {{nos:number}} e\n     */\n    JsonAdaptor.prototype.onSkip = function (ds, e) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        return ds.slice(DataUtil.getValue(e.nos));\n    };\n    /**\n     * Selects specified columns from the data source.\n     * @param  {Object[]} ds\n     * @param  {{fieldNames:string}} e\n     */\n    JsonAdaptor.prototype.onSelect = function (ds, e) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        return DataUtil.select(ds, DataUtil.getValue(e.fieldNames));\n    };\n    /**\n     * Inserts new record in the table.\n     * @param  {DataManager} dm\n     * @param  {Object} data\n     * @param  {number} position\n     */\n    JsonAdaptor.prototype.insert = function (dm, data, tableName, query, position) {\n        if (isNullOrUndefined(position)) {\n            return dm.dataSource.json.push(data);\n        }\n        else {\n            return dm.dataSource.json.splice(position, 0, data);\n        }\n    };\n    /**\n     * Remove the data from the dataSource based on the key field value.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {Object} value\n     * @param  {string} tableName?\n     * @returns null\n     */\n    JsonAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n        var ds = dm.dataSource.json;\n        var i;\n        if (typeof value === 'object' && !(value instanceof Date)) {\n            value = DataUtil.getObject(keyField, value);\n        }\n        for (i = 0; i < ds.length; i++) {\n            if (DataUtil.getObject(keyField, ds[i]) === value) {\n                break;\n            }\n        }\n        return i !== ds.length ? ds.splice(i, 1) : null;\n    };\n    /**\n     * Updates existing record and saves the changes to the table.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {Object} value\n     * @param  {string} tableName?\n     * @returns null\n     */\n    JsonAdaptor.prototype.update = function (dm, keyField, value, tableName) {\n        var ds = dm.dataSource.json;\n        var i;\n        var key;\n        if (!isNullOrUndefined(keyField)) {\n            key = getValue(keyField, value);\n        }\n        for (i = 0; i < ds.length; i++) {\n            if (!isNullOrUndefined(keyField) && (getValue(keyField, ds[i])) === key) {\n                break;\n            }\n        }\n        return i < ds.length ? merge(ds[i], value) : null;\n    };\n    return JsonAdaptor;\n}(Adaptor));\n/**\n * URL Adaptor of DataManager can be used when you are required to use remote service to retrieve data.\n * It interacts with server-side for all DataManager Queries and CRUD operations.\n * @hidden\n */\nvar UrlAdaptor = /** @__PURE__ @class */ (function (_super) {\n    __extends(UrlAdaptor, _super);\n    function UrlAdaptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Process the query to generate request body.\n     * @param  {DataManager} dm\n     * @param  {Query} query\n     * @param  {Object[]} hierarchyFilters?\n     * @returns p\n     */\n    // tslint:disable-next-line:max-func-body-length\n    UrlAdaptor.prototype.processQuery = function (dm, query, hierarchyFilters) {\n        var queries = this.getQueryRequest(query);\n        var singles = Query.filterQueryLists(query.queries, ['onSelect', 'onPage', 'onSkip', 'onTake', 'onRange']);\n        var params = query.params;\n        var url = dm.dataSource.url;\n        var temp;\n        var skip;\n        var take = null;\n        var options = this.options;\n        var request = { sorts: [], groups: [], filters: [], searches: [], aggregates: [] };\n        // calc Paging & Range\n        if ('onPage' in singles) {\n            temp = singles.onPage;\n            skip = DataUtil.getValue(temp.pageIndex, query);\n            take = DataUtil.getValue(temp.pageSize, query);\n            skip = (skip - 1) * take;\n        }\n        else if ('onRange' in singles) {\n            temp = singles.onRange;\n            skip = temp.start;\n            take = temp.end - temp.start;\n        }\n        // Sorting\n        for (var i = 0; i < queries.sorts.length; i++) {\n            temp = DataUtil.getValue(queries.sorts[i].e.fieldName, query);\n            request.sorts.push(DataUtil.callAdaptorFunction(this, 'onEachSort', { name: temp, direction: queries.sorts[i].e.direction }, query));\n        }\n        // hierarchy\n        if (hierarchyFilters) {\n            temp = this.getFiltersFrom(hierarchyFilters, query);\n            if (temp) {\n                request.filters.push(DataUtil.callAdaptorFunction(this, 'onEachWhere', temp.toJson(), query));\n            }\n        }\n        // Filters\n        for (var i = 0; i < queries.filters.length; i++) {\n            var res = DataUtil.callAdaptorFunction(this, 'onEachWhere', queries.filters[i].e.toJson(), query);\n            if ((this.getModuleName &&\n                this.getModuleName() === 'ODataV4Adaptor') &&\n                !isNullOrUndefined(queries.filters[i].e.key) && queries.filters.length > 1) {\n                res = \"(\" + res + \")\";\n            }\n            request.filters.push(res);\n            var keys_3 = typeof request.filters[i] === 'object' ? Object.keys(request.filters[i]) : [];\n            for (var _i = 0, keys_1 = keys_3; _i < keys_1.length; _i++) {\n                var prop = keys_1[_i];\n                if (DataUtil.isNull((request)[prop])) {\n                    delete request[prop];\n                }\n            }\n        }\n        // Searches\n        for (var i = 0; i < queries.searches.length; i++) {\n            temp = queries.searches[i].e;\n            request.searches.push(DataUtil.callAdaptorFunction(this, 'onEachSearch', {\n                fields: temp.fieldNames,\n                operator: temp.operator,\n                key: temp.searchKey,\n                ignoreCase: temp.ignoreCase\n            }, query));\n        }\n        // Grouping\n        for (var i = 0; i < queries.groups.length; i++) {\n            request.groups.push(DataUtil.getValue(queries.groups[i].e.fieldName, query));\n        }\n        // aggregates\n        for (var i = 0; i < queries.aggregates.length; i++) {\n            temp = queries.aggregates[i].e;\n            request.aggregates.push({ type: temp.type, field: DataUtil.getValue(temp.field, query) });\n        }\n        var req = {};\n        this.getRequestQuery(options, query, singles, request, req);\n        // Params\n        DataUtil.callAdaptorFunction(this, 'addParams', { dm: dm, query: query, params: params, reqParams: req });\n        if (query.lazyLoad.length) {\n            for (var i = 0; i < query.lazyLoad.length; i++) {\n                req[query.lazyLoad[i].key] = query.lazyLoad[i].value;\n            }\n        }\n        // cleanup\n        var keys = Object.keys(req);\n        for (var _a = 0, keys_2 = keys; _a < keys_2.length; _a++) {\n            var prop = keys_2[_a];\n            if (DataUtil.isNull(req[prop]) || req[prop] === '' || req[prop].length === 0) {\n                delete req[prop];\n            }\n        }\n        if (!(options.skip in req && options.take in req) && take !== null) {\n            req[options.skip] = DataUtil.callAdaptorFunction(this, 'onSkip', skip, query);\n            req[options.take] = DataUtil.callAdaptorFunction(this, 'onTake', take, query);\n        }\n        var p = this.pvt;\n        this.pvt = {};\n        if (this.options.requestType === 'json') {\n            return {\n                data: JSON.stringify(req, DataUtil.parse.jsonDateReplacer),\n                url: url,\n                pvtData: p,\n                type: 'POST',\n                contentType: 'application/json; charset=utf-8'\n            };\n        }\n        temp = this.convertToQueryString(req, query, dm);\n        temp = (dm.dataSource.url.indexOf('?') !== -1 ? '&' : '/') + temp;\n        return {\n            type: 'GET', url: temp.length ? url.replace(/\\/*$/, temp) : url, pvtData: p\n        };\n    };\n    UrlAdaptor.prototype.getRequestQuery = function (options, query, singles, request, request1) {\n        var param = 'param';\n        var req = request1;\n        req[options.from] = query.fromTable;\n        if (options.apply && query.distincts.length) {\n            req[options.apply] = 'onDistinct' in this ? DataUtil.callAdaptorFunction(this, 'onDistinct', query.distincts) : '';\n        }\n        if (!query.distincts.length && options.expand) {\n            req[options.expand] = 'onExpand' in this && 'onSelect' in singles ?\n                DataUtil.callAdaptorFunction(this, 'onExpand', { selects: DataUtil.getValue(singles.onSelect.fieldNames, query), expands: query.expands }, query) : query.expands;\n        }\n        req[options.select] = 'onSelect' in singles && !query.distincts.length ?\n            DataUtil.callAdaptorFunction(this, 'onSelect', DataUtil.getValue(singles.onSelect.fieldNames, query), query) : '';\n        req[options.count] = query.isCountRequired ? DataUtil.callAdaptorFunction(this, 'onCount', query.isCountRequired, query) : '';\n        req[options.search] = request.searches.length ? DataUtil.callAdaptorFunction(this, 'onSearch', request.searches, query) : '';\n        req[options.skip] = 'onSkip' in singles ?\n            DataUtil.callAdaptorFunction(this, 'onSkip', DataUtil.getValue(singles.onSkip.nos, query), query) : '';\n        req[options.take] = 'onTake' in singles ?\n            DataUtil.callAdaptorFunction(this, 'onTake', DataUtil.getValue(singles.onTake.nos, query), query) : '';\n        req[options.where] = request.filters.length || request.searches.length ?\n            DataUtil.callAdaptorFunction(this, 'onWhere', request.filters, query) : '';\n        req[options.sortBy] = request.sorts.length ? DataUtil.callAdaptorFunction(this, 'onSortBy', request.sorts, query) : '';\n        req[options.group] = request.groups.length ? DataUtil.callAdaptorFunction(this, 'onGroup', request.groups, query) : '';\n        req[options.aggregates] = request.aggregates.length ?\n            DataUtil.callAdaptorFunction(this, 'onAggregates', request.aggregates, query) : '';\n        req[param] = [];\n    };\n    /**\n     * Convert the object from processQuery to string which can be added query string.\n     * @param  {Object} req\n     * @param  {Query} query\n     * @param  {DataManager} dm\n     */\n    UrlAdaptor.prototype.convertToQueryString = function (request, query, dm) {\n        return '';\n        // this needs to be overridden\n    };\n    /**\n     * Return the data from the data manager processing.\n     * @param  {DataResult} data\n     * @param  {DataOptions} ds?\n     * @param  {Query} query?\n     * @param  {XMLHttpRequest} xhr?\n     * @param  {Object} request?\n     * @param  {CrudOptions} changes?\n     */\n    UrlAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n        if (xhr && xhr.getResponseHeader('Content-Type') &&\n            xhr.getResponseHeader('Content-Type').indexOf('application/json') !== -1) {\n            var handleTimeZone = DataUtil.timeZoneHandling;\n            if (ds && !ds.timeZoneHandling) {\n                DataUtil.timeZoneHandling = false;\n            }\n            data = DataUtil.parse.parseJson(data);\n            DataUtil.timeZoneHandling = handleTimeZone;\n        }\n        var requests = request;\n        var pvt = requests.pvtData || {};\n        var groupDs = data ? data.groupDs : [];\n        if (xhr && xhr.getResponseHeader('Content-Type') &&\n            xhr.getResponseHeader('Content-Type').indexOf('xml') !== -1) {\n            return (query.isCountRequired ? { result: [], count: 0 } : []);\n        }\n        var d = JSON.parse(requests.data);\n        if (d && d.action === 'batch' && data && data.addedRecords) {\n            changes.addedRecords = data.addedRecords;\n            return changes;\n        }\n        if (data && data.d) {\n            data = data.d;\n        }\n        var args = {};\n        if (data && 'count' in data) {\n            args.count = data.count;\n        }\n        args.result = data && data.result ? data.result : data;\n        var isExpand = false;\n        if (Array.isArray(data.result) && data.result.length) {\n            var key = 'key';\n            var val = 'value';\n            var level = 'level';\n            if (!isNullOrUndefined(data.result[0][key])) {\n                args.result = this.formRemoteGroupedData(args.result, 1, pvt.groups.length - 1);\n            }\n            if (query && query.lazyLoad.length && pvt.groups.length) {\n                for (var i = 0; i < query.lazyLoad.length; i++) {\n                    if (query.lazyLoad[i][key] === 'onDemandGroupInfo') {\n                        var value = query.lazyLoad[i][val][level];\n                        if (pvt.groups.length === value) {\n                            isExpand = true;\n                        }\n                    }\n                }\n            }\n        }\n        if (!isExpand) {\n            this.getAggregateResult(pvt, data, args, groupDs, query);\n        }\n        return DataUtil.isNull(args.count) ? args.result : { result: args.result, count: args.count, aggregates: args.aggregates };\n    };\n    UrlAdaptor.prototype.formRemoteGroupedData = function (data, level, childLevel) {\n        for (var i = 0; i < data.length; i++) {\n            if (data[i].items.length && Object.keys(data[i].items[0]).indexOf('key') > -1) {\n                this.formRemoteGroupedData(data[i].items, level + 1, childLevel - 1);\n            }\n        }\n        var uid = 'GroupGuid';\n        var childLvl = 'childLevels';\n        var lvl = 'level';\n        var records = 'records';\n        data[uid] = consts$1[uid];\n        data[lvl] = level;\n        data[childLvl] = childLevel;\n        data[records] = data[0].items.length ? this.getGroupedRecords(data, !isNullOrUndefined(data[0].items[records])) : [];\n        return data;\n    };\n    UrlAdaptor.prototype.getGroupedRecords = function (data, hasRecords) {\n        var childGroupedRecords = [];\n        var records = 'records';\n        for (var i = 0; i < data.length; i++) {\n            if (!hasRecords) {\n                for (var j = 0; j < data[i].items.length; j++) {\n                    childGroupedRecords.push(data[i].items[j]);\n                }\n            }\n            else {\n                childGroupedRecords = childGroupedRecords.concat(data[i].items[records]);\n            }\n        }\n        return childGroupedRecords;\n    };\n    /**\n     * Add the group query to the adaptor`s option.\n     * @param  {Object[]} e\n     * @returns void\n     */\n    UrlAdaptor.prototype.onGroup = function (e) {\n        this.pvt.groups = e;\n        return e;\n    };\n    /**\n     * Add the aggregate query to the adaptor`s option.\n     * @param  {Aggregates[]} e\n     * @returns void\n     */\n    UrlAdaptor.prototype.onAggregates = function (e) {\n        this.pvt.aggregates = e;\n    };\n    /**\n     * Prepare the request body based on the newly added, removed and updated records.\n     * The result is used by the batch request.\n     * @param  {DataManager} dm\n     * @param  {CrudOptions} changes\n     * @param  {Object} e\n     */\n    UrlAdaptor.prototype.batchRequest = function (dm, changes, e, query, original) {\n        var url;\n        var key;\n        return {\n            type: 'POST',\n            url: dm.dataSource.batchUrl || dm.dataSource.crudUrl || dm.dataSource.removeUrl || dm.dataSource.url,\n            contentType: 'application/json; charset=utf-8',\n            dataType: 'json',\n            data: JSON.stringify(extend({}, {\n                changed: changes.changedRecords,\n                added: changes.addedRecords,\n                deleted: changes.deletedRecords,\n                action: 'batch',\n                table: e[url],\n                key: e[key]\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    /**\n     * Method will trigger before send the request to server side.\n     * Used to set the custom header or modify the request options.\n     * @param  {DataManager} dm\n     * @param  {XMLHttpRequest} request\n     * @returns void\n     */\n    UrlAdaptor.prototype.beforeSend = function (dm, request) {\n        // need to extend this method\n    };\n    /**\n     * Prepare and returns request body which is used to insert a new record in the table.\n     * @param  {DataManager} dm\n     * @param  {Object} data\n     * @param  {string} tableName\n     */\n    UrlAdaptor.prototype.insert = function (dm, data, tableName, query) {\n        return {\n            url: dm.dataSource.insertUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            data: JSON.stringify(extend({}, {\n                value: data,\n                table: tableName,\n                action: 'insert'\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    /**\n     * Prepare and return request body which is used to remove record from the table.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {number|string} value\n     * @param  {string} tableName\n     */\n    UrlAdaptor.prototype.remove = function (dm, keyField, value, tableName, query) {\n        return {\n            type: 'POST',\n            url: dm.dataSource.removeUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            data: JSON.stringify(extend({}, {\n                key: value,\n                keyColumn: keyField,\n                table: tableName,\n                action: 'remove'\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    /**\n     * Prepare and return request body which is used to update record.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {Object} value\n     * @param  {string} tableName\n     */\n    UrlAdaptor.prototype.update = function (dm, keyField, value, tableName, query) {\n        return {\n            type: 'POST',\n            url: dm.dataSource.updateUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            data: JSON.stringify(extend({}, {\n                value: value,\n                action: 'update',\n                keyColumn: keyField,\n                key: DataUtil.getObject(keyField, value),\n                table: tableName\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    /**\n     * To generate the predicate based on the filtered query.\n     * @param  {Object[]|string[]|number[]} data\n     * @param  {Query} query\n     * @hidden\n     */\n    UrlAdaptor.prototype.getFiltersFrom = function (data, query) {\n        var key = query.fKey;\n        var value;\n        var prop = key;\n        var pKey = query.key;\n        var predicats = [];\n        if (typeof data[0] !== 'object') {\n            prop = null;\n        }\n        for (var i = 0; i < data.length; i++) {\n            if (typeof data[0] === 'object') {\n                value = DataUtil.getObject(pKey || prop, data[i]);\n            }\n            else {\n                value = data[i];\n            }\n            predicats.push(new Predicate(key, 'equal', value));\n        }\n        return Predicate.or(predicats);\n    };\n    UrlAdaptor.prototype.getAggregateResult = function (pvt, data, args, groupDs, query) {\n        var pData = data;\n        if (data && data.result) {\n            pData = data.result;\n        }\n        if (pvt && pvt.aggregates && pvt.aggregates.length) {\n            var agg = pvt.aggregates;\n            var fn = void 0;\n            var aggregateData = pData;\n            var res = {};\n            if (data.aggregate) {\n                aggregateData = data.aggregate;\n            }\n            for (var i = 0; i < agg.length; i++) {\n                fn = DataUtil.aggregates[agg[i].type];\n                if (fn) {\n                    res[agg[i].field + ' - ' + agg[i].type] = fn(aggregateData, agg[i].field);\n                }\n            }\n            args.aggregates = res;\n        }\n        var key = 'key';\n        var isServerGrouping = Array.isArray(data.result) && data.result.length && !isNullOrUndefined(data.result[0][key]);\n        if (pvt && pvt.groups && pvt.groups.length && !isServerGrouping) {\n            var groups = pvt.groups;\n            for (var i = 0; i < groups.length; i++) {\n                var level = null;\n                if (!isNullOrUndefined(groupDs)) {\n                    groupDs = DataUtil.group(groupDs, groups[i]);\n                }\n                var groupQuery = Query.filterQueries(query.queries, 'onGroup')[i].e;\n                pData = DataUtil.group(pData, groups[i], pvt.aggregates, level, groupDs, groupQuery.comparer);\n            }\n            args.result = pData;\n        }\n        return args;\n    };\n    UrlAdaptor.prototype.getQueryRequest = function (query) {\n        var req = { sorts: [], groups: [], filters: [], searches: [], aggregates: [] };\n        req.sorts = Query.filterQueries(query.queries, 'onSortBy');\n        req.groups = Query.filterQueries(query.queries, 'onGroup');\n        req.filters = Query.filterQueries(query.queries, 'onWhere');\n        req.searches = Query.filterQueries(query.queries, 'onSearch');\n        req.aggregates = Query.filterQueries(query.queries, 'onAggregates');\n        return req;\n    };\n    UrlAdaptor.prototype.addParams = function (options) {\n        var req = options.reqParams;\n        if (options.params.length) {\n            req.params = {};\n        }\n        for (var _i = 0, _a = options.params; _i < _a.length; _i++) {\n            var tmp = _a[_i];\n            if (req[tmp.key]) {\n                throw new Error('Query() - addParams: Custom Param is conflicting other request arguments');\n            }\n            req[tmp.key] = tmp.value;\n            if (tmp.fn) {\n                req[tmp.key] = tmp.fn.call(options.query, tmp.key, options.query, options.dm);\n            }\n            req.params[tmp.key] = req[tmp.key];\n        }\n    };\n    return UrlAdaptor;\n}(Adaptor));\n/**\n * OData Adaptor that is extended from URL Adaptor, is used for consuming data through OData Service.\n * @hidden\n */\nvar ODataAdaptor = /** @__PURE__ @class */ (function (_super) {\n    __extends(ODataAdaptor, _super);\n    function ODataAdaptor(props) {\n        var _this = _super.call(this) || this;\n        // options replaced the default adaptor options\n        _this.options = extend({}, _this.options, {\n            requestType: 'get',\n            accept: 'application/json;odata=light;q=1,application/json;odata=verbose;q=0.5',\n            multipartAccept: 'multipart/mixed',\n            sortBy: '$orderby',\n            select: '$select',\n            skip: '$skip',\n            take: '$top',\n            count: '$inlinecount',\n            where: '$filter',\n            expand: '$expand',\n            batch: '$batch',\n            changeSet: '--changeset_',\n            batchPre: 'batch_',\n            contentId: 'Content-Id: ',\n            batchContent: 'Content-Type: multipart/mixed; boundary=',\n            changeSetContent: 'Content-Type: application/http\\nContent-Transfer-Encoding: binary ',\n            batchChangeSetContentType: 'Content-Type: application/json; charset=utf-8 ',\n            updateType: 'PUT'\n        });\n        extend(_this.options, props || {});\n        return _this;\n    }\n    ODataAdaptor.prototype.getModuleName = function () {\n        return 'ODataAdaptor';\n    };\n    /**\n     * Generate request string based on the filter criteria from query.\n     * @param  {Predicate} pred\n     * @param  {boolean} requiresCast?\n     */\n    ODataAdaptor.prototype.onPredicate = function (predicate, query, requiresCast) {\n        var returnValue = '';\n        var operator;\n        var guid;\n        var val = predicate.value;\n        var type = typeof val;\n        var field = predicate.field ? ODataAdaptor.getField(predicate.field) : null;\n        if (val instanceof Date) {\n            val = 'datetime\\'' + DataUtil.parse.replacer(val) + '\\'';\n        }\n        if (type === 'string') {\n            val = val.replace(/'/g, \"''\");\n            if (predicate.ignoreCase) {\n                val = val.toLowerCase();\n            }\n            val = encodeURIComponent(val);\n            val = '\\'' + val + '\\'';\n            if (requiresCast) {\n                field = 'cast(' + field + ', \\'Edm.String\\')';\n            }\n            if (DataUtil.parse.isGuid(val)) {\n                guid = 'guid';\n            }\n            if (predicate.ignoreCase) {\n                if (!guid) {\n                    field = 'tolower(' + field + ')';\n                }\n                val = val.toLowerCase();\n            }\n        }\n        operator = DataUtil.odBiOperator[predicate.operator];\n        if (operator) {\n            returnValue += field;\n            returnValue += operator;\n            if (guid) {\n                returnValue += guid;\n            }\n            return returnValue + val;\n        }\n        if (!isNullOrUndefined(this.getModuleName) && this.getModuleName() === 'ODataV4Adaptor') {\n            operator = DataUtil.odv4UniOperator[predicate.operator];\n        }\n        else {\n            operator = DataUtil.odUniOperator[predicate.operator];\n        }\n        if (operator === 'substringof') {\n            var temp = val;\n            val = field;\n            field = temp;\n        }\n        returnValue += operator + '(';\n        returnValue += field + ',';\n        if (guid) {\n            returnValue += guid;\n        }\n        returnValue += val + ')';\n        return returnValue;\n    };\n    ODataAdaptor.prototype.addParams = function (options) {\n        _super.prototype.addParams.call(this, options);\n        delete options.reqParams.params;\n    };\n    /**\n     * Generate request string based on the multiple filter criteria from query.\n     * @param  {Predicate} pred\n     * @param  {boolean} requiresCast?\n     */\n    ODataAdaptor.prototype.onComplexPredicate = function (predicate, query, requiresCast) {\n        var res = [];\n        for (var i = 0; i < predicate.predicates.length; i++) {\n            res.push('(' + this.onEachWhere(predicate.predicates[i], query, requiresCast) + ')');\n        }\n        return res.join(' ' + predicate.condition + ' ');\n    };\n    /**\n     * Generate query string based on the multiple filter criteria from query.\n     * @param  {Predicate} filter\n     * @param  {boolean} requiresCast?\n     */\n    ODataAdaptor.prototype.onEachWhere = function (filter, query, requiresCast) {\n        return filter.isComplex ? this.onComplexPredicate(filter, query, requiresCast) : this.onPredicate(filter, query, requiresCast);\n    };\n    /**\n     * Generate query string based on the multiple filter criteria from query.\n     * @param  {string[]} filters\n     */\n    ODataAdaptor.prototype.onWhere = function (filters) {\n        if (this.pvt.search) {\n            filters.push(this.onEachWhere(this.pvt.search, null, true));\n        }\n        return filters.join(' and ');\n    };\n    /**\n     * Generate query string based on the multiple search criteria from query.\n     * @param  {{fields:string[]} e\n     * @param  {string} operator\n     * @param  {string} key\n     * @param  {boolean}} ignoreCase\n     */\n    ODataAdaptor.prototype.onEachSearch = function (e) {\n        if (e.fields && e.fields.length === 0) {\n            DataUtil.throwError('Query() - Search : oData search requires list of field names to search');\n        }\n        var filter = this.pvt.search || [];\n        for (var i = 0; i < e.fields.length; i++) {\n            filter.push(new Predicate(e.fields[i], e.operator, e.key, e.ignoreCase));\n        }\n        this.pvt.search = filter;\n    };\n    /**\n     * Generate query string based on the search criteria from query.\n     * @param  {Object} e\n     */\n    ODataAdaptor.prototype.onSearch = function (e) {\n        this.pvt.search = Predicate.or(this.pvt.search);\n        return '';\n    };\n    /**\n     * Generate query string based on multiple sort criteria from query.\n     * @param  {QueryOptions} e\n     */\n    ODataAdaptor.prototype.onEachSort = function (e) {\n        var res = [];\n        if (e.name instanceof Array) {\n            for (var i = 0; i < e.name.length; i++) {\n                res.push(ODataAdaptor.getField(e.name[i]) + (e.direction === 'descending' ? ' desc' : ''));\n            }\n        }\n        else {\n            res.push(ODataAdaptor.getField(e.name) + (e.direction === 'descending' ? ' desc' : ''));\n        }\n        return res.join(',');\n    };\n    /**\n     * Returns sort query string.\n     * @param  {string[]} e\n     */\n    ODataAdaptor.prototype.onSortBy = function (e) {\n        return e.reverse().join(',');\n    };\n    /**\n     * Adds the group query to the adaptor option.\n     * @param  {Object[]} e\n     * @returns string\n     */\n    ODataAdaptor.prototype.onGroup = function (e) {\n        this.pvt.groups = e;\n        return [];\n    };\n    /**\n     * Returns the select query string.\n     * @param  {string[]} e\n     */\n    ODataAdaptor.prototype.onSelect = function (e) {\n        for (var i = 0; i < e.length; i++) {\n            e[i] = ODataAdaptor.getField(e[i]);\n        }\n        return e.join(',');\n    };\n    /**\n     * Add the aggregate query to the adaptor option.\n     * @param  {Object[]} e\n     * @returns string\n     */\n    ODataAdaptor.prototype.onAggregates = function (e) {\n        this.pvt.aggregates = e;\n        return '';\n    };\n    /**\n     * Returns the query string which requests total count from the data source.\n     * @param  {boolean} e\n     * @returns string\n     */\n    ODataAdaptor.prototype.onCount = function (e) {\n        return e === true ? 'allpages' : '';\n    };\n    /**\n     * Method will trigger before send the request to server side.\n     * Used to set the custom header or modify the request options.\n     * @param  {DataManager} dm\n     * @param  {XMLHttpRequest} request\n     * @param  {Ajax} settings?\n     */\n    ODataAdaptor.prototype.beforeSend = function (dm, request, settings) {\n        if (DataUtil.endsWith(settings.url, this.options.batch) && settings.type.toLowerCase() === 'post') {\n            request.setRequestHeader('Accept', this.options.multipartAccept);\n            request.setRequestHeader('DataServiceVersion', '2.0');\n            request.overrideMimeType('text/plain; charset=x-user-defined');\n        }\n        else {\n            request.setRequestHeader('Accept', this.options.accept);\n        }\n        request.setRequestHeader('DataServiceVersion', '2.0');\n        request.setRequestHeader('MaxDataServiceVersion', '2.0');\n    };\n    /**\n     * Returns the data from the query processing.\n     * @param  {DataResult} data\n     * @param  {DataOptions} ds?\n     * @param  {Query} query?\n     * @param  {XMLHttpRequest} xhr?\n     * @param  {Ajax} request?\n     * @param  {CrudOptions} changes?\n     * @returns aggregateResult\n     */\n    ODataAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n        var metaCheck = 'odata.metadata';\n        if ((request && request.type === 'GET') && !this.rootUrl && data[metaCheck]) {\n            var dataUrls = data[metaCheck].split('/$metadata#');\n            this.rootUrl = dataUrls[0];\n            this.resourceTableName = dataUrls[1];\n        }\n        var pvtData = 'pvtData';\n        if (!isNullOrUndefined(data.d)) {\n            var dataCopy = ((query && query.isCountRequired) ? data.d.results : data.d);\n            var metaData = '__metadata';\n            if (!isNullOrUndefined(dataCopy)) {\n                for (var i = 0; i < dataCopy.length; i++) {\n                    if (!isNullOrUndefined(dataCopy[i][metaData])) {\n                        delete dataCopy[i][metaData];\n                    }\n                }\n            }\n        }\n        var pvt = request && request[pvtData];\n        var emptyAndBatch = this.processBatchResponse(data, query, xhr, request, changes);\n        if (emptyAndBatch) {\n            return emptyAndBatch;\n        }\n        var versionCheck = xhr && request.getResponseHeader('DataServiceVersion');\n        var count = null;\n        var version = (versionCheck && parseInt(versionCheck, 10)) || 2;\n        if (query && query.isCountRequired) {\n            var oDataCount = '__count';\n            if (data[oDataCount] || data['odata.count']) {\n                count = data[oDataCount] || data['odata.count'];\n            }\n            if (data.d) {\n                data = data.d;\n            }\n            if (data[oDataCount] || data['odata.count']) {\n                count = data[oDataCount] || data['odata.count'];\n            }\n        }\n        if (version === 3 && data.value) {\n            data = data.value;\n        }\n        if (data.d) {\n            data = data.d;\n        }\n        if (version < 3 && data.results) {\n            data = data.results;\n        }\n        var args = {};\n        args.count = count;\n        args.result = data;\n        this.getAggregateResult(pvt, data, args, null, query);\n        return DataUtil.isNull(count) ? args.result : { result: args.result, count: args.count, aggregates: args.aggregates };\n    };\n    /**\n     * Converts the request object to query string.\n     * @param  {Object} req\n     * @param  {Query} query\n     * @param  {DataManager} dm\n     * @returns tableName\n     */\n    ODataAdaptor.prototype.convertToQueryString = function (request, query, dm) {\n        var res = [];\n        var table = 'table';\n        var tableName = request[table] || '';\n        var format = '$format';\n        delete request[table];\n        if (dm.dataSource.requiresFormat) {\n            request[format] = 'json';\n        }\n        var keys = Object.keys(request);\n        for (var _i = 0, keys_4 = keys; _i < keys_4.length; _i++) {\n            var prop = keys_4[_i];\n            res.push(prop + '=' + request[prop]);\n        }\n        res = res.join('&');\n        if (dm.dataSource.url && dm.dataSource.url.indexOf('?') !== -1 && !tableName) {\n            return res;\n        }\n        return res.length ? tableName + '?' + res : tableName || '';\n    };\n    ODataAdaptor.prototype.localTimeReplacer = function (key, convertObj) {\n        for (var _i = 0, _a = !isNullOrUndefined(convertObj) ? Object.keys(convertObj) : []; _i < _a.length; _i++) {\n            var prop = _a[_i];\n            if ((convertObj[prop] instanceof Date)) {\n                convertObj[prop] = DataUtil.dateParse.toLocalTime(convertObj[prop]);\n            }\n        }\n        return convertObj;\n    };\n    /**\n     * Prepare and returns request body which is used to insert a new record in the table.\n     * @param  {DataManager} dm\n     * @param  {Object} data\n     * @param  {string} tableName?\n     */\n    ODataAdaptor.prototype.insert = function (dm, data, tableName) {\n        return {\n            url: (dm.dataSource.insertUrl || dm.dataSource.url).replace(/\\/*$/, tableName ? '/' + tableName : ''),\n            data: JSON.stringify(data, this.options.localTime ? this.localTimeReplacer : null)\n        };\n    };\n    /**\n     * Prepare and return request body which is used to remove record from the table.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {number} value\n     * @param  {string} tableName?\n     */\n    ODataAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n        var url;\n        if (typeof value === 'string' && !DataUtil.parse.isGuid(value)) {\n            url = \"('\" + value + \"')\";\n        }\n        else {\n            url = \"(\" + value + \")\";\n        }\n        return {\n            type: 'DELETE',\n            url: (dm.dataSource.removeUrl || dm.dataSource.url).replace(/\\/*$/, tableName ? '/' + tableName : '') + url\n        };\n    };\n    /**\n     * Updates existing record and saves the changes to the table.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {Object} value\n     * @param  {string} tableName?\n     * @returns this\n     */\n    ODataAdaptor.prototype.update = function (dm, keyField, value, tableName, query, original) {\n        if (this.options.updateType === 'PATCH' && !isNullOrUndefined(original)) {\n            value = this.compareAndRemove(value, original, keyField);\n        }\n        var url;\n        if (typeof value[keyField] === 'string' && !DataUtil.parse.isGuid(value[keyField])) {\n            url = \"('\" + value[keyField] + \"')\";\n        }\n        else {\n            url = \"(\" + value[keyField] + \")\";\n        }\n        return {\n            type: this.options.updateType,\n            url: (dm.dataSource.updateUrl || dm.dataSource.url).replace(/\\/*$/, tableName ? '/' + tableName : '') + url,\n            data: JSON.stringify(value, this.options.localTime ? this.localTimeReplacer : null),\n            accept: this.options.accept\n        };\n    };\n    /**\n     * Prepare the request body based on the newly added, removed and updated records.\n     * The result is used by the batch request.\n     * @param  {DataManager} dm\n     * @param  {CrudOptions} changes\n     * @param  {RemoteArgs} e\n     * @returns {Object}\n     */\n    ODataAdaptor.prototype.batchRequest = function (dm, changes, e, query, original) {\n        var initialGuid = e.guid = DataUtil.getGuid(this.options.batchPre);\n        var url = this.rootUrl ? this.rootUrl + '/' + this.options.batch :\n            dm.dataSource.url.replace(/\\/*$/, '/' + this.options.batch);\n        e.url = this.resourceTableName ? this.resourceTableName : e.url;\n        var args = {\n            url: e.url,\n            key: e.key,\n            cid: 1,\n            cSet: DataUtil.getGuid(this.options.changeSet)\n        };\n        var req = '--' + initialGuid + '\\n';\n        req += 'Content-Type: multipart/mixed; boundary=' + args.cSet.replace('--', '') + '\\n';\n        this.pvt.changeSet = 0;\n        req += this.generateInsertRequest(changes.addedRecords, args, dm);\n        req += this.generateUpdateRequest(changes.changedRecords, args, dm, original ? original.changedRecords : []);\n        req += this.generateDeleteRequest(changes.deletedRecords, args, dm);\n        req += args.cSet + '--\\n';\n        req += '--' + initialGuid + '--';\n        return {\n            type: 'POST',\n            url: url,\n            dataType: 'json',\n            contentType: 'multipart/mixed; charset=UTF-8;boundary=' + initialGuid,\n            data: req\n        };\n    };\n    /**\n     * Generate the string content from the removed records.\n     * The result will be send during batch update.\n     * @param  {Object[]} arr\n     * @param  {RemoteArgs} e\n     * @returns this\n     */\n    ODataAdaptor.prototype.generateDeleteRequest = function (arr, e, dm) {\n        if (!arr) {\n            return '';\n        }\n        var req = '';\n        var stat = {\n            'method': 'DELETE ',\n            'url': function (data, i, key) {\n                var url = DataUtil.getObject(key, data[i]);\n                if (typeof url === 'number' || DataUtil.parse.isGuid(url)) {\n                    return '(' + url + ')';\n                }\n                else if (url instanceof Date) {\n                    var dateTime = data[i][key];\n                    return '(' + dateTime.toJSON() + ')';\n                }\n                else {\n                    return \"('\" + url + \"')\";\n                }\n            },\n            'data': function (data, i) { return ''; }\n        };\n        req = this.generateBodyContent(arr, e, stat, dm);\n        return req + '\\n';\n    };\n    /**\n     * Generate the string content from the inserted records.\n     * The result will be send during batch update.\n     * @param  {Object[]} arr\n     * @param  {RemoteArgs} e\n     */\n    ODataAdaptor.prototype.generateInsertRequest = function (arr, e, dm) {\n        if (!arr) {\n            return '';\n        }\n        var req = '';\n        var stat = {\n            'method': 'POST ',\n            'url': function (data, i, key) { return ''; },\n            'data': function (data, i) { return JSON.stringify(data[i]) + '\\n\\n'; }\n        };\n        req = this.generateBodyContent(arr, e, stat, dm);\n        return req;\n    };\n    /**\n     * Generate the string content from the updated records.\n     * The result will be send during batch update.\n     * @param  {Object[]} arr\n     * @param  {RemoteArgs} e\n     */\n    ODataAdaptor.prototype.generateUpdateRequest = function (arr, e, dm, org) {\n        var _this = this;\n        if (!arr) {\n            return '';\n        }\n        var req = '';\n        arr.forEach(function (change) { return change = _this.compareAndRemove(change, org.filter(function (o) { return DataUtil.getObject(e.key, o) === DataUtil.getObject(e.key, change); })[0], e.key); });\n        var stat = {\n            'method': this.options.updateType + ' ',\n            'url': function (data, i, key) {\n                if (typeof data[i][key] === 'number' || DataUtil.parse.isGuid(data[i][key])) {\n                    return '(' + data[i][key] + ')';\n                }\n                else if (data[i][key] instanceof Date) {\n                    var date = data[i][key];\n                    return '(' + date.toJSON() + ')';\n                }\n                else {\n                    return \"('\" + data[i][key] + \"')\";\n                }\n            },\n            'data': function (data, i) { return JSON.stringify(data[i]) + '\\n\\n'; }\n        };\n        req = this.generateBodyContent(arr, e, stat, dm);\n        return req;\n    };\n    ODataAdaptor.getField = function (prop) {\n        return prop.replace(/\\./g, '/');\n    };\n    ODataAdaptor.prototype.generateBodyContent = function (arr, e, stat, dm) {\n        var req = '';\n        for (var i = 0; i < arr.length; i++) {\n            req += '\\n' + e.cSet + '\\n';\n            req += this.options.changeSetContent + '\\n\\n';\n            req += stat.method;\n            if (stat.method === 'POST ') {\n                req += (dm.dataSource.insertUrl || dm.dataSource.crudUrl || e.url) + stat.url(arr, i, e.key) + ' HTTP/1.1\\n';\n            }\n            else if (stat.method === 'PUT ' || stat.method === 'PATCH ') {\n                req += (dm.dataSource.updateUrl || dm.dataSource.crudUrl || e.url) + stat.url(arr, i, e.key) + ' HTTP/1.1\\n';\n            }\n            else if (stat.method === 'DELETE ') {\n                req += (dm.dataSource.removeUrl || dm.dataSource.crudUrl || e.url) + stat.url(arr, i, e.key) + ' HTTP/1.1\\n';\n            }\n            req += 'Accept: ' + this.options.accept + '\\n';\n            req += 'Content-Id: ' + this.pvt.changeSet++ + '\\n';\n            req += this.options.batchChangeSetContentType + '\\n';\n            if (!isNullOrUndefined(arr[i]['@odata.etag'])) {\n                req += 'If-Match: ' + arr[i]['@odata.etag'] + '\\n\\n';\n                delete arr[i]['@odata.etag'];\n            }\n            else {\n                req += '\\n';\n            }\n            req += stat.data(arr, i);\n        }\n        return req;\n    };\n    ODataAdaptor.prototype.processBatchResponse = function (data, query, xhr, request, changes) {\n        if (xhr && xhr.getResponseHeader('Content-Type') && xhr.getResponseHeader('Content-Type').indexOf('xml') !== -1) {\n            return (query.isCountRequired ? { result: [], count: 0 } : []);\n        }\n        if (request && this.options.batch && DataUtil.endsWith(request.url, this.options.batch) && request.type.toLowerCase() === 'post') {\n            var guid = xhr.getResponseHeader('Content-Type');\n            var cIdx = void 0;\n            var jsonObj = void 0;\n            var d = data + '';\n            guid = guid.substring(guid.indexOf('=batchresponse') + 1);\n            d = d.split(guid);\n            if (d.length < 2) {\n                return {};\n            }\n            d = d[1];\n            var exVal = /(?:\\bContent-Type.+boundary=)(changesetresponse.+)/i.exec(d);\n            if (exVal) {\n                d.replace(exVal[0], '');\n            }\n            var changeGuid = exVal ? exVal[1] : '';\n            d = d.split(changeGuid);\n            for (var i = d.length; i > -1; i--) {\n                if (!/\\bContent-ID:/i.test(d[i]) || !/\\bHTTP.+201/.test(d[i])) {\n                    continue;\n                }\n                cIdx = parseInt(/\\bContent-ID: (\\d+)/i.exec(d[i])[1], 10);\n                if (changes.addedRecords[cIdx]) {\n                    jsonObj = DataUtil.parse.parseJson(/^\\{.+\\}/m.exec(d[i])[0]);\n                    extend({}, changes.addedRecords[cIdx], this.processResponse(jsonObj));\n                }\n            }\n            return changes;\n        }\n        return null;\n    };\n    ODataAdaptor.prototype.compareAndRemove = function (data, original, key) {\n        var _this = this;\n        if (isNullOrUndefined(original)) {\n            return data;\n        }\n        Object.keys(data).forEach(function (prop) {\n            if (prop !== key && prop !== '@odata.etag') {\n                if (DataUtil.isPlainObject(data[prop])) {\n                    _this.compareAndRemove(data[prop], original[prop]);\n                    var final = Object.keys(data[prop]).filter(function (data) { return data !== '@odata.etag'; });\n                    if (final.length === 0) {\n                        delete data[prop];\n                    }\n                }\n                else if (data[prop] === original[prop]) {\n                    delete data[prop];\n                }\n                else if (data[prop] && original[prop] && data[prop].valueOf() === original[prop].valueOf()) {\n                    delete data[prop];\n                }\n            }\n        });\n        return data;\n    };\n    return ODataAdaptor;\n}(UrlAdaptor));\n/**\n * The OData v4 is an improved version of OData protocols.\n * The DataManager uses the ODataV4Adaptor to consume OData v4 services.\n * @hidden\n */\nvar ODataV4Adaptor = /** @__PURE__ @class */ (function (_super) {\n    __extends(ODataV4Adaptor, _super);\n    function ODataV4Adaptor(props) {\n        var _this = _super.call(this, props) || this;\n        // options replaced the default adaptor options\n        _this.options = extend({}, _this.options, {\n            requestType: 'get',\n            accept: 'application/json, text/javascript, */*; q=0.01',\n            multipartAccept: 'multipart/mixed',\n            sortBy: '$orderby',\n            select: '$select',\n            skip: '$skip',\n            take: '$top',\n            count: '$count',\n            search: '$search',\n            where: '$filter',\n            expand: '$expand',\n            batch: '$batch',\n            changeSet: '--changeset_',\n            batchPre: 'batch_',\n            contentId: 'Content-Id: ',\n            batchContent: 'Content-Type: multipart/mixed; boundary=',\n            changeSetContent: 'Content-Type: application/http\\nContent-Transfer-Encoding: binary ',\n            batchChangeSetContentType: 'Content-Type: application/json; charset=utf-8 ',\n            updateType: 'PATCH',\n            localTime: false,\n            apply: '$apply'\n        });\n        extend(_this.options, props || {});\n        return _this;\n    }\n    /**\n     * @hidden\n     */\n    ODataV4Adaptor.prototype.getModuleName = function () {\n        return 'ODataV4Adaptor';\n    };\n    /**\n     * Returns the query string which requests total count from the data source.\n     * @param  {boolean} e\n     * @returns string\n     */\n    ODataV4Adaptor.prototype.onCount = function (e) {\n        return e === true ? 'true' : '';\n    };\n    /**\n     * Generate request string based on the filter criteria from query.\n     * @param  {Predicate} pred\n     * @param  {boolean} requiresCast?\n     */\n    ODataV4Adaptor.prototype.onPredicate = function (predicate, query, requiresCast) {\n        var returnValue = '';\n        var val = predicate.value;\n        var isDate = val instanceof Date;\n        if (query instanceof Query) {\n            var queries = this.getQueryRequest(query);\n            for (var i = 0; i < queries.filters.length; i++) {\n                if (queries.filters[i].e.key === predicate.value) {\n                    requiresCast = true;\n                }\n            }\n        }\n        returnValue = _super.prototype.onPredicate.call(this, predicate, query, requiresCast);\n        if (isDate) {\n            returnValue = returnValue.replace(/datetime'(.*)'$/, '$1');\n        }\n        if (DataUtil.parse.isGuid(val)) {\n            returnValue = returnValue.replace('guid', '').replace(/'/g, '');\n        }\n        return returnValue;\n    };\n    /**\n     *  Generate query string based on the multiple search criteria from query.\n     * @param  {{fields:string[]} e\n     * @param  {string} operator\n     * @param  {string} key\n     * @param  {boolean}} ignoreCase\n     */\n    ODataV4Adaptor.prototype.onEachSearch = function (e) {\n        var search = this.pvt.searches || [];\n        search.push(e.key);\n        this.pvt.searches = search;\n    };\n    /**\n     *  Generate query string based on the search criteria from query.\n     * @param  {Object} e\n     */\n    ODataV4Adaptor.prototype.onSearch = function (e) {\n        return this.pvt.searches.join(' OR ');\n    };\n    /**\n     * Returns the expand query string.\n     * @param  {string} e\n     */\n    ODataV4Adaptor.prototype.onExpand = function (e) {\n        var _this = this;\n        var selected = {};\n        var expanded = {};\n        var expands = e.expands.slice();\n        var exArr = [];\n        var selects = e.selects.filter(function (item) { return item.indexOf('.') > -1; });\n        selects.forEach(function (select) {\n            var splits = select.split('.');\n            if (!(splits[0] in selected)) {\n                selected[splits[0]] = [];\n            }\n            if (splits.length == 2) {\n                if (selected[splits[0]].length && Object.keys(selected).indexOf(splits[0]) !== -1) {\n                    if (selected[splits[0]][0].indexOf('$expand') !== -1 && selected[splits[0]][0].indexOf(';$select=') === -1) {\n                        selected[splits[0]][0] = selected[splits[0]][0] + ';' + '$select=' + splits[1];\n                    }\n                    else {\n                        selected[splits[0]][0] = selected[splits[0]][0] + ',' + splits[1];\n                    }\n                }\n                else {\n                    selected[splits[0]].push('$select=' + splits[1]);\n                }\n            }\n            else {\n                var sel = '$select=' + splits[splits.length - 1];\n                var exp = '';\n                var close_1 = '';\n                for (var i = 1; i < splits.length - 1; i++) {\n                    exp = exp + '$expand=' + splits[i] + '(';\n                    close_1 = close_1 + ')';\n                }\n                var combineVal = exp + sel + close_1;\n                if (selected[splits[0]].length && Object.keys(selected).indexOf(splits[0]) !== -1 &&\n                    _this.expandQueryIndex(selected[splits[0]], true)) {\n                    var idx = _this.expandQueryIndex(selected[splits[0]]);\n                    selected[splits[0]][idx] = selected[splits[0]][idx] + combineVal.replace('$expand=', ',');\n                }\n                else {\n                    selected[splits[0]].push(combineVal);\n                }\n            }\n        });\n        //Auto expand from select query\n        Object.keys(selected).forEach(function (expand) {\n            if ((expands.indexOf(expand) === -1)) {\n                expands.push(expand);\n            }\n        });\n        expands.forEach(function (expand) {\n            expanded[expand] = expand in selected ? expand + \"(\" + selected[expand].join(';') + \")\" : expand;\n        });\n        Object.keys(expanded).forEach(function (ex) { return exArr.push(expanded[ex]); });\n        return exArr.join(',');\n    };\n    ODataV4Adaptor.prototype.expandQueryIndex = function (query, isExpand) {\n        for (var i = 0; i < query.length; i++) {\n            if (query[i].indexOf('$expand') !== -1) {\n                return isExpand ? true : i;\n            }\n        }\n        return isExpand ? false : 0;\n    };\n    /**\n     * Returns the groupby query string.\n     * @param  {string} e\n     */\n    ODataV4Adaptor.prototype.onDistinct = function (distinctFields) {\n        var fields = distinctFields.map(function (field) { return ODataAdaptor.getField(field); }).join(',');\n        return \"groupby((\" + fields + \"))\";\n    };\n    /**\n     * Returns the select query string.\n     * @param  {string[]} e\n     */\n    ODataV4Adaptor.prototype.onSelect = function (e) {\n        return _super.prototype.onSelect.call(this, e.filter(function (item) { return item.indexOf('.') === -1; }));\n    };\n    /**\n     * Method will trigger before send the request to server side.\n     * Used to set the custom header or modify the request options.\n     * @param  {DataManager} dm\n     * @param  {XMLHttpRequest} request\n     * @param  {Ajax} settings\n     * @returns void\n     */\n    ODataV4Adaptor.prototype.beforeSend = function (dm, request, settings) {\n        if (settings.type === 'POST' || settings.type === 'PUT' || settings.type === 'PATCH') {\n            request.setRequestHeader('Prefer', 'return=representation');\n        }\n        request.setRequestHeader('Accept', this.options.accept);\n    };\n    /**\n     * Returns the data from the query processing.\n     * @param  {DataResult} data\n     * @param  {DataOptions} ds?\n     * @param  {Query} query?\n     * @param  {XMLHttpRequest} xhr?\n     * @param  {Ajax} request?\n     * @param  {CrudOptions} changes?\n     * @returns aggregateResult\n     */\n    ODataV4Adaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n        var metaName = '@odata.context';\n        if ((request && request.type === 'GET') && !this.rootUrl && data[metaName]) {\n            var dataUrl = data[metaName].split('/$metadata#');\n            this.rootUrl = dataUrl[0];\n            this.resourceTableName = dataUrl[1];\n        }\n        var pvtData = 'pvtData';\n        var pvt = request && request[pvtData];\n        var emptyAndBatch = _super.prototype.processBatchResponse.call(this, data, query, xhr, request, changes);\n        if (emptyAndBatch) {\n            return emptyAndBatch;\n        }\n        var count = null;\n        var dataCount = '@odata.count';\n        if (query && query.isCountRequired) {\n            if (dataCount in data) {\n                count = data[dataCount];\n            }\n        }\n        data = !isNullOrUndefined(data.value) ? data.value : data;\n        var args = {};\n        args.count = count;\n        args.result = data;\n        this.getAggregateResult(pvt, data, args, null, query);\n        return DataUtil.isNull(count) ? args.result : { result: args.result, count: count, aggregates: args.aggregates };\n    };\n    return ODataV4Adaptor;\n}(ODataAdaptor));\n/**\n * The Web API is a programmatic interface to define the request and response messages system that is mostly exposed in JSON or XML.\n * The DataManager uses the WebApiAdaptor to consume Web API.\n * Since this adaptor is targeted to interact with Web API created using OData endpoint, it is extended from ODataAdaptor\n * @hidden\n */\nvar WebApiAdaptor = /** @__PURE__ @class */ (function (_super) {\n    __extends(WebApiAdaptor, _super);\n    function WebApiAdaptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    WebApiAdaptor.prototype.getModuleName = function () {\n        return 'WebApiAdaptor';\n    };\n    /**\n     * Prepare and returns request body which is used to insert a new record in the table.\n     * @param  {DataManager} dm\n     * @param  {Object} data\n     * @param  {string} tableName?\n     */\n    WebApiAdaptor.prototype.insert = function (dm, data, tableName) {\n        return {\n            type: 'POST',\n            url: dm.dataSource.url,\n            data: JSON.stringify(data)\n        };\n    };\n    /**\n     * Prepare and return request body which is used to remove record from the table.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {number} value\n     * @param  {string} tableName?\n     */\n    WebApiAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n        return {\n            type: 'DELETE',\n            url: dm.dataSource.url + '/' + value,\n            data: JSON.stringify(value)\n        };\n    };\n    /**\n     * Prepare and return request body which is used to update record.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {Object} value\n     * @param  {string} tableName?\n     */\n    WebApiAdaptor.prototype.update = function (dm, keyField, value, tableName) {\n        return {\n            type: 'PUT',\n            url: dm.dataSource.url,\n            data: JSON.stringify(value)\n        };\n    };\n    WebApiAdaptor.prototype.batchRequest = function (dm, changes, e) {\n        var _this = this;\n        var initialGuid = e.guid = DataUtil.getGuid(this.options.batchPre);\n        var url = dm.dataSource.url.replace(/\\/*$/, '/' + this.options.batch);\n        e.url = this.resourceTableName ? this.resourceTableName : e.url;\n        var req = [];\n        var _loop_1 = function (i, x) {\n            changes.addedRecords.forEach(function (j, d) {\n                var stat = {\n                    'method': 'POST ',\n                    'url': function (data, i, key) { return ''; },\n                    'data': function (data, i) { return JSON.stringify(data[i]) + '\\n\\n'; }\n                };\n                req.push('--' + initialGuid);\n                req.push('Content-Type: application/http; msgtype=request', '');\n                req.push('POST ' + '/api/' + (dm.dataSource.insertUrl || dm.dataSource.crudUrl || e.url)\n                    + stat.url(changes.addedRecords, i, e.key) + ' HTTP/1.1');\n                req.push('Content-Type: ' + 'application/json; charset=utf-8');\n                req.push('Host: ' + location.host);\n                req.push('', j ? JSON.stringify(j) : '');\n            });\n        };\n        //insertion\n        for (var i = 0, x = changes.addedRecords.length; i < x; i++) {\n            _loop_1(i, x);\n        }\n        var _loop_2 = function (i, x) {\n            changes.changedRecords.forEach(function (j, d) {\n                var stat = {\n                    'method': _this.options.updateType + ' ',\n                    'url': function (data, i, key) { return ''; },\n                    'data': function (data, i) { return JSON.stringify(data[i]) + '\\n\\n'; }\n                };\n                req.push('--' + initialGuid);\n                req.push('Content-Type: application/http; msgtype=request', '');\n                req.push('PUT ' + '/api/' + (dm.dataSource.updateUrl || dm.dataSource.crudUrl || e.url)\n                    + stat.url(changes.changedRecords, i, e.key) + ' HTTP/1.1');\n                req.push('Content-Type: ' + 'application/json; charset=utf-8');\n                req.push('Host: ' + location.host);\n                req.push('', j ? JSON.stringify(j) : '');\n            });\n        };\n        //updation \n        for (var i = 0, x = changes.changedRecords.length; i < x; i++) {\n            _loop_2(i, x);\n        }\n        var _loop_3 = function (i, x) {\n            changes.deletedRecords.forEach(function (j, d) {\n                var state = {\n                    'mtd': 'DELETE ',\n                    'url': function (data, i, key) {\n                        var url = DataUtil.getObject(key, data[i]);\n                        if (typeof url === 'number' || DataUtil.parse.isGuid(url)) {\n                            return '/' + url;\n                        }\n                        else if (url instanceof Date) {\n                            var datTime = data[i][key];\n                            return '/' + datTime.toJSON();\n                        }\n                        else {\n                            return \"/'\" + url + \"'\";\n                        }\n                    },\n                    'data': function (data, i) { return ''; }\n                };\n                req.push('--' + initialGuid);\n                req.push('Content-Type: application/http; msgtype=request', '');\n                req.push('DELETE ' + '/api/' + (dm.dataSource.removeUrl || dm.dataSource.crudUrl || e.url)\n                    + state.url(changes.deletedRecords, i, e.key) + ' HTTP/1.1');\n                req.push('Content-Type: ' + 'application/json; charset=utf-8');\n                req.push('Host: ' + location.host);\n                req.push('', j ? JSON.stringify(j) : '');\n            });\n        };\n        //deletion\n        for (var i = 0, x = changes.deletedRecords.length; i < x; i++) {\n            _loop_3(i, x);\n        }\n        req.push('--' + initialGuid + '--', '');\n        return {\n            type: 'POST',\n            url: url,\n            contentType: 'multipart/mixed; boundary=' + initialGuid,\n            data: req.join('\\r\\n')\n        };\n    };\n    /**\n     * Method will trigger before send the request to server side.\n     * Used to set the custom header or modify the request options.\n     * @param  {DataManager} dm\n     * @param  {XMLHttpRequest} request\n     * @param  {Ajax} settings\n     * @returns void\n     */\n    WebApiAdaptor.prototype.beforeSend = function (dm, request, settings) {\n        request.setRequestHeader('Accept', 'application/json, text/javascript, */*; q=0.01');\n    };\n    /**\n     * Returns the data from the query processing.\n     * @param  {DataResult} data\n     * @param  {DataOptions} ds?\n     * @param  {Query} query?\n     * @param  {XMLHttpRequest} xhr?\n     * @param  {Ajax} request?\n     * @param  {CrudOptions} changes?\n     * @returns aggregateResult\n     */\n    WebApiAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n        var pvtData = 'pvtData';\n        var pvt = request && request[pvtData];\n        var count = null;\n        var args = {};\n        if (request && request.type.toLowerCase() !== 'post') {\n            var versionCheck = xhr && request.getResponseHeader('DataServiceVersion');\n            var version = (versionCheck && parseInt(versionCheck, 10)) || 2;\n            if (query && query.isCountRequired) {\n                if (!DataUtil.isNull(data.Count)) {\n                    count = data.Count;\n                }\n            }\n            if (version < 3 && data.Items) {\n                data = data.Items;\n            }\n            args.count = count;\n            args.result = data;\n            this.getAggregateResult(pvt, data, args, null, query);\n        }\n        args.result = args.result || data;\n        return DataUtil.isNull(count) ? args.result : { result: args.result, count: args.count, aggregates: args.aggregates };\n    };\n    return WebApiAdaptor;\n}(ODataAdaptor));\n/**\n * WebMethodAdaptor can be used by DataManager to interact with web method.\n * @hidden\n */\nvar WebMethodAdaptor = /** @__PURE__ @class */ (function (_super) {\n    __extends(WebMethodAdaptor, _super);\n    function WebMethodAdaptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Prepare the request body based on the query.\n     * The query information can be accessed at the WebMethod using variable named `value`.\n     * @param  {DataManager} dm\n     * @param  {Query} query\n     * @param  {Object[]} hierarchyFilters?\n     * @returns application\n     */\n    WebMethodAdaptor.prototype.processQuery = function (dm, query, hierarchyFilters) {\n        var obj = new UrlAdaptor().processQuery(dm, query, hierarchyFilters);\n        var getData = 'data';\n        var data = DataUtil.parse.parseJson(obj[getData]);\n        var result = {};\n        var value = 'value';\n        if (data.param) {\n            for (var i = 0; i < data.param.length; i++) {\n                var param = data.param[i];\n                var key = Object.keys(param)[0];\n                result[key] = param[key];\n            }\n        }\n        result[value] = data;\n        var pvtData = 'pvtData';\n        var url = 'url';\n        return {\n            data: JSON.stringify(result),\n            url: obj[url],\n            pvtData: obj[pvtData],\n            type: 'POST',\n            contentType: 'application/json; charset=utf-8'\n        };\n    };\n    return WebMethodAdaptor;\n}(UrlAdaptor));\n/**\n * RemoteSaveAdaptor, extended from JsonAdaptor and it is used for binding local data and performs all DataManager queries in client-side.\n * It interacts with server-side only for CRUD operations.\n * @hidden\n */\nvar RemoteSaveAdaptor = /** @__PURE__ @class */ (function (_super) {\n    __extends(RemoteSaveAdaptor, _super);\n    /**\n     * @hidden\n     */\n    function RemoteSaveAdaptor() {\n        var _this = _super.call(this) || this;\n        setValue('beforeSend', UrlAdaptor.prototype.beforeSend, _this);\n        return _this;\n    }\n    RemoteSaveAdaptor.prototype.insert = function (dm, data, tableName, query, position) {\n        this.pvt.position = position;\n        this.updateType = 'add';\n        return {\n            url: dm.dataSource.insertUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            data: JSON.stringify(extend({}, {\n                value: data,\n                table: tableName,\n                action: 'insert'\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    RemoteSaveAdaptor.prototype.remove = function (dm, keyField, val, tableName, query) {\n        _super.prototype.remove.call(this, dm, keyField, val);\n        return {\n            type: 'POST',\n            url: dm.dataSource.removeUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            data: JSON.stringify(extend({}, {\n                key: val,\n                keyColumn: keyField,\n                table: tableName,\n                action: 'remove'\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    RemoteSaveAdaptor.prototype.update = function (dm, keyField, val, tableName, query) {\n        this.updateType = 'update';\n        this.updateKey = keyField;\n        return {\n            type: 'POST',\n            url: dm.dataSource.updateUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            data: JSON.stringify(extend({}, {\n                value: val,\n                action: 'update',\n                keyColumn: keyField,\n                key: val[keyField],\n                table: tableName\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    RemoteSaveAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes, e) {\n        var i;\n        var newData = request ? JSON.parse(request.data) : data;\n        data = newData.action === 'batch' ? DataUtil.parse.parseJson(data) : data;\n        if (this.updateType === 'add') {\n            _super.prototype.insert.call(this, ds, data, null, null, this.pvt.position);\n        }\n        if (this.updateType === 'update') {\n            _super.prototype.update.call(this, ds, this.updateKey, data);\n        }\n        this.updateType = undefined;\n        if (data.added) {\n            for (i = 0; i < data.added.length; i++) {\n                _super.prototype.insert.call(this, ds, data.added[i]);\n            }\n        }\n        if (data.changed) {\n            for (i = 0; i < data.changed.length; i++) {\n                _super.prototype.update.call(this, ds, e.key, data.changed[i]);\n            }\n        }\n        if (data.deleted) {\n            for (i = 0; i < data.deleted.length; i++) {\n                _super.prototype.remove.call(this, ds, e.key, data.deleted[i]);\n            }\n        }\n        return data;\n    };\n    /**\n     * Prepare the request body based on the newly added, removed and updated records.\n     * Also perform the changes in the locally cached data to sync with the remote data.\n     * The result is used by the batch request.\n     * @param  {DataManager} dm\n     * @param  {CrudOptions} changes\n     * @param  {RemoteArgs} e\n     */\n    RemoteSaveAdaptor.prototype.batchRequest = function (dm, changes, e, query, original) {\n        return {\n            type: 'POST',\n            url: dm.dataSource.batchUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            contentType: 'application/json; charset=utf-8',\n            dataType: 'json',\n            data: JSON.stringify(extend({}, {\n                changed: changes.changedRecords,\n                added: changes.addedRecords,\n                deleted: changes.deletedRecords,\n                action: 'batch',\n                table: e.url,\n                key: e.key\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    RemoteSaveAdaptor.prototype.addParams = function (options) {\n        var urlParams = new UrlAdaptor();\n        urlParams.addParams(options);\n    };\n    return RemoteSaveAdaptor;\n}(JsonAdaptor));\n/**\n * Ajax Adaptor that is extended from URL Adaptor, is used for handle data operations with user defined functions.\n * @hidden\n */\nvar CustomDataAdaptor = /** @__PURE__ @class */ (function (_super) {\n    __extends(CustomDataAdaptor, _super);\n    function CustomDataAdaptor(props) {\n        var _this = _super.call(this) || this;\n        // options replaced the default adaptor options\n        _this.options = extend({}, _this.options, {\n            getData: new Function(),\n            addRecord: new Function(),\n            updateRecord: new Function(),\n            deleteRecord: new Function(),\n            batchUpdate: new Function()\n        });\n        extend(_this.options, props || {});\n        return _this;\n    }\n    CustomDataAdaptor.prototype.getModuleName = function () {\n        return 'CustomDataAdaptor';\n    };\n    return CustomDataAdaptor;\n}(UrlAdaptor));\n/**\n * The GraphqlAdaptor that is extended from URL Adaptor, is used for retrieving data from the Graphql server.\n * It interacts with the Graphql server with all the DataManager Queries and performs CRUD operations.\n * @hidden\n */\nvar GraphQLAdaptor = /** @__PURE__ @class */ (function (_super) {\n    __extends(GraphQLAdaptor, _super);\n    function GraphQLAdaptor(options) {\n        var _this = _super.call(this) || this;\n        _this.opt = options;\n        _this.schema = _this.opt.response;\n        _this.query = _this.opt.query;\n        _this.getVariables = _this.opt.getVariables ? _this.opt.getVariables : function () { };\n        _this.getQuery = function () { return _this.query; };\n        return _this;\n    }\n    GraphQLAdaptor.prototype.getModuleName = function () {\n        return 'GraphQLAdaptor';\n    };\n    /**\n     * Process the JSON data based on the provided queries.\n     * @param  {DataManager} dm\n     * @param  {Query} query?\n     */\n    GraphQLAdaptor.prototype.processQuery = function (datamanager, query) {\n        var urlQuery = _super.prototype.processQuery.apply(this, arguments);\n        var dm = JSON.parse(urlQuery.data);\n        // constructing GraphQL parameters\n        var keys = ['skip', 'take', 'sorted', 'table', 'select', 'where',\n            'search', 'requiresCounts', 'aggregates', 'params'];\n        var temp = {};\n        var str = 'searchwhereparams';\n        keys.filter(function (e) {\n            temp[e] = str.indexOf(e) > -1 ? JSON.stringify(dm[e]) : dm[e];\n        });\n        var vars = this.getVariables() || {};\n        vars['datamanager'] = temp;\n        var data = JSON.stringify({\n            query: this.getQuery(),\n            variables: vars\n        });\n        urlQuery.data = data;\n        return urlQuery;\n    };\n    /**\n     * Returns the data from the query processing.\n     * It will also cache the data for later usage.\n     * @param  {DataResult} data\n     * @param  {DataManager} ds?\n     * @param  {Query} query?\n     * @param  {XMLHttpRequest} xhr?\n     * @param  {Object} request?\n     * @returns DataResult\n     */\n    GraphQLAdaptor.prototype.processResponse = function (resData, ds, query, xhr, request) {\n        var res = resData;\n        var count;\n        var aggregates;\n        var result = getValue(this.schema.result, res.data);\n        if (this.schema.count) {\n            count = getValue(this.schema.count, res.data);\n        }\n        if (this.schema.aggregates) {\n            aggregates = getValue(this.schema.aggregates, res.data);\n            aggregates = !isNullOrUndefined(aggregates) ? DataUtil.parse.parseJson(aggregates) : aggregates;\n        }\n        var pvt = request.pvtData || {};\n        var args = { result: result, aggregates: aggregates };\n        var data = args;\n        if (pvt && pvt.groups && pvt.groups.length) {\n            this.getAggregateResult(pvt, data, args, null, query);\n        }\n        return !isNullOrUndefined(count) ? { result: args.result, count: count, aggregates: aggregates } : args.result;\n    };\n    /**\n     * Prepare and returns request body which is used to insert a new record in the table.\n     */\n    GraphQLAdaptor.prototype.insert = function () {\n        var inserted = _super.prototype.insert.apply(this, arguments);\n        return this.generateCrudData(inserted, 'insert');\n    };\n    /**\n     * Prepare and returns request body which is used to update a new record in the table.\n     */\n    GraphQLAdaptor.prototype.update = function () {\n        var inserted = _super.prototype.update.apply(this, arguments);\n        return this.generateCrudData(inserted, 'update');\n    };\n    /**\n     * Prepare and returns request body which is used to remove a new record in the table.\n     */\n    GraphQLAdaptor.prototype.remove = function () {\n        var inserted = _super.prototype.remove.apply(this, arguments);\n        return this.generateCrudData(inserted, 'remove');\n    };\n    /**\n     * Prepare the request body based on the newly added, removed and updated records.\n     * The result is used by the batch request.\n     * @param  {DataManager} dm\n     * @param  {CrudOptions} changes\n     * @param  {Object} e\n     * @param  {Query} query\n     * @param  {Object} original\n     */\n    GraphQLAdaptor.prototype.batchRequest = function (dm, changes, e, query, original) {\n        var batch = _super.prototype.batchRequest.apply(this, arguments);\n        var bData = JSON.parse(batch.data);\n        bData.key = e.key;\n        batch.data = JSON.stringify(bData);\n        return this.generateCrudData(batch, 'batch');\n    };\n    GraphQLAdaptor.prototype.generateCrudData = function (crudData, action) {\n        var parsed = JSON.parse(crudData.data);\n        crudData.data = JSON.stringify({\n            query: this.opt.getMutation(action),\n            variables: parsed\n        });\n        return crudData;\n    };\n    return GraphQLAdaptor;\n}(UrlAdaptor));\n/**\n * Cache Adaptor is used to cache the data of the visited pages. It prevents new requests for the previously visited pages.\n * You can configure cache page size and duration of caching by using cachingPageSize and timeTillExpiration properties of the DataManager\n * @hidden\n */\nvar CacheAdaptor = /** @__PURE__ @class */ (function (_super) {\n    __extends(CacheAdaptor, _super);\n    /**\n     * Constructor for CacheAdaptor class.\n     * @param  {CacheAdaptor} adaptor?\n     * @param  {number} timeStamp?\n     * @param  {number} pageSize?\n     * @hidden\n     */\n    function CacheAdaptor(adaptor, timeStamp, pageSize) {\n        var _this = _super.call(this) || this;\n        _this.isCrudAction = false;\n        _this.isInsertAction = false;\n        if (!isNullOrUndefined(adaptor)) {\n            _this.cacheAdaptor = adaptor;\n        }\n        _this.pageSize = pageSize;\n        _this.guidId = DataUtil.getGuid('cacheAdaptor');\n        var obj = { keys: [], results: [] };\n        window.localStorage.setItem(_this.guidId, JSON.stringify(obj));\n        var guid = _this.guidId;\n        if (!isNullOrUndefined(timeStamp)) {\n            setInterval(function () {\n                var data;\n                data = DataUtil.parse.parseJson(window.localStorage.getItem(guid));\n                var forDel = [];\n                for (var i = 0; i < data.results.length; i++) {\n                    var currentTime = +new Date();\n                    var requestTime = +new Date(data.results[i].timeStamp);\n                    data.results[i].timeStamp = currentTime - requestTime;\n                    if (currentTime - requestTime > timeStamp) {\n                        forDel.push(i);\n                    }\n                }\n                for (var i = 0; i < forDel.length; i++) {\n                    data.results.splice(forDel[i], 1);\n                    data.keys.splice(forDel[i], 1);\n                }\n                window.localStorage.removeItem(guid);\n                window.localStorage.setItem(guid, JSON.stringify(data));\n            }, timeStamp);\n        }\n        return _this;\n    }\n    /**\n     * It will generate the key based on the URL when we send a request to server.\n     * @param  {string} url\n     * @param  {Query} query?\n     * @hidden\n     */\n    CacheAdaptor.prototype.generateKey = function (url, query) {\n        var queries = this.getQueryRequest(query);\n        var singles = Query.filterQueryLists(query.queries, ['onSelect', 'onPage', 'onSkip', 'onTake', 'onRange']);\n        var key = url;\n        var page = 'onPage';\n        if (page in singles) {\n            key += singles[page].pageIndex;\n        }\n        queries.sorts.forEach(function (obj) {\n            key += obj.e.direction + obj.e.fieldName;\n        });\n        queries.groups.forEach(function (obj) {\n            key += obj.e.fieldName;\n        });\n        queries.searches.forEach(function (obj) {\n            key += obj.e.searchKey;\n        });\n        for (var filter = 0; filter < queries.filters.length; filter++) {\n            var currentFilter = queries.filters[filter];\n            if (currentFilter.e.isComplex) {\n                var newQuery = query.clone();\n                newQuery.queries = [];\n                for (var i = 0; i < currentFilter.e.predicates.length; i++) {\n                    newQuery.queries.push({ fn: 'onWhere', e: currentFilter.e.predicates[i], filter: query.queries.filter });\n                }\n                key += currentFilter.e.condition + this.generateKey(url, newQuery);\n            }\n            else {\n                key += currentFilter.e.field + currentFilter.e.operator + currentFilter.e.value;\n            }\n        }\n        return key;\n    };\n    /**\n     * Process the query to generate request body.\n     * If the data is already cached, it will return the cached data.\n     * @param  {DataManager} dm\n     * @param  {Query} query?\n     * @param  {Object[]} hierarchyFilters?\n     */\n    CacheAdaptor.prototype.processQuery = function (dm, query, hierarchyFilters) {\n        var key = this.generateKey(dm.dataSource.url, query);\n        var cachedItems;\n        cachedItems = DataUtil.parse.parseJson(window.localStorage.getItem(this.guidId));\n        var data = cachedItems ? cachedItems.results[cachedItems.keys.indexOf(key)] : null;\n        if (data != null && !this.isCrudAction && !this.isInsertAction) {\n            return data;\n        }\n        this.isCrudAction = null;\n        this.isInsertAction = null;\n        return this.cacheAdaptor.processQuery.apply(this.cacheAdaptor, [].slice.call(arguments, 0));\n    };\n    /**\n     * Returns the data from the query processing.\n     * It will also cache the data for later usage.\n     * @param  {DataResult} data\n     * @param  {DataManager} ds?\n     * @param  {Query} query?\n     * @param  {XMLHttpRequest} xhr?\n     * @param  {Ajax} request?\n     * @param  {CrudOptions} changes?\n     */\n    CacheAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n        if (this.isInsertAction || (request && this.cacheAdaptor.options.batch &&\n            DataUtil.endsWith(request.url, this.cacheAdaptor.options.batch) && request.type.toLowerCase() === 'post')) {\n            return this.cacheAdaptor.processResponse(data, ds, query, xhr, request, changes);\n        }\n        data = this.cacheAdaptor.processResponse.apply(this.cacheAdaptor, [].slice.call(arguments, 0));\n        var key = query ? this.generateKey(ds.dataSource.url, query) : ds.dataSource.url;\n        var obj = {};\n        obj = DataUtil.parse.parseJson(window.localStorage.getItem(this.guidId));\n        var index = obj.keys.indexOf(key);\n        if (index !== -1) {\n            obj.results.splice(index, 1);\n            obj.keys.splice(index, 1);\n        }\n        obj.results[obj.keys.push(key) - 1] = { keys: key, result: data.result, timeStamp: new Date(), count: data.count };\n        while (obj.results.length > this.pageSize) {\n            obj.results.splice(0, 1);\n            obj.keys.splice(0, 1);\n        }\n        window.localStorage.setItem(this.guidId, JSON.stringify(obj));\n        return data;\n    };\n    /**\n     * Method will trigger before send the request to server side. Used to set the custom header or modify the request options.\n     * @param  {DataManager} dm\n     * @param  {XMLHttpRequest} request\n     * @param  {Ajax} settings?\n     */\n    CacheAdaptor.prototype.beforeSend = function (dm, request, settings) {\n        if (!isNullOrUndefined(this.cacheAdaptor.options.batch) && DataUtil.endsWith(settings.url, this.cacheAdaptor.options.batch)\n            && settings.type.toLowerCase() === 'post') {\n            request.setRequestHeader('Accept', this.cacheAdaptor.options.multipartAccept);\n        }\n        if (!dm.dataSource.crossDomain) {\n            request.setRequestHeader('Accept', this.cacheAdaptor.options.accept);\n        }\n    };\n    /**\n     * Updates existing record and saves the changes to the table.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {Object} value\n     * @param  {string} tableName\n     */\n    CacheAdaptor.prototype.update = function (dm, keyField, value, tableName) {\n        this.isCrudAction = true;\n        return this.cacheAdaptor.update(dm, keyField, value, tableName);\n    };\n    /**\n     * Prepare and returns request body which is used to insert a new record in the table.\n     * @param  {DataManager} dm\n     * @param  {Object} data\n     * @param  {string} tableName?\n     */\n    CacheAdaptor.prototype.insert = function (dm, data, tableName) {\n        this.isInsertAction = true;\n        return this.cacheAdaptor.insert(dm, data, tableName);\n    };\n    /**\n     * Prepare and return request body which is used to remove record from the table.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {Object} value\n     * @param  {string} tableName?\n     */\n    CacheAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n        this.isCrudAction = true;\n        return this.cacheAdaptor.remove(dm, keyField, value, tableName);\n    };\n    /**\n     * Prepare the request body based on the newly added, removed and updated records.\n     * The result is used by the batch request.\n     * @param  {DataManager} dm\n     * @param  {CrudOptions} changes\n     * @param  {RemoteArgs} e\n     */\n    CacheAdaptor.prototype.batchRequest = function (dm, changes, e) {\n        return this.cacheAdaptor.batchRequest(dm, changes, e);\n    };\n    return CacheAdaptor;\n}(UrlAdaptor));\n\n/**\n * DataManager is used to manage and manipulate relational data.\n */\nvar DataManager = /** @__PURE__ @class */ (function () {\n    /**\n     * Constructor for DataManager class\n     * @param  {DataOptions|JSON[]} dataSource?\n     * @param  {Query} query?\n     * @param  {AdaptorOptions|string} adaptor?\n     * @hidden\n     */\n    function DataManager(dataSource, query, adaptor) {\n        var _this = this;\n        /** @hidden */\n        this.dateParse = true;\n        /** @hidden */\n        this.timeZoneHandling = true;\n        this.requests = [];\n        if (!dataSource && !this.dataSource) {\n            dataSource = [];\n        }\n        adaptor = adaptor || dataSource.adaptor;\n        if (dataSource && dataSource.timeZoneHandling === false) {\n            this.timeZoneHandling = dataSource.timeZoneHandling;\n        }\n        var data;\n        if (dataSource instanceof Array) {\n            data = {\n                json: dataSource,\n                offline: true\n            };\n        }\n        else if (typeof dataSource === 'object') {\n            if (!dataSource.json) {\n                dataSource.json = [];\n            }\n            data = {\n                url: dataSource.url,\n                insertUrl: dataSource.insertUrl,\n                removeUrl: dataSource.removeUrl,\n                updateUrl: dataSource.updateUrl,\n                crudUrl: dataSource.crudUrl,\n                batchUrl: dataSource.batchUrl,\n                json: dataSource.json,\n                headers: dataSource.headers,\n                accept: dataSource.accept,\n                data: dataSource.data,\n                timeTillExpiration: dataSource.timeTillExpiration,\n                cachingPageSize: dataSource.cachingPageSize,\n                enableCaching: dataSource.enableCaching,\n                requestType: dataSource.requestType,\n                key: dataSource.key,\n                crossDomain: dataSource.crossDomain,\n                jsonp: dataSource.jsonp,\n                dataType: dataSource.dataType,\n                offline: dataSource.offline !== undefined ? dataSource.offline\n                    : dataSource.adaptor instanceof RemoteSaveAdaptor || dataSource.adaptor instanceof CustomDataAdaptor ?\n                        false : dataSource.url ? false : true,\n                requiresFormat: dataSource.requiresFormat\n            };\n        }\n        else {\n            DataUtil.throwError('DataManager: Invalid arguments');\n        }\n        if (data.requiresFormat === undefined && !DataUtil.isCors()) {\n            data.requiresFormat = isNullOrUndefined(data.crossDomain) ? true : data.crossDomain;\n        }\n        if (data.dataType === undefined) {\n            data.dataType = 'json';\n        }\n        this.dataSource = data;\n        this.defaultQuery = query;\n        if (data.url && data.offline && !data.json.length) {\n            this.isDataAvailable = false;\n            this.adaptor = adaptor || new ODataAdaptor();\n            this.dataSource.offline = false;\n            this.ready = this.executeQuery(query || new Query());\n            this.ready.then(function (e) {\n                _this.dataSource.offline = true;\n                _this.isDataAvailable = true;\n                data.json = e.result;\n                _this.adaptor = new JsonAdaptor();\n            });\n        }\n        else {\n            this.adaptor = data.offline ? new JsonAdaptor() : new ODataAdaptor();\n        }\n        if (!data.jsonp && this.adaptor instanceof ODataAdaptor) {\n            data.jsonp = 'callback';\n        }\n        this.adaptor = adaptor || this.adaptor;\n        if (data.enableCaching) {\n            this.adaptor = new CacheAdaptor(this.adaptor, data.timeTillExpiration, data.cachingPageSize);\n        }\n        return this;\n    }\n    /**\n     * Overrides DataManager's default query with given query.\n     * @param  {Query} query - Defines the new default query.\n     */\n    DataManager.prototype.setDefaultQuery = function (query) {\n        this.defaultQuery = query;\n        return this;\n    };\n    /**\n     * Executes the given query with local data source.\n     * @param  {Query} query - Defines the query to retrieve data.\n     */\n    DataManager.prototype.executeLocal = function (query) {\n        if (!this.defaultQuery && !(query instanceof Query)) {\n            DataUtil.throwError('DataManager - executeLocal() : A query is required to execute');\n        }\n        if (!this.dataSource.json) {\n            DataUtil.throwError('DataManager - executeLocal() : Json data is required to execute');\n        }\n        query = query || this.defaultQuery;\n        var result = this.adaptor.processQuery(this, query);\n        if (query.subQuery) {\n            var from = query.subQuery.fromTable;\n            var lookup = query.subQuery.lookups;\n            var res = query.isCountRequired ? result.result :\n                result;\n            if (lookup && lookup instanceof Array) {\n                DataUtil.buildHierarchy(query.subQuery.fKey, from, res, lookup, query.subQuery.key);\n            }\n            for (var j = 0; j < res.length; j++) {\n                if (res[j][from] instanceof Array) {\n                    res[j] = extend({}, {}, res[j]);\n                    res[j][from] = this.adaptor.processResponse(query.subQuery.using(new DataManager(res[j][from].slice(0))).executeLocal(), this, query);\n                }\n            }\n        }\n        return this.adaptor.processResponse(result, this, query);\n    };\n    /**\n     * Executes the given query with either local or remote data source.\n     * It will be executed as asynchronously and returns Promise object which will be resolved or rejected after action completed.\n     * @param  {Query|Function} query - Defines the query to retrieve data.\n     * @param  {Function} done - Defines the callback function and triggers when the Promise is resolved.\n     * @param  {Function} fail - Defines the callback function and triggers when the Promise is rejected.\n     * @param  {Function} always - Defines the callback function and triggers when the Promise is resolved or rejected.\n     */\n    DataManager.prototype.executeQuery = function (query, done, fail, always) {\n        var _this = this;\n        var makeRequest = 'makeRequest';\n        if (typeof query === 'function') {\n            always = fail;\n            fail = done;\n            done = query;\n            query = null;\n        }\n        if (!query) {\n            query = this.defaultQuery;\n        }\n        if (!(query instanceof Query)) {\n            DataUtil.throwError('DataManager - executeQuery() : A query is required to execute');\n        }\n        var deffered = new Deferred();\n        var args = { query: query };\n        if (!this.dataSource.offline && (this.dataSource.url !== undefined && this.dataSource.url !== '')\n            || (!isNullOrUndefined(this.adaptor[makeRequest])) || this.isCustomDataAdaptor(this.adaptor)) {\n            var result = this.adaptor.processQuery(this, query);\n            if (!isNullOrUndefined(this.adaptor[makeRequest])) {\n                this.adaptor[makeRequest](result, deffered, args, query);\n            }\n            else if (!isNullOrUndefined(result.url) || this.isCustomDataAdaptor(this.adaptor)) {\n                this.makeRequest(result, deffered, args, query);\n            }\n            else {\n                args = DataManager.getDeferedArgs(query, result, args);\n                deffered.resolve(args);\n            }\n        }\n        else {\n            DataManager.nextTick(function () {\n                var res = _this.executeLocal(query);\n                args = DataManager.getDeferedArgs(query, res, args);\n                deffered.resolve(args);\n            });\n        }\n        if (done || fail) {\n            deffered.promise.then(done, fail);\n        }\n        if (always) {\n            deffered.promise.then(always, always);\n        }\n        return deffered.promise;\n    };\n    DataManager.getDeferedArgs = function (query, result, args) {\n        if (query.isCountRequired) {\n            args.result = result.result;\n            args.count = result.count;\n            args.aggregates = result.aggregates;\n        }\n        else {\n            args.result = result;\n        }\n        return args;\n    };\n    DataManager.nextTick = function (fn) {\n        (window.setImmediate || window.setTimeout)(fn, 0);\n    };\n    DataManager.prototype.extendRequest = function (url, fnSuccess, fnFail) {\n        return extend({}, {\n            type: 'GET',\n            dataType: this.dataSource.dataType,\n            crossDomain: this.dataSource.crossDomain,\n            jsonp: this.dataSource.jsonp,\n            cache: true,\n            processData: false,\n            onSuccess: fnSuccess,\n            onFailure: fnFail\n        }, url);\n    };\n    // tslint:disable-next-line:max-func-body-length\n    DataManager.prototype.makeRequest = function (url, deffered, args, query) {\n        var _this = this;\n        var isSelector = !!query.subQuerySelector;\n        var fnFail = function (e) {\n            args.error = e;\n            deffered.reject(args);\n        };\n        var process = function (data, count, xhr, request, actual, aggregates, virtualSelectRecords) {\n            args.xhr = xhr;\n            args.count = count ? parseInt(count.toString(), 10) : 0;\n            args.result = data;\n            args.request = request;\n            args.aggregates = aggregates;\n            args.actual = actual;\n            args.virtualSelectRecords = virtualSelectRecords;\n            deffered.resolve(args);\n        };\n        var fnQueryChild = function (data, selector) {\n            var subDeffer = new Deferred();\n            var childArgs = { parent: args };\n            query.subQuery.isChild = true;\n            var subUrl = _this.adaptor.processQuery(_this, query.subQuery, data ? _this.adaptor.processResponse(data) : selector);\n            var childReq = _this.makeRequest(subUrl, subDeffer, childArgs, query.subQuery);\n            if (!isSelector) {\n                subDeffer.then(function (subData) {\n                    if (data) {\n                        DataUtil.buildHierarchy(query.subQuery.fKey, query.subQuery.fromTable, data, subData, query.subQuery.key);\n                        process(data, subData.count, subData.xhr);\n                    }\n                }, fnFail);\n            }\n            return childReq;\n        };\n        var fnSuccess = function (data, request) {\n            if (_this.isGraphQLAdaptor(_this.adaptor)) {\n                if (!isNullOrUndefined(data['errors'])) {\n                    return fnFail(data['errors'], request);\n                }\n            }\n            if (_this.isCustomDataAdaptor(_this.adaptor)) {\n                request = extend({}, _this.ajaxReqOption, request);\n            }\n            if (request.httpRequest.getResponseHeader('Content-Type').indexOf('xml') === -1 && _this.dateParse) {\n                data = DataUtil.parse.parseJson(data);\n            }\n            var result = _this.adaptor.processResponse(data, _this, query, request.httpRequest, request);\n            var count = 0;\n            var aggregates = null;\n            var virtualSelectRecords = 'virtualSelectRecords';\n            var virtualRecords = data[virtualSelectRecords];\n            if (query.isCountRequired) {\n                count = result.count;\n                aggregates = result.aggregates;\n                result = result.result;\n            }\n            if (!query.subQuery) {\n                process(result, count, request.httpRequest, request.type, data, aggregates, virtualRecords);\n                return;\n            }\n            if (!isSelector) {\n                fnQueryChild(result, request);\n            }\n        };\n        var req = this.extendRequest(url, fnSuccess, fnFail);\n        if (!this.isCustomDataAdaptor(this.adaptor)) {\n            var ajax_1 = new Ajax(req);\n            ajax_1.beforeSend = function () {\n                _this.beforeSend(ajax_1.httpRequest, ajax_1);\n            };\n            req = ajax_1.send();\n            req.catch(function (e) { return true; }); // to handle failure remote requests.        \n            this.requests.push(ajax_1);\n        }\n        else {\n            this.ajaxReqOption = req;\n            var request = req;\n            this.adaptor.options.getData({\n                data: request.data,\n                onSuccess: request.onSuccess, onFailure: request.onFailure\n            });\n        }\n        if (isSelector) {\n            var promise = void 0;\n            var res = query.subQuerySelector.call(this, { query: query.subQuery, parent: query });\n            if (res && res.length) {\n                promise = Promise.all([req, fnQueryChild(null, res)]);\n                promise.then(function () {\n                    var args = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        args[_i] = arguments[_i];\n                    }\n                    var result = args[0];\n                    var pResult = _this.adaptor.processResponse(result[0], _this, query, _this.requests[0].httpRequest, _this.requests[0]);\n                    var count = 0;\n                    if (query.isCountRequired) {\n                        count = pResult.count;\n                        pResult = pResult.result;\n                    }\n                    var cResult = _this.adaptor.processResponse(result[1], _this, query.subQuery, _this.requests[1].httpRequest, _this.requests[1]);\n                    count = 0;\n                    if (query.subQuery.isCountRequired) {\n                        count = cResult.count;\n                        cResult = cResult.result;\n                    }\n                    DataUtil.buildHierarchy(query.subQuery.fKey, query.subQuery.fromTable, pResult, cResult, query.subQuery.key);\n                    isSelector = false;\n                    process(pResult, count, _this.requests[0].httpRequest);\n                });\n            }\n            else {\n                isSelector = false;\n            }\n        }\n        return req;\n    };\n    DataManager.prototype.beforeSend = function (request, settings) {\n        this.adaptor.beforeSend(this, request, settings);\n        var headers = this.dataSource.headers;\n        var props;\n        for (var i = 0; headers && i < headers.length; i++) {\n            props = [];\n            var keys = Object.keys(headers[i]);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var prop = keys_1[_i];\n                props.push(prop);\n                request.setRequestHeader(prop, headers[i][prop]);\n            }\n        }\n    };\n    /**\n     * Save bulk changes to the given table name.\n     * User can add a new record, edit an existing record, and delete a record at the same time.\n     * If the datasource from remote, then updated in a single post.\n     * @param  {Object} changes - Defines the CrudOptions.\n     * @param  {string} key - Defines the column field.\n     * @param  {string|Query} tableName - Defines the table name.\n     * @param  {Query} query - Sets default query for the DataManager.\n     */\n    DataManager.prototype.saveChanges = function (changes, key, tableName, query, original) {\n        var _this = this;\n        if (tableName instanceof Query) {\n            query = tableName;\n            tableName = null;\n        }\n        var args = {\n            url: tableName,\n            key: key || this.dataSource.key\n        };\n        var req = this.adaptor.batchRequest(this, changes, args, query || new Query(), original);\n        var doAjaxRequest = 'doAjaxRequest';\n        if (this.dataSource.offline) {\n            return req;\n        }\n        if (!isNullOrUndefined(this.adaptor[doAjaxRequest])) {\n            return this.adaptor[doAjaxRequest](req);\n        }\n        else if (!this.isCustomDataAdaptor(this.adaptor)) {\n            var deff_1 = new Deferred();\n            var ajax_2 = new Ajax(req);\n            ajax_2.beforeSend = function () {\n                _this.beforeSend(ajax_2.httpRequest, ajax_2);\n            };\n            ajax_2.onSuccess = function (data, request) {\n                if (_this.isGraphQLAdaptor(_this.adaptor)) {\n                    if (!isNullOrUndefined(data['errors'])) {\n                        ajax_2.onFailure(JSON.stringify(data['errors']));\n                    }\n                }\n                deff_1.resolve(_this.adaptor.processResponse(data, _this, null, request.httpRequest, request, changes, args));\n            };\n            ajax_2.onFailure = function (e) {\n                deff_1.reject([{ error: e }]);\n            };\n            ajax_2.send().catch(function (e) { return true; }); // to handle the failure requests.        \n            return deff_1.promise;\n        }\n        else {\n            return this.doAjaxRequest(req, this.adaptor.options.batchUpdate);\n        }\n    };\n    /**\n     * Inserts new record in the given table.\n     * @param  {Object} data - Defines the data to insert.\n     * @param  {string|Query} tableName - Defines the table name.\n     * @param  {Query} query - Sets default query for the DataManager.\n     */\n    DataManager.prototype.insert = function (data, tableName, query, position) {\n        if (tableName instanceof Query) {\n            query = tableName;\n            tableName = null;\n        }\n        var req = this.adaptor.insert(this, data, tableName, query, position);\n        var doAjaxRequest = 'doAjaxRequest';\n        if (this.dataSource.offline) {\n            return req;\n        }\n        if (!isNullOrUndefined(this.adaptor[doAjaxRequest])) {\n            return this.adaptor[doAjaxRequest](req);\n        }\n        else {\n            return this.doAjaxRequest(req, this.adaptor.options.addRecord);\n        }\n    };\n    /**\n     * Removes data from the table with the given key.\n     * @param  {string} keyField - Defines the column field.\n     * @param  {Object} value - Defines the value to find the data in the specified column.\n     * @param  {string|Query} tableName - Defines the table name\n     * @param  {Query} query - Sets default query for the DataManager.\n     */\n    DataManager.prototype.remove = function (keyField, value, tableName, query) {\n        if (typeof value === 'object') {\n            value = DataUtil.getObject(keyField, value);\n        }\n        if (tableName instanceof Query) {\n            query = tableName;\n            tableName = null;\n        }\n        var res = this.adaptor.remove(this, keyField, value, tableName, query);\n        var doAjaxRequest = 'doAjaxRequest';\n        if (this.dataSource.offline) {\n            return res;\n        }\n        if (!isNullOrUndefined(this.adaptor[doAjaxRequest])) {\n            return this.adaptor[doAjaxRequest](res);\n        }\n        else {\n            var remove = this.adaptor.options.deleteRecord;\n            return this.doAjaxRequest(res, remove);\n        }\n    };\n    /**\n     * Updates existing record in the given table.\n     * @param  {string} keyField - Defines the column field.\n     * @param  {Object} value - Defines the value to find the data in the specified column.\n     * @param  {string|Query} tableName - Defines the table name\n     * @param  {Query} query - Sets default query for the DataManager.\n     */\n    DataManager.prototype.update = function (keyField, value, tableName, query, original) {\n        if (tableName instanceof Query) {\n            query = tableName;\n            tableName = null;\n        }\n        var res = this.adaptor.update(this, keyField, value, tableName, query, original);\n        var doAjaxRequest = 'doAjaxRequest';\n        if (this.dataSource.offline) {\n            return res;\n        }\n        if (!isNullOrUndefined(this.adaptor[doAjaxRequest])) {\n            return this.adaptor[doAjaxRequest](res);\n        }\n        else {\n            var update = this.adaptor.options.updateRecord;\n            return this.doAjaxRequest(res, update);\n        }\n    };\n    DataManager.prototype.isCustomDataAdaptor = function (dataSource) {\n        return this.adaptor.getModuleName &&\n            this.adaptor.getModuleName() === 'CustomDataAdaptor';\n    };\n    DataManager.prototype.isGraphQLAdaptor = function (dataSource) {\n        return this.adaptor.getModuleName &&\n            this.adaptor.getModuleName() === 'GraphQLAdaptor';\n    };\n    DataManager.prototype.successFunc = function (record, request) {\n        if (this.isGraphQLAdaptor(this.adaptor)) {\n            var data = JSON.parse(record);\n            if (!isNullOrUndefined(data['errors'])) {\n                this.failureFunc(JSON.stringify(data['errors']));\n            }\n        }\n        if (this.isCustomDataAdaptor(this.adaptor)) {\n            request = extend({}, this.ajaxReqOption, request);\n        }\n        try {\n            DataUtil.parse.parseJson(record);\n        }\n        catch (e) {\n            record = [];\n        }\n        record = this.adaptor.processResponse(DataUtil.parse.parseJson(record), this, null, request.httpRequest, request);\n        this.ajaxDeffered.resolve(record);\n    };\n    \n    DataManager.prototype.failureFunc = function (e) {\n        this.ajaxDeffered.reject([{ error: e }]);\n    };\n    \n    DataManager.prototype.doAjaxRequest = function (res, ajaxFunc) {\n        var _this = this;\n        res = extend({}, {\n            type: 'POST',\n            contentType: 'application/json; charset=utf-8',\n            processData: false\n        }, res);\n        this.ajaxDeffered = new Deferred();\n        if (!this.isCustomDataAdaptor(this.adaptor)) {\n            var ajax_3 = new Ajax(res);\n            ajax_3.beforeSend = function () {\n                _this.beforeSend(ajax_3.httpRequest, ajax_3);\n            };\n            ajax_3.onSuccess = this.successFunc.bind(this);\n            ajax_3.onFailure = this.failureFunc.bind(this);\n            ajax_3.send().catch(function (e) { return true; }); // to handle the failure requests.\n        }\n        else {\n            this.ajaxReqOption = res;\n            ajaxFunc.call(this, {\n                data: res.data, onSuccess: this.successFunc.bind(this),\n                onFailure: this.failureFunc.bind(this)\n            });\n        }\n        return this.ajaxDeffered.promise;\n    };\n    return DataManager;\n}());\n/**\n * Deferred is used to handle asynchronous operation.\n */\nvar Deferred = /** @__PURE__ @class */ (function () {\n    function Deferred() {\n        var _this = this;\n        /**\n         * Promise is an object that represents a value that may not be available yet, but will be resolved at some point in the future.\n         */\n        this.promise = new Promise(function (resolve, reject) {\n            _this.resolve = resolve;\n            _this.reject = reject;\n        });\n        /**\n         * Defines the callback function triggers when the Deferred object is resolved.\n         */\n        this.then = this.promise.then.bind(this.promise);\n        /**\n         * Defines the callback function triggers when the Deferred object is rejected.\n         */\n        this.catch = this.promise.catch.bind(this.promise);\n    }\n    return Deferred;\n}());\n\n/**\n * Data modules\n */\n\nexport { DataManager, Deferred, Query, Predicate, Adaptor, JsonAdaptor, UrlAdaptor, ODataAdaptor, ODataV4Adaptor, WebApiAdaptor, WebMethodAdaptor, RemoteSaveAdaptor, CustomDataAdaptor, GraphQLAdaptor, CacheAdaptor, DataUtil };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}