{"ast":null,"code":"import { Animation, Browser, ChildProperty, Complex, Component, Event, EventHandler, KeyboardEvents, L10n, NotifyPropertyChanges, Property, SanitizeHtmlHelper, addClass, append, attributes, classList, closest, compile, createElement, detach, extend, formatUnit, getComponent, getUniqueID, getValue, isNullOrUndefined, isUndefined, matches, prepend, remove, removeClass, rippleEffect, select, selectAll, setStyleAttribute, setValue } from '@syncfusion/ej2-base';\nimport { DataManager, DataUtil, Predicate, Query } from '@syncfusion/ej2-data';\nimport { ListBase, Sortable, cssClass, moveTo } from '@syncfusion/ej2-lists';\nimport { Popup, createSpinner, getZindexPartial, hideSpinner, isCollide, showSpinner } from '@syncfusion/ej2-popups';\nimport { Input, TextBox } from '@syncfusion/ej2-inputs';\nimport { Button, createCheckBox } from '@syncfusion/ej2-buttons';\nimport { TreeView } from '@syncfusion/ej2-navigations';\n/**\n * IncrementalSearch module file\n */\n\nlet queryString = '';\nlet prevString = '';\nlet matches$1 = [];\nconst activeClass = 'e-active';\nlet prevElementId = '';\n/**\n * Search and focus the list item based on key code matches with list text content\n *\n * @param  { number } keyCode - Specifies the key code which pressed on keyboard events.\n * @param  { HTMLElement[]} items - Specifies an array of HTMLElement, from which matches find has done.\n * @param { number } selectedIndex - Specifies the selected item in list item, so that search will happen\n * after selected item otherwise it will do from initial.\n * @param  { boolean } ignoreCase - Specifies the case consideration when search has done.\n * @param {string} elementId - Specifies the list element ID.\n * @returns {Element} Returns list item based on key code matches with list text content.\n */\n\nfunction incrementalSearch(keyCode, items, selectedIndex, ignoreCase, elementId) {\n  queryString += String.fromCharCode(keyCode);\n  setTimeout(() => {\n    queryString = '';\n  }, 1000);\n  let index;\n  queryString = ignoreCase ? queryString.toLowerCase() : queryString;\n\n  if (prevElementId === elementId && prevString === queryString) {\n    for (let i = 0; i < matches$1.length; i++) {\n      if (matches$1[i].classList.contains(activeClass)) {\n        index = i;\n        break;\n      }\n    }\n\n    index = index + 1;\n    return matches$1[index] ? matches$1[index] : matches$1[0];\n  } else {\n    const listItems = items;\n    const strLength = queryString.length;\n    let text;\n    let item;\n    selectedIndex = selectedIndex ? selectedIndex + 1 : 0;\n    let i = selectedIndex;\n    matches$1 = [];\n\n    do {\n      if (i === listItems.length) {\n        i = -1;\n      }\n\n      if (i === -1) {\n        index = 0;\n      } else {\n        index = i;\n      }\n\n      item = listItems[index];\n      text = ignoreCase ? item.innerText.toLowerCase() : item.innerText;\n\n      if (text.substr(0, strLength) === queryString) {\n        matches$1.push(listItems[index]);\n      }\n\n      i++;\n    } while (i !== selectedIndex);\n\n    prevString = queryString;\n    prevElementId = elementId;\n    return matches$1[0];\n  }\n}\n/**\n * Search the list item based on given input value matches with search type.\n *\n * @param {string} inputVal - Specifies the given input value.\n * @param {HTMLElement[]} items - Specifies the list items.\n * @param {SearchType} searchType - Specifies the filter type.\n * @param {boolean} ignoreCase - Specifies the case sensitive option for search operation.\n * @returns {Element | number} Returns the search matched items.\n */\n\n\nfunction Search(inputVal, items, searchType, ignoreCase) {\n  const listItems = items;\n  ignoreCase = ignoreCase !== undefined && ignoreCase !== null ? ignoreCase : true;\n  const itemData = {\n    item: null,\n    index: null\n  };\n\n  if (inputVal && inputVal.length) {\n    const strLength = inputVal.length;\n    let queryStr = ignoreCase ? inputVal.toLocaleLowerCase() : inputVal;\n    queryStr = escapeCharRegExp(queryStr);\n\n    for (let i = 0, itemsData = listItems; i < itemsData.length; i++) {\n      const item = itemsData[i];\n      const text = (ignoreCase ? item.textContent.toLocaleLowerCase() : item.textContent).replace(/^\\s+|\\s+$/g, '');\n\n      if (searchType === 'Equal' && text === queryStr || searchType === 'StartsWith' && text.substr(0, strLength) === queryStr || searchType === 'EndsWith' && text.substr(text.length - queryStr.length) === queryStr || searchType === 'Contains' && new RegExp(queryStr, \"g\").test(text)) {\n        itemData.item = item;\n        itemData.index = i;\n        return {\n          item: item,\n          index: i\n        };\n      }\n    }\n\n    return itemData;\n  }\n\n  return itemData;\n}\n\nfunction escapeCharRegExp(value) {\n  return value.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\n\nfunction resetIncrementalSearchValues(elementId) {\n  if (prevElementId === elementId) {\n    prevElementId = '';\n    prevString = '';\n    queryString = '';\n    matches$1 = [];\n  }\n}\n/* eslint-disable jsdoc/require-param, valid-jsdoc */\n\n/**\n * Function helps to find which highlightSearch is to call based on your data.\n *\n * @param  {HTMLElement} element - Specifies an li element.\n * @param  {string} query - Specifies the string to be highlighted.\n * @param  {boolean} ignoreCase - Specifies the ignoreCase option.\n * @param  {HightLightType} type - Specifies the type of highlight.\n * @returns {void}\n */\n\n\nfunction highlightSearch(element, query, ignoreCase, type) {\n  if (query === '') {\n    return;\n  } else {\n    const ignoreRegex = ignoreCase ? 'gim' : 'gm'; // eslint-disable-next-line\n\n    query = /^[a-zA-Z0-9- ]*$/.test(query) ? query : query.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\n    const replaceQuery = type === 'StartsWith' ? '^(' + query + ')' : type === 'EndsWith' ? '(' + query + ')$' : '(' + query + ')';\n    findTextNode(element, new RegExp(replaceQuery, ignoreRegex));\n  }\n}\n/* eslint-enable jsdoc/require-param, valid-jsdoc */\n\n/**\n *\n * @param {HTMLElement} element - Specifies the element.\n * @param {RegExp} pattern - Specifies the regex to match the searched text.\n * @returns {void}\n */\n\n\nfunction findTextNode(element, pattern) {\n  for (let index = 0; element.childNodes && index < element.childNodes.length; index++) {\n    if (element.childNodes[index].nodeType === 3 && element.childNodes[index].textContent.trim() !== '') {\n      const value = element.childNodes[index].nodeValue.trim().replace(pattern, '<span class=\"e-highlight\">$1</span>');\n      element.childNodes[index].nodeValue = '';\n      element.innerHTML = element.innerHTML.trim() + value;\n      break;\n    } else {\n      findTextNode(element.childNodes[index], pattern);\n    }\n  }\n}\n/**\n * Function helps to remove highlighted element based on your data.\n *\n * @param  {HTMLElement} content - Specifies an content element.\n * @returns {void}\n */\n\n\nfunction revertHighlightSearch(content) {\n  const contentElement = content.querySelectorAll('.e-highlight');\n\n  for (let i = contentElement.length - 1; i >= 0; i--) {\n    const parent = contentElement[i].parentNode;\n    const text = document.createTextNode(contentElement[i].textContent);\n    parent.replaceChild(text, contentElement[i]);\n  }\n}\n/**\n * Common source\n */\n\n\nvar __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nclass FieldSettings extends ChildProperty {}\n\n__decorate([Property()], FieldSettings.prototype, \"text\", void 0);\n\n__decorate([Property()], FieldSettings.prototype, \"value\", void 0);\n\n__decorate([Property()], FieldSettings.prototype, \"iconCss\", void 0);\n\n__decorate([Property()], FieldSettings.prototype, \"groupBy\", void 0);\n\n__decorate([Property()], FieldSettings.prototype, \"htmlAttributes\", void 0);\n\nconst dropDownBaseClasses = {\n  root: 'e-dropdownbase',\n  rtl: 'e-rtl',\n  content: 'e-content',\n  selected: 'e-active',\n  hover: 'e-hover',\n  noData: 'e-nodata',\n  fixedHead: 'e-fixed-head',\n  focus: 'e-item-focus',\n  li: 'e-list-item',\n  group: 'e-list-group-item',\n  disabled: 'e-disabled',\n  grouping: 'e-dd-group'\n};\nconst ITEMTEMPLATE_PROPERTY = 'ItemTemplate';\nconst VALUETEMPLATE_PROPERTY = 'ValueTemplate';\nconst GROUPTEMPLATE_PROPERTY = 'GroupTemplate';\nconst HEADERTEMPLATE_PROPERTY = 'HeaderTemplate';\nconst FOOTERTEMPLATE_PROPERTY = 'FooterTemplate';\nconst NORECORDSTEMPLATE_PROPERTY = 'NoRecordsTemplate';\nconst ACTIONFAILURETEMPLATE_PROPERTY = 'ActionFailureTemplate';\nconst HIDE_GROUPLIST = 'e-hide-group-header';\n/**\n * DropDownBase component will generate the list items based on given data and act as base class to drop-down related components\n */\n\nlet DropDownBase = class DropDownBase extends Component {\n  /**\n   * * Constructor for DropDownBase class\n   *\n   * @param {DropDownBaseModel} options - Specifies the DropDownBase model.\n   * @param {string | HTMLElement} element - Specifies the element to render as component.\n   * @private\n   */\n  constructor(options, element) {\n    super(options, element);\n    this.preventChange = false;\n    this.isAngular = false;\n    this.isPreventChange = false;\n    this.isDynamicDataChange = false;\n  }\n\n  getPropObject(prop, newProp, oldProp) {\n    const newProperty = new Object();\n    const oldProperty = new Object();\n\n    const propName = prop => {\n      return prop;\n    };\n\n    newProperty[propName(prop)] = newProp[propName(prop)];\n    oldProperty[propName(prop)] = oldProp[propName(prop)];\n    const data = new Object();\n    data.newProperty = newProperty;\n    data.oldProperty = oldProperty;\n    return data;\n  }\n\n  getValueByText(text, ignoreCase, ignoreAccent) {\n    let value = null;\n\n    if (!isNullOrUndefined(this.listData)) {\n      if (ignoreCase) {\n        value = this.checkValueCase(text, true, ignoreAccent);\n      } else {\n        value = this.checkValueCase(text, false, ignoreAccent);\n      }\n    }\n\n    return value;\n  }\n\n  checkValueCase(text, ignoreCase, ignoreAccent, isTextByValue) {\n    let value = null;\n\n    if (isTextByValue) {\n      value = text;\n    }\n\n    const dataSource = this.listData;\n    const fields = this.fields;\n    const type = this.typeOfData(dataSource).typeof;\n\n    if (type === 'string' || type === 'number' || type === 'boolean') {\n      for (const item of dataSource) {\n        if (!isNullOrUndefined(item)) {\n          if (ignoreAccent) {\n            value = this.checkingAccent(String(item), text, ignoreCase);\n          } else {\n            if (ignoreCase) {\n              if (this.checkIgnoreCase(String(item), text)) {\n                value = this.getItemValue(String(item), text, ignoreCase);\n              }\n            } else {\n              if (this.checkNonIgnoreCase(String(item), text)) {\n                value = this.getItemValue(String(item), text, ignoreCase, isTextByValue);\n              }\n            }\n          }\n        }\n      }\n    } else {\n      if (ignoreCase) {\n        dataSource.filter(item => {\n          const itemValue = getValue(fields.value, item);\n\n          if (!isNullOrUndefined(itemValue) && this.checkIgnoreCase(getValue(fields.text, item).toString(), text)) {\n            value = getValue(fields.value, item);\n          }\n        });\n      } else {\n        if (isTextByValue) {\n          let compareValue = null;\n          compareValue = value;\n          dataSource.filter(item => {\n            const itemValue = getValue(fields.value, item);\n\n            if (!isNullOrUndefined(itemValue) && !isNullOrUndefined(value) && itemValue.toString() === compareValue.toString()) {\n              value = getValue(fields.text, item);\n            }\n          });\n        } else {\n          dataSource.filter(item => {\n            if (this.checkNonIgnoreCase(getValue(fields.text, item), text)) {\n              value = getValue(fields.value, item);\n            }\n          });\n        }\n      }\n    }\n\n    return value;\n  }\n\n  checkingAccent(item, text, ignoreCase) {\n    const dataItem = DataUtil.ignoreDiacritics(String(item));\n    const textItem = DataUtil.ignoreDiacritics(text.toString());\n    let value = null;\n\n    if (ignoreCase) {\n      if (this.checkIgnoreCase(dataItem, textItem)) {\n        value = this.getItemValue(String(item), text, ignoreCase);\n      }\n    } else {\n      if (this.checkNonIgnoreCase(String(item), text)) {\n        value = this.getItemValue(String(item), text, ignoreCase);\n      }\n    }\n\n    return value;\n  }\n\n  checkIgnoreCase(item, text) {\n    return String(item).toLowerCase() === text.toString().toLowerCase() ? true : false;\n  }\n\n  checkNonIgnoreCase(item, text) {\n    return String(item) === text.toString() ? true : false;\n  }\n\n  getItemValue(dataItem, typedText, ignoreCase, isTextByValue) {\n    let value = null;\n    const dataSource = this.listData;\n    const type = this.typeOfData(dataSource).typeof;\n\n    if (isTextByValue) {\n      value = dataItem.toString();\n    } else {\n      if (ignoreCase) {\n        value = type === 'string' ? String(dataItem) : this.getFormattedValue(String(dataItem));\n      } else {\n        value = type === 'string' ? typedText : this.getFormattedValue(typedText);\n      }\n    }\n\n    return value;\n  }\n\n  templateCompiler(baseTemplate) {\n    let checkTemplate = false;\n\n    if (baseTemplate) {\n      try {\n        checkTemplate = selectAll(baseTemplate, document).length ? true : false;\n      } catch (exception) {\n        checkTemplate = false;\n      }\n    }\n\n    return checkTemplate;\n  }\n\n  l10nUpdate(actionFailure) {\n    const ele = this.getModuleName() === 'listbox' ? this.ulElement : this.list;\n\n    if (this.noRecordsTemplate !== 'No records found' || this.actionFailureTemplate !== 'Request failed') {\n      const template = actionFailure ? this.actionFailureTemplate : this.noRecordsTemplate;\n      let compiledString;\n      const templateId = actionFailure ? this.actionFailureTemplateId : this.noRecordsTemplateId;\n      ele.innerHTML = '';\n      const tempaltecheck = this.templateCompiler(template);\n\n      if (tempaltecheck) {\n        compiledString = compile(select(template, document).innerHTML.trim());\n      } else {\n        compiledString = compile(template);\n      }\n\n      const templateName = actionFailure ? 'actionFailureTemplate' : 'noRecordsTemplate'; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n      const noDataCompTemp = compiledString({}, this, templateName, templateId, this.isStringTemplate, null, ele);\n\n      if (noDataCompTemp && noDataCompTemp.length > 0) {\n        for (let i = 0; i < noDataCompTemp.length; i++) {\n          ele.appendChild(noDataCompTemp[i]);\n        }\n      }\n\n      this.renderReactTemplates();\n    } else {\n      const l10nLocale = {\n        noRecordsTemplate: 'No records found',\n        actionFailureTemplate: 'Request failed'\n      };\n      const componentLocale = new L10n(this.getLocaleName(), {}, this.locale);\n\n      if (componentLocale.getConstant('actionFailureTemplate') !== '') {\n        this.l10n = componentLocale;\n      } else {\n        this.l10n = new L10n(this.getModuleName() === 'listbox' ? 'listbox' : 'dropdowns', l10nLocale, this.locale);\n      }\n\n      const content = actionFailure ? this.l10n.getConstant('actionFailureTemplate') : this.l10n.getConstant('noRecordsTemplate');\n\n      if (this.getModuleName() === 'listbox') {\n        const liElem = this.createElement('li');\n        liElem.textContent = content;\n        ele.appendChild(liElem);\n        liElem.classList.add('e-list-nrt');\n      } else {\n        ele.innerHTML = content;\n      }\n    }\n  }\n\n  getLocaleName() {\n    return 'drop-down-base';\n  }\n\n  getTextByValue(value) {\n    const text = this.checkValueCase(value, false, false, true);\n    return text;\n  }\n\n  getFormattedValue(value) {\n    if (this.listData && this.listData.length) {\n      const item = this.typeOfData(this.listData);\n\n      if (typeof getValue(this.fields.value ? this.fields.value : 'value', item.item) === 'number' || item.typeof === 'number') {\n        return parseFloat(value);\n      }\n\n      if (typeof getValue(this.fields.value ? this.fields.value : 'value', item.item) === 'boolean' || item.typeof === 'boolean') {\n        return value === 'true' || '' + value === 'true';\n      }\n    }\n\n    return value;\n  }\n  /**\n   * Sets RTL to dropdownbase wrapper\n   *\n   * @returns {void}\n   */\n\n\n  setEnableRtl() {\n    if (this.list) {\n      this.enableRtlElements.push(this.list);\n    }\n\n    if (this.enableRtl) {\n      addClass(this.enableRtlElements, dropDownBaseClasses.rtl);\n    } else {\n      removeClass(this.enableRtlElements, dropDownBaseClasses.rtl);\n    }\n  }\n  /**\n   * Initialize the Component.\n   *\n   * @returns {void}\n   */\n\n\n  initialize() {\n    this.bindEvent = true;\n    this.actionFailureTemplateId = `${this.element.id}${ACTIONFAILURETEMPLATE_PROPERTY}`;\n\n    if (this.element.tagName === 'UL') {\n      const jsonElement = ListBase.createJsonFromElement(this.element);\n      this.setProperties({\n        fields: {\n          text: 'text',\n          value: 'text'\n        }\n      }, true);\n      this.resetList(jsonElement, this.fields);\n    } else if (this.element.tagName === 'SELECT') {\n      const dataSource = this.dataSource instanceof Array ? this.dataSource.length > 0 ? true : false : !isNullOrUndefined(this.dataSource) ? true : false;\n\n      if (!dataSource) {\n        this.renderItemsBySelect();\n      } else if (this.isDynamicDataChange) {\n        this.setListData(this.dataSource, this.fields, this.query);\n      }\n    } else {\n      this.setListData(this.dataSource, this.fields, this.query);\n    }\n  }\n  /**\n   * Get the properties to be maintained in persisted state.\n   *\n   * @returns {string} Returns the persisted data of the component.\n   */\n\n\n  getPersistData() {\n    return this.addOnPersist([]);\n  }\n  /**\n   * Sets the enabled state to DropDownBase.\n   *\n   * @returns {void}\n   */\n\n\n  setEnabled() {\n    this.element.setAttribute('aria-disabled', this.enabled ? 'false' : 'true');\n  }\n  /**\n   * Sets the enabled state to DropDownBase.\n   *\n   * @param {string} value - Specifies the attribute values to add on the input element.\n   * @returns {void}\n   */\n\n\n  updateDataAttribute(value) {\n    const invalidAttr = ['class', 'style', 'id', 'type'];\n    const attr = {};\n\n    for (let a = 0; a < this.element.attributes.length; a++) {\n      if (invalidAttr.indexOf(this.element.attributes[a].name) === -1 && !(this.getModuleName() === 'dropdownlist' && this.element.attributes[a].name === 'readonly')) {\n        attr[this.element.attributes[a].name] = this.element.getAttribute(this.element.attributes[a].name);\n      }\n    }\n\n    extend(attr, value, attr);\n    this.setProperties({\n      htmlAttributes: attr\n    }, true);\n  }\n\n  renderItemsBySelect() {\n    const element = this.element;\n    const fields = {\n      value: 'value',\n      text: 'text'\n    };\n    const jsonElement = [];\n    const group = element.querySelectorAll('select>optgroup');\n    const option = element.querySelectorAll('select>option');\n    this.getJSONfromOption(jsonElement, option, fields);\n\n    if (group.length) {\n      for (let i = 0; i < group.length; i++) {\n        const item = group[i];\n        const optionGroup = {};\n        optionGroup[fields.text] = item.label;\n        optionGroup.isHeader = true;\n        const child = item.querySelectorAll('option');\n        jsonElement.push(optionGroup);\n        this.getJSONfromOption(jsonElement, child, fields);\n      }\n\n      element.querySelectorAll('select>option');\n    }\n\n    this.updateFields(fields.text, fields.value, this.fields.groupBy, this.fields.htmlAttributes, this.fields.iconCss);\n    this.resetList(jsonElement, fields);\n  }\n\n  updateFields(text, value, groupBy, htmlAttributes, iconCss) {\n    const field = {\n      'fields': {\n        text: text,\n        value: value,\n        groupBy: !isNullOrUndefined(groupBy) ? groupBy : this.fields && this.fields.groupBy,\n        htmlAttributes: !isNullOrUndefined(htmlAttributes) ? htmlAttributes : this.fields && this.fields.htmlAttributes,\n        iconCss: !isNullOrUndefined(iconCss) ? iconCss : this.fields && this.fields.iconCss\n      }\n    };\n    this.setProperties(field, true);\n  }\n\n  getJSONfromOption(items, options, fields) {\n    for (const option of options) {\n      const json = {};\n      json[fields.text] = option.innerText;\n      json[fields.value] = !isNullOrUndefined(option.getAttribute(fields.value)) ? option.getAttribute(fields.value) : option.innerText;\n      items.push(json);\n    }\n  }\n  /**\n   * Execute before render the list items\n   *\n   * @private\n   * @returns {void}\n   */\n\n\n  preRender() {\n    // there is no event handler\n    this.scrollTimer = -1;\n    this.enableRtlElements = [];\n    this.isRequested = false;\n    this.isDataFetched = false;\n    this.itemTemplateId = `${this.element.id}${ITEMTEMPLATE_PROPERTY}`;\n    this.valueTemplateId = `${this.element.id}${VALUETEMPLATE_PROPERTY}`;\n    this.groupTemplateId = `${this.element.id}${GROUPTEMPLATE_PROPERTY}`;\n    this.headerTemplateId = `${this.element.id}${HEADERTEMPLATE_PROPERTY}`;\n    this.footerTemplateId = `${this.element.id}${FOOTERTEMPLATE_PROPERTY}`;\n    this.noRecordsTemplateId = `${this.element.id}${NORECORDSTEMPLATE_PROPERTY}`;\n  }\n  /**\n   * Creates the list items of DropDownBase component.\n   *\n   * @param {Object[] | string[] | number[] | DataManager | boolean[]} dataSource - Specifies the data to generate the list.\n   * @param {FieldSettingsModel} fields - Maps the columns of the data table and binds the data to the component.\n   * @param {Query} query - Accepts the external Query that execute along with data processing.\n   * @returns {void}\n   */\n\n\n  setListData(dataSource, fields, query) {\n    fields = fields ? fields : this.fields;\n    let ulElement;\n    this.isActive = true;\n    const eventArgs = {\n      cancel: false,\n      data: dataSource,\n      query: query\n    };\n    this.isPreventChange = this.isAngular && this.preventChange ? true : this.isPreventChange;\n    this.trigger('actionBegin', eventArgs, eventArgs => {\n      if (!eventArgs.cancel) {\n        this.showSpinner();\n\n        if (dataSource instanceof DataManager) {\n          this.isRequested = true;\n\n          if (this.isDataFetched) {\n            this.emptyDataRequest(fields);\n            return;\n          }\n\n          eventArgs.data.executeQuery(this.getQuery(eventArgs.query)).then(e => {\n            this.isPreventChange = this.isAngular && this.preventChange ? true : this.isPreventChange;\n            this.trigger('actionComplete', e, e => {\n              if (!e.cancel) {\n                const listItems = e.result;\n\n                if (listItems.length === 0) {\n                  this.isDataFetched = true;\n                }\n\n                ulElement = this.renderItems(listItems, fields);\n\n                if (this.groupTemplate) {\n                  this.renderGroupTemplate(ulElement);\n                }\n\n                this.onActionComplete(ulElement, listItems, e);\n                this.isRequested = false;\n                this.bindChildItems(listItems, ulElement, fields, e);\n              }\n            });\n          }).catch(e => {\n            this.isRequested = false;\n            this.onActionFailure(e);\n            this.hideSpinner();\n          });\n        } else {\n          const dataManager = new DataManager(eventArgs.data);\n          const listItems = this.getQuery(eventArgs.query).executeLocal(dataManager);\n          const localDataArgs = {\n            cancel: false,\n            result: listItems\n          };\n          this.isPreventChange = this.isAngular && this.preventChange ? true : this.isPreventChange;\n          this.trigger('actionComplete', localDataArgs, localDataArgs => {\n            if (!localDataArgs.cancel) {\n              ulElement = this.renderItems(localDataArgs.result, fields);\n              this.onActionComplete(ulElement, localDataArgs.result);\n\n              if (this.groupTemplate) {\n                this.renderGroupTemplate(ulElement);\n              }\n\n              this.bindChildItems(localDataArgs.result, ulElement, fields);\n              setTimeout(() => {\n                if (this.getModuleName() === 'multiselect' && this.itemTemplate != null && ulElement.childElementCount > 0 && (ulElement.children[0].childElementCount > 0 || this.fields.groupBy && ulElement.children[1] && ulElement.children[1].childElementCount > 0)) {\n                  this.updateDataList();\n                }\n              });\n            }\n          });\n        }\n      }\n    });\n  }\n\n  bindChildItems(listItems, ulElement, fields, e) {\n    if (listItems.length >= 100 && this.getModuleName() === 'autocomplete') {\n      setTimeout(() => {\n        const childNode = this.remainingItems(this.sortedData, fields);\n        append(childNode, ulElement);\n        this.liCollections = this.list.querySelectorAll('.' + dropDownBaseClasses.li);\n        this.updateListValues();\n        this.raiseDataBound(listItems, e);\n      }, 0);\n    } else {\n      this.raiseDataBound(listItems, e);\n    }\n  }\n\n  updateListValues() {// Used this method in component side.\n  }\n\n  findListElement(list, findNode, attribute, value) {\n    let liElement = null;\n\n    if (list) {\n      const listArr = [].slice.call(list.querySelectorAll(findNode));\n\n      for (let index = 0; index < listArr.length; index++) {\n        if (listArr[index].getAttribute(attribute) === value + '') {\n          liElement = listArr[index];\n          break;\n        }\n      }\n    }\n\n    return liElement;\n  }\n\n  raiseDataBound(listItems, e) {\n    this.hideSpinner();\n    const dataBoundEventArgs = {\n      items: listItems,\n      e: e\n    };\n    this.trigger('dataBound', dataBoundEventArgs);\n  }\n\n  remainingItems(dataSource, fields) {\n    const spliceData = new DataManager(dataSource).executeLocal(new Query().skip(100));\n\n    if (this.itemTemplate) {\n      const listElements = this.templateListItem(spliceData, fields);\n      return [].slice.call(listElements.childNodes);\n    }\n\n    const type = this.typeOfData(spliceData).typeof;\n\n    if (type === 'string' || type === 'number' || type === 'boolean') {\n      return ListBase.createListItemFromArray(this.createElement, spliceData, true, this.listOption(spliceData, fields), this);\n    }\n\n    return ListBase.createListItemFromJson(this.createElement, spliceData, this.listOption(spliceData, fields), 1, true, this);\n  }\n\n  emptyDataRequest(fields) {\n    const listItems = [];\n    this.onActionComplete(this.renderItems(listItems, fields), listItems);\n    this.isRequested = false;\n    this.hideSpinner();\n  }\n\n  showSpinner() {// Used this method in component side.\n  }\n\n  hideSpinner() {// Used this method in component side.\n  }\n\n  onActionFailure(e) {\n    this.liCollections = [];\n    this.trigger('actionFailure', e);\n    this.l10nUpdate(true);\n    addClass([this.list], dropDownBaseClasses.noData);\n  }\n  /* eslint-disable @typescript-eslint/no-unused-vars */\n\n\n  onActionComplete(ulElement, list, e) {\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    this.listData = list; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n    if (this.isReact) {\n      this.clearTemplate(['itemTemplate', 'groupTemplate', 'actionFailureTemplate', 'noRecordsTemplate']);\n    }\n\n    this.fixedHeaderElement = isNullOrUndefined(this.fixedHeaderElement) ? this.fixedHeaderElement : null;\n\n    if (this.getModuleName() === 'multiselect' && this.properties.allowCustomValue && this.fields.groupBy) {\n      for (let i = 0; i < ulElement.childElementCount; i++) {\n        if (ulElement.children[i].classList.contains('e-list-group-item')) {\n          if (isNullOrUndefined(ulElement.children[i].innerHTML) || ulElement.children[i].innerHTML == \"\") {\n            addClass([ulElement.children[i]], HIDE_GROUPLIST);\n          }\n        }\n      }\n    }\n\n    if (!isNullOrUndefined(this.list)) {\n      this.list.innerHTML = '';\n      this.list.appendChild(ulElement);\n      this.liCollections = this.list.querySelectorAll('.' + dropDownBaseClasses.li);\n      this.ulElement = this.list.querySelector('ul');\n      this.postRender(this.list, list, this.bindEvent);\n    }\n  }\n  /* eslint-disable @typescript-eslint/no-unused-vars */\n\n\n  postRender(listElement, list, bindEvent) {\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    const focusItem = listElement.querySelector('.' + dropDownBaseClasses.li);\n    const selectedItem = listElement.querySelector('.' + dropDownBaseClasses.selected);\n\n    if (focusItem && !selectedItem) {\n      focusItem.classList.add(dropDownBaseClasses.focus);\n    }\n\n    if (list.length <= 0) {\n      this.l10nUpdate();\n      addClass([listElement], dropDownBaseClasses.noData);\n    } else {\n      listElement.classList.remove(dropDownBaseClasses.noData);\n    }\n  }\n  /**\n   * Get the query to do the data operation before list item generation.\n   *\n   * @param {Query} query - Accepts the external Query that execute along with data processing.\n   * @returns {Query} Returns the query to do the data query operation.\n   */\n\n\n  getQuery(query) {\n    return query ? query : this.query ? this.query : new Query();\n  }\n  /**\n   * To render the template content for group header element.\n   *\n   * @param {HTMLElement} listEle - Specifies the group list elements.\n   * @returns {void}\n   */\n\n\n  renderGroupTemplate(listEle) {\n    if (this.fields.groupBy !== null && this.dataSource || this.element.querySelector('.' + dropDownBaseClasses.group)) {\n      const dataSource = this.dataSource;\n      const option = {\n        groupTemplateID: this.groupTemplateId,\n        isStringTemplate: this.isStringTemplate\n      };\n      const headerItems = listEle.querySelectorAll('.' + dropDownBaseClasses.group);\n      const groupcheck = this.templateCompiler(this.groupTemplate);\n\n      if (groupcheck) {\n        const groupValue = select(this.groupTemplate, document).innerHTML.trim(); // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n        const tempHeaders = ListBase.renderGroupTemplate(groupValue, dataSource, this.fields.properties, headerItems, option, this); //EJ2-55168- Group checkbox is not working with group template\n\n        if (this.isGroupChecking) {\n          for (let i = 0; i < tempHeaders.length; i++) {\n            this.notify('addItem', {\n              module: 'CheckBoxSelection',\n              item: tempHeaders[i]\n            });\n          }\n        }\n      } else {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const tempHeaders = ListBase.renderGroupTemplate(this.groupTemplate, dataSource, this.fields.properties, headerItems, option, this); //EJ2-55168- Group checkbox is not working with group template\n\n        if (this.isGroupChecking) {\n          for (let i = 0; i < tempHeaders.length; i++) {\n            this.notify('addItem', {\n              module: 'CheckBoxSelection',\n              item: tempHeaders[i]\n            });\n          }\n        }\n      }\n\n      this.renderReactTemplates();\n    }\n  }\n  /**\n   * To create the ul li list items\n   *\n   * @param {object []} dataSource - Specifies the data to generate the list.\n   * @param {FieldSettingsModel} fields - Maps the columns of the data table and binds the data to the component.\n   * @returns {HTMLElement} Return the ul li list items.\n   */\n\n\n  createListItems(dataSource, fields) {\n    if (dataSource && fields.groupBy || this.element.querySelector('optgroup')) {\n      if (fields.groupBy) {\n        if (this.sortOrder !== 'None') {\n          dataSource = this.getSortedDataSource(dataSource);\n        }\n\n        dataSource = ListBase.groupDataSource(dataSource, fields.properties, this.sortOrder);\n      }\n\n      addClass([this.list], dropDownBaseClasses.grouping);\n    } else {\n      dataSource = this.getSortedDataSource(dataSource);\n    }\n\n    const options = this.listOption(dataSource, fields);\n    const spliceData = dataSource.length > 100 ? new DataManager(dataSource).executeLocal(new Query().take(100)) : dataSource;\n    this.sortedData = dataSource;\n    return ListBase.createList(this.createElement, this.getModuleName() === 'autocomplete' ? spliceData : dataSource, options, true, this);\n  }\n\n  listOption(dataSource, fields) {\n    const iconCss = isNullOrUndefined(fields.iconCss) ? false : true;\n    const fieldValues = !isNullOrUndefined(fields.properties) ? fields.properties : fields;\n    const options = fields.text !== null || fields.value !== null ? {\n      fields: fieldValues,\n      showIcon: iconCss,\n      ariaAttributes: {\n        groupItemRole: 'presentation'\n      }\n    } : {\n      fields: {\n        value: 'text'\n      }\n    };\n    return extend({}, options, fields, true);\n  }\n\n  setFloatingHeader(e) {\n    if (isNullOrUndefined(this.fixedHeaderElement)) {\n      this.fixedHeaderElement = this.createElement('div', {\n        className: dropDownBaseClasses.fixedHead\n      });\n\n      if (!this.list.querySelector('li').classList.contains(dropDownBaseClasses.group)) {\n        this.fixedHeaderElement.style.display = 'none';\n      }\n\n      prepend([this.fixedHeaderElement], this.list);\n      this.setFixedHeader();\n    }\n\n    if (!isNullOrUndefined(this.fixedHeaderElement) && this.fixedHeaderElement.style.zIndex === '0') {\n      this.setFixedHeader();\n    }\n\n    this.scrollStop(e);\n  }\n\n  scrollStop(e) {\n    let target = !isNullOrUndefined(e) ? e.target : this.list;\n    let liHeight = parseInt(getComputedStyle(this.getValidLi(), null).getPropertyValue('height'), 10);\n    const topIndex = Math.round(target.scrollTop / liHeight);\n    const liCollections = this.list.querySelectorAll('li' + ':not(.e-hide-listitem)');\n\n    for (let i = topIndex; i > -1; i--) {\n      if (!isNullOrUndefined(liCollections[i]) && liCollections[i].classList.contains(dropDownBaseClasses.group)) {\n        const currentLi = liCollections[i];\n        this.fixedHeaderElement.innerHTML = currentLi.innerHTML;\n        this.fixedHeaderElement.style.top = target.scrollTop + 'px';\n        this.fixedHeaderElement.style.display = 'block';\n        break;\n      } else {\n        this.fixedHeaderElement.style.display = 'none';\n        this.fixedHeaderElement.style.top = 'none';\n      }\n    }\n  }\n\n  getValidLi() {\n    return this.liCollections[0];\n  }\n  /**\n   * To render the list items\n   *\n   * @param {object[]} listData - Specifies the list of array of data.\n   * @param {FieldSettingsModel} fields - Maps the columns of the data table and binds the data to the component.\n   * @returns {HTMLElement} Return the list items.\n   */\n\n\n  renderItems(listData, fields) {\n    let ulElement;\n\n    if (this.itemTemplate && listData) {\n      let dataSource = listData;\n\n      if (dataSource && fields.groupBy) {\n        if (this.sortOrder !== 'None') {\n          dataSource = this.getSortedDataSource(dataSource);\n        }\n\n        dataSource = ListBase.groupDataSource(dataSource, fields.properties, this.sortOrder);\n      } else {\n        dataSource = this.getSortedDataSource(dataSource);\n      }\n\n      this.sortedData = dataSource;\n      const spliceData = dataSource.length > 100 ? new DataManager(dataSource).executeLocal(new Query().take(100)) : dataSource;\n      ulElement = this.templateListItem(this.getModuleName() === 'autocomplete' ? spliceData : dataSource, fields);\n    } else {\n      ulElement = this.createListItems(listData, fields);\n    }\n\n    return ulElement;\n  }\n\n  templateListItem(dataSource, fields) {\n    const option = this.listOption(dataSource, fields);\n    option.templateID = this.itemTemplateId;\n    option.isStringTemplate = this.isStringTemplate;\n    const itemcheck = this.templateCompiler(this.itemTemplate);\n\n    if (itemcheck) {\n      const itemValue = select(this.itemTemplate, document).innerHTML.trim();\n      return ListBase.renderContentTemplate(this.createElement, itemValue, dataSource, fields.properties, option, this);\n    } else {\n      return ListBase.renderContentTemplate(this.createElement, this.itemTemplate, dataSource, fields.properties, option, this);\n    }\n  }\n\n  typeOfData(items) {\n    let item = {\n      typeof: null,\n      item: null\n    };\n\n    for (let i = 0; !isNullOrUndefined(items) && i < items.length; i++) {\n      if (!isNullOrUndefined(items[i])) {\n        const listDataType = typeof items[i] === 'string' || typeof items[i] === 'number' || typeof items[i] === 'boolean';\n        const isNullData = listDataType ? isNullOrUndefined(items[i]) : isNullOrUndefined(getValue(this.fields.value ? this.fields.value : 'value', items[i]));\n\n        if (!isNullData) {\n          return item = {\n            typeof: typeof items[i],\n            item: items[i]\n          };\n        }\n      }\n    }\n\n    return item;\n  }\n\n  setFixedHeader() {\n    this.list.parentElement.style.display = 'block';\n    let borderWidth = 0;\n\n    if (this.list && this.list.parentElement) {\n      borderWidth = parseInt(document.defaultView.getComputedStyle(this.list.parentElement, null).getPropertyValue('border-width'), 10);\n      /*Shorthand property not working in Firefox for getComputedStyle method.\n      Refer bug report https://bugzilla.mozilla.org/show_bug.cgi?id=137688\n      Refer alternate solution https://stackoverflow.com/a/41696234/9133493*/\n\n      if (isNaN(borderWidth)) {\n        let borderTopWidth = parseInt(document.defaultView.getComputedStyle(this.list.parentElement, null).getPropertyValue('border-top-width'), 10);\n        let borderBottomWidth = parseInt(document.defaultView.getComputedStyle(this.list.parentElement, null).getPropertyValue('border-bottom-width'), 10);\n        let borderLeftWidth = parseInt(document.defaultView.getComputedStyle(this.list.parentElement, null).getPropertyValue('border-left-width'), 10);\n        let borderRightWidth = parseInt(document.defaultView.getComputedStyle(this.list.parentElement, null).getPropertyValue('border-right-width'), 10);\n        borderWidth = borderTopWidth + borderBottomWidth + borderLeftWidth + borderRightWidth;\n      }\n    }\n\n    const liWidth = this.getValidLi().offsetWidth - borderWidth;\n    this.fixedHeaderElement.style.width = liWidth.toString() + 'px';\n    setStyleAttribute(this.fixedHeaderElement, {\n      zIndex: 10\n    });\n    const firstLi = this.ulElement.querySelector('.' + dropDownBaseClasses.group + ':not(.e-hide-listitem)');\n    this.fixedHeaderElement.innerHTML = firstLi.innerHTML;\n  }\n\n  getSortedDataSource(dataSource) {\n    if (dataSource && this.sortOrder !== 'None') {\n      let textField = this.fields.text ? this.fields.text : 'text';\n\n      if (this.typeOfData(dataSource).typeof === 'string' || this.typeOfData(dataSource).typeof === 'number' || this.typeOfData(dataSource).typeof === 'boolean') {\n        textField = '';\n      }\n\n      dataSource = ListBase.getDataSource(dataSource, ListBase.addSorting(this.sortOrder, textField));\n    }\n\n    return dataSource;\n  }\n  /**\n   * Return the index of item which matched with given value in data source\n   *\n   * @param {string | number | boolean} value - Specifies given value.\n   * @returns {number} Returns the index of the item.\n   */\n\n\n  getIndexByValue(value) {\n    let index;\n    const listItems = this.getItems();\n\n    for (let i = 0; i < listItems.length; i++) {\n      if (!isNullOrUndefined(value) && listItems[i].getAttribute('data-value') === value.toString()) {\n        index = i;\n        break;\n      }\n    }\n\n    return index;\n  }\n  /**\n   * To dispatch the event manually\n   *\n   * @param {HTMLElement} element - Specifies the element to dispatch the event.\n   * @param {string} type - Specifies the name of the event.\n   * @returns {void}\n   */\n\n\n  dispatchEvent(element, type) {\n    const evt = document.createEvent('HTMLEvents');\n    evt.initEvent(type, false, true);\n    element.dispatchEvent(evt);\n  }\n  /**\n   * To set the current fields\n   *\n   * @returns {void}\n   */\n\n\n  setFields() {\n    if (this.fields.value && !this.fields.text) {\n      this.updateFields(this.fields.value, this.fields.value);\n    } else if (!this.fields.value && this.fields.text) {\n      this.updateFields(this.fields.text, this.fields.text);\n    } else if (!this.fields.value && !this.fields.text) {\n      this.updateFields('text', 'text');\n    }\n  }\n  /**\n   * reset the items list.\n   *\n   * @param {Object[] | string[] | number[] | DataManager | boolean[]} dataSource - Specifies the data to generate the list.\n   * @param {FieldSettingsModel} fields - Maps the columns of the data table and binds the data to the component.\n   * @param {Query} query - Accepts the external Query that execute along with data processing.\n   * @returns {void}\n   */\n\n\n  resetList(dataSource, fields, query) {\n    if (this.list) {\n      if (this.element.tagName === 'SELECT' && this.element.options.length > 0 || this.element.tagName === 'UL' && this.element.childNodes.length > 0) {\n        const data = dataSource instanceof Array ? dataSource.length > 0 : !isNullOrUndefined(dataSource);\n\n        if (!data && this.selectData && this.selectData.length > 0) {\n          dataSource = this.selectData;\n        }\n      }\n\n      dataSource = this.getModuleName() === 'combobox' && this.selectData && dataSource instanceof Array && dataSource.length < this.selectData.length ? this.selectData : dataSource;\n      this.setListData(dataSource, fields, query);\n    }\n  }\n\n  updateSelectElementData(isFiltering) {\n    if (isFiltering && isNullOrUndefined(this.selectData) && this.listData && this.listData.length > 0) {\n      this.selectData = this.listData;\n    }\n  }\n\n  updateSelection() {// This is for after added the item, need to update the selected index values.\n  }\n\n  renderList() {\n    // This is for render the list items.\n    this.render();\n  } // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  updateDataSource(props) {\n    this.resetList(this.dataSource);\n  }\n\n  setUpdateInitial(props, newProp) {\n    this.isDataFetched = false;\n    const updateData = {};\n\n    for (let j = 0; props.length > j; j++) {\n      if (newProp[props[j]] && props[j] === 'fields') {\n        this.setFields();\n        updateData[props[j]] = newProp[props[j]];\n      } else if (newProp[props[j]]) {\n        updateData[props[j]] = newProp[props[j]];\n      }\n    }\n\n    if (Object.keys(updateData).length > 0) {\n      if (Object.keys(updateData).indexOf('dataSource') === -1) {\n        updateData.dataSource = this.dataSource;\n      }\n\n      this.updateDataSource(updateData);\n    }\n  }\n  /**\n   * When property value changes happened, then onPropertyChanged method will execute the respective changes in this component.\n   *\n   * @param {DropDownBaseModel} newProp - Returns the dynamic property value of the component.\n   * @param {DropDownBaseModel} oldProp - Returns the previous property value of the component.\n   * @private\n   * @returns {void}\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  onPropertyChanged(newProp, oldProp) {\n    if (this.getModuleName() === 'dropdownbase') {\n      this.setUpdateInitial(['fields', 'query', 'dataSource'], newProp);\n    }\n\n    this.setUpdateInitial(['sortOrder', 'itemTemplate'], newProp);\n\n    for (const prop of Object.keys(newProp)) {\n      switch (prop) {\n        case 'query':\n        case 'sortOrder':\n        case 'dataSource':\n        case 'itemTemplate':\n          break;\n\n        case 'enableRtl':\n          this.setEnableRtl();\n          break;\n\n        case 'enabled':\n          this.setEnabled();\n          break;\n\n        case 'groupTemplate':\n          this.renderGroupTemplate(this.list);\n\n          if (this.ulElement && this.fixedHeaderElement) {\n            const firstLi = this.ulElement.querySelector('.' + dropDownBaseClasses.group);\n            this.fixedHeaderElement.innerHTML = firstLi.innerHTML;\n          }\n\n          break;\n\n        case 'locale':\n          if (this.list && !isNullOrUndefined(this.liCollections) && this.liCollections.length === 0) {\n            this.l10nUpdate();\n          }\n\n          break;\n\n        case 'zIndex':\n          this.setProperties({\n            zIndex: newProp.zIndex\n          }, true);\n          this.setZIndex();\n          break;\n      }\n    }\n  }\n  /**\n   * Build and render the component\n   *\n   * @param {boolean} isEmptyData - Specifies the component to initialize with list data or not.\n   * @private\n   * @returns {void}\n   */\n\n\n  render(isEmptyData) {\n    this.list = this.createElement('div', {\n      className: dropDownBaseClasses.content,\n      attrs: {\n        'tabindex': '0'\n      }\n    });\n    this.list.classList.add(dropDownBaseClasses.root);\n    this.setFields();\n    const rippleModel = {\n      duration: 300,\n      selector: '.' + dropDownBaseClasses.li\n    };\n    this.rippleFun = rippleEffect(this.list, rippleModel);\n    const group = this.element.querySelector('select>optgroup');\n\n    if ((this.fields.groupBy || !isNullOrUndefined(group)) && !this.isGroupChecking) {\n      EventHandler.add(this.list, 'scroll', this.setFloatingHeader, this);\n    }\n\n    if (this.getModuleName() === 'dropdownbase') {\n      if (this.element.getAttribute('tabindex')) {\n        this.list.setAttribute('tabindex', this.element.getAttribute('tabindex'));\n      }\n\n      removeClass([this.element], dropDownBaseClasses.root);\n      this.element.style.display = 'none';\n      const wrapperElement = this.createElement('div');\n      this.element.parentElement.insertBefore(wrapperElement, this.element);\n      wrapperElement.appendChild(this.element);\n      wrapperElement.appendChild(this.list);\n    }\n\n    this.setEnableRtl();\n    this.setEnabled();\n\n    if (!isEmptyData) {\n      this.initialize();\n    }\n  }\n  /**\n   * Return the module name of this component.\n   *\n   * @private\n   * @returns {string} Return the module name of this component.\n   */\n\n\n  getModuleName() {\n    return 'dropdownbase';\n  }\n  /* eslint-disable valid-jsdoc, jsdoc/require-returns-description */\n\n  /**\n   * Gets all the list items bound on this component.\n   *\n   * @returns {Element[]}\n   */\n\n\n  getItems() {\n    return this.ulElement.querySelectorAll('.' + dropDownBaseClasses.li);\n  }\n  /* eslint-enable valid-jsdoc, jsdoc/require-returns-description */\n\n  /**\n   * Adds a new item to the popup list. By default, new item appends to the list as the last item,\n   * but you can insert based on the index parameter.\n   *\n   * @param  { Object[] } items - Specifies an array of JSON data or a JSON data.\n   * @param { number } itemIndex - Specifies the index to place the newly added item in the popup list.\n   * @returns {void}\n   * @deprecated\n   */\n\n\n  addItem(items, itemIndex) {\n    if (!this.list || this.list.textContent === this.noRecordsTemplate && this.getModuleName() !== 'listbox') {\n      this.renderList();\n    }\n\n    if (this.sortOrder !== 'None' && isNullOrUndefined(itemIndex)) {\n      let newList = [].slice.call(this.listData);\n      newList.push(items);\n      newList = this.getSortedDataSource(newList);\n\n      if (this.fields.groupBy) {\n        newList = ListBase.groupDataSource(newList, this.fields.properties, this.sortOrder);\n        itemIndex = newList.indexOf(items);\n      } else {\n        itemIndex = newList.indexOf(items);\n      }\n    }\n\n    const itemsCount = this.getItems().length;\n    const selectedItemValue = this.list.querySelector('.' + dropDownBaseClasses.selected);\n    items = items instanceof Array ? items : [items];\n    let index;\n    index = isNullOrUndefined(itemIndex) || itemIndex < 0 || itemIndex > itemsCount - 1 ? itemsCount : itemIndex;\n    const fields = this.fields;\n\n    if (items && fields.groupBy) {\n      items = ListBase.groupDataSource(items, fields.properties);\n    }\n\n    const liCollections = [];\n\n    for (let i = 0; i < items.length; i++) {\n      const item = items[i];\n      const isHeader = item.isHeader;\n      const li = this.createElement('li', {\n        className: isHeader ? dropDownBaseClasses.group : dropDownBaseClasses.li,\n        id: 'option-add-' + i\n      });\n      const itemText = item instanceof Object ? getValue(fields.text, item) : item;\n\n      if (isHeader) {\n        li.innerText = itemText;\n      }\n\n      if (this.itemTemplate && !isHeader) {\n        const itemCheck = this.templateCompiler(this.itemTemplate);\n        const compiledString = itemCheck ? compile(select(this.itemTemplate, document).innerHTML.trim()) : compile(this.itemTemplate); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n        const addItemTemplate = compiledString(item, this, 'itemTemplate', this.itemTemplateId, this.isStringTemplate, null, li);\n\n        if (addItemTemplate) {\n          append(addItemTemplate, li);\n        }\n      } else if (!isHeader) {\n        li.appendChild(document.createTextNode(itemText));\n      }\n\n      li.setAttribute('data-value', item instanceof Object ? getValue(fields.value, item) : item);\n      li.setAttribute('role', 'option');\n      this.notify('addItem', {\n        module: 'CheckBoxSelection',\n        item: li\n      });\n      liCollections.push(li);\n      this.listData.push(item);\n\n      if (this.sortOrder === 'None' && isNullOrUndefined(itemIndex) && index === 0) {\n        index = null;\n      }\n\n      this.updateActionCompleteData(li, item, index); //Listbox event\n\n      this.trigger('beforeItemRender', {\n        element: li,\n        item: item\n      });\n    }\n\n    if (itemsCount === 0 && isNullOrUndefined(this.list.querySelector('ul'))) {\n      this.list.innerHTML = '';\n      this.list.classList.remove(dropDownBaseClasses.noData);\n      this.list.appendChild(this.ulElement);\n      this.liCollections = liCollections;\n      append(liCollections, this.ulElement);\n      this.updateAddItemList(this.list, itemsCount);\n    } else {\n      if (this.getModuleName() === 'listbox' && itemsCount === 0) {\n        this.ulElement.innerHTML = '';\n      }\n\n      const attr = [];\n\n      for (let i = 0; i < items.length; i++) {\n        const listGroupItem = this.ulElement.querySelectorAll('.e-list-group-item');\n\n        for (let j = 0; j < listGroupItem.length; j++) {\n          attr[j] = listGroupItem[j].innerText;\n        }\n\n        if (attr.indexOf(liCollections[i].innerText) > -1 && fields.groupBy) {\n          for (let j = 0; j < listGroupItem.length; j++) {\n            if (attr[j] === liCollections[i].innerText) {\n              if (this.sortOrder === 'None') {\n                this.ulElement.insertBefore(liCollections[i + 1], listGroupItem[j + 1]);\n              } else {\n                this.ulElement.insertBefore(liCollections[i + 1], this.ulElement.childNodes[itemIndex]);\n              }\n\n              i = i + 1;\n              break;\n            }\n          }\n        } else {\n          if (this.liCollections[index]) {\n            this.liCollections[index].parentNode.insertBefore(liCollections[i], this.liCollections[index]);\n          } else {\n            this.ulElement.appendChild(liCollections[i]);\n          }\n        }\n\n        const tempLi = [].slice.call(this.liCollections);\n        tempLi.splice(index, 0, liCollections[i]);\n        this.liCollections = tempLi;\n        index += 1;\n\n        if (this.getModuleName() === 'multiselect') {\n          this.updateDataList();\n        }\n      }\n    }\n\n    if (selectedItemValue || itemIndex === 0) {\n      this.updateSelection();\n    }\n  }\n\n  validationAttribute(target, hidden) {\n    const name = target.getAttribute('name') ? target.getAttribute('name') : target.getAttribute('id');\n    hidden.setAttribute('name', name);\n    target.removeAttribute('name');\n    const attributes$$1 = ['required', 'aria-required', 'form'];\n\n    for (let i = 0; i < attributes$$1.length; i++) {\n      if (!target.getAttribute(attributes$$1[i])) {\n        continue;\n      }\n\n      const attr = target.getAttribute(attributes$$1[i]);\n      hidden.setAttribute(attributes$$1[i], attr);\n      target.removeAttribute(attributes$$1[i]);\n    }\n  }\n\n  setZIndex() {// this is for component wise\n  } // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  updateActionCompleteData(li, item, index) {// this is for ComboBox custom value\n  } // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  updateAddItemList(list, itemCount) {// this is for multiselect add item\n  }\n\n  updateDataList() {// this is for multiselect update list items\n  }\n  /* eslint-disable valid-jsdoc, jsdoc/require-returns-description */\n\n  /**\n   * Gets the data Object that matches the given value.\n   *\n   * @param { string | number } value - Specifies the value of the list item.\n   * @returns {Object}\n   */\n\n\n  getDataByValue(value) {\n    if (!isNullOrUndefined(this.listData)) {\n      const type = this.typeOfData(this.listData).typeof;\n\n      if (type === 'string' || type === 'number' || type === 'boolean') {\n        for (const item of this.listData) {\n          if (!isNullOrUndefined(item) && item === value) {\n            return item;\n          }\n        }\n      } else {\n        for (const item of this.listData) {\n          if (!isNullOrUndefined(item) && getValue(this.fields.value ? this.fields.value : 'value', item) === value) {\n            return item;\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  /* eslint-enable valid-jsdoc, jsdoc/require-returns-description */\n\n  /**\n   * Removes the component from the DOM and detaches all its related event handlers. It also removes the attributes and classes.\n   *\n   * @method destroy\n   * @returns {void}\n   */\n\n\n  destroy() {\n    if (document.body.contains(this.list)) {\n      EventHandler.remove(this.list, 'scroll', this.setFloatingHeader);\n\n      if (!isNullOrUndefined(this.rippleFun)) {\n        this.rippleFun();\n      }\n\n      detach(this.list);\n    }\n\n    super.destroy();\n  }\n\n};\n\n__decorate([Complex({\n  text: null,\n  value: null,\n  iconCss: null,\n  groupBy: null\n}, FieldSettings)], DropDownBase.prototype, \"fields\", void 0);\n\n__decorate([Property(false)], DropDownBase.prototype, \"enablePersistence\", void 0);\n\n__decorate([Property(null)], DropDownBase.prototype, \"itemTemplate\", void 0);\n\n__decorate([Property(null)], DropDownBase.prototype, \"groupTemplate\", void 0);\n\n__decorate([Property('No records found')], DropDownBase.prototype, \"noRecordsTemplate\", void 0);\n\n__decorate([Property('Request failed')], DropDownBase.prototype, \"actionFailureTemplate\", void 0);\n\n__decorate([Property('None')], DropDownBase.prototype, \"sortOrder\", void 0);\n\n__decorate([Property(true)], DropDownBase.prototype, \"enabled\", void 0);\n\n__decorate([Property([])], DropDownBase.prototype, \"dataSource\", void 0);\n\n__decorate([Property(null)], DropDownBase.prototype, \"query\", void 0);\n\n__decorate([Property('StartsWith')], DropDownBase.prototype, \"filterType\", void 0);\n\n__decorate([Property(true)], DropDownBase.prototype, \"ignoreCase\", void 0);\n\n__decorate([Property(1000)], DropDownBase.prototype, \"zIndex\", void 0);\n\n__decorate([Property(false)], DropDownBase.prototype, \"ignoreAccent\", void 0);\n\n__decorate([Property()], DropDownBase.prototype, \"locale\", void 0);\n\n__decorate([Event()], DropDownBase.prototype, \"actionBegin\", void 0);\n\n__decorate([Event()], DropDownBase.prototype, \"actionComplete\", void 0);\n\n__decorate([Event()], DropDownBase.prototype, \"actionFailure\", void 0);\n\n__decorate([Event()], DropDownBase.prototype, \"select\", void 0);\n\n__decorate([Event()], DropDownBase.prototype, \"dataBound\", void 0);\n\n__decorate([Event()], DropDownBase.prototype, \"created\", void 0);\n\n__decorate([Event()], DropDownBase.prototype, \"destroyed\", void 0);\n\nDropDownBase = __decorate([NotifyPropertyChanges], DropDownBase);\n/**\n * export all modules from current location\n */\n\nvar __decorate$1 = undefined && undefined.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}; // eslint-disable-next-line @typescript-eslint/triple-slash-reference\n/// <reference path='../drop-down-base/drop-down-base-model.d.ts'/>\n// don't use space in classnames\n\n\nconst dropDownListClasses = {\n  root: 'e-dropdownlist',\n  hover: dropDownBaseClasses.hover,\n  selected: dropDownBaseClasses.selected,\n  rtl: dropDownBaseClasses.rtl,\n  li: dropDownBaseClasses.li,\n  disable: dropDownBaseClasses.disabled,\n  base: dropDownBaseClasses.root,\n  focus: dropDownBaseClasses.focus,\n  input: 'e-input-group',\n  inputFocus: 'e-input-focus',\n  icon: 'e-input-group-icon e-ddl-icon',\n  iconAnimation: 'e-icon-anim',\n  value: 'e-input-value',\n  device: 'e-ddl-device',\n  backIcon: 'e-input-group-icon e-back-icon e-icons',\n  filterBarClearIcon: 'e-input-group-icon e-clear-icon e-icons',\n  filterInput: 'e-input-filter',\n  filterParent: 'e-filter-parent',\n  mobileFilter: 'e-ddl-device-filter',\n  footer: 'e-ddl-footer',\n  header: 'e-ddl-header',\n  clearIcon: 'e-clear-icon',\n  clearIconHide: 'e-clear-icon-hide',\n  popupFullScreen: 'e-popup-full-page',\n  disableIcon: 'e-ddl-disable-icon',\n  hiddenElement: 'e-ddl-hidden'\n};\nconst inputObject = {\n  container: null,\n  buttons: []\n};\n/**\n * The DropDownList component contains a list of predefined values from which you can\n * choose a single value.\n * ```html\n * <input type=\"text\" tabindex=\"1\" id=\"list\"> </input>\n * ```\n * ```typescript\n *   let dropDownListObj:DropDownList = new DropDownList();\n *   dropDownListObj.appendTo(\"#list\");\n * ```\n */\n\nlet DropDownList = class DropDownList extends DropDownBase {\n  /**\n   * * Constructor for creating the DropDownList component.\n   *\n   * @param {DropDownListModel} options - Specifies the DropDownList model.\n   * @param {string | HTMLElement} element - Specifies the element to render as component.\n   * @private\n   */\n  constructor(options, element) {\n    super(options, element);\n    this.isListSearched = false;\n    this.preventChange = false;\n    this.isAngular = false;\n  }\n  /**\n   * Initialize the event handler.\n   *\n   * @private\n   * @returns {void}\n   */\n\n\n  preRender() {\n    this.valueTempElement = null;\n    this.element.style.opacity = '0';\n    this.initializeData();\n    super.preRender();\n    this.activeIndex = this.index;\n    this.queryString = '';\n  }\n\n  initializeData() {\n    this.isPopupOpen = false;\n    this.isDocumentClick = false;\n    this.isInteracted = false;\n    this.isFilterFocus = false;\n    this.beforePopupOpen = false;\n    this.initial = true;\n    this.initRemoteRender = false;\n    this.isNotSearchList = false;\n    this.isTyped = false;\n    this.isSelected = false;\n    this.preventFocus = false;\n    this.preventAutoFill = false;\n    this.isValidKey = false;\n    this.typedString = '';\n    this.isEscapeKey = false;\n    this.isPreventBlur = false;\n    this.isTabKey = false;\n    this.actionCompleteData = {\n      isUpdated: false\n    };\n    this.actionData = {\n      isUpdated: false\n    };\n    this.prevSelectPoints = {};\n    this.isSelectCustom = false;\n    this.isDropDownClick = false;\n    this.preventAltUp = false;\n    this.isCustomFilter = false;\n    this.isSecondClick = false;\n    this.previousValue = null;\n    this.keyConfigure = {\n      tab: 'tab',\n      enter: '13',\n      escape: '27',\n      end: '35',\n      home: '36',\n      down: '40',\n      up: '38',\n      pageUp: '33',\n      pageDown: '34',\n      open: 'alt+40',\n      close: 'shift+tab',\n      hide: 'alt+38',\n      space: '32'\n    };\n  }\n\n  setZIndex() {\n    if (this.popupObj) {\n      this.popupObj.setProperties({\n        'zIndex': this.zIndex\n      });\n    }\n  }\n\n  renderList(isEmptyData) {\n    super.render(isEmptyData);\n    this.unWireListEvents();\n    this.wireListEvents();\n  }\n\n  floatLabelChange() {\n    if (this.getModuleName() === 'dropdownlist' && this.floatLabelType === 'Auto') {\n      const floatElement = this.inputWrapper.container.querySelector('.e-float-text');\n\n      if (this.inputElement.value !== '' || this.isInteracted) {\n        classList(floatElement, ['e-label-top'], ['e-label-bottom']);\n      } else {\n        classList(floatElement, ['e-label-bottom'], ['e-label-top']);\n      }\n    }\n  }\n\n  resetHandler(e) {\n    e.preventDefault();\n    this.clearAll(e);\n  }\n\n  resetFocusElement() {\n    this.removeHover();\n    this.removeSelection();\n    this.removeFocus();\n    this.list.scrollTop = 0;\n\n    if (this.getModuleName() !== 'autocomplete' && !isNullOrUndefined(this.ulElement)) {\n      const li = this.ulElement.querySelector('.' + dropDownListClasses.li);\n\n      if (li) {\n        li.classList.add(dropDownListClasses.focus);\n      }\n    }\n  }\n\n  clearAll(e, properties) {\n    if (isNullOrUndefined(properties) || !isNullOrUndefined(properties) && (isNullOrUndefined(properties.dataSource) || !(properties.dataSource instanceof DataManager) && properties.dataSource.length === 0)) {\n      this.isActive = true;\n      this.resetSelection(properties);\n    }\n\n    const dataItem = this.getItemData();\n\n    if (this.previousValue === dataItem.value) {\n      return;\n    }\n\n    this.onChangeEvent(e);\n  }\n\n  resetSelection(properties) {\n    if (this.list) {\n      if (!isNullOrUndefined(properties) && (isNullOrUndefined(properties.dataSource) || !(properties.dataSource instanceof DataManager) && properties.dataSource.length === 0)) {\n        this.selectedLI = null;\n        this.actionCompleteData.isUpdated = false;\n        this.actionCompleteData.ulElement = null;\n        this.actionCompleteData.list = null;\n        this.resetList(properties.dataSource);\n      } else {\n        if (this.allowFiltering && this.getModuleName() !== 'autocomplete' && !isNullOrUndefined(this.actionCompleteData.ulElement) && !isNullOrUndefined(this.actionCompleteData.list)) {\n          this.onActionComplete(this.actionCompleteData.ulElement.cloneNode(true), this.actionCompleteData.list);\n        }\n\n        this.resetFocusElement();\n      }\n    }\n\n    this.hiddenElement.innerHTML = '';\n    this.inputElement.value = '';\n    this.value = null;\n    this.itemData = null;\n    this.text = null;\n    this.index = null;\n    this.activeIndex = null;\n    this.item = null;\n    this.queryString = '';\n\n    if (this.valueTempElement) {\n      detach(this.valueTempElement);\n      this.inputElement.style.display = 'block';\n      this.valueTempElement = null;\n    }\n\n    this.setSelection(null, null);\n    this.isSelectCustom = false;\n    this.updateIconState();\n    this.cloneElements();\n  }\n\n  setHTMLAttributes() {\n    if (Object.keys(this.htmlAttributes).length) {\n      for (const htmlAttr of Object.keys(this.htmlAttributes)) {\n        if (htmlAttr === 'class') {\n          const updatedClassValue = this.htmlAttributes[htmlAttr].replace(/\\s+/g, ' ').trim();\n\n          if (updatedClassValue !== '') {\n            addClass([this.inputWrapper.container], updatedClassValue.split(' '));\n          }\n        } else if (htmlAttr === 'disabled' && this.htmlAttributes[htmlAttr] === 'disabled') {\n          this.enabled = false;\n          this.setEnable();\n        } else if (htmlAttr === 'readonly' && !isNullOrUndefined(this.htmlAttributes[htmlAttr])) {\n          this.readonly = true;\n          this.dataBind();\n        } else if (htmlAttr === 'style') {\n          this.inputWrapper.container.setAttribute('style', this.htmlAttributes[htmlAttr]);\n        } else {\n          const defaultAttr = ['title', 'id', 'placeholder', 'aria-placeholder', 'role', 'autocorrect', 'autocomplete', 'autocapitalize', 'spellcheck', 'minlength', 'maxlength'];\n          const validateAttr = ['name', 'required'];\n\n          if (this.getModuleName() === 'autocomplete' || this.getModuleName() === 'combobox') {\n            defaultAttr.push('tabindex');\n          }\n\n          if (validateAttr.indexOf(htmlAttr) > -1 || htmlAttr.indexOf('data') === 0) {\n            this.hiddenElement.setAttribute(htmlAttr, this.htmlAttributes[htmlAttr]);\n          } else if (defaultAttr.indexOf(htmlAttr) > -1) {\n            if (htmlAttr === 'placeholder') {\n              Input.setPlaceholder(this.htmlAttributes[htmlAttr], this.inputElement);\n            } else {\n              this.inputElement.setAttribute(htmlAttr, this.htmlAttributes[htmlAttr]);\n            }\n          } else {\n            this.inputWrapper.container.setAttribute(htmlAttr, this.htmlAttributes[htmlAttr]);\n          }\n        }\n      }\n    }\n\n    if (this.getModuleName() === 'autocomplete' || this.getModuleName() === 'combobox') {\n      this.inputWrapper.container.removeAttribute('tabindex');\n    }\n  }\n\n  getAriaAttributes() {\n    return {\n      'aria-disabled': 'false',\n      'aria-owns': this.element.id + '_options',\n      'role': 'combobox',\n      'aria-haspopup': 'true',\n      'aria-expanded': 'false',\n      'aria-activedescendant': 'null',\n      'aria-live': 'polite',\n      'aria-labelledby': this.hiddenElement.id\n    };\n  }\n\n  setEnableRtl() {\n    Input.setEnableRtl(this.enableRtl, [this.inputElement.parentElement]);\n\n    if (this.popupObj) {\n      this.popupObj.enableRtl = this.enableRtl;\n      this.popupObj.dataBind();\n    }\n  }\n\n  setEnable() {\n    Input.setEnabled(this.enabled, this.inputElement);\n\n    if (this.enabled) {\n      removeClass([this.inputWrapper.container], dropDownListClasses.disable);\n      this.inputElement.setAttribute('aria-disabled', 'false');\n      this.targetElement().setAttribute('tabindex', this.tabIndex);\n    } else {\n      this.hidePopup();\n      addClass([this.inputWrapper.container], dropDownListClasses.disable);\n      this.inputElement.setAttribute('aria-disabled', 'true');\n      this.targetElement().tabIndex = -1;\n    }\n  }\n  /**\n   * Get the properties to be maintained in the persisted state.\n   *\n   * @returns {string} Returns the persisted data of the component.\n   */\n\n\n  getPersistData() {\n    return this.addOnPersist(['value']);\n  }\n\n  getLocaleName() {\n    return 'drop-down-list';\n  }\n\n  preventTabIndex(element) {\n    if (this.getModuleName() === 'dropdownlist') {\n      element.tabIndex = -1;\n    }\n  }\n\n  targetElement() {\n    return this.inputWrapper.container;\n  }\n\n  getNgDirective() {\n    return 'EJS-DROPDOWNLIST';\n  }\n\n  getElementByText(text) {\n    return this.getElementByValue(this.getValueByText(text));\n  }\n\n  getElementByValue(value) {\n    let item;\n    const listItems = this.getItems();\n\n    for (const liItem of listItems) {\n      if (this.getFormattedValue(liItem.getAttribute('data-value')) === value) {\n        item = liItem;\n        break;\n      }\n    }\n\n    return item;\n  }\n\n  initValue() {\n    this.renderList();\n\n    if (this.dataSource instanceof DataManager) {\n      this.initRemoteRender = true;\n    } else {\n      this.updateValues();\n    }\n  }\n\n  updateValues() {\n    if (!isNullOrUndefined(this.value)) {\n      this.setSelection(this.getElementByValue(this.value), null);\n    } else if (this.text && isNullOrUndefined(this.value)) {\n      const element = this.getElementByText(this.text);\n\n      if (isNullOrUndefined(element)) {\n        this.setProperties({\n          text: null\n        });\n        return;\n      } else {\n        this.setSelection(element, null);\n      }\n    } else {\n      this.setSelection(this.liCollections[this.activeIndex], null);\n    }\n\n    this.setHiddenValue();\n    Input.setValue(this.text, this.inputElement, this.floatLabelType, this.showClearButton);\n  }\n\n  onBlurHandler(e) {\n    if (!this.enabled) {\n      return;\n    }\n\n    const target = e.relatedTarget;\n    const currentTarget = e.target;\n    const isPreventBlur = this.isPreventBlur;\n    this.isPreventBlur = false; //IE 11 - issue\n\n    if (isPreventBlur && !this.isDocumentClick && this.isPopupOpen && (!isNullOrUndefined(currentTarget) || !this.isFilterLayout() && isNullOrUndefined(target))) {\n      if (this.getModuleName() === 'dropdownlist' && this.allowFiltering && this.isPopupOpen) {\n        this.filterInput.focus();\n      } else {\n        this.targetElement().focus();\n      }\n\n      return;\n    }\n\n    if (this.isDocumentClick || !isNullOrUndefined(this.popupObj) && document.body.contains(this.popupObj.element) && this.popupObj.element.classList.contains(dropDownListClasses.mobileFilter)) {\n      if (!this.beforePopupOpen) {\n        this.isDocumentClick = false;\n      }\n\n      return;\n    }\n\n    if (this.getModuleName() === 'dropdownlist' && !this.isFilterFocus && target !== this.inputElement && (document.activeElement !== target || document.activeElement === target && currentTarget.classList.contains(dropDownListClasses.inputFocus)) || isNullOrUndefined(target) && this.getModuleName() === 'dropdownlist' && this.allowFiltering && currentTarget !== this.inputWrapper.container || this.getModuleName() !== 'dropdownlist' && !this.inputWrapper.container.contains(target) || this.isTabKey) {\n      this.isDocumentClick = this.isPopupOpen ? true : false;\n      this.focusOutAction(e);\n      this.isTabKey = false;\n    }\n\n    if (this.isRequested && !this.isPopupOpen && !this.isPreventBlur) {\n      this.isActive = false;\n      this.beforePopupOpen = false;\n    }\n  }\n\n  focusOutAction(e) {\n    this.isInteracted = false;\n    this.focusOut(e);\n    this.onFocusOut();\n  }\n\n  onFocusOut() {\n    if (!this.enabled) {\n      return;\n    }\n\n    if (this.isSelected) {\n      this.isSelectCustom = false;\n      this.onChangeEvent(null);\n    }\n\n    this.floatLabelChange();\n    this.dispatchEvent(this.hiddenElement, 'change');\n\n    if (this.getModuleName() === 'dropdownlist' && this.element.tagName !== 'INPUT') {\n      this.dispatchEvent(this.inputElement, 'blur');\n    }\n\n    if (this.inputWrapper.clearButton) {\n      addClass([this.inputWrapper.clearButton], dropDownListClasses.clearIconHide);\n    }\n\n    this.trigger('blur');\n  }\n\n  onFocus(e) {\n    if (!this.isInteracted) {\n      this.isInteracted = true;\n      const args = {\n        isInteracted: e ? true : false,\n        event: e\n      };\n      this.trigger('focus', args);\n    }\n\n    this.updateIconState();\n  }\n\n  resetValueHandler(e) {\n    const formElement = closest(this.inputElement, 'form');\n\n    if (formElement && e.target === formElement) {\n      const val = this.element.tagName === this.getNgDirective() ? null : this.inputElement.getAttribute('value');\n      this.text = val;\n    }\n  }\n\n  wireEvent() {\n    EventHandler.add(this.inputWrapper.container, 'mousedown', this.dropDownClick, this);\n    EventHandler.add(this.inputWrapper.container, 'focus', this.focusIn, this);\n    EventHandler.add(this.inputWrapper.container, 'keypress', this.onSearch, this);\n    this.bindCommonEvent();\n  }\n\n  bindCommonEvent() {\n    EventHandler.add(this.targetElement(), 'blur', this.onBlurHandler, this);\n    const formElement = closest(this.inputElement, 'form');\n\n    if (formElement) {\n      EventHandler.add(formElement, 'reset', this.resetValueHandler, this);\n    }\n\n    if (!Browser.isDevice) {\n      this.keyboardModule = new KeyboardEvents(this.targetElement(), {\n        keyAction: this.keyActionHandler.bind(this),\n        keyConfigs: this.keyConfigure,\n        eventName: 'keydown'\n      });\n    } else {\n      this.keyboardModule = new KeyboardEvents(this.targetElement(), {\n        keyAction: this.mobileKeyActionHandler.bind(this),\n        keyConfigs: this.keyConfigure,\n        eventName: 'keydown'\n      });\n    }\n\n    this.bindClearEvent();\n  }\n\n  bindClearEvent() {\n    if (this.showClearButton) {\n      EventHandler.add(this.inputWrapper.clearButton, 'mousedown', this.resetHandler, this);\n    }\n  }\n\n  unBindCommonEvent() {\n    if (this.targetElement()) {\n      EventHandler.remove(this.targetElement(), 'blur', this.onBlurHandler);\n    }\n\n    const formElement = this.inputElement && closest(this.inputElement, 'form');\n\n    if (formElement) {\n      EventHandler.remove(formElement, 'reset', this.resetValueHandler);\n    }\n\n    if (!Browser.isDevice) {\n      this.keyboardModule.destroy();\n    }\n\n    if (this.showClearButton) {\n      EventHandler.remove(this.inputWrapper.clearButton, 'mousedown', this.resetHandler);\n    }\n  }\n\n  updateIconState() {\n    if (this.showClearButton) {\n      if (this.inputElement.value !== '' && !this.readonly) {\n        removeClass([this.inputWrapper.clearButton], dropDownListClasses.clearIconHide);\n      } else {\n        addClass([this.inputWrapper.clearButton], dropDownListClasses.clearIconHide);\n      }\n    }\n  }\n  /**\n   * Event binding for list\n   *\n   * @returns {void}\n   */\n\n\n  wireListEvents() {\n    EventHandler.add(this.list, 'click', this.onMouseClick, this);\n    EventHandler.add(this.list, 'mouseover', this.onMouseOver, this);\n    EventHandler.add(this.list, 'mouseout', this.onMouseLeave, this);\n  }\n\n  onSearch(e) {\n    if (e.charCode !== 32 && e.charCode !== 13) {\n      if (this.list === undefined) {\n        this.renderList();\n      }\n\n      this.searchKeyEvent = e;\n      this.onServerIncrementalSearch(e);\n    }\n  }\n\n  onServerIncrementalSearch(e) {\n    if (!this.isRequested && !isNullOrUndefined(this.list) && !isNullOrUndefined(this.list.querySelector('li')) && this.enabled && !this.readonly) {\n      this.incrementalSearch(e);\n    }\n  }\n\n  onMouseClick(e) {\n    const target = e.target;\n    const li = closest(target, '.' + dropDownBaseClasses.li);\n\n    if (!this.isValidLI(li)) {\n      return;\n    }\n\n    this.setSelection(li, e);\n\n    if (Browser.isDevice && this.isFilterLayout()) {\n      history.back();\n    } else {\n      const delay = 100;\n      this.closePopup(delay, e);\n    }\n  }\n\n  onMouseOver(e) {\n    const currentLi = closest(e.target, '.' + dropDownBaseClasses.li);\n    this.setHover(currentLi);\n  }\n\n  setHover(li) {\n    if (this.enabled && this.isValidLI(li) && !li.classList.contains(dropDownBaseClasses.hover)) {\n      this.removeHover();\n      addClass([li], dropDownBaseClasses.hover);\n    }\n  }\n\n  onMouseLeave() {\n    this.removeHover();\n  }\n\n  removeHover() {\n    if (this.list) {\n      const hoveredItem = this.list.querySelectorAll('.' + dropDownBaseClasses.hover);\n\n      if (hoveredItem && hoveredItem.length) {\n        removeClass(hoveredItem, dropDownBaseClasses.hover);\n      }\n    }\n  }\n\n  isValidLI(li) {\n    return li && li.hasAttribute('role') && li.getAttribute('role') === 'option';\n  }\n\n  incrementalSearch(e) {\n    if (this.liCollections.length > 0) {\n      const li = incrementalSearch(e.charCode, this.liCollections, this.activeIndex, true, this.element.id);\n\n      if (!isNullOrUndefined(li)) {\n        this.setSelection(li, e);\n        this.setScrollPosition();\n      }\n    }\n  }\n  /**\n   * Hides the spinner loader.\n   *\n   * @returns {void}\n   */\n\n\n  hideSpinner() {\n    if (!isNullOrUndefined(this.spinnerElement)) {\n      hideSpinner(this.spinnerElement);\n      removeClass([this.spinnerElement], dropDownListClasses.disableIcon);\n      this.spinnerElement.innerHTML = '';\n      this.spinnerElement = null;\n    }\n  }\n  /**\n   * Shows the spinner loader.\n   *\n   * @returns {void}\n   */\n\n\n  showSpinner() {\n    if (isNullOrUndefined(this.spinnerElement)) {\n      this.spinnerElement = Browser.isDevice && !isNullOrUndefined(this.filterInputObj) && this.filterInputObj.buttons[1] || !isNullOrUndefined(this.filterInputObj) && this.filterInputObj.buttons[0] || this.inputWrapper.buttons[0];\n      addClass([this.spinnerElement], dropDownListClasses.disableIcon);\n      createSpinner({\n        target: this.spinnerElement,\n        width: Browser.isDevice ? '16px' : '14px'\n      }, this.createElement);\n      showSpinner(this.spinnerElement);\n    }\n  }\n\n  keyActionHandler(e) {\n    if (!this.enabled) {\n      return;\n    }\n\n    const preventAction = e.action === 'pageUp' || e.action === 'pageDown';\n    const preventHomeEnd = this.getModuleName() !== 'dropdownlist' && (e.action === 'home' || e.action === 'end');\n    this.isEscapeKey = e.action === 'escape';\n    this.isTabKey = !this.isPopupOpen && e.action === 'tab';\n    const isNavAction = e.action === 'down' || e.action === 'up' || e.action === 'home' || e.action === 'end';\n    const isNavigation = e.action === 'down' || e.action === 'up' || e.action === 'pageUp' || e.action === 'pageDown' || e.action === 'home' || e.action === 'end';\n\n    if ((this.isEditTextBox() || preventAction || preventHomeEnd) && !this.isPopupOpen) {\n      return;\n    }\n\n    if (!this.readonly) {\n      const isTabAction = e.action === 'tab' || e.action === 'close';\n\n      if (this.list === undefined && !this.isRequested && !isTabAction && e.action !== 'escape') {\n        this.searchKeyEvent = e;\n        this.renderList();\n      }\n\n      if (isNullOrUndefined(this.list) || !isNullOrUndefined(this.liCollections) && isNavigation && this.liCollections.length === 0 || this.isRequested) {\n        return;\n      }\n\n      if (isTabAction && this.getModuleName() !== 'autocomplete' && this.isPopupOpen || e.action === 'escape') {\n        e.preventDefault();\n      }\n\n      this.isSelected = e.action === 'escape' ? false : this.isSelected;\n      this.isTyped = isNavigation || e.action === 'escape' ? false : this.isTyped;\n\n      switch (e.action) {\n        case 'down':\n        case 'up':\n          this.updateUpDownAction(e);\n          break;\n\n        case 'pageUp':\n          this.pageUpSelection(this.activeIndex - this.getPageCount(), e);\n          e.preventDefault();\n          break;\n\n        case 'pageDown':\n          this.pageDownSelection(this.activeIndex + this.getPageCount(), e);\n          e.preventDefault();\n          break;\n\n        case 'home':\n          this.updateHomeEndAction(e);\n          break;\n\n        case 'end':\n          this.updateHomeEndAction(e);\n          break;\n\n        case 'space':\n          if (this.getModuleName() === 'dropdownlist') {\n            if (!this.beforePopupOpen) {\n              this.showPopup();\n            }\n          }\n\n          break;\n\n        case 'open':\n          this.showPopup();\n          break;\n\n        case 'hide':\n          this.preventAltUp = this.isPopupOpen;\n          this.hidePopup(e);\n          this.focusDropDown(e);\n          break;\n\n        case 'enter':\n          this.selectCurrentItem(e);\n          break;\n\n        case 'tab':\n          this.selectCurrentValueOnTab(e);\n          break;\n\n        case 'escape':\n        case 'close':\n          if (this.isPopupOpen) {\n            this.hidePopup(e);\n            this.focusDropDown(e);\n          }\n\n          break;\n      }\n    }\n  }\n\n  updateUpDownAction(e) {\n    const focusEle = this.list.querySelector('.' + dropDownListClasses.focus);\n\n    if (this.isSelectFocusItem(focusEle)) {\n      this.setSelection(focusEle, e);\n    } else if (!isNullOrUndefined(this.liCollections)) {\n      let index = e.action === 'down' ? this.activeIndex + 1 : this.activeIndex - 1;\n      let startIndex = 0;\n\n      if (this.getModuleName() === 'autocomplete') {\n        startIndex = e.action === 'down' && isNullOrUndefined(this.activeIndex) ? 0 : this.liCollections.length - 1;\n        index = index < 0 ? this.liCollections.length - 1 : index === this.liCollections.length ? 0 : index;\n      }\n\n      const nextItem = isNullOrUndefined(this.activeIndex) ? this.liCollections[startIndex] : this.liCollections[index];\n\n      if (!isNullOrUndefined(nextItem)) {\n        this.setSelection(nextItem, e);\n      }\n    }\n\n    e.preventDefault();\n  }\n\n  updateHomeEndAction(e) {\n    if (this.getModuleName() === 'dropdownlist') {\n      let findLi = 0;\n\n      if (e.action === 'home') {\n        findLi = 0;\n      } else {\n        findLi = this.getItems().length - 1;\n      }\n\n      e.preventDefault();\n\n      if (this.activeIndex === findLi) {\n        return;\n      }\n\n      this.setSelection(this.liCollections[findLi], e);\n    }\n  }\n\n  selectCurrentValueOnTab(e) {\n    if (this.getModuleName() === 'autocomplete') {\n      this.selectCurrentItem(e);\n    } else {\n      if (this.isPopupOpen) {\n        this.hidePopup(e);\n        this.focusDropDown(e);\n      }\n    }\n  }\n\n  mobileKeyActionHandler(e) {\n    if (!this.enabled) {\n      return;\n    }\n\n    if (this.isEditTextBox() && !this.isPopupOpen) {\n      return;\n    }\n\n    if (!this.readonly) {\n      if (this.list === undefined && !this.isRequested) {\n        this.searchKeyEvent = e;\n        this.renderList();\n      }\n\n      if (isNullOrUndefined(this.list) || !isNullOrUndefined(this.liCollections) && this.liCollections.length === 0 || this.isRequested) {\n        return;\n      }\n\n      if (e.action === 'enter') {\n        this.selectCurrentItem(e);\n      }\n    }\n  }\n\n  selectCurrentItem(e) {\n    if (this.isPopupOpen) {\n      const li = this.list.querySelector('.' + dropDownListClasses.focus);\n\n      if (li) {\n        this.setSelection(li, e);\n        this.isTyped = false;\n      }\n\n      if (this.isSelected) {\n        this.isSelectCustom = false;\n        this.onChangeEvent(e);\n      }\n\n      this.hidePopup(e);\n      this.focusDropDown(e);\n    } else {\n      this.showPopup();\n    }\n  }\n\n  isSelectFocusItem(element) {\n    return !isNullOrUndefined(element);\n  }\n\n  getPageCount() {\n    const liHeight = this.list.classList.contains(dropDownBaseClasses.noData) ? null : getComputedStyle(this.getItems()[0], null).getPropertyValue('height');\n    return Math.round(this.list.getBoundingClientRect().height / parseInt(liHeight, 10));\n  }\n\n  pageUpSelection(steps, event) {\n    const previousItem = steps >= 0 ? this.liCollections[steps + 1] : this.liCollections[0];\n    this.setSelection(previousItem, event);\n  }\n\n  pageDownSelection(steps, event) {\n    const list = this.getItems();\n    const previousItem = steps <= list.length ? this.liCollections[steps - 1] : this.liCollections[list.length - 1];\n    this.setSelection(previousItem, event);\n  }\n\n  unWireEvent() {\n    EventHandler.remove(this.inputWrapper.container, 'mousedown', this.dropDownClick);\n    EventHandler.remove(this.inputWrapper.container, 'keypress', this.onSearch);\n    EventHandler.remove(this.inputWrapper.container, 'focus', this.focusIn);\n    this.unBindCommonEvent();\n  }\n  /**\n   * Event un binding for list items.\n   *\n   * @returns {void}\n   */\n\n\n  unWireListEvents() {\n    EventHandler.remove(this.list, 'click', this.onMouseClick);\n    EventHandler.remove(this.list, 'mouseover', this.onMouseOver);\n    EventHandler.remove(this.list, 'mouseout', this.onMouseLeave);\n  }\n\n  checkSelector(id) {\n    return '[id=\"' + id.replace(/(:|\\.|\\[|\\]|,|=|@|\\\\|\\/|#)/g, '\\\\$1') + '\"]';\n  }\n\n  onDocumentClick(e) {\n    const target = e.target;\n\n    if (!(!isNullOrUndefined(this.popupObj) && closest(target, this.checkSelector(this.popupObj.element.id))) && !this.inputWrapper.container.contains(e.target)) {\n      if (this.inputWrapper.container.classList.contains(dropDownListClasses.inputFocus) || this.isPopupOpen) {\n        this.isDocumentClick = true;\n        const isActive = this.isRequested;\n        this.isInteracted = false;\n        this.hidePopup(e);\n\n        if (!isActive) {\n          this.onFocusOut();\n          this.inputWrapper.container.classList.remove(dropDownListClasses.inputFocus);\n        }\n      }\n    } else if (target !== this.inputElement && !(this.allowFiltering && target === this.filterInput) && !(this.getModuleName() === 'combobox' && !this.allowFiltering && Browser.isDevice && target === this.inputWrapper.buttons[0])) {\n      this.isPreventBlur = (Browser.isIE || Browser.info.name === 'edge') && (document.activeElement === this.targetElement() || document.activeElement === this.filterInput);\n      e.preventDefault();\n    }\n  }\n\n  activeStateChange() {\n    if (this.isDocumentClick) {\n      this.hidePopup();\n      this.onFocusOut();\n      this.inputWrapper.container.classList.remove(dropDownListClasses.inputFocus);\n    }\n  }\n\n  focusDropDown(e) {\n    if (!this.initial && this.isFilterLayout()) {\n      this.focusIn(e);\n    }\n  }\n\n  dropDownClick(e) {\n    if (e.which === 3 || e.button === 2) {\n      return;\n    }\n\n    if (this.targetElement().classList.contains(dropDownListClasses.disable) || this.inputWrapper.clearButton === e.target) {\n      return;\n    }\n\n    const target = e.target;\n\n    if (target !== this.inputElement && !(this.allowFiltering && target === this.filterInput) && this.getModuleName() !== 'combobox') {\n      e.preventDefault();\n    }\n\n    if (!this.readonly) {\n      if (this.isPopupOpen) {\n        this.hidePopup();\n\n        if (this.isFilterLayout()) {\n          this.focusDropDown(e);\n        }\n      } else {\n        this.focusIn(e);\n        this.floatLabelChange();\n        this.queryString = this.inputElement.value.trim() === '' ? null : this.inputElement.value;\n        this.isDropDownClick = true;\n        this.showPopup();\n      } // eslint-disable-next-line @typescript-eslint/no-this-alias\n\n\n      const proxy = this; // eslint-disable-next-line max-len\n\n      const duration = this.element.tagName === this.getNgDirective() && this.itemTemplate ? 500 : 100;\n\n      if (!this.isSecondClick) {\n        setTimeout(() => {\n          proxy.cloneElements();\n          proxy.isSecondClick = true;\n        }, duration);\n      }\n    } else {\n      this.focusIn(e);\n    }\n  }\n\n  cloneElements() {\n    if (this.list) {\n      let ulElement = this.list.querySelector('ul');\n\n      if (ulElement) {\n        ulElement = ulElement.cloneNode ? ulElement.cloneNode(true) : ulElement;\n        this.actionCompleteData.ulElement = ulElement;\n      }\n    }\n  }\n\n  updateSelectedItem(li, e, preventSelect, isSelection) {\n    this.removeSelection();\n    li.classList.add(dropDownBaseClasses.selected);\n    this.removeHover();\n    const value = this.getFormattedValue(li.getAttribute('data-value'));\n    const selectedData = this.getDataByValue(value);\n\n    if (!this.initial && !preventSelect && !isNullOrUndefined(e)) {\n      const items = this.detachChanges(selectedData);\n      this.isSelected = true;\n      const eventArgs = {\n        e: e,\n        item: li,\n        itemData: items,\n        isInteracted: e ? true : false,\n        cancel: false\n      };\n      this.trigger('select', eventArgs, eventArgs => {\n        if (eventArgs.cancel) {\n          li.classList.remove(dropDownBaseClasses.selected);\n        } else {\n          this.selectEventCallback(li, e, preventSelect, selectedData, value);\n\n          if (isSelection) {\n            this.setSelectOptions(li, e);\n          }\n        }\n      });\n    } else {\n      this.selectEventCallback(li, e, preventSelect, selectedData, value);\n\n      if (isSelection) {\n        this.setSelectOptions(li, e);\n      }\n    }\n  }\n\n  selectEventCallback(li, e, preventSelect, selectedData, value) {\n    this.previousItemData = !isNullOrUndefined(this.itemData) ? this.itemData : null;\n    this.item = li;\n    this.itemData = selectedData;\n    const focusedItem = this.list.querySelector('.' + dropDownBaseClasses.focus);\n\n    if (focusedItem) {\n      removeClass([focusedItem], dropDownBaseClasses.focus);\n    }\n\n    li.setAttribute('aria-selected', 'true');\n    this.activeIndex = this.getIndexByValue(value);\n  }\n\n  activeItem(li) {\n    if (this.isValidLI(li) && !li.classList.contains(dropDownBaseClasses.selected)) {\n      this.removeSelection();\n      li.classList.add(dropDownBaseClasses.selected);\n      this.removeHover();\n      li.setAttribute('aria-selected', 'true');\n    }\n  } // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  setValue(e) {\n    const dataItem = this.getItemData();\n\n    if (dataItem.value === null) {\n      Input.setValue(null, this.inputElement, this.floatLabelType, this.showClearButton);\n    } else {\n      Input.setValue(dataItem.text, this.inputElement, this.floatLabelType, this.showClearButton);\n    }\n\n    if (this.valueTemplate && this.itemData !== null) {\n      this.setValueTemplate();\n    } else if (!isNullOrUndefined(this.valueTempElement) && this.inputElement.previousSibling === this.valueTempElement) {\n      detach(this.valueTempElement);\n      this.inputElement.style.display = 'block';\n    }\n\n    let clearIcon = dropDownListClasses.clearIcon;\n    let isFilterElement = this.isFiltering() && this.filterInput && this.getModuleName() === 'combobox';\n    let clearElement = isFilterElement && this.filterInput.parentElement.querySelector('.' + clearIcon);\n\n    if (this.isFiltering() && clearElement) {\n      clearElement.style.removeProperty('visibility');\n    }\n\n    if (this.previousValue === dataItem.value) {\n      this.isSelected = false;\n      return true;\n    } else {\n      this.isSelected = !this.initial ? true : false;\n      this.isSelectCustom = false;\n\n      if (this.getModuleName() === 'dropdownlist') {\n        this.updateIconState();\n      }\n\n      return false;\n    }\n  }\n\n  setSelection(li, e) {\n    if (this.isValidLI(li) && (!li.classList.contains(dropDownBaseClasses.selected) || this.isPopupOpen && this.isSelected && li.classList.contains(dropDownBaseClasses.selected))) {\n      this.updateSelectedItem(li, e, false, true);\n    } else {\n      this.setSelectOptions(li, e);\n    }\n  }\n\n  setSelectOptions(li, e) {\n    if (this.list) {\n      this.removeHover();\n    }\n\n    this.previousSelectedLI = !isNullOrUndefined(this.selectedLI) ? this.selectedLI : null;\n    this.selectedLI = li;\n\n    if (this.setValue(e)) {\n      return;\n    }\n\n    attributes(this.targetElement(), {\n      'aria-activedescendant': this.selectedLI ? this.selectedLI.id : null\n    });\n\n    if (this.isFilterLayout() && this.filterInput) {\n      attributes(this.filterInput, {\n        'aria-activedescendant': this.selectedLI ? this.selectedLI.id : null\n      });\n    }\n\n    if (!this.isPopupOpen && !isNullOrUndefined(li) || this.isPopupOpen && !isNullOrUndefined(e) && (e.type !== 'keydown' || e.type === 'keydown' && e.action === 'enter')) {\n      this.isSelectCustom = false;\n      this.onChangeEvent(e);\n    }\n\n    if (this.isPopupOpen && !isNullOrUndefined(this.selectedLI) && this.itemData !== null && (!e || e.type !== 'click')) {\n      this.setScrollPosition(e);\n    }\n\n    if (Browser.info.name !== 'mozilla') {\n      attributes(this.inputElement, {\n        'aria-label': this.inputElement.value\n      });\n      attributes(this.targetElement(), {\n        'aria-describedby': this.inputElement.id\n      });\n      this.targetElement().removeAttribute('aria-live');\n    }\n  }\n\n  dropdownCompiler(dropdownTemplate) {\n    let checkTemplate = false;\n\n    if (dropdownTemplate) {\n      try {\n        checkTemplate = document.querySelectorAll(dropdownTemplate).length ? true : false;\n      } catch (exception) {\n        checkTemplate = false;\n      }\n    }\n\n    return checkTemplate;\n  }\n\n  setValueTemplate() {\n    let compiledString; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n    if (this.isReact) {\n      this.clearTemplate(['valueTemplate']);\n\n      if (this.valueTempElement) {\n        detach(this.valueTempElement);\n        this.inputElement.style.display = 'block';\n        this.valueTempElement = null;\n      }\n    }\n\n    if (!this.valueTempElement) {\n      this.valueTempElement = this.createElement('span', {\n        className: dropDownListClasses.value\n      });\n      this.inputElement.parentElement.insertBefore(this.valueTempElement, this.inputElement);\n      this.inputElement.style.display = 'none';\n    } // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n    if (!this.isReact) {\n      this.valueTempElement.innerHTML = '';\n    }\n\n    const valuecheck = this.dropdownCompiler(this.valueTemplate);\n\n    if (valuecheck) {\n      compiledString = compile(document.querySelector(this.valueTemplate).innerHTML.trim());\n    } else {\n      compiledString = compile(this.valueTemplate);\n    } // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n    const valueCompTemp = compiledString(this.itemData, this, 'valueTemplate', this.valueTemplateId, this.isStringTemplate, null, this.valueTempElement);\n\n    if (valueCompTemp && valueCompTemp.length > 0) {\n      for (let i = 0; i < valueCompTemp.length; i++) {\n        this.valueTempElement.appendChild(valueCompTemp[i]);\n      }\n    }\n\n    this.renderReactTemplates();\n  }\n\n  removeSelection() {\n    if (this.list) {\n      const selectedItems = this.list.querySelectorAll('.' + dropDownBaseClasses.selected);\n\n      if (selectedItems.length) {\n        removeClass(selectedItems, dropDownBaseClasses.selected);\n        selectedItems[0].removeAttribute('aria-selected');\n      }\n    }\n  }\n\n  getItemData() {\n    const fields = this.fields;\n    let dataItem = null;\n    dataItem = this.itemData;\n    let dataValue;\n    let dataText;\n\n    if (!isNullOrUndefined(dataItem)) {\n      dataValue = getValue(fields.value, dataItem);\n      dataText = getValue(fields.text, dataItem);\n    }\n\n    const value = !isNullOrUndefined(dataItem) && !isUndefined(dataValue) ? dataValue : dataItem;\n    const text = !isNullOrUndefined(dataItem) && !isUndefined(dataValue) ? dataText : dataItem;\n    return {\n      value: value,\n      text: text\n    };\n  }\n  /**\n   * To trigger the change event for list.\n   *\n   * @param {MouseEvent | KeyboardEvent | TouchEvent} eve - Specifies the event arguments.\n   * @returns {void}\n   */\n\n\n  onChangeEvent(eve) {\n    const dataItem = this.getItemData();\n    const index = this.isSelectCustom ? null : this.activeIndex;\n    this.setProperties({\n      'index': index,\n      'text': dataItem.text,\n      'value': dataItem.value\n    }, true);\n    this.detachChangeEvent(eve);\n  }\n\n  detachChanges(value) {\n    let items;\n\n    if (typeof value === 'string' || typeof value === 'boolean' || typeof value === 'number') {\n      items = Object.defineProperties({}, {\n        value: {\n          value: value,\n          enumerable: true\n        },\n        text: {\n          value: value,\n          enumerable: true\n        }\n      });\n    } else {\n      items = value;\n    }\n\n    return items;\n  }\n\n  detachChangeEvent(eve) {\n    this.isSelected = false;\n    this.previousValue = this.value;\n    this.activeIndex = this.index;\n    this.typedString = !isNullOrUndefined(this.text) ? this.text : '';\n\n    if (!this.initial) {\n      const items = this.detachChanges(this.itemData);\n      let preItems;\n\n      if (typeof this.previousItemData === 'string' || typeof this.previousItemData === 'boolean' || typeof this.previousItemData === 'number') {\n        preItems = Object.defineProperties({}, {\n          value: {\n            value: this.previousItemData,\n            enumerable: true\n          },\n          text: {\n            value: this.previousItemData,\n            enumerable: true\n          }\n        });\n      } else {\n        preItems = this.previousItemData;\n      }\n\n      this.setHiddenValue();\n      const eventArgs = {\n        e: eve,\n        item: this.item,\n        itemData: items,\n        previousItem: this.previousSelectedLI,\n        previousItemData: preItems,\n        isInteracted: eve ? true : false,\n        value: this.value,\n        element: this.element,\n        event: eve\n      };\n\n      if (this.isAngular && this.preventChange) {\n        this.preventChange = false;\n      } else {\n        this.trigger('change', eventArgs);\n      }\n    }\n\n    if ((isNullOrUndefined(this.value) || this.value === '') && this.floatLabelType !== 'Always') {\n      removeClass([this.inputWrapper.container], 'e-valid-input');\n    }\n  }\n\n  setHiddenValue() {\n    if (!isNullOrUndefined(this.value)) {\n      if (this.hiddenElement.querySelector('option')) {\n        const selectedElement = this.hiddenElement.querySelector('option');\n        selectedElement.textContent = this.text;\n        selectedElement.setAttribute('value', this.value.toString());\n      } else {\n        this.hiddenElement.innerHTML = '<option selected>' + this.text + '</option>';\n        const selectedElement = this.hiddenElement.querySelector('option');\n        selectedElement.setAttribute('value', this.value.toString());\n      }\n    } else {\n      this.hiddenElement.innerHTML = '';\n    }\n  }\n  /**\n   * Filter bar implementation\n   *\n   * @param {KeyboardEventArgs} e - Specifies the event arguments.\n   * @returns {void}\n   */\n\n\n  onFilterUp(e) {\n    if (!(e.ctrlKey && e.keyCode === 86) && (this.isValidKey || e.keyCode === 40 || e.keyCode === 38)) {\n      this.isValidKey = false;\n\n      switch (e.keyCode) {\n        case 38: //up arrow\n\n        case 40:\n          //down arrow\n          if (this.getModuleName() === 'autocomplete' && !this.isPopupOpen && !this.preventAltUp && !this.isRequested) {\n            this.preventAutoFill = true;\n            this.searchLists(e);\n          } else {\n            this.preventAutoFill = false;\n          }\n\n          this.preventAltUp = false;\n          e.preventDefault();\n          break;\n\n        case 46: //delete\n\n        case 8:\n          //backspace\n          this.typedString = this.filterInput.value;\n\n          if (!this.isPopupOpen && this.typedString !== '' || this.isPopupOpen && this.queryString.length > 0) {\n            this.preventAutoFill = true;\n            this.searchLists(e);\n          } else if (this.typedString === '' && this.queryString === '' && this.getModuleName() !== 'autocomplete') {\n            this.preventAutoFill = true;\n            this.searchLists(e);\n          } else if (this.typedString === '') {\n            if (this.list) {\n              this.resetFocusElement();\n            }\n\n            this.activeIndex = null;\n\n            if (this.getModuleName() !== 'dropdownlist') {\n              this.preventAutoFill = true;\n              this.searchLists(e);\n\n              if (this.getModuleName() === 'autocomplete') {\n                this.hidePopup();\n              }\n            }\n          }\n\n          e.preventDefault();\n          break;\n\n        default:\n          this.typedString = this.filterInput.value;\n          this.preventAutoFill = false;\n          this.searchLists(e);\n          break;\n      }\n    } else {\n      this.isValidKey = false;\n    }\n  }\n\n  onFilterDown(e) {\n    switch (e.keyCode) {\n      case 13:\n        //enter\n        break;\n\n      case 40: //down arrow\n\n      case 38:\n        //up arrow\n        this.queryString = this.filterInput.value;\n        e.preventDefault();\n        break;\n\n      case 9:\n        //tab\n        if (this.isPopupOpen && this.getModuleName() !== 'autocomplete') {\n          e.preventDefault();\n        }\n\n        break;\n\n      default:\n        this.prevSelectPoints = this.getSelectionPoints();\n        this.queryString = this.filterInput.value;\n        break;\n    }\n  }\n\n  removeFillSelection() {\n    if (this.isInteracted) {\n      const selection = this.getSelectionPoints();\n      this.inputElement.setSelectionRange(selection.end, selection.end);\n    }\n  }\n\n  getQuery(query) {\n    let filterQuery;\n\n    if (!this.isCustomFilter && this.allowFiltering && this.filterInput) {\n      filterQuery = query ? query.clone() : this.query ? this.query.clone() : new Query();\n      const filterType = this.typedString === '' ? 'contains' : this.filterType;\n      const dataType = this.typeOfData(this.dataSource).typeof;\n\n      if (!(this.dataSource instanceof DataManager) && dataType === 'string' || dataType === 'number') {\n        filterQuery.where('', filterType, this.typedString, this.ignoreCase, this.ignoreAccent);\n      } else {\n        const fields = this.fields.text ? this.fields.text : '';\n        filterQuery.where(fields, filterType, this.typedString, this.ignoreCase, this.ignoreAccent);\n      }\n    } else {\n      filterQuery = query ? query.clone() : this.query ? this.query.clone() : new Query();\n    }\n\n    return filterQuery;\n  }\n\n  getSelectionPoints() {\n    const input = this.inputElement;\n    return {\n      start: Math.abs(input.selectionStart),\n      end: Math.abs(input.selectionEnd)\n    };\n  }\n\n  searchLists(e) {\n    this.isTyped = true;\n    this.activeIndex = null;\n    this.isListSearched = true;\n\n    if (this.filterInput.parentElement.querySelector('.' + dropDownListClasses.clearIcon)) {\n      const clearElement = this.filterInput.parentElement.querySelector('.' + dropDownListClasses.clearIcon);\n      clearElement.style.visibility = this.filterInput.value === '' ? 'hidden' : 'visible';\n    }\n\n    this.isDataFetched = false;\n\n    if (this.isFiltering()) {\n      const eventArgs = {\n        preventDefaultAction: false,\n        text: this.filterInput.value,\n        updateData: (dataSource, query, fields) => {\n          if (eventArgs.cancel) {\n            return;\n          }\n\n          this.isCustomFilter = true;\n          this.filteringAction(dataSource, query, fields);\n        },\n        baseEventArgs: e,\n        cancel: false\n      };\n      this.trigger('filtering', eventArgs, eventArgs => {\n        if (!eventArgs.cancel && !this.isCustomFilter && !eventArgs.preventDefaultAction) {\n          this.filteringAction(this.dataSource, null, this.fields);\n        }\n      });\n    }\n  }\n  /**\n   * To filter the data from given data source by using query\n   *\n   * @param  {Object[] | DataManager } dataSource - Set the data source to filter.\n   * @param  {Query} query - Specify the query to filter the data.\n   * @param  {FieldSettingsModel} fields - Specify the fields to map the column in the data table.\n   * @returns {void}\n   * @deprecated\n   */\n\n\n  filter(dataSource, query, fields) {\n    this.isCustomFilter = true;\n    this.filteringAction(dataSource, query, fields);\n  }\n\n  filteringAction(dataSource, query, fields) {\n    if (!isNullOrUndefined(this.filterInput)) {\n      this.beforePopupOpen = !this.isPopupOpen && this.getModuleName() === 'combobox' && this.filterInput.value === '' ? false : true;\n\n      if (this.filterInput.value.trim() === '' && !this.itemTemplate) {\n        this.actionCompleteData.isUpdated = false;\n        this.isTyped = false;\n\n        if (!isNullOrUndefined(this.actionCompleteData.ulElement) && !isNullOrUndefined(this.actionCompleteData.list)) {\n          this.onActionComplete(this.actionCompleteData.ulElement, this.actionCompleteData.list);\n        }\n\n        this.isTyped = true;\n\n        if (!isNullOrUndefined(this.itemData) && this.getModuleName() === 'dropdownlist') {\n          this.focusIndexItem();\n          this.setScrollPosition();\n        }\n\n        this.isNotSearchList = true;\n      } else {\n        this.isNotSearchList = false;\n        query = this.filterInput.value.trim() === '' ? null : query;\n        this.resetList(dataSource, fields, query);\n      }\n\n      this.renderReactTemplates();\n    }\n  }\n\n  setSearchBox(popupElement) {\n    if (this.isFiltering()) {\n      const parentElement = popupElement.querySelector('.' + dropDownListClasses.filterParent) ? popupElement.querySelector('.' + dropDownListClasses.filterParent) : this.createElement('span', {\n        className: dropDownListClasses.filterParent\n      });\n      this.filterInput = this.createElement('input', {\n        attrs: {\n          type: 'text'\n        },\n        className: dropDownListClasses.filterInput\n      });\n      this.element.parentNode.insertBefore(this.filterInput, this.element);\n      let backIcon = false;\n\n      if (Browser.isDevice) {\n        backIcon = true;\n      }\n\n      this.filterInputObj = Input.createInput({\n        element: this.filterInput,\n        buttons: backIcon ? [dropDownListClasses.backIcon, dropDownListClasses.filterBarClearIcon] : [dropDownListClasses.filterBarClearIcon],\n        properties: {\n          placeholder: this.filterBarPlaceholder\n        }\n      }, this.createElement);\n\n      if (!isNullOrUndefined(this.cssClass)) {\n        if (this.cssClass.split(' ').indexOf('e-outline') !== -1) {\n          addClass([this.filterInputObj.container], 'e-outline');\n        } else if (this.cssClass.split(' ').indexOf('e-filled') !== -1) {\n          addClass([this.filterInputObj.container], 'e-filled');\n        }\n      }\n\n      append([this.filterInputObj.container], parentElement);\n      prepend([parentElement], popupElement);\n      attributes(this.filterInput, {\n        'aria-disabled': 'false',\n        'aria-owns': this.element.id + '_options',\n        'role': 'listbox',\n        'aria-activedescendant': this.selectedLI ? this.selectedLI.id : null,\n        'autocomplete': 'off',\n        'autocorrect': 'off',\n        'autocapitalize': 'off',\n        'spellcheck': 'false'\n      });\n      this.clearIconElement = this.filterInput.parentElement.querySelector('.' + dropDownListClasses.clearIcon);\n\n      if (!Browser.isDevice && this.clearIconElement) {\n        EventHandler.add(this.clearIconElement, 'click', this.clearText, this);\n        this.clearIconElement.style.visibility = 'hidden';\n      }\n\n      if (!Browser.isDevice) {\n        this.searchKeyModule = new KeyboardEvents(this.filterInput, {\n          keyAction: this.keyActionHandler.bind(this),\n          keyConfigs: this.keyConfigure,\n          eventName: 'keydown'\n        });\n      } else {\n        this.searchKeyModule = new KeyboardEvents(this.filterInput, {\n          keyAction: this.mobileKeyActionHandler.bind(this),\n          keyConfigs: this.keyConfigure,\n          eventName: 'keydown'\n        });\n      }\n\n      EventHandler.add(this.filterInput, 'input', this.onInput, this);\n      EventHandler.add(this.filterInput, 'keyup', this.onFilterUp, this);\n      EventHandler.add(this.filterInput, 'keydown', this.onFilterDown, this);\n      EventHandler.add(this.filterInput, 'blur', this.onBlurHandler, this);\n      EventHandler.add(this.filterInput, 'paste', this.pasteHandler, this);\n      return this.filterInputObj;\n    } else {\n      return inputObject;\n    }\n  }\n\n  onInput(e) {\n    this.isValidKey = true; // For filtering works in mobile firefox.\n\n    if (Browser.isDevice && Browser.info.name === 'mozilla') {\n      this.typedString = this.filterInput.value;\n      this.preventAutoFill = true;\n      this.searchLists(e);\n    }\n  }\n\n  pasteHandler(e) {\n    setTimeout(() => {\n      this.typedString = this.filterInput.value;\n      this.searchLists(e);\n    });\n  }\n\n  onActionFailure(e) {\n    super.onActionFailure(e);\n\n    if (this.beforePopupOpen) {\n      this.renderPopup();\n    }\n  } // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  onActionComplete(ulElement, list, e, isUpdated) {\n    if (this.isNotSearchList) {\n      this.isNotSearchList = false;\n      return;\n    }\n\n    if (this.isActive) {\n      const selectedItem = this.selectedLI ? this.selectedLI.cloneNode(true) : null;\n      super.onActionComplete(ulElement, list, e);\n      this.updateSelectElementData(this.allowFiltering);\n\n      if (this.isRequested && !isNullOrUndefined(this.searchKeyEvent) && this.searchKeyEvent.type === 'keydown') {\n        this.isRequested = false;\n        this.keyActionHandler(this.searchKeyEvent);\n        this.searchKeyEvent = null;\n      }\n\n      if (this.isRequested && !isNullOrUndefined(this.searchKeyEvent)) {\n        this.incrementalSearch(this.searchKeyEvent);\n        this.searchKeyEvent = null;\n      }\n\n      this.list.scrollTop = 0;\n\n      if (!isNullOrUndefined(ulElement)) {\n        attributes(ulElement, {\n          'id': this.element.id + '_options',\n          'role': 'listbox',\n          'aria-hidden': 'false'\n        });\n      }\n\n      if (this.initRemoteRender) {\n        this.initial = true;\n        this.activeIndex = this.index;\n        this.initRemoteRender = false;\n\n        if (this.value && this.dataSource instanceof DataManager) {\n          const checkField = isNullOrUndefined(this.fields.value) ? this.fields.text : this.fields.value;\n          const checkVal = list.some(x => x[checkField] === this.value);\n\n          if (!checkVal) {\n            this.dataSource.executeQuery(this.getQuery(this.query).where(new Predicate(checkField, 'equal', this.value))).then(e => {\n              if (e.result.length > 0) {\n                this.addItem(e.result, list.length);\n                this.updateValues();\n              } else {\n                this.updateValues();\n              }\n            });\n          } else {\n            this.updateValues();\n          }\n        } else {\n          this.updateValues();\n        }\n\n        this.initial = false;\n      }\n\n      if (this.getModuleName() !== 'autocomplete' && this.isFiltering() && !this.isTyped) {\n        if (!this.actionCompleteData.isUpdated || !this.isCustomFilter && !this.isFilterFocus || isNullOrUndefined(this.itemData) && this.allowFiltering && (this.dataSource instanceof DataManager || !isNullOrUndefined(this.dataSource) && !isNullOrUndefined(this.dataSource.length) && this.dataSource.length !== 0)) {\n          if (this.itemTemplate && this.element.tagName === 'EJS-COMBOBOX' && this.allowFiltering) {\n            setTimeout(() => {\n              this.updateActionCompleteDataValues(ulElement, list);\n            }, 0);\n          } else {\n            this.updateActionCompleteDataValues(ulElement, list);\n          }\n        }\n\n        this.addNewItem(list, selectedItem);\n\n        if (!isNullOrUndefined(this.itemData)) {\n          this.focusIndexItem();\n        }\n      }\n\n      if (this.beforePopupOpen) {\n        this.renderPopup();\n      }\n    }\n  }\n\n  updateActionCompleteDataValues(ulElement, list) {\n    this.actionCompleteData = {\n      ulElement: ulElement.cloneNode(true),\n      list: list,\n      isUpdated: true\n    };\n\n    if (this.actionData.list !== this.actionCompleteData.list && this.actionCompleteData.ulElement && this.actionCompleteData.list) {\n      this.actionData = this.actionCompleteData;\n    }\n  }\n\n  addNewItem(listData, newElement) {\n    if (!isNullOrUndefined(this.itemData) && !isNullOrUndefined(newElement)) {\n      const value = this.getItemData().value;\n      const isExist = listData.some(data => {\n        return (typeof data === 'string' || typeof data === 'number') && data === value || getValue(this.fields.value, data) === value;\n      });\n\n      if (!isExist) {\n        this.addItem(this.itemData);\n      }\n    }\n  }\n\n  updateActionCompleteData(li, item, index) {\n    if (this.getModuleName() !== 'autocomplete' && this.actionCompleteData.ulElement) {\n      if (this.itemTemplate && this.element.tagName === 'EJS-COMBOBOX' && this.allowFiltering) {\n        setTimeout(() => {\n          this.actionCompleteDataUpdate(li, item, index);\n        }, 0);\n      } else {\n        this.actionCompleteDataUpdate(li, item, index);\n      }\n    }\n  }\n\n  actionCompleteDataUpdate(li, item, index) {\n    if (index != null) {\n      this.actionCompleteData.ulElement.insertBefore(li.cloneNode(true), this.actionCompleteData.ulElement.childNodes[index]);\n    } else {\n      this.actionCompleteData.ulElement.appendChild(li.cloneNode(true));\n    }\n\n    if (this.isFiltering() && this.actionCompleteData.list.indexOf(item) < 0) {\n      this.actionCompleteData.list.push(item);\n    }\n  }\n\n  focusIndexItem() {\n    const value = this.getItemData().value;\n    this.activeIndex = this.getIndexByValue(value);\n    const element = this.findListElement(this.list, 'li', 'data-value', value);\n    this.selectedLI = element;\n    this.activeItem(element);\n    this.removeFocus();\n  }\n\n  updateSelection() {\n    const selectedItem = this.list.querySelector('.' + dropDownBaseClasses.selected);\n\n    if (selectedItem) {\n      this.setProperties({\n        'index': this.getIndexByValue(selectedItem.getAttribute('data-value'))\n      });\n      this.activeIndex = this.index;\n    } else {\n      this.removeFocus();\n      this.list.querySelector('.' + dropDownBaseClasses.li).classList.add(dropDownListClasses.focus);\n    }\n  }\n\n  removeFocus() {\n    const highlightedItem = this.list.querySelectorAll('.' + dropDownListClasses.focus);\n\n    if (highlightedItem && highlightedItem.length) {\n      removeClass(highlightedItem, dropDownListClasses.focus);\n    }\n  }\n\n  renderPopup() {\n    if (this.popupObj && document.body.contains(this.popupObj.element)) {\n      this.refreshPopup();\n      return;\n    }\n\n    const args = {\n      cancel: false\n    };\n    this.trigger('beforeOpen', args, args => {\n      if (!args.cancel) {\n        const popupEle = this.createElement('div', {\n          id: this.element.id + '_popup',\n          className: 'e-ddl e-popup ' + (this.cssClass != null ? this.cssClass : '')\n        });\n        const searchBox = this.setSearchBox(popupEle);\n        this.listHeight = formatUnit(this.popupHeight);\n\n        if (this.headerTemplate) {\n          this.setHeaderTemplate(popupEle);\n        }\n\n        append([this.list], popupEle);\n\n        if (this.footerTemplate) {\n          this.setFooterTemplate(popupEle);\n        }\n\n        document.body.appendChild(popupEle);\n        popupEle.style.visibility = 'hidden';\n\n        if (this.popupHeight !== 'auto') {\n          this.searchBoxHeight = 0;\n\n          if (!isNullOrUndefined(searchBox.container)) {\n            this.searchBoxHeight = searchBox.container.parentElement.getBoundingClientRect().height;\n            this.listHeight = (parseInt(this.listHeight, 10) - this.searchBoxHeight).toString() + 'px';\n          }\n\n          if (this.headerTemplate) {\n            this.header = this.header ? this.header : popupEle.querySelector('.e-ddl-header');\n            const height = Math.round(this.header.getBoundingClientRect().height);\n            this.listHeight = (parseInt(this.listHeight, 10) - (height + this.searchBoxHeight)).toString() + 'px';\n          }\n\n          if (this.footerTemplate) {\n            this.footer = this.footer ? this.footer : popupEle.querySelector('.e-ddl-footer');\n            const height = Math.round(this.footer.getBoundingClientRect().height);\n            this.listHeight = (parseInt(this.listHeight, 10) - (height + this.searchBoxHeight)).toString() + 'px';\n          }\n\n          this.list.style.maxHeight = (parseInt(this.listHeight, 10) - 2).toString() + 'px'; // due to box-sizing property\n\n          popupEle.style.maxHeight = formatUnit(this.popupHeight);\n        } else {\n          popupEle.style.height = 'auto';\n        }\n\n        let offsetValue = 0;\n        let left;\n\n        if (!isNullOrUndefined(this.selectedLI) && !isNullOrUndefined(this.activeIndex) && this.activeIndex >= 0) {\n          this.setScrollPosition();\n        } else {\n          this.list.scrollTop = 0;\n        }\n\n        if (Browser.isDevice && !this.allowFiltering && (this.getModuleName() === 'dropdownlist' || this.isDropDownClick && this.getModuleName() === 'combobox')) {\n          offsetValue = this.getOffsetValue(popupEle);\n          const firstItem = this.isEmptyList() ? this.list : this.liCollections[0];\n          left = -(parseInt(getComputedStyle(firstItem).textIndent, 10) - parseInt(getComputedStyle(this.inputElement).paddingLeft, 10) + parseInt(getComputedStyle(this.inputElement.parentElement).borderLeftWidth, 10));\n        }\n\n        this.getFocusElement();\n        this.createPopup(popupEle, offsetValue, left);\n        this.checkCollision(popupEle);\n\n        if (Browser.isDevice) {\n          this.popupObj.element.classList.add(dropDownListClasses.device);\n\n          if (this.getModuleName() === 'dropdownlist' || this.getModuleName() === 'combobox' && !this.allowFiltering && this.isDropDownClick) {\n            this.popupObj.collision = {\n              X: 'fit',\n              Y: 'fit'\n            };\n          }\n\n          if (this.isFilterLayout()) {\n            this.popupObj.element.classList.add(dropDownListClasses.mobileFilter);\n            this.popupObj.position = {\n              X: 0,\n              Y: 0\n            };\n            this.popupObj.dataBind();\n            attributes(this.popupObj.element, {\n              style: 'left:0px;right:0px;top:0px;bottom:0px;'\n            });\n            addClass([document.body, this.popupObj.element], dropDownListClasses.popupFullScreen);\n            this.setSearchBoxPosition();\n            this.backIconElement = searchBox.container.querySelector('.e-back-icon');\n            this.clearIconElement = searchBox.container.querySelector('.' + dropDownListClasses.clearIcon);\n            EventHandler.add(this.backIconElement, 'click', this.clickOnBackIcon, this);\n            EventHandler.add(this.clearIconElement, 'click', this.clearText, this);\n          }\n        }\n\n        popupEle.style.visibility = 'visible';\n        addClass([popupEle], 'e-popup-close');\n        const scrollParentElements = this.popupObj.getScrollableParent(this.inputWrapper.container);\n\n        for (const element of scrollParentElements) {\n          EventHandler.add(element, 'scroll', this.scrollHandler, this);\n        }\n\n        if (Browser.isDevice && this.isFilterLayout()) {\n          EventHandler.add(this.list, 'scroll', this.listScroll, this);\n        }\n\n        if (!isNullOrUndefined(this.list)) {\n          this.unWireListEvents();\n          this.wireListEvents();\n        }\n\n        attributes(this.targetElement(), {\n          'aria-expanded': 'true'\n        });\n        const inputParent = this.isFiltering() ? this.filterInput.parentElement : this.inputWrapper.container;\n        addClass([inputParent], [dropDownListClasses.inputFocus]);\n        const animModel = {\n          name: 'FadeIn',\n          duration: 100\n        };\n        this.beforePopupOpen = true;\n        const popupInstance = this.popupObj;\n        const eventArgs = {\n          popup: popupInstance,\n          cancel: false,\n          animation: animModel\n        };\n        this.trigger('open', eventArgs, eventArgs => {\n          if (!eventArgs.cancel) {\n            addClass([this.inputWrapper.container], [dropDownListClasses.iconAnimation]);\n            this.renderReactTemplates();\n            this.popupObj.show(new Animation(eventArgs.animation), this.zIndex === 1000 ? this.element : null);\n          } else {\n            this.beforePopupOpen = false;\n            this.destroyPopup();\n          }\n        });\n      } else {\n        this.beforePopupOpen = false;\n      }\n    });\n  }\n\n  checkCollision(popupEle) {\n    if (!Browser.isDevice || Browser.isDevice && !(this.getModuleName() === 'dropdownlist' || this.isDropDownClick)) {\n      const collision = isCollide(popupEle);\n\n      if (collision.length > 0) {\n        popupEle.style.marginTop = -parseInt(getComputedStyle(popupEle).marginTop, 10) + 'px';\n      }\n\n      this.popupObj.resolveCollision();\n    }\n  }\n\n  getOffsetValue(popupEle) {\n    const popupStyles = getComputedStyle(popupEle);\n    const borderTop = parseInt(popupStyles.borderTopWidth, 10);\n    const borderBottom = parseInt(popupStyles.borderBottomWidth, 10);\n    return this.setPopupPosition(borderTop + borderBottom);\n  }\n\n  createPopup(element, offsetValue, left) {\n    this.popupObj = new Popup(element, {\n      width: this.setWidth(),\n      targetType: 'relative',\n      relateTo: this.inputWrapper.container,\n      collision: {\n        X: 'flip',\n        Y: 'flip'\n      },\n      offsetY: offsetValue,\n      enableRtl: this.enableRtl,\n      offsetX: left,\n      position: {\n        X: 'left',\n        Y: 'bottom'\n      },\n      zIndex: this.zIndex,\n      close: () => {\n        if (!this.isDocumentClick) {\n          this.focusDropDown();\n        } // eslint-disable-next-line\n\n\n        if (this.isReact) {\n          this.clearTemplate(['headerTemplate', 'footerTemplate']);\n        }\n\n        const isResetItem = this.getModuleName() === 'autocomplete' ? true : false;\n        this.isNotSearchList = false;\n        this.isDocumentClick = false;\n        this.destroyPopup();\n\n        if (this.isFiltering() && this.actionCompleteData.list && this.actionCompleteData.list[0]) {\n          this.isActive = true;\n          this.onActionComplete(this.actionCompleteData.ulElement, this.actionCompleteData.list, null, true);\n        }\n      },\n      open: () => {\n        EventHandler.add(document, 'mousedown', this.onDocumentClick, this);\n        this.isPopupOpen = true;\n        const actionList = this.actionCompleteData && this.actionCompleteData.ulElement && this.actionCompleteData.ulElement.querySelector('li');\n        const ulElement = this.list.querySelector('ul li');\n\n        if (this.isFiltering() && this.itemTemplate && this.element.tagName === this.getNgDirective() && actionList && ulElement && actionList.textContent !== ulElement.textContent && this.element.tagName !== 'EJS-COMBOBOX') {\n          this.cloneElements();\n        }\n\n        if (this.isFilterLayout()) {\n          removeClass([this.inputWrapper.container], [dropDownListClasses.inputFocus]);\n          this.isFilterFocus = true;\n          this.filterInput.focus();\n\n          if (this.inputWrapper.clearButton) {\n            addClass([this.inputWrapper.clearButton], dropDownListClasses.clearIconHide);\n          }\n        }\n\n        this.activeStateChange();\n      },\n      targetExitViewport: () => {\n        if (!Browser.isDevice) {\n          this.hidePopup();\n        }\n      }\n    });\n  }\n\n  isEmptyList() {\n    return !isNullOrUndefined(this.liCollections) && this.liCollections.length === 0;\n  }\n\n  getFocusElement() {// combo-box used this method\n  }\n\n  isFilterLayout() {\n    return this.getModuleName() === 'dropdownlist' && this.allowFiltering;\n  }\n\n  scrollHandler() {\n    if (Browser.isDevice && (this.getModuleName() === 'dropdownlist' && !this.isFilterLayout() || this.getModuleName() === 'combobox' && !this.allowFiltering && this.isDropDownClick)) {\n      this.hidePopup();\n    }\n  }\n\n  setSearchBoxPosition() {\n    const searchBoxHeight = this.filterInput.parentElement.getBoundingClientRect().height;\n    this.popupObj.element.style.maxHeight = '100%';\n    this.popupObj.element.style.width = '100%';\n    this.list.style.maxHeight = window.innerHeight - searchBoxHeight + 'px';\n    this.list.style.height = window.innerHeight - searchBoxHeight + 'px';\n    const clearElement = this.filterInput.parentElement.querySelector('.' + dropDownListClasses.clearIcon);\n    detach(this.filterInput);\n    clearElement.parentElement.insertBefore(this.filterInput, clearElement);\n  }\n\n  setPopupPosition(border) {\n    let offsetValue;\n    const popupOffset = border;\n    const selectedLI = this.list.querySelector('.' + dropDownListClasses.focus) || this.selectedLI;\n    const firstItem = this.isEmptyList() ? this.list : this.liCollections[0];\n    const lastItem = this.isEmptyList() ? this.list : this.liCollections[this.getItems().length - 1];\n    const liHeight = firstItem.getBoundingClientRect().height;\n    const listHeight = this.list.offsetHeight / 2;\n    const height = isNullOrUndefined(selectedLI) ? firstItem.offsetTop : selectedLI.offsetTop;\n    const lastItemOffsetValue = lastItem.offsetTop;\n\n    if (lastItemOffsetValue - listHeight < height && !isNullOrUndefined(this.liCollections) && this.liCollections.length > 0 && !isNullOrUndefined(selectedLI)) {\n      const count = this.list.offsetHeight / liHeight;\n      const paddingBottom = parseInt(getComputedStyle(this.list).paddingBottom, 10);\n      offsetValue = (count - (this.liCollections.length - this.activeIndex)) * liHeight - popupOffset + paddingBottom;\n      this.list.scrollTop = selectedLI.offsetTop;\n    } else if (height > listHeight) {\n      offsetValue = listHeight - liHeight / 2;\n      this.list.scrollTop = height - listHeight + liHeight / 2;\n    } else {\n      offsetValue = height;\n    }\n\n    const inputHeight = this.inputWrapper.container.offsetHeight;\n    offsetValue = offsetValue + liHeight + popupOffset - (liHeight - inputHeight) / 2;\n    return -offsetValue;\n  }\n\n  setWidth() {\n    let width = formatUnit(this.popupWidth);\n\n    if (width.indexOf('%') > -1) {\n      const inputWidth = this.inputWrapper.container.offsetWidth * parseFloat(width) / 100;\n      width = inputWidth.toString() + 'px';\n    }\n\n    if (Browser.isDevice && !this.allowFiltering && (this.getModuleName() === 'dropdownlist' || this.isDropDownClick && this.getModuleName() === 'combobox')) {\n      const firstItem = this.isEmptyList() ? this.list : this.liCollections[0];\n      width = parseInt(width, 10) + (parseInt(getComputedStyle(firstItem).textIndent, 10) - parseInt(getComputedStyle(this.inputElement).paddingLeft, 10) + parseInt(getComputedStyle(this.inputElement.parentElement).borderLeftWidth, 10)) * 2 + 'px';\n    }\n\n    return width;\n  }\n\n  scrollBottom(isInitial) {\n    if (!isNullOrUndefined(this.selectedLI)) {\n      const currentOffset = this.list.offsetHeight;\n      const nextBottom = this.selectedLI.offsetTop + this.selectedLI.offsetHeight - this.list.scrollTop;\n      let nextOffset = this.list.scrollTop + nextBottom - currentOffset;\n      nextOffset = isInitial ? nextOffset + parseInt(getComputedStyle(this.list).paddingTop, 10) * 2 : nextOffset;\n      let boxRange = this.selectedLI.offsetTop + this.selectedLI.offsetHeight - this.list.scrollTop;\n      boxRange = this.fields.groupBy && !isNullOrUndefined(this.fixedHeaderElement) ? boxRange - this.fixedHeaderElement.offsetHeight : boxRange;\n\n      if (this.activeIndex === 0) {\n        this.list.scrollTop = 0;\n      } else if (nextBottom > currentOffset || !(boxRange > 0 && this.list.offsetHeight > boxRange)) {\n        this.list.scrollTop = nextOffset;\n      }\n    }\n  }\n\n  scrollTop() {\n    if (!isNullOrUndefined(this.selectedLI)) {\n      let nextOffset = this.selectedLI.offsetTop - this.list.scrollTop;\n      nextOffset = this.fields.groupBy && !isNullOrUndefined(this.fixedHeaderElement) ? nextOffset - this.fixedHeaderElement.offsetHeight : nextOffset;\n      const boxRange = this.selectedLI.offsetTop + this.selectedLI.offsetHeight - this.list.scrollTop;\n\n      if (this.activeIndex === 0) {\n        this.list.scrollTop = 0;\n      } else if (nextOffset < 0) {\n        this.list.scrollTop = this.list.scrollTop + nextOffset;\n      } else if (!(boxRange > 0 && this.list.offsetHeight > boxRange)) {\n        this.list.scrollTop = this.selectedLI.offsetTop - (this.fields.groupBy && !isNullOrUndefined(this.fixedHeaderElement) ? this.fixedHeaderElement.offsetHeight : 0);\n      }\n    }\n  }\n\n  isEditTextBox() {\n    return false;\n  }\n\n  isFiltering() {\n    return this.allowFiltering;\n  }\n\n  isPopupButton() {\n    return true;\n  }\n\n  setScrollPosition(e) {\n    if (!isNullOrUndefined(e)) {\n      switch (e.action) {\n        case 'pageDown':\n        case 'down':\n        case 'end':\n          this.scrollBottom();\n          break;\n\n        default:\n          this.scrollTop();\n          break;\n      }\n    } else {\n      this.scrollBottom(true);\n    }\n  }\n\n  clearText() {\n    this.filterInput.value = this.typedString = '';\n    this.searchLists(null);\n  }\n\n  listScroll() {\n    this.filterInput.blur();\n  }\n\n  setEleWidth(width) {\n    if (!isNullOrUndefined(width)) {\n      if (typeof width === 'number') {\n        this.inputWrapper.container.style.width = formatUnit(width);\n      } else if (typeof width === 'string') {\n        this.inputWrapper.container.style.width = width.match(/px|%|em/) ? width : formatUnit(width);\n      }\n    }\n  }\n\n  closePopup(delay, e) {\n    this.isTyped = false;\n\n    if (!(this.popupObj && document.body.contains(this.popupObj.element) && this.beforePopupOpen)) {\n      return;\n    }\n\n    EventHandler.remove(document, 'mousedown', this.onDocumentClick);\n    this.isActive = false;\n    this.filterInputObj = null;\n    this.isDropDownClick = false;\n    this.preventAutoFill = false;\n    const scrollableParentElements = this.popupObj.getScrollableParent(this.inputWrapper.container);\n\n    for (const element of scrollableParentElements) {\n      EventHandler.remove(element, 'scroll', this.scrollHandler);\n    }\n\n    if (Browser.isDevice && this.isFilterLayout()) {\n      removeClass([document.body, this.popupObj.element], dropDownListClasses.popupFullScreen);\n      EventHandler.remove(this.list, 'scroll', this.listScroll);\n    }\n\n    if (this.isFilterLayout()) {\n      if (!Browser.isDevice) {\n        this.searchKeyModule.destroy();\n\n        if (this.clearIconElement) {\n          EventHandler.remove(this.clearIconElement, 'click', this.clearText);\n        }\n      }\n\n      if (this.backIconElement) {\n        EventHandler.remove(this.backIconElement, 'click', this.clickOnBackIcon);\n        EventHandler.remove(this.clearIconElement, 'click', this.clearText);\n      }\n\n      EventHandler.remove(this.filterInput, 'input', this.onInput);\n      EventHandler.remove(this.filterInput, 'keyup', this.onFilterUp);\n      EventHandler.remove(this.filterInput, 'keydown', this.onFilterDown);\n      EventHandler.remove(this.filterInput, 'blur', this.onBlurHandler);\n      EventHandler.remove(this.filterInput, 'paste', this.pasteHandler);\n      this.filterInput = null;\n    }\n\n    attributes(this.targetElement(), {\n      'aria-expanded': 'false'\n    });\n    this.inputWrapper.container.classList.remove(dropDownListClasses.iconAnimation);\n\n    if (this.isFiltering()) {\n      this.actionCompleteData.isUpdated = false;\n    }\n\n    this.beforePopupOpen = false;\n    const animModel = {\n      name: 'FadeOut',\n      duration: 100,\n      delay: delay ? delay : 0\n    };\n    const popupInstance = this.popupObj;\n    const eventArgs = {\n      popup: popupInstance,\n      cancel: false,\n      animation: animModel,\n      event: e || null\n    };\n    this.trigger('close', eventArgs, eventArgs => {\n      if (!isNullOrUndefined(this.popupObj) && !isNullOrUndefined(this.popupObj.element.querySelector('.e-fixed-head'))) {\n        const fixedHeader = this.popupObj.element.querySelector('.e-fixed-head');\n        fixedHeader.parentNode.removeChild(fixedHeader);\n        this.fixedHeaderElement = null;\n      }\n\n      if (!eventArgs.cancel) {\n        if (this.getModuleName() === 'autocomplete') {\n          this.rippleFun();\n        }\n\n        if (this.isPopupOpen) {\n          this.popupObj.hide(new Animation(eventArgs.animation));\n        } else {\n          this.destroyPopup();\n        }\n      }\n    });\n  }\n\n  destroyPopup() {\n    this.isPopupOpen = false;\n    this.isFilterFocus = false;\n    this.popupObj.destroy();\n    detach(this.popupObj.element);\n  }\n\n  clickOnBackIcon() {\n    this.hidePopup();\n    this.focusIn();\n  }\n  /**\n   * To Initialize the control rendering\n   *\n   * @private\n   * @returns {void}\n   */\n\n\n  render() {\n    if (this.element.tagName === 'INPUT') {\n      this.inputElement = this.element;\n\n      if (isNullOrUndefined(this.inputElement.getAttribute('role'))) {\n        this.inputElement.setAttribute('role', 'textbox');\n      }\n\n      if (isNullOrUndefined(this.inputElement.getAttribute('type'))) {\n        this.inputElement.setAttribute('type', 'text');\n      }\n    } else {\n      this.inputElement = this.createElement('input', {\n        attrs: {\n          role: 'textbox',\n          type: 'text'\n        }\n      });\n\n      if (this.element.tagName !== this.getNgDirective()) {\n        this.element.style.display = 'none';\n      }\n\n      this.element.parentElement.insertBefore(this.inputElement, this.element);\n      this.preventTabIndex(this.inputElement);\n    }\n\n    let updatedCssClassValues = this.cssClass;\n\n    if (!isNullOrUndefined(this.cssClass) && this.cssClass !== '') {\n      updatedCssClassValues = this.cssClass.replace(/\\s+/g, ' ').trim();\n    }\n\n    this.inputWrapper = Input.createInput({\n      element: this.inputElement,\n      buttons: this.isPopupButton() ? [dropDownListClasses.icon] : null,\n      floatLabelType: this.floatLabelType,\n      properties: {\n        readonly: this.getModuleName() === 'dropdownlist' ? true : this.readonly,\n        placeholder: this.placeholder,\n        cssClass: updatedCssClassValues,\n        enabled: this.enabled,\n        enableRtl: this.enableRtl,\n        showClearButton: this.showClearButton\n      }\n    }, this.createElement);\n\n    if (this.element.tagName === this.getNgDirective()) {\n      this.element.appendChild(this.inputWrapper.container);\n    } else {\n      this.inputElement.parentElement.insertBefore(this.element, this.inputElement);\n    }\n\n    this.hiddenElement = this.createElement('select', {\n      attrs: {\n        'aria-hidden': 'true',\n        'tabindex': '-1',\n        'class': dropDownListClasses.hiddenElement\n      }\n    });\n    prepend([this.hiddenElement], this.inputWrapper.container);\n    this.validationAttribute(this.element, this.hiddenElement);\n    this.setReadOnly();\n    this.setFields();\n    this.inputWrapper.container.style.width = formatUnit(this.width);\n    this.inputWrapper.container.classList.add('e-ddl');\n    this.wireEvent();\n    this.tabIndex = this.element.hasAttribute('tabindex') ? this.element.getAttribute('tabindex') : '0';\n    this.element.removeAttribute('tabindex');\n    const id = this.element.getAttribute('id') ? this.element.getAttribute('id') : getUniqueID('ej2_dropdownlist');\n    this.element.id = id;\n    this.hiddenElement.id = id + '_hidden';\n    this.targetElement().setAttribute('tabindex', this.tabIndex);\n    attributes(this.targetElement(), this.getAriaAttributes());\n    this.updateDataAttribute(this.htmlAttributes);\n    this.setHTMLAttributes();\n\n    if (this.value !== null || this.activeIndex !== null || this.text !== null) {\n      this.initValue();\n    } else if (this.element.tagName === 'SELECT' && this.element.options[0]) {\n      const selectElement = this.element;\n      this.value = selectElement.options[selectElement.selectedIndex].value;\n      this.text = isNullOrUndefined(this.value) ? null : selectElement.options[selectElement.selectedIndex].textContent;\n      this.initValue();\n    }\n\n    this.preventTabIndex(this.element);\n\n    if (!this.enabled) {\n      this.targetElement().tabIndex = -1;\n    }\n\n    this.initial = false;\n    this.element.style.opacity = '';\n\n    this.inputElement.onselect = e => {\n      e.stopImmediatePropagation();\n    };\n\n    this.inputElement.onchange = e => {\n      e.stopImmediatePropagation();\n    };\n\n    if (this.element.hasAttribute('autofocus')) {\n      this.focusIn();\n    }\n\n    if (!isNullOrUndefined(this.text)) {\n      this.inputElement.setAttribute('value', this.text);\n    }\n\n    if (this.element.hasAttribute('data-val')) {\n      this.element.setAttribute('data-val', 'false');\n    }\n\n    this.renderComplete();\n  }\n\n  setFooterTemplate(popupEle) {\n    let compiledString;\n\n    if (this.footer) {\n      this.footer.innerHTML = '';\n    } else {\n      this.footer = this.createElement('div');\n      addClass([this.footer], dropDownListClasses.footer);\n    }\n\n    const footercheck = this.dropdownCompiler(this.footerTemplate);\n\n    if (footercheck) {\n      compiledString = compile(select(this.footerTemplate, document).innerHTML.trim());\n    } else {\n      compiledString = compile(this.footerTemplate);\n    } // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n    const footerCompTemp = compiledString({}, this, 'footerTemplate', this.footerTemplateId, this.isStringTemplate, null, this.footer);\n\n    if (footerCompTemp && footerCompTemp.length > 0) {\n      for (let i = 0; i < footerCompTemp.length; i++) {\n        this.footer.appendChild(footerCompTemp[i]);\n      }\n    }\n\n    append([this.footer], popupEle);\n  }\n\n  setHeaderTemplate(popupEle) {\n    let compiledString;\n\n    if (this.header) {\n      this.header.innerHTML = '';\n    } else {\n      this.header = this.createElement('div');\n      addClass([this.header], dropDownListClasses.header);\n    }\n\n    const headercheck = this.dropdownCompiler(this.headerTemplate);\n\n    if (headercheck) {\n      compiledString = compile(select(this.headerTemplate, document).innerHTML.trim());\n    } else {\n      compiledString = compile(this.headerTemplate);\n    } // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n    const headerCompTemp = compiledString({}, this, 'headerTemplate', this.headerTemplateId, this.isStringTemplate, null, this.header);\n\n    if (headerCompTemp && headerCompTemp.length) {\n      for (let i = 0; i < headerCompTemp.length; i++) {\n        this.header.appendChild(headerCompTemp[i]);\n      }\n    }\n\n    const contentEle = popupEle.querySelector('div.e-content');\n    popupEle.insertBefore(this.header, contentEle);\n  }\n\n  setOldText(text) {\n    this.text = text;\n  }\n\n  setOldValue(value) {\n    this.value = value;\n  }\n\n  refreshPopup() {\n    if (!isNullOrUndefined(this.popupObj) && document.body.contains(this.popupObj.element) && (this.allowFiltering && !(Browser.isDevice && this.isFilterLayout()) || this.getModuleName() === 'autocomplete')) {\n      removeClass([this.popupObj.element], 'e-popup-close');\n      this.popupObj.refreshPosition(this.inputWrapper.container);\n      this.popupObj.resolveCollision();\n    }\n  }\n\n  checkData(newProp) {\n    if (newProp.dataSource && !isNullOrUndefined(Object.keys(newProp.dataSource)) && this.itemTemplate && this.allowFiltering && !(this.isListSearched && newProp.dataSource instanceof DataManager)) {\n      this.list = null;\n      this.actionCompleteData = {\n        ulElement: null,\n        list: null,\n        isUpdated: false\n      };\n    }\n\n    this.isListSearched = false;\n    const isChangeValue = Object.keys(newProp).indexOf('value') !== -1 && isNullOrUndefined(newProp.value);\n    const isChangeText = Object.keys(newProp).indexOf('text') !== -1 && isNullOrUndefined(newProp.text);\n\n    if (this.getModuleName() !== 'autocomplete' && this.allowFiltering && (isChangeValue || isChangeText)) {\n      this.itemData = null;\n    }\n\n    if (this.allowFiltering && newProp.dataSource && !isNullOrUndefined(Object.keys(newProp.dataSource))) {\n      this.actionCompleteData = {\n        ulElement: null,\n        list: null,\n        isUpdated: false\n      };\n      this.actionData = this.actionCompleteData;\n    } else if (this.allowFiltering && newProp.query && !isNullOrUndefined(Object.keys(newProp.query))) {\n      this.actionCompleteData = this.getModuleName() === 'combobox' ? {\n        ulElement: null,\n        list: null,\n        isUpdated: false\n      } : this.actionCompleteData;\n      this.actionData = this.actionCompleteData;\n    }\n  }\n\n  updateDataSource(props) {\n    if (this.inputElement.value !== '' || !isNullOrUndefined(props) && (isNullOrUndefined(props.dataSource) || !(props.dataSource instanceof DataManager) && props.dataSource.length === 0)) {\n      this.clearAll(null, props);\n    }\n\n    if (this.fields.groupBy && props.fields && !this.isGroupChecking && this.list) {\n      EventHandler.remove(this.list, 'scroll', this.setFloatingHeader);\n      EventHandler.add(this.list, 'scroll', this.setFloatingHeader, this);\n    }\n\n    if (!(!isNullOrUndefined(props) && (isNullOrUndefined(props.dataSource) || !(props.dataSource instanceof DataManager) && props.dataSource.length === 0)) || !(props.dataSource === [])) {\n      this.typedString = '';\n      this.resetList(this.dataSource);\n    }\n\n    if (!this.isCustomFilter && !this.isFilterFocus && document.activeElement !== this.filterInput) {\n      this.checkCustomValue();\n    }\n  }\n\n  checkCustomValue() {\n    this.itemData = this.getDataByValue(this.value);\n    const dataItem = this.getItemData();\n    this.setProperties({\n      'text': dataItem.text,\n      'value': dataItem.value\n    });\n  }\n\n  updateInputFields() {\n    if (this.getModuleName() === 'dropdownlist') {\n      Input.setValue(this.text, this.inputElement, this.floatLabelType, this.showClearButton);\n    }\n  }\n  /**\n   * Dynamically change the value of properties.\n   *\n   * @private\n   * @param {DropDownListModel} newProp - Returns the dynamic property value of the component.\n   * @param {DropDownListModel} oldProp - Returns the previous previous value of the component.\n   * @returns {void}\n   */\n\n\n  onPropertyChanged(newProp, oldProp) {\n    if (this.getModuleName() === 'dropdownlist') {\n      this.checkData(newProp);\n      this.setUpdateInitial(['fields', 'query', 'dataSource'], newProp);\n    }\n\n    for (const prop of Object.keys(newProp)) {\n      switch (prop) {\n        case 'query':\n        case 'dataSource':\n          break;\n\n        case 'htmlAttributes':\n          this.setHTMLAttributes();\n          break;\n\n        case 'width':\n          this.setEleWidth(newProp.width);\n          break;\n\n        case 'placeholder':\n          Input.setPlaceholder(newProp.placeholder, this.inputElement);\n          break;\n\n        case 'filterBarPlaceholder':\n          if (this.filterInput) {\n            Input.setPlaceholder(newProp.filterBarPlaceholder, this.filterInput);\n          }\n\n          break;\n\n        case 'readonly':\n          if (this.getModuleName() !== 'dropdownlist') {\n            Input.setReadonly(newProp.readonly, this.inputElement);\n          }\n\n          this.setReadOnly();\n          break;\n\n        case 'cssClass':\n          this.setCssClass(newProp.cssClass, oldProp.cssClass);\n          break;\n\n        case 'enableRtl':\n          this.setEnableRtl();\n          break;\n\n        case 'enabled':\n          this.setEnable();\n          break;\n\n        case 'text':\n          if (newProp.text === null) {\n            this.clearAll();\n            break;\n          }\n\n          if (!this.list) {\n            if (this.dataSource instanceof DataManager) {\n              this.initRemoteRender = true;\n            }\n\n            this.renderList();\n          }\n\n          if (!this.initRemoteRender) {\n            const li = this.getElementByText(newProp.text);\n\n            if (!this.checkValidLi(li)) {\n              if (this.liCollections && this.liCollections.length === 100 && this.getModuleName() === 'autocomplete' && this.listData.length > 100) {\n                this.setSelectionData(newProp.text, oldProp.text, 'text');\n              } else if (newProp.text && this.dataSource instanceof DataManager) {\n                const listLength = this.getItems().length;\n                const checkField = isNullOrUndefined(this.fields.text) ? this.fields.value : this.fields.text;\n                this.typedString = '';\n                this.dataSource.executeQuery(this.getQuery(this.query).where(new Predicate(checkField, 'equal', newProp.text))).then(e => {\n                  if (e.result.length > 0) {\n                    this.addItem(e.result, listLength);\n                    this.updateValues();\n                  } else {\n                    this.setOldText(oldProp.text);\n                  }\n                });\n              } else {\n                this.setOldText(oldProp.text);\n              }\n            }\n\n            this.updateInputFields();\n          }\n\n          break;\n\n        case 'value':\n          if (newProp.value === null) {\n            this.clearAll();\n            break;\n          }\n\n          this.notify('beforeValueChange', {\n            newProp: newProp\n          }); // gird component value type change\n\n          if (!this.list) {\n            if (this.dataSource instanceof DataManager) {\n              this.initRemoteRender = true;\n            }\n\n            this.renderList();\n          }\n\n          if (!this.initRemoteRender) {\n            const item = this.getElementByValue(newProp.value);\n\n            if (!this.checkValidLi(item)) {\n              if (this.liCollections && this.liCollections.length === 100 && this.getModuleName() === 'autocomplete' && this.listData.length > 100) {\n                this.setSelectionData(newProp.value, oldProp.value, 'value');\n              } else if (newProp.value && this.dataSource instanceof DataManager) {\n                const listLength = this.getItems().length;\n                const checkField = isNullOrUndefined(this.fields.value) ? this.fields.text : this.fields.value;\n                this.typedString = '';\n                this.dataSource.executeQuery(this.getQuery(this.query).where(new Predicate(checkField, 'equal', newProp.value))).then(e => {\n                  if (e.result.length > 0) {\n                    this.addItem(e.result, listLength);\n                    this.updateValues();\n                  } else {\n                    this.setOldValue(oldProp.value);\n                  }\n                });\n              } else {\n                this.setOldValue(oldProp.value);\n              }\n            }\n\n            this.updateInputFields();\n            this.preventChange = this.isAngular && this.preventChange ? !this.preventChange : this.preventChange;\n          }\n\n          break;\n\n        case 'index':\n          if (newProp.index === null) {\n            this.clearAll();\n            break;\n          }\n\n          if (!this.list) {\n            if (this.dataSource instanceof DataManager) {\n              this.initRemoteRender = true;\n            }\n\n            this.renderList();\n          }\n\n          if (!this.initRemoteRender && this.liCollections) {\n            const element = this.liCollections[newProp.index];\n\n            if (!this.checkValidLi(element)) {\n              if (this.liCollections && this.liCollections.length === 100 && this.getModuleName() === 'autocomplete' && this.listData.length > 100) {\n                this.setSelectionData(newProp.index, oldProp.index, 'index');\n              } else {\n                this.index = oldProp.index;\n              }\n            }\n\n            this.updateInputFields();\n          }\n\n          break;\n\n        case 'footerTemplate':\n          if (this.popupObj) {\n            this.setFooterTemplate(this.popupObj.element);\n          }\n\n          break;\n\n        case 'headerTemplate':\n          if (this.popupObj) {\n            this.setHeaderTemplate(this.popupObj.element);\n          }\n\n          break;\n\n        case 'valueTemplate':\n          if (!isNullOrUndefined(this.itemData) && this.valueTemplate != null) {\n            this.setValueTemplate();\n          }\n\n          break;\n\n        case 'allowFiltering':\n          if (this.allowFiltering) {\n            this.actionCompleteData = {\n              ulElement: this.ulElement,\n              list: this.listData,\n              isUpdated: true\n            };\n            this.actionData = this.actionCompleteData;\n            this.updateSelectElementData(this.allowFiltering);\n          }\n\n          break;\n\n        case 'floatLabelType':\n          Input.removeFloating(this.inputWrapper);\n          Input.addFloating(this.inputElement, newProp.floatLabelType, this.placeholder, this.createElement);\n          break;\n\n        case 'showClearButton':\n          Input.setClearButton(newProp.showClearButton, this.inputElement, this.inputWrapper, null, this.createElement);\n          this.bindClearEvent();\n          break;\n\n        default:\n          {\n            // eslint-disable-next-line max-len\n            const ddlProps = this.getPropObject(prop, newProp, oldProp);\n            super.onPropertyChanged(ddlProps.newProperty, ddlProps.oldProperty);\n          }\n          break;\n      }\n    }\n  }\n\n  checkValidLi(element) {\n    if (this.isValidLI(element)) {\n      this.setSelection(element, null);\n      return true;\n    }\n\n    return false;\n  }\n\n  setSelectionData(newProp, oldProp, prop) {\n    let li;\n\n    this.updateListValues = () => {\n      if (prop === 'text') {\n        li = this.getElementByText(newProp);\n\n        if (!this.checkValidLi(li)) {\n          this.setOldText(oldProp);\n        }\n      } else if (prop === 'value') {\n        li = this.getElementByValue(newProp);\n\n        if (!this.checkValidLi(li)) {\n          this.setOldValue(oldProp);\n        }\n      } else if (prop === 'index') {\n        li = this.liCollections[newProp];\n\n        if (!this.checkValidLi(li)) {\n          this.index = oldProp;\n        }\n      }\n    };\n  }\n\n  setReadOnly() {\n    if (this.readonly) {\n      addClass([this.inputWrapper.container], ['e-readonly']);\n    } else {\n      removeClass([this.inputWrapper.container], ['e-readonly']);\n    }\n  }\n\n  setCssClass(newClass, oldClass) {\n    if (!isNullOrUndefined(oldClass)) {\n      oldClass = oldClass.replace(/\\s+/g, ' ').trim();\n    }\n\n    if (!isNullOrUndefined(newClass)) {\n      newClass = newClass.replace(/\\s+/g, ' ').trim();\n    }\n\n    Input.setCssClass(newClass, [this.inputWrapper.container], oldClass);\n\n    if (this.popupObj) {\n      Input.setCssClass(newClass, [this.popupObj.element], oldClass);\n    }\n  }\n  /**\n   * Return the module name of this component.\n   *\n   * @private\n   * @returns {string} Return the module name of this component.\n   */\n\n\n  getModuleName() {\n    return 'dropdownlist';\n  }\n  /**\n   * Opens the popup that displays the list of items.\n   *\n   * @returns {void}\n   */\n\n\n  showPopup() {\n    if (!this.enabled) {\n      return;\n    }\n\n    if (this.isFiltering() && this.dataSource instanceof DataManager && this.actionData.list != this.actionCompleteData.list && this.actionData.list && this.actionData.ulElement) {\n      this.actionCompleteData = this.actionData;\n      this.onActionComplete(this.actionCompleteData.ulElement, this.actionCompleteData.list, null, true);\n    }\n\n    if (this.beforePopupOpen) {\n      this.refreshPopup();\n      return;\n    }\n\n    this.beforePopupOpen = true;\n\n    if (this.isFiltering() && !this.isActive && this.actionCompleteData.list && this.actionCompleteData.list[0]) {\n      this.isActive = true;\n      this.onActionComplete(this.actionCompleteData.ulElement, this.actionCompleteData.list, null, true);\n    } else if (isNullOrUndefined(this.list) || !isUndefined(this.list) && (this.list.classList.contains(dropDownBaseClasses.noData) || this.list.querySelectorAll('.' + dropDownBaseClasses.li).length <= 0)) {\n      this.renderList();\n    }\n\n    this.invokeRenderPopup();\n  }\n\n  invokeRenderPopup() {\n    if (Browser.isDevice && this.isFilterLayout()) {\n      // eslint-disable-next-line @typescript-eslint/no-this-alias\n      const proxy = this;\n\n      window.onpopstate = () => {\n        proxy.hidePopup();\n      };\n\n      history.pushState({}, '');\n    }\n\n    if (!isNullOrUndefined(this.list.children[0]) || this.list.classList.contains(dropDownBaseClasses.noData)) {\n      this.renderPopup();\n    }\n\n    attributes(this.targetElement(), {\n      'aria-activedescendant': this.selectedLI ? this.selectedLI.id : null\n    });\n  }\n\n  renderHightSearch() {// update high light search\n  }\n  /* eslint-disable valid-jsdoc, jsdoc/require-param */\n\n  /**\n   * Hides the popup if it is in an open state.\n   *\n   * @returns {void}\n   */\n\n\n  hidePopup(e) {\n    /* eslint-enable valid-jsdoc, jsdoc/require-param */\n    if (this.isEscapeKey && this.getModuleName() === 'dropdownlist') {\n      Input.setValue(this.text, this.inputElement, this.floatLabelType, this.showClearButton);\n      this.isEscapeKey = false;\n\n      if (!isNullOrUndefined(this.index)) {\n        const element = this.findListElement(this.ulElement, 'li', 'data-value', this.value);\n        this.selectedLI = this.liCollections[this.index] || element;\n\n        if (this.selectedLI) {\n          this.updateSelectedItem(this.selectedLI, null, true);\n\n          if (this.valueTemplate && this.itemData !== null) {\n            this.setValueTemplate();\n          }\n        }\n      } else {\n        this.resetSelection();\n      }\n    }\n\n    this.closePopup(0, e);\n    const dataItem = this.getItemData();\n    const isSelectVal = !isNullOrUndefined(this.selectedLI);\n\n    if (this.inputElement && this.inputElement.value.trim() === '' && !this.isInteracted && (this.isSelectCustom || isSelectVal && this.inputElement.value !== dataItem.text)) {\n      this.isSelectCustom = false;\n      this.clearAll(e);\n    }\n  }\n  /* eslint-disable valid-jsdoc, jsdoc/require-param */\n\n  /**\n   * Sets the focus on the component for interaction.\n   *\n   * @returns {void}\n   */\n\n\n  focusIn(e) {\n    if (!this.enabled) {\n      return;\n    }\n\n    if (this.targetElement().classList.contains(dropDownListClasses.disable)) {\n      return;\n    }\n\n    let isFocused = false;\n\n    if (this.preventFocus && Browser.isDevice) {\n      this.inputWrapper.container.tabIndex = 1;\n      this.inputWrapper.container.focus();\n      this.preventFocus = false;\n      isFocused = true;\n    }\n\n    if (!isFocused) {\n      this.targetElement().focus();\n    }\n\n    addClass([this.inputWrapper.container], [dropDownListClasses.inputFocus]);\n    this.onFocus(e);\n  }\n  /**\n   * Moves the focus from the component if the component is already focused.\n   *\n   * @returns {void}\n   */\n\n\n  focusOut(e) {\n    /* eslint-enable valid-jsdoc, jsdoc/require-param */\n    if (!this.enabled) {\n      return;\n    }\n\n    this.isTyped = true;\n    this.hidePopup(e);\n\n    if (this.targetElement()) {\n      this.targetElement().blur();\n    }\n\n    removeClass([this.inputWrapper.container], [dropDownListClasses.inputFocus]);\n  }\n  /**\n   * Removes the component from the DOM and detaches all its related event handlers. Also it removes the attributes and classes.\n   *\n   * @method destroy\n   * @returns {void}\n   */\n\n\n  destroy() {\n    this.isActive = false;\n    resetIncrementalSearchValues(this.element.id); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n    if (this.isReact) {\n      this.clearTemplate();\n    }\n\n    this.hidePopup();\n    this.unWireEvent();\n\n    if (this.list) {\n      this.unWireListEvents();\n    }\n\n    if (this.element && !this.element.classList.contains('e-' + this.getModuleName())) {\n      return;\n    }\n\n    if (this.inputElement) {\n      const attrArray = ['readonly', 'aria-disabled', 'aria-placeholder', 'placeholder', 'aria-owns', 'aria-labelledby', 'aria-haspopup', 'aria-expanded', 'aria-activedescendant', 'autocomplete', 'aria-readonly', 'autocorrect', 'autocapitalize', 'spellcheck', 'aria-autocomplete', 'aria-live', 'aria-describedby', 'aria-label'];\n\n      for (let i = 0; i < attrArray.length; i++) {\n        this.inputElement.removeAttribute(attrArray[i]);\n      }\n\n      this.inputElement.setAttribute('tabindex', this.tabIndex);\n      this.inputElement.classList.remove('e-input');\n      Input.setValue('', this.inputElement, this.floatLabelType, this.showClearButton);\n    }\n\n    this.element.style.display = 'block';\n\n    if (this.inputWrapper.container.parentElement.tagName === this.getNgDirective()) {\n      detach(this.inputWrapper.container);\n    } else {\n      this.inputWrapper.container.parentElement.insertBefore(this.element, this.inputWrapper.container);\n      detach(this.inputWrapper.container);\n    }\n\n    super.destroy();\n  }\n  /* eslint-disable valid-jsdoc, jsdoc/require-returns-description */\n\n  /**\n   * Gets all the list items bound on this component.\n   *\n   * @returns {Element[]}\n   */\n\n\n  getItems() {\n    if (!this.list) {\n      if (this.dataSource instanceof DataManager) {\n        this.initRemoteRender = true;\n      }\n\n      this.renderList();\n    }\n\n    return this.ulElement ? super.getItems() : [];\n  }\n  /**\n   * Gets the data Object that matches the given value.\n   *\n   * @param { string | number } value - Specifies the value of the list item.\n   * @returns {Object}\n   */\n\n\n  getDataByValue(value) {\n    return super.getDataByValue(value);\n  }\n  /* eslint-enable valid-jsdoc, jsdoc/require-returns-description */\n\n  /**\n   * Allows you to clear the selected values from the component.\n   *\n   * @returns {void}\n   */\n\n\n  clear() {\n    this.value = null;\n  }\n\n};\n\n__decorate$1([Property(null)], DropDownList.prototype, \"cssClass\", void 0);\n\n__decorate$1([Property('100%')], DropDownList.prototype, \"width\", void 0);\n\n__decorate$1([Property('300px')], DropDownList.prototype, \"popupHeight\", void 0);\n\n__decorate$1([Property('100%')], DropDownList.prototype, \"popupWidth\", void 0);\n\n__decorate$1([Property(null)], DropDownList.prototype, \"placeholder\", void 0);\n\n__decorate$1([Property(null)], DropDownList.prototype, \"filterBarPlaceholder\", void 0);\n\n__decorate$1([Property({})], DropDownList.prototype, \"htmlAttributes\", void 0);\n\n__decorate$1([Property(null)], DropDownList.prototype, \"query\", void 0);\n\n__decorate$1([Property(null)], DropDownList.prototype, \"valueTemplate\", void 0);\n\n__decorate$1([Property(null)], DropDownList.prototype, \"headerTemplate\", void 0);\n\n__decorate$1([Property(null)], DropDownList.prototype, \"footerTemplate\", void 0);\n\n__decorate$1([Property(false)], DropDownList.prototype, \"allowFiltering\", void 0);\n\n__decorate$1([Property(false)], DropDownList.prototype, \"readonly\", void 0);\n\n__decorate$1([Property(null)], DropDownList.prototype, \"text\", void 0);\n\n__decorate$1([Property(null)], DropDownList.prototype, \"value\", void 0);\n\n__decorate$1([Property(null)], DropDownList.prototype, \"index\", void 0);\n\n__decorate$1([Property('Never')], DropDownList.prototype, \"floatLabelType\", void 0);\n\n__decorate$1([Property(false)], DropDownList.prototype, \"showClearButton\", void 0);\n\n__decorate$1([Event()], DropDownList.prototype, \"filtering\", void 0);\n\n__decorate$1([Event()], DropDownList.prototype, \"change\", void 0);\n\n__decorate$1([Event()], DropDownList.prototype, \"beforeOpen\", void 0);\n\n__decorate$1([Event()], DropDownList.prototype, \"open\", void 0);\n\n__decorate$1([Event()], DropDownList.prototype, \"close\", void 0);\n\n__decorate$1([Event()], DropDownList.prototype, \"blur\", void 0);\n\n__decorate$1([Event()], DropDownList.prototype, \"focus\", void 0);\n\nDropDownList = __decorate$1([NotifyPropertyChanges], DropDownList);\n/**\n * export all modules from current location\n */\n\nvar __decorate$2 = undefined && undefined.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nconst RTL = 'e-rtl';\nconst DROPDOWNTREE = 'e-ddt';\nconst HIDDENELEMENT = 'e-ddt-hidden';\nconst DROPDOWNICON = 'e-input-group-icon e-ddt-icon e-icons';\nconst SHOW_CHIP = 'e-show-chip';\nconst SHOW_CLEAR = 'e-show-clear';\nconst SHOW_DD_ICON = 'e-show-dd-icon';\nconst CHIP_INPUT = 'e-chip-input';\nconst INPUTFOCUS = 'e-input-focus';\nconst INPUTGROUP = 'e-input-group';\nconst ICONANIMATION = 'e-icon-anim';\nconst CLOSEICON_CLASS = 'e-clear-icon e-icons';\nconst CHIP_WRAPPER = 'e-chips-wrapper';\nconst CHIP_COLLECTION = 'e-chips-collection';\nconst CHIP = 'e-chips';\nconst CHIP_CONTENT = 'e-chipcontent';\nconst CHIP_CLOSE = 'e-chips-close';\nconst HIDEICON = 'e-icon-hide';\nconst DDTHIDEICON = 'e-ddt-icon-hide';\nconst POPUP_CLASS = 'e-ddt e-popup';\nconst PARENTITEM = 'e-list-parent';\nconst CONTENT = 'e-popup-content';\nconst DROPDOWN = 'e-dropdown';\nconst DISABLED = 'e-disabled';\nconst ICONS = 'e-icons';\nconst CHECKALLPARENT = 'e-selectall-parent';\nconst CHECKALLHIDE = 'e-hide-selectall';\nconst BIGGER = 'e-bigger';\nconst SMALL = 'e-small';\nconst ALLTEXT = 'e-all-text';\nconst CHECKBOXFRAME = 'e-frame';\nconst CHECK = 'e-check';\nconst CHECKBOXWRAP = 'e-checkbox-wrapper';\nconst FILTERWRAP = 'e-filter-wrap';\nconst DDTICON = 'e-ddt-icon';\nconst FOOTER = 'e-ddt-footer';\nconst HEADER = 'e-ddt-header';\nconst NODATACONTAINER = 'e-ddt-nodata';\nconst NODATA = 'e-no-data';\nconst HEADERTEMPLATE = 'HeaderTemplate';\nconst FOOTERTEMPLATE = 'FooterTemplate';\nconst NORECORDSTEMPLATE = 'NoRecordsTemplate';\nconst ACTIONFAILURETEMPLATE = 'ActionFailureTemplate';\nconst CUSTOMTEMPLATE = 'CustomTemplate';\nconst REMAIN_WRAPPER = 'e-remain';\nconst OVERFLOW_VIEW = 'e-overflow';\nconst SHOW_TEXT = 'e-show-text';\nconst TOTAL_COUNT_WRAPPER = 'e-total-count';\nconst REMAIN_COUNT = 'e-wrap-count';\n\nclass Fields extends ChildProperty {}\n\n__decorate$2([Property('child')], Fields.prototype, \"child\", void 0);\n\n__decorate$2([Property([])], Fields.prototype, \"dataSource\", void 0);\n\n__decorate$2([Property('expanded')], Fields.prototype, \"expanded\", void 0);\n\n__decorate$2([Property('hasChildren')], Fields.prototype, \"hasChildren\", void 0);\n\n__decorate$2([Property('htmlAttributes')], Fields.prototype, \"htmlAttributes\", void 0);\n\n__decorate$2([Property('iconCss')], Fields.prototype, \"iconCss\", void 0);\n\n__decorate$2([Property('imageUrl')], Fields.prototype, \"imageUrl\", void 0);\n\n__decorate$2([Property('parentValue')], Fields.prototype, \"parentValue\", void 0);\n\n__decorate$2([Property(null)], Fields.prototype, \"query\", void 0);\n\n__decorate$2([Property('selected')], Fields.prototype, \"selected\", void 0);\n\n__decorate$2([Property(null)], Fields.prototype, \"tableName\", void 0);\n\n__decorate$2([Property('text')], Fields.prototype, \"text\", void 0);\n\n__decorate$2([Property('tooltip')], Fields.prototype, \"tooltip\", void 0);\n\n__decorate$2([Property('value')], Fields.prototype, \"value\", void 0);\n\nclass TreeSettings extends ChildProperty {}\n\n__decorate$2([Property(false)], TreeSettings.prototype, \"autoCheck\", void 0);\n\n__decorate$2([Property('Auto')], TreeSettings.prototype, \"expandOn\", void 0);\n\n__decorate$2([Property(false)], TreeSettings.prototype, \"loadOnDemand\", void 0);\n/**\n * The Dropdown Tree control allows you to select single or multiple values from hierarchical data in a tree-like structure.\n * It has several out-of-the-box features, such as data binding, check boxes, templates, filter,\n * UI customization, accessibility, and preselected values.\n * ```html\n *  <input type=\"text\" id=\"tree\"></input>\n * ```\n * ```typescript\n *  let ddtObj: DropDownTree = new DropDownTree();\n *  ddtObj.appendTo(\"#tree\");\n * ```\n */\n\n\nlet DropDownTree = class DropDownTree extends Component {\n  constructor(options, element) {\n    super(options, element);\n    this.filterTimer = null;\n    this.isFilteredData = false;\n    this.isFilterRestore = false; // eslint-disable-next-line\n\n    this.selectedData = [];\n    this.filterDelayTime = 300;\n    this.isClicked = false;\n  }\n  /**\n   * Get the properties to be maintained in the persisted state.\n   *\n   * @returns {string}\n   * @hidden\n   */\n\n\n  getPersistData() {\n    const keyEntity = ['value'];\n    return this.addOnPersist(keyEntity);\n  }\n\n  getLocaleName() {\n    return 'drop-down-tree';\n  }\n  /**\n   * Initialize the event handler.\n   *\n   * @returns {void}\n   * @private\n   */\n\n\n  preRender() {\n    this.inputFocus = false;\n    this.isPopupOpen = false;\n    this.isFirstRender = true;\n    this.isInitialized = false;\n    this.currentText = null;\n    this.currentValue = null;\n    this.oldValue = null;\n    this.removeValue = false;\n    this.selectedText = [];\n    this.treeItems = [];\n    this.dataValue = null;\n    this.isNodeSelected = false;\n    this.isDynamicChange = false;\n    this.clearIconWidth = 0;\n    this.headerTemplateId = `${this.element.id}${HEADERTEMPLATE}`;\n    this.footerTemplateId = `${this.element.id}${FOOTERTEMPLATE}`;\n    this.actionFailureTemplateId = `${this.element.id}${ACTIONFAILURETEMPLATE}`;\n    this.noRecordsTemplateId = `${this.element.id}${NORECORDSTEMPLATE}`;\n    this.customTemplateId = `${this.element.id}${CUSTOMTEMPLATE}`;\n    this.keyConfigs = {\n      escape: 'escape',\n      altUp: 'alt+uparrow',\n      altDown: 'alt+downarrow',\n      tab: 'tab',\n      shiftTab: 'shift+tab',\n      end: 'end',\n      enter: 'enter',\n      home: 'home',\n      moveDown: 'downarrow',\n      moveLeft: 'leftarrow',\n      moveRight: 'rightarrow',\n      moveUp: 'uparrow',\n      ctrlDown: 'ctrl+downarrow',\n      ctrlUp: 'ctrl+uparrow',\n      ctrlEnter: 'ctrl+enter',\n      ctrlHome: 'ctrl+home',\n      ctrlEnd: 'ctrl+end',\n      shiftDown: 'shift+downarrow',\n      shiftUp: 'shift+uparrow',\n      shiftEnter: 'shift+enter',\n      shiftHome: 'shift+home',\n      shiftEnd: 'shift+end',\n      csDown: 'ctrl+shift+downarrow',\n      csUp: 'ctrl+shift+uparrow',\n      csEnter: 'ctrl+shift+enter',\n      csHome: 'ctrl+shift+home',\n      csEnd: 'ctrl+shift+end',\n      space: 'space',\n      ctrlA: 'ctrl+A'\n    };\n  }\n  /**\n   * To Initialize the control rendering\n   *\n   * @private\n   * @returns {void}\n   */\n\n\n  render() {\n    const isTree = select('#' + this.element.id + '_tree', document);\n\n    if (isTree) {\n      const popupDiv = select('#' + this.element.id + '_popup', document);\n      detach(popupDiv ? popupDiv : isTree.parentElement);\n    }\n\n    this.ensureAutoCheck();\n\n    if (this.element.tagName === 'INPUT') {\n      this.inputEle = this.element;\n\n      if (isNullOrUndefined(this.inputEle.getAttribute('role'))) {\n        this.inputEle.setAttribute('role', 'textbox');\n      }\n\n      if (isNullOrUndefined(this.inputEle.getAttribute('type'))) {\n        this.inputEle.setAttribute('type', 'text');\n      }\n    } else {\n      this.inputEle = this.createElement('input', {\n        attrs: {\n          role: 'textbox',\n          type: 'text'\n        }\n      });\n      this.element.parentElement.insertBefore(this.inputEle, this.element);\n    }\n\n    this.inputObj = Input.createInput({\n      element: this.inputEle,\n      floatLabelType: this.floatLabelType,\n      buttons: this.showDropDownIcon ? [DROPDOWNICON] : null,\n      properties: {\n        readonly: true,\n        placeholder: this.placeholder,\n        enabled: this.enabled,\n        cssClass: this.cssClass,\n        enableRtl: this.enableRtl\n      }\n    }, this.createElement);\n    this.inputWrapper = this.inputObj.container;\n\n    if (!this.inputWrapper.classList.contains(INPUTGROUP)) {\n      this.inputWrapper.classList.add(INPUTGROUP);\n    }\n\n    if (this.showDropDownIcon) {\n      this.inputWrapper.classList.add(SHOW_DD_ICON);\n    }\n\n    if (this.element.tagName === this.getDirective()) {\n      this.element.appendChild(this.inputWrapper);\n    }\n\n    this.createHiddenElement();\n    this.createClearIcon();\n    this.inputWrapper.classList.add(DROPDOWNTREE);\n    this.setElementWidth(this.width);\n    this.updateDataAttribute();\n    this.setHTMLAttributes();\n    this.setAttributes();\n    this.popupDiv = this.createElement('div', {\n      className: CONTENT,\n      attrs: {\n        'tabindex': '0'\n      }\n    });\n    this.popupDiv.classList.add(DROPDOWN);\n    this.tree = this.createElement('div', {\n      id: this.element.id + '_tree'\n    });\n    this.popupDiv.appendChild(this.tree);\n    document.body.appendChild(this.popupDiv);\n    this.wireTreeEvents();\n    addClass([this.popupDiv], DDTHIDEICON);\n    this.renderTree();\n    this.isRemoteData = this.fields.dataSource instanceof DataManager;\n\n    if (this.allowMultiSelection || this.showCheckBox) {\n      if (this.mode !== 'Delimiter') {\n        this.createChip();\n      }\n\n      if (!this.wrapText && this.mode !== 'Custom') {\n        this.overFlowWrapper = this.createElement('span', {\n          className: OVERFLOW_VIEW + ' ' + HIDEICON\n        });\n        this.inputWrapper.insertBefore(this.overFlowWrapper, this.hiddenElement);\n\n        if (this.mode !== 'Box') {\n          addClass([this.overFlowWrapper], SHOW_TEXT);\n        }\n      }\n    }\n\n    if (!this.isRemoteData) {\n      this.setTreeValue();\n      this.setTreeText();\n      this.updateHiddenValue();\n      this.setSelectedValue();\n\n      if (!this.wrapText) {\n        this.updateView();\n      }\n    }\n\n    this.wireEvents();\n    const firstUl = select('.' + PARENTITEM, this.treeObj.element);\n\n    if (firstUl && firstUl.getAttribute('aria-multiselectable')) {\n      firstUl.removeAttribute('aria-multiselectable');\n    }\n\n    this.oldValue = this.value;\n    this.isInitialized = true;\n    this.hasTemplate = this.itemTemplate || this.headerTemplate || this.footerTemplate || this.actionFailureTemplate || this.noRecordsTemplate || this.customTemplate;\n    this.renderComplete();\n  }\n\n  ensureAutoCheck() {\n    if (this.allowFiltering && this.treeSettings.autoCheck) {\n      this.setProperties({\n        treeSettings: {\n          autoCheck: false\n        }\n      }, true);\n    }\n  }\n\n  hideCheckAll(flag) {\n    const checkAllEle = !isNullOrUndefined(this.popupEle) ? this.popupEle.querySelector('.' + CHECKALLPARENT) : null;\n\n    if (!isNullOrUndefined(checkAllEle)) {\n      if (flag && !checkAllEle.classList.contains(CHECKALLHIDE)) {\n        addClass([checkAllEle], CHECKALLHIDE);\n      } else if (!flag && checkAllEle.classList.contains(CHECKALLHIDE)) {\n        removeClass([checkAllEle], CHECKALLHIDE);\n      }\n    }\n  }\n\n  renderFilter() {\n    this.filterContainer = this.createElement('div', {\n      id: this.element.id + '_filter_wrap',\n      className: FILTERWRAP\n    });\n    const filterInput = this.createElement('input', {\n      id: this.element.id + '_filter',\n      attrs: {\n        autocomplete: 'off',\n        'aria-label': this.filterBarPlaceholder\n      }\n    });\n    this.filterContainer.appendChild(filterInput);\n    prepend([this.filterContainer], this.popupEle);\n    this.filterObj = new TextBox({\n      value: '',\n      showClearButton: true,\n      placeholder: this.filterBarPlaceholder,\n      input: this.filterChangeHandler.bind(this)\n    });\n    this.filterObj.appendTo('#' + this.element.id + '_filter');\n  }\n\n  filterChangeHandler(args) {\n    if (!isNullOrUndefined(args.value)) {\n      window.clearTimeout(this.filterTimer);\n      this.filterTimer = window.setTimeout(() => {\n        this.filterHandler(args.value, args.event);\n      }, this.filterDelayTime);\n    }\n  }\n\n  filterHandler(value, event) {\n    if (!this.isFilteredData) {\n      this.treeData = this.treeObj.getTreeData();\n    }\n\n    const filterFields = this.cloneFields(this.fields);\n    const args = {\n      cancel: false,\n      preventDefaultAction: false,\n      event: event,\n      text: value,\n      fields: filterFields\n    };\n    this.trigger('filtering', args, args => {\n      if (!args.cancel) {\n        let flag = false;\n        let fields;\n        this.isFilteredData = true;\n\n        if (value === '') {\n          this.isFilteredData = false;\n          this.isFilterRestore = true;\n          fields = this.cloneFields(this.fields);\n        } else if (args.preventDefaultAction) {\n          fields = args.fields;\n        } else {\n          if (this.treeDataType === 1) {\n            fields = this.selfReferencefilter(value, args.fields);\n          } else {\n            if (this.fields.dataSource instanceof DataManager) {\n              flag = true;\n            } else {\n              fields = this.nestedFilter(value, args.fields);\n            }\n          }\n        }\n\n        this.hideCheckAll(this.isFilteredData);\n\n        if (flag) {\n          return;\n        }\n\n        this.treeObj.fields = this.getTreeFields(fields);\n        this.treeObj.dataBind();\n      }\n    });\n  }\n\n  nestedFilter(value, filteredFields) {\n    // eslint-disable-next-line\n    const matchedDataSource = [];\n\n    for (let i = 0; i < this.treeData.length; i++) {\n      // eslint-disable-next-line\n      const filteredChild = this.nestedChildFilter(value, this.treeData[i]);\n\n      if (!isNullOrUndefined(filteredChild)) {\n        matchedDataSource.push(filteredChild);\n      }\n    }\n\n    filteredFields.dataSource = matchedDataSource;\n    return filteredFields;\n  } // eslint-disable-next-line\n\n\n  nestedChildFilter(value, node) {\n    // eslint-disable-next-line\n    const children = node[this.fields.child];\n\n    if (isNullOrUndefined(children)) {\n      return this.isMatchedNode(value, node) ? node : null;\n    } else {\n      // eslint-disable-next-line\n      const matchedChildren = [];\n\n      for (let i = 0; i < children.length; i++) {\n        // eslint-disable-next-line\n        const filteredChild = this.nestedChildFilter(value, children[i]);\n\n        if (!isNullOrUndefined(filteredChild)) {\n          matchedChildren.push(filteredChild);\n        }\n      }\n\n      let filteredItems = Object.assign({}, node);\n\n      if (matchedChildren.length !== 0) {\n        filteredItems[this.fields.child] = matchedChildren;\n        return filteredItems;\n      } else {\n        filteredItems[this.fields.child] = null;\n        return this.isMatchedNode(value, filteredItems) ? filteredItems : null;\n      }\n    }\n  }\n\n  selfReferencefilter(value, filteredFields) {\n    // eslint-disable-next-line\n    const matchedData = []; // eslint-disable-next-line\n\n    const matchedDataSource = [];\n\n    for (let i = 0; i < this.treeData.length; i++) {\n      if (this.isMatchedNode(value, this.treeData[i])) {\n        matchedData.push(this.treeData[i]);\n      }\n    }\n\n    for (let i = 0; i < matchedData.length; i++) {\n      if (matchedDataSource.indexOf(matchedData[i]) === -1) {\n        matchedDataSource.push(matchedData[i]); // eslint-disable-next-line\n\n        let parentId = matchedData[i][this.fields.parentValue];\n\n        while (!isNullOrUndefined(parentId)) {\n          // eslint-disable-next-line\n          let parent = null;\n\n          for (let j = 0; j < this.treeData.length; j++) {\n            // eslint-disable-next-line\n            const value = this.treeData[j][this.fields.value];\n\n            if (!isNullOrUndefined(value) && value === parentId) {\n              parent = this.treeData[j];\n              break;\n            }\n          }\n\n          if (!isNullOrUndefined(parent) && matchedDataSource.indexOf(parent) === -1) {\n            matchedDataSource.push(parent);\n            parentId = parent[this.fields.parentValue];\n          } else {\n            break;\n          }\n        }\n      }\n    }\n\n    filteredFields.dataSource = matchedDataSource;\n    return filteredFields;\n  } // eslint-disable-next-line\n\n\n  isMatchedNode(value, node) {\n    let checkValue = node[this.fields.text];\n\n    if (this.ignoreCase) {\n      checkValue = checkValue.toLowerCase();\n      value = value.toLowerCase();\n    }\n\n    if (this.ignoreAccent) {\n      checkValue = DataUtil.ignoreDiacritics(checkValue);\n      value = DataUtil.ignoreDiacritics(value);\n    }\n\n    if (this.filterType === 'StartsWith') {\n      return checkValue.slice(0, value.length) === value;\n    } else if (this.filterType === 'EndsWith') {\n      return checkValue.slice(-value.length) === value;\n    } else {\n      return checkValue.indexOf(value) !== -1;\n    }\n  }\n  /* To wire events for the dropdown tree */\n\n\n  wireEvents() {\n    EventHandler.add(this.inputWrapper, 'mouseup', this.dropDownClick, this);\n    EventHandler.add(this.inputWrapper, 'focus', this.focusIn, this);\n    EventHandler.add(this.inputWrapper, 'blur', this.focusOut, this);\n    EventHandler.add(this.inputWrapper, 'mousemove', this.mouseIn, this);\n    EventHandler.add(this.inputWrapper, 'mouseout', this.onMouseLeave, this);\n    EventHandler.add(this.overAllClear, 'mousedown', this.clearAll, this);\n    EventHandler.add(window, 'resize', this.windowResize, this);\n    const formElement = closest(this.inputWrapper, 'form');\n\n    if (formElement) {\n      EventHandler.add(formElement, 'reset', this.resetValueHandler, this);\n    }\n\n    this.keyboardModule = new KeyboardEvents(this.inputWrapper, {\n      keyAction: this.keyActionHandler.bind(this),\n      keyConfigs: this.keyConfigs,\n      eventName: 'keydown'\n    });\n  }\n\n  wireTreeEvents() {\n    this.keyboardModule = new KeyboardEvents(this.tree, {\n      keyAction: this.treeAction.bind(this),\n      keyConfigs: this.keyConfigs,\n      eventName: 'keydown'\n    });\n  }\n\n  wireCheckAllWrapperEvents() {\n    this.keyboardModule = new KeyboardEvents(this.checkAllParent, {\n      keyAction: this.checkAllAction.bind(this),\n      keyConfigs: this.keyConfigs,\n      eventName: 'keydown'\n    });\n  }\n  /* To unwire events for the dropdown tree */\n\n\n  unWireEvents() {\n    EventHandler.remove(this.inputWrapper, 'mouseup', this.dropDownClick);\n    EventHandler.remove(this.inputWrapper, 'focus', this.focusIn);\n    EventHandler.remove(this.inputWrapper, 'blur', this.focusOut);\n    EventHandler.remove(this.inputWrapper, 'mousemove', this.mouseIn);\n    EventHandler.remove(this.inputWrapper, 'mouseout', this.onMouseLeave);\n    EventHandler.remove(this.overAllClear, 'mousedown', this.clearAll);\n    EventHandler.remove(window, 'resize', this.windowResize);\n    const formElement = closest(this.inputWrapper, 'form');\n\n    if (formElement) {\n      EventHandler.remove(formElement, 'reset', this.resetValueHandler);\n    }\n  }\n  /* Trigger when the dropdown is clicked */\n\n\n  dropDownClick(e) {\n    if (!this.enabled || this.readonly) {\n      return;\n    }\n\n    if (this.isClearButtonClick) {\n      this.isClearButtonClick = false;\n      return;\n    }\n\n    if (this.isPopupOpen) {\n      this.hidePopup();\n    } else {\n      this.focusIn(e);\n      this.renderPopup();\n    }\n\n    this.showOverAllClear();\n  }\n\n  mouseIn() {\n    if (this.enabled || !this.readonly) {\n      this.showOverAllClear();\n    }\n  }\n\n  onMouseLeave() {\n    if (!this.inputFocus) {\n      addClass([this.overAllClear], HIDEICON);\n      removeClass([this.inputWrapper], SHOW_CLEAR);\n    }\n  }\n\n  getDirective() {\n    return 'EJS-DROPDOWNTREE';\n  }\n\n  focusOut(e) {\n    if (!this.enabled || this.readonly || !this.inputFocus) {\n      return;\n    }\n\n    if ((Browser.isIE || Browser.info.name === 'edge') && e.target === this.inputWrapper) {\n      return;\n    }\n\n    const target = e.relatedTarget;\n\n    if (target !== this.inputEle && isNullOrUndefined(target) && (e.target !== this.inputWrapper || !this.isPopupOpen)) {\n      this.onFocusOut(e);\n    }\n  }\n\n  onFocusOut(event) {\n    this.inputFocus = false;\n\n    if (this.isPopupOpen) {\n      this.hidePopup();\n    }\n\n    if (this.isClearButtonClick) {\n      this.isClearButtonClick = false;\n    }\n\n    if (this.showClearButton) {\n      this.clearIconWidth = select('.e-clear-icon', this.inputWrapper).offsetWidth;\n      addClass([this.overAllClear], HIDEICON);\n      removeClass([this.inputWrapper], SHOW_CLEAR);\n    }\n\n    removeClass([this.inputWrapper], [INPUTFOCUS]);\n\n    if (this.allowMultiSelection || this.showCheckBox) {\n      const isValue = this.value ? this.value.length ? true : false : false;\n\n      if (this.mode !== 'Delimiter' && this.mode !== 'Custom') {\n        if (this.chipWrapper && this.mode === 'Default') {\n          addClass([this.chipWrapper], HIDEICON);\n          removeClass([this.inputWrapper], SHOW_CHIP);\n          removeClass([this.inputEle], CHIP_INPUT);\n        }\n      }\n\n      if (!this.wrapText && isValue) {\n        this.updateView();\n      }\n    }\n\n    if (this.changeOnBlur) {\n      this.triggerChangeEvent(event);\n    }\n\n    this.removeValue = false;\n    this.oldValue = this.value;\n    this.trigger('blur');\n  }\n\n  updateView() {\n    if (!this.showCheckBox && !this.allowMultiSelection || this.mode === 'Custom' || this.inputFocus) {\n      return;\n    }\n\n    if (this.mode !== 'Box') {\n      addClass([this.inputWrapper, this.overFlowWrapper], SHOW_TEXT);\n    } else {\n      addClass([this.inputWrapper], SHOW_CHIP);\n    }\n\n    if (this.value && this.value.length !== 0) {\n      if (this.inputWrapper.contains(this.chipWrapper)) {\n        addClass([this.chipWrapper], HIDEICON);\n      }\n\n      addClass([this.inputEle], CHIP_INPUT);\n      this.updateOverFlowView();\n      this.ensurePlaceHolder();\n    }\n  }\n\n  triggerChangeEvent(event) {\n    const isEqual = this.ddtCompareValues(this.oldValue, this.value);\n\n    if ((!isEqual || this.isChipDelete) && !this.removeValue) {\n      const eventArgs = {\n        e: event,\n        oldValue: this.oldValue,\n        value: this.value,\n        isInteracted: event ? true : false,\n        element: this.element\n      };\n      this.trigger('change', eventArgs);\n      this.oldValue = this.value;\n    }\n  }\n\n  ddtCompareValues(oldValue, newValue) {\n    if (oldValue === null || newValue === null) {\n      const isValid = oldValue === null ? newValue === oldValue ? true : false : oldValue.length === 0 ? newValue === oldValue : false;\n      return isValid;\n    } else if (oldValue.length !== newValue.length) {\n      return false;\n    }\n\n    for (let i = 0; i < oldValue.length; i++) {\n      if (oldValue[i] !== newValue[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  focusIn(e) {\n    if (!this.enabled || this.readonly || this.inputFocus) {\n      return;\n    }\n\n    this.showOverAllClear();\n    this.inputFocus = true;\n    addClass([this.inputWrapper], [INPUTFOCUS]);\n\n    if (this.allowMultiSelection || this.showCheckBox) {\n      if (this.mode !== 'Delimiter' && this.inputFocus) {\n        if (this.chipWrapper && this.value && this.value.length !== 0) {\n          removeClass([this.chipWrapper], HIDEICON);\n          addClass([this.inputEle], CHIP_INPUT);\n        }\n\n        addClass([this.inputWrapper], SHOW_CHIP);\n\n        if (this.popupObj) {\n          this.popupObj.refreshPosition();\n        }\n      }\n\n      if (!this.wrapText && this.mode !== 'Custom') {\n        if (this.inputWrapper.contains(this.overFlowWrapper)) {\n          addClass([this.overFlowWrapper], HIDEICON);\n        }\n\n        if (this.mode === 'Delimiter') {\n          removeClass([this.inputWrapper], SHOW_CHIP);\n          removeClass([this.inputEle], CHIP_INPUT);\n        } else {\n          addClass([this.inputWrapper], SHOW_CHIP);\n        }\n\n        removeClass([this.inputWrapper], SHOW_TEXT);\n        this.ensurePlaceHolder();\n      }\n    }\n\n    const args = {\n      isInteracted: e ? true : false,\n      event: e\n    };\n    this.trigger('focus', args);\n  }\n\n  treeAction(e) {\n    const eventArgs = {\n      cancel: false,\n      event: e\n    };\n    this.trigger('keyPress', eventArgs, observedArgs => {\n      if (!observedArgs.cancel) {\n        switch (e.action) {\n          case 'escape':\n          case 'altUp':\n            this.inputWrapper.focus();\n            e.preventDefault();\n\n            if (this.isPopupOpen) {\n              this.hidePopup();\n            }\n\n            break;\n\n          case 'tab':\n          case 'shiftTab':\n            if (this.isPopupOpen) {\n              this.hidePopup();\n            }\n\n            break;\n\n          case 'enter':\n          case 'ctrlEnter':\n          case 'shiftEnter':\n          case 'csEnter':\n            if (!this.showCheckBox) {\n              this.isValueChange = true;\n              this.keyEventArgs = e;\n            }\n\n            break;\n\n          case 'space':\n            this.isValueChange = true;\n            this.keyEventArgs = e;\n            break;\n\n          case 'ctrlA':\n            if (this.allowMultiSelection) {\n              this.selectAll(true);\n            }\n\n            break;\n\n          case 'moveRight':\n          case 'moveLeft':\n          case 'shiftDown':\n          case 'moveDown':\n          case 'ctrlDown':\n          case 'csDown':\n          case 'shiftUp':\n          case 'moveUp':\n          case 'ctrlUp':\n          case 'csUp':\n          case 'home':\n          case 'shiftHome':\n          case 'ctrlHome':\n          case 'csHome':\n          case 'end':\n          case 'shiftEnd':\n          case 'ctrlEnd':\n          case 'csEnd':\n        }\n      } else {\n        e.stopImmediatePropagation();\n      }\n    });\n  }\n\n  keyActionHandler(e) {\n    const eventArgs = {\n      cancel: false,\n      event: e\n    };\n    this.trigger('keyPress', eventArgs, observedArgs => {\n      if (!observedArgs.cancel) {\n        switch (e.action) {\n          case 'escape':\n          case 'altUp':\n            if (this.isPopupOpen) {\n              this.hidePopup();\n            }\n\n            break;\n\n          case 'shiftTab':\n          case 'tab':\n            if (this.isPopupOpen) {\n              this.hidePopup();\n            }\n\n            if (this.inputFocus) {\n              this.onFocusOut();\n            }\n\n            break;\n\n          case 'altDown':\n            if (!this.isPopupOpen) {\n              this.showPopup();\n              e.preventDefault();\n            }\n\n            break;\n\n          case 'moveDown':\n            if (this.showSelectAll && this.showCheckBox) {\n              this.checkAllParent.focus();\n            }\n\n            break;\n        }\n      }\n    });\n  }\n\n  checkAllAction(e) {\n    const eventArgs = {\n      cancel: false,\n      event: e\n    };\n    this.trigger('keyPress', eventArgs, observedArgs => {\n      if (!observedArgs.cancel) {\n        switch (e.action) {\n          case 'space':\n            this.clickHandler(e);\n            break;\n\n          case 'moveDown':\n            this.treeObj.element.focus();\n        }\n      }\n    });\n  }\n\n  windowResize() {\n    if (this.popupObj) {\n      this.popupObj.setProperties({\n        width: this.setWidth()\n      });\n      this.popupObj.refreshPosition();\n    }\n  }\n\n  resetValueHandler(e) {\n    const formElement = closest(this.inputWrapper, 'form');\n\n    if (formElement && e.target === formElement) {\n      this.isDynamicChange = true;\n      this.setProperties({\n        value: null\n      }, true);\n      this.resetValue(true);\n      this.isDynamicChange = false;\n    }\n  }\n\n  getAriaAttributes() {\n    const disable = this.enabled ? 'false' : 'true';\n    return {\n      'aria-disabled': disable,\n      'aria-owns': this.element.id + '_options',\n      'role': 'listbox',\n      'aria-haspopup': 'true',\n      'aria-expanded': 'false',\n      'aria-activedescendant': 'null',\n      'aria-labelledby': this.hiddenElement.id\n    };\n  }\n\n  updateOverFlowView() {\n    this.overFlowWrapper.classList.remove(TOTAL_COUNT_WRAPPER);\n    removeClass([this.overFlowWrapper], HIDEICON);\n\n    if (this.value && this.value.length) {\n      let data = '';\n      let overAllContainer;\n      let temp;\n      let tempData;\n      let tempIndex = 1;\n      let wrapperleng;\n      let remaining;\n      let downIconWidth = 0;\n      this.overFlowWrapper.innerHTML = ''; // eslint-disable-next-line\n\n      const l10nLocale = {\n        overflowCountTemplate: '+${count} more..',\n        totalCountTemplate: '${count} selected'\n      };\n      this.l10n = new L10n(this.getLocaleName(), l10nLocale, this.locale);\n      const remainContent = this.l10n.getConstant('overflowCountTemplate');\n      const totalContent = this.l10n.getConstant('totalCountTemplate');\n      const remainElement = this.createElement('span', {\n        className: REMAIN_WRAPPER\n      });\n      this.overFlowWrapper.appendChild(remainElement);\n      remainElement.innerText = remainContent.replace('${count}', this.value.length.toString());\n      const remainSize = remainElement.offsetWidth;\n      remove(remainElement);\n\n      if (this.showDropDownIcon) {\n        downIconWidth = select('.' + DDTICON, this.inputWrapper).offsetWidth;\n      }\n\n      if (!isNullOrUndefined(this.value)) {\n        if (this.mode !== 'Box') {\n          for (let index = 0; !isNullOrUndefined(this.value[index]); index++) {\n            data += index === 0 ? '' : this.delimiterChar + ' ';\n            temp = this.getOverflowVal(index);\n            data += temp;\n            temp = this.overFlowWrapper.innerHTML;\n            this.overFlowWrapper.innerHTML = data;\n            wrapperleng = this.overFlowWrapper.offsetWidth;\n            overAllContainer = this.inputWrapper.offsetWidth;\n\n            if (wrapperleng + downIconWidth + this.clearIconWidth > overAllContainer) {\n              if (tempData !== undefined && tempData !== '') {\n                temp = tempData;\n                index = tempIndex + 1;\n              }\n\n              this.overFlowWrapper.innerHTML = temp;\n              remaining = this.value.length - index;\n              wrapperleng = this.overFlowWrapper.offsetWidth;\n\n              while (wrapperleng + remainSize + downIconWidth + this.clearIconWidth >= overAllContainer && wrapperleng !== 0 && this.overFlowWrapper.innerHTML !== '') {\n                const textArr = this.overFlowWrapper.innerHTML.split(this.delimiterChar);\n                textArr.pop();\n                this.overFlowWrapper.innerHTML = textArr.join(this.delimiterChar);\n                remaining++;\n                wrapperleng = this.overFlowWrapper.offsetWidth;\n              }\n\n              break;\n            } else if (wrapperleng + remainSize + downIconWidth + this.clearIconWidth <= overAllContainer) {\n              tempData = data;\n              tempIndex = index;\n            } else if (index === 0) {\n              tempData = '';\n              tempIndex = -1;\n            }\n          }\n        } else {\n          addClass([this.chipWrapper], HIDEICON);\n          const ele = this.chipWrapper.cloneNode(true);\n          const chips = selectAll('.' + CHIP, ele);\n\n          for (let i = 0; i < chips.length; i++) {\n            temp = this.overFlowWrapper.innerHTML;\n            this.overFlowWrapper.appendChild(chips[i]);\n            data = this.overFlowWrapper.innerHTML;\n            wrapperleng = this.overFlowWrapper.offsetWidth;\n            overAllContainer = this.inputWrapper.offsetWidth;\n\n            if (wrapperleng + downIconWidth + this.clearIconWidth > overAllContainer) {\n              if (tempData !== undefined && tempData !== '') {\n                temp = tempData;\n                i = tempIndex + 1;\n              }\n\n              this.overFlowWrapper.innerHTML = temp;\n              remaining = this.value.length - i;\n              wrapperleng = this.overFlowWrapper.offsetWidth;\n\n              while (wrapperleng + remainSize + downIconWidth + this.clearIconWidth >= overAllContainer && wrapperleng !== 0 && this.overFlowWrapper.innerHTML !== '') {\n                this.overFlowWrapper.removeChild(this.overFlowWrapper.lastChild);\n                remaining++;\n                wrapperleng = this.overFlowWrapper.offsetWidth;\n              }\n\n              break;\n            } else if (wrapperleng + remainSize + downIconWidth + this.clearIconWidth <= overAllContainer) {\n              tempData = data;\n              tempIndex = i;\n            } else if (i === 0) {\n              tempData = '';\n              tempIndex = -1;\n            }\n          }\n        }\n      }\n\n      if (remaining > 0) {\n        this.overFlowWrapper.appendChild(this.updateRemainTemplate(remainElement, remaining, remainContent, totalContent));\n      }\n\n      if (this.mode === 'Box' && !this.overFlowWrapper.classList.contains(TOTAL_COUNT_WRAPPER)) {\n        addClass([remainElement], REMAIN_COUNT);\n      }\n    } else {\n      this.overFlowWrapper.innerHTML = '';\n      addClass([this.overFlowWrapper], HIDEICON);\n    }\n\n    this.updateDelimMode();\n  }\n\n  updateRemainTemplate(remainElement, remaining, remainContent, totalContent) {\n    if (this.overFlowWrapper.firstChild && this.overFlowWrapper.firstChild.nodeType === 3 && this.overFlowWrapper.firstChild.nodeValue === '') {\n      this.overFlowWrapper.removeChild(this.overFlowWrapper.firstChild);\n    }\n\n    remainElement.innerHTML = '';\n    remainElement.innerText = this.overFlowWrapper.firstChild && (this.overFlowWrapper.firstChild.nodeType === 3 || this.mode === 'Box') ? remainContent.replace('${count}', remaining.toString()) : totalContent.replace('${count}', remaining.toString());\n\n    if (this.overFlowWrapper.firstChild && (this.overFlowWrapper.firstChild.nodeType === 3 || this.mode === 'Box')) {\n      removeClass([this.overFlowWrapper], TOTAL_COUNT_WRAPPER);\n    } else {\n      addClass([this.overFlowWrapper], TOTAL_COUNT_WRAPPER);\n      removeClass([this.overFlowWrapper], REMAIN_COUNT);\n    }\n\n    return remainElement;\n  }\n\n  getOverflowVal(index) {\n    // eslint-disable-next-line\n    const selectedData = this.getSelectedData(this.value[index]);\n    return getValue(this.treeSettings.loadOnDemand ? this.fields.text : 'text', selectedData);\n  }\n\n  updateDelimMode() {\n    if (this.mode !== 'Box') {\n      if (select('.' + REMAIN_WRAPPER, this.overFlowWrapper) && !this.overFlowWrapper.classList.contains(TOTAL_COUNT_WRAPPER)) {\n        addClass([this.overFlowWrapper], REMAIN_COUNT);\n        addClass([this.overFlowWrapper], SHOW_TEXT);\n      } else {\n        this.overFlowWrapper.classList.remove(REMAIN_COUNT);\n        removeClass([this.overFlowWrapper], REMAIN_COUNT);\n      }\n    } else if (select('.' + REMAIN_WRAPPER, this.overFlowWrapper)) {\n      this.overFlowWrapper.classList.remove(REMAIN_COUNT);\n    }\n  }\n\n  createHiddenElement() {\n    if (this.allowMultiSelection || this.showCheckBox) {\n      this.hiddenElement = this.createElement('select', {\n        attrs: {\n          'aria-hidden': 'true',\n          'class': HIDDENELEMENT,\n          'tabindex': '-1',\n          'multiple': ''\n        }\n      });\n    } else {\n      this.hiddenElement = this.createElement('select', {\n        attrs: {\n          'aria-hidden': 'true',\n          'tabindex': '-1',\n          'class': HIDDENELEMENT\n        }\n      });\n    }\n\n    prepend([this.hiddenElement], this.inputWrapper);\n    this.validationAttribute();\n  }\n\n  createClearIcon() {\n    this.overAllClear = this.createElement('span', {\n      className: CLOSEICON_CLASS\n    });\n    addClass([this.overAllClear], HIDEICON);\n    removeClass([this.inputWrapper], SHOW_CLEAR);\n\n    if (this.showClearButton) {\n      this.inputWrapper.insertBefore(this.overAllClear, this.inputObj.buttons[0]);\n    }\n  }\n\n  validationAttribute() {\n    const name = this.inputEle.getAttribute('name') ? this.inputEle.getAttribute('name') : this.inputEle.getAttribute('id');\n    this.hiddenElement.setAttribute('name', name);\n    this.inputEle.removeAttribute('name');\n    const attributes$$1 = ['required', 'aria-required', 'form'];\n\n    for (let i = 0; i < attributes$$1.length; i++) {\n      const attr = this.inputEle.getAttribute(attributes$$1[i]);\n\n      if (attr) {\n        this.hiddenElement.setAttribute(attributes$$1[i], attr);\n        this.inputEle.removeAttribute(attributes$$1[i]);\n      }\n    }\n  }\n\n  createChip() {\n    if (!this.inputWrapper.contains(this.chipWrapper)) {\n      this.chipWrapper = this.createElement('span', {\n        className: CHIP_WRAPPER\n      });\n      this.chipCollection = this.createElement('span', {\n        className: CHIP_COLLECTION\n      });\n      this.chipWrapper.appendChild(this.chipCollection);\n      this.inputWrapper.insertBefore(this.chipWrapper, this.hiddenElement);\n      addClass([this.inputWrapper], SHOW_CHIP);\n      const isValid = this.getValidMode();\n\n      if (isValid && this.value !== null && this.value && this.value.length !== 0) {\n        addClass([this.inputEle], CHIP_INPUT);\n      } else if (this.value === null || this.value && this.value.length === 0) {\n        addClass([this.chipWrapper], HIDEICON);\n      }\n    }\n  }\n\n  getValidMode() {\n    if (this.allowMultiSelection || this.showCheckBox) {\n      return this.mode === 'Box' ? true : this.mode === 'Default' && this.inputFocus ? true : false;\n    } else {\n      return false;\n    }\n  }\n\n  createSelectAllWrapper() {\n    this.checkAllParent = this.createElement('div', {\n      className: CHECKALLPARENT,\n      attrs: {\n        'tabindex': '0'\n      }\n    });\n    this.selectAllSpan = this.createElement('span', {\n      className: ALLTEXT\n    });\n    this.selectAllSpan.textContent = '';\n    const ele = closest(this.element, '.' + BIGGER);\n    const touchClass = isNullOrUndefined(ele) ? '' : SMALL;\n    this.checkBoxElement = createCheckBox(this.createElement, true, {\n      cssClass: touchClass\n    });\n    this.checkBoxElement.setAttribute('role', 'checkbox');\n    this.checkAllParent.appendChild(this.checkBoxElement);\n    this.checkAllParent.appendChild(this.selectAllSpan);\n    this.setLocale();\n    EventHandler.add(this.checkAllParent, 'mouseup', this.clickHandler, this);\n    this.wireCheckAllWrapperEvents();\n  }\n\n  clickHandler(e) {\n    let target;\n\n    if (e.currentTarget && e.currentTarget.classList.contains(CHECKALLPARENT)) {\n      target = e.currentTarget.firstElementChild.lastElementChild;\n    } else {\n      target = e.target;\n    }\n\n    this.checkWrapper = closest(target, '.' + CHECKBOXWRAP);\n\n    if (!isNullOrUndefined(this.checkWrapper)) {\n      this.isClicked = true;\n      const checkElement = select('.' + CHECKBOXFRAME, this.checkWrapper);\n      this.changeState(this.checkWrapper, checkElement.classList.contains(CHECK) ? 'uncheck' : 'check', e);\n      this.isClicked = false;\n    }\n\n    e.preventDefault();\n  }\n\n  changeState(wrapper, state, e) {\n    let ariaState;\n    const frameSpan = wrapper.getElementsByClassName(CHECKBOXFRAME)[0];\n\n    if (state === 'check' && !frameSpan.classList.contains(CHECK)) {\n      frameSpan.classList.add(CHECK);\n      ariaState = 'true';\n\n      if (!this.isReverseUpdate) {\n        this.treeObj.checkAll();\n\n        if (!this.changeOnBlur) {\n          this.triggerChangeEvent(e);\n        }\n      }\n\n      this.setLocale(true);\n    } else if (state === 'uncheck' && frameSpan.classList.contains(CHECK)) {\n      frameSpan.classList.remove(CHECK);\n      ariaState = 'false';\n\n      if (!this.isReverseUpdate) {\n        this.treeObj.uncheckAll();\n\n        if (!this.changeOnBlur) {\n          this.triggerChangeEvent(e);\n        }\n      }\n\n      this.setLocale(false);\n    }\n\n    this.setMultiSelect();\n    this.ensurePlaceHolder();\n    ariaState = state === 'check' ? 'true' : 'false';\n\n    if (!isNullOrUndefined(ariaState)) {\n      wrapper.setAttribute('aria-checked', ariaState);\n    }\n  }\n\n  setLocale(unSelect) {\n    if (!this.selectAllSpan) {\n      return;\n    }\n\n    if (this.selectAllText !== 'Select All' || this.unSelectAllText !== 'Unselect All') {\n      const template = unSelect ? this.unSelectAllText : this.selectAllText;\n      this.selectAllSpan.textContent = ''; // eslint-disable-next-line\n\n      const compiledString = compile(template);\n      const templateName = unSelect ? 'unSelectAllText' : 'selectAllText';\n\n      for (const item of compiledString({}, this, templateName, null, !this.isStringTemplate)) {\n        this.selectAllSpan.textContent = item.textContent;\n      }\n    } else {\n      this.selectAllSpan.textContent = unSelect ? this.unSelectAllText : this.selectAllText;\n    }\n  }\n\n  setAttributes() {\n    this.inputEle.setAttribute('tabindex', '-1');\n    const id = this.element.getAttribute('id');\n    this.hiddenElement.id = id + '_hidden';\n    this.inputWrapper.setAttribute('tabindex', '0');\n    attributes(this.inputWrapper, this.getAriaAttributes());\n  }\n\n  setHTMLAttributes() {\n    if (Object.keys(this.htmlAttributes).length) {\n      for (const htmlAttr of Object.keys(this.htmlAttributes)) {\n        if (htmlAttr === 'class') {\n          this.inputWrapper.classList.add(this.htmlAttributes[htmlAttr]);\n        } else if (htmlAttr === 'disabled' && this.htmlAttributes[htmlAttr] === 'disabled') {\n          this.setProperties({\n            enabled: false\n          }, true);\n          this.setEnable();\n        } else if (htmlAttr === 'readonly' && !isNullOrUndefined(this.htmlAttributes[htmlAttr])) {\n          this.setProperties({\n            readonly: true\n          }, true);\n          this.dataBind();\n        } else if (htmlAttr === 'style') {\n          this.inputWrapper.setAttribute('style', this.htmlAttributes[htmlAttr]);\n        } else {\n          const defaultAttr = ['title', 'id', 'placeholder', 'aria-placeholder', 'role', 'autocorrect', 'autocomplete', 'autocapitalize', 'spellcheck', 'minlength', 'maxlength'];\n          const validateAttr = ['name', 'required'];\n\n          if (htmlAttr.indexOf('data') === 0 || validateAttr.indexOf(htmlAttr) > -1) {\n            this.hiddenElement.setAttribute(htmlAttr, this.htmlAttributes[htmlAttr]);\n          } else if (defaultAttr.indexOf(htmlAttr) > -1) {\n            if (htmlAttr === 'placeholder') {\n              Input.setPlaceholder(this.htmlAttributes[htmlAttr], this.inputEle);\n            } else {\n              this.inputEle.setAttribute(htmlAttr, this.htmlAttributes[htmlAttr]);\n            }\n          } else {\n            this.inputWrapper.setAttribute(htmlAttr, this.htmlAttributes[htmlAttr]);\n          }\n        }\n      }\n    }\n  }\n\n  updateDataAttribute() {\n    const value = this.htmlAttributes;\n    const invalidAttr = ['class', 'style', 'id', 'type'];\n    const attr = {};\n\n    for (let a = 0; a < this.element.attributes.length; a++) {\n      if (invalidAttr.indexOf(this.element.attributes[a].name) === -1 && !(this.element.attributes[a].name === 'readonly')) {\n        attr[this.element.attributes[a].name] = this.element.getAttribute(this.element.attributes[a].name);\n      }\n    }\n\n    extend(attr, value, attr);\n    this.setProperties({\n      htmlAttributes: attr\n    }, true);\n  }\n\n  showOverAllClear() {\n    if (!this.enabled || this.readonly) {\n      return;\n    }\n\n    if (this.overAllClear) {\n      const isValue = this.value ? this.value.length ? true : false : false;\n\n      if (isValue && this.showClearButton) {\n        removeClass([this.overAllClear], HIDEICON);\n        addClass([this.inputWrapper], SHOW_CLEAR);\n      } else {\n        addClass([this.overAllClear], HIDEICON);\n        removeClass([this.inputWrapper], SHOW_CLEAR);\n      }\n    }\n  }\n\n  setTreeValue() {\n    if (this.value !== null && this.value.length !== 0) {\n      // eslint-disable-next-line\n      let data;\n\n      if (this.showCheckBox || this.allowMultiSelection) {\n        for (let i = 0; i < this.value.length; i++) {\n          data = this.treeObj.getTreeData(this.value[i])[0];\n\n          if (isNullOrUndefined(data)) {\n            this.value.splice(this.value.indexOf(this.value[i]), 1);\n          }\n        }\n\n        if (this.value.length !== 0) {\n          this.setValidValue();\n        }\n      } else {\n        data = this.treeObj.getTreeData(this.value[0])[0];\n\n        if (!isNullOrUndefined(data)) {\n          this.setProperties({\n            text: data[this.fields.text]\n          }, true);\n          this.setValidValue();\n        } else {\n          this.setProperties({\n            value: this.currentValue\n          }, true);\n        }\n      }\n    }\n  }\n\n  setTreeText() {\n    if (this.value !== null && !this.isInitialized) {\n      return;\n    }\n\n    if (this.text !== null) {\n      // eslint-disable-next-line\n      let data;\n      const valArr = [];\n\n      if (this.showCheckBox || this.allowMultiSelection) {\n        const textArr = this.text.split(this.delimiterChar);\n\n        for (let i = 0; i < textArr.length; i++) {\n          data = this.getItems(textArr[i]);\n\n          if (!isNullOrUndefined(data)) {\n            valArr.push(data[this.fields.value].toString());\n          }\n        }\n\n        if (valArr.length !== 0) {\n          this.oldValue = this.value;\n          this.setProperties({\n            value: valArr\n          }, true);\n          this.setValidValue();\n        } else {\n          this.setProperties({\n            text: this.currentText\n          }, true);\n        }\n      } else {\n        data = this.getItems(this.text);\n\n        if (!isNullOrUndefined(data)) {\n          this.oldValue = this.value;\n          this.setProperties({\n            value: [data[this.fields.value].toString()]\n          }, true);\n          this.setValidValue();\n        } else {\n          this.setProperties({\n            text: this.currentText\n          }, true);\n        }\n      }\n    }\n  }\n\n  setSelectedValue() {\n    if (this.value != null) {\n      return;\n    }\n\n    if (!this.isInitialized) {\n      this.oldValue = this.value;\n\n      if (this.treeObj.selectedNodes.length > 0 && !this.showCheckBox) {\n        this.setProperties({\n          value: this.treeObj.selectedNodes\n        }, true);\n\n        if (this.allowMultiSelection) {\n          this.updateMode();\n        }\n      } else if (this.showCheckBox && this.treeObj.checkedNodes) {\n        if (this.treeObj.checkedNodes.length > 0) {\n          this.setProperties({\n            value: this.treeObj.checkedNodes\n          }, true);\n          setValue('selectedNodes', [], this.treeObj);\n          this.treeObj.dataBind();\n          this.updateMode();\n        }\n      }\n\n      this.updateSelectedValues();\n      this.currentText = this.text;\n      this.currentValue = this.value;\n    }\n  }\n\n  setValidValue() {\n    if (!this.showCheckBox && !this.allowMultiSelection) {\n      Input.setValue(this.text, this.inputEle, this.floatLabelType);\n      const id = this.value[0].toString();\n\n      if (this.treeObj.selectedNodes[0] !== id) {\n        setValue('selectedNodes', [id], this.treeObj);\n      }\n    } else {\n      if (this.showCheckBox) {\n        let difference = this.value.filter(e => {\n          return this.treeObj.checkedNodes.indexOf(e) === -1;\n        });\n\n        if (difference.length > 0 || this.treeSettings.autoCheck) {\n          this.treeObj.checkedNodes = this.value.slice();\n          this.treeObj.dataBind();\n          this.setMultiSelect();\n        }\n      } else {\n        this.treeObj.selectedNodes = this.value.slice();\n        this.selectedText = [];\n        this.updateSelectedValues();\n      }\n\n      this.treeObj.dataBind();\n    }\n\n    this.currentText = this.text;\n    this.currentValue = this.value;\n\n    if (this.isInitialized) {\n      this.triggerChangeEvent();\n    }\n  } // eslint-disable-next-line\n\n\n  getItems(givenText) {\n    // eslint-disable-next-line\n    let data;\n\n    if (this.treeDataType === 1) {\n      for (let i = 0; i < this.treeItems.length; i++) {\n        // eslint-disable-next-line\n        const text = getValue(this.fields.text, this.treeItems[i]);\n\n        if (!isNullOrUndefined(this.treeItems[i]) && !isNullOrUndefined(text) && text === givenText) {\n          data = this.treeItems[i];\n          break;\n        }\n      }\n    } else {\n      data = this.getNestedItems(this.treeItems, this.fields, givenText);\n    }\n\n    return data;\n  } // eslint-disable-next-line\n\n\n  getNestedItems(data, field, givenText) {\n    // eslint-disable-next-line\n    let newData;\n\n    for (let i = 0, objlen = data.length; i < objlen; i++) {\n      // eslint-disable-next-line\n      const dataId = getValue(this.fields.text, data[i]);\n\n      if (data[i] && dataId && dataId.toString() === givenText) {\n        return data[i];\n      } else if (typeof field.child === 'string' && !isNullOrUndefined(getValue(field.child, data[i]))) {\n        // eslint-disable-next-line\n        const childData = getValue(field.child, data[i]); // eslint-disable-next-line\n\n        newData = this.getNestedItems(childData, this.getChildType(field), givenText);\n\n        if (newData !== undefined) {\n          break;\n        }\n      } else if (this.fields.dataSource instanceof DataManager && !isNullOrUndefined(getValue('child', data[i]))) {\n        const child = 'child'; // eslint-disable-next-line\n\n        newData = this.getNestedItems(getValue(child, data[i]), this.getChildType(field), givenText);\n\n        if (newData !== undefined) {\n          break;\n        }\n      }\n    }\n\n    return newData;\n  }\n\n  getChildType(mapper) {\n    return typeof mapper.child === 'string' || isNullOrUndefined(mapper.child) ? mapper : mapper.child;\n  }\n  /* To render the treeview */\n\n\n  renderTree() {\n    this.treeObj = new TreeView({\n      fields: this.getTreeFields(this.fields),\n      enableRtl: this.enableRtl,\n      nodeSelected: this.onNodeSelected.bind(this),\n      nodeChecked: this.onNodeChecked.bind(this),\n      nodeChecking: this.beforeCheck.bind(this),\n      actionFailure: this.onActionFailure.bind(this),\n      nodeClicked: this.onNodeClicked.bind(this),\n      dataBound: this.OnDataBound.bind(this),\n      allowMultiSelection: this.allowMultiSelection,\n      showCheckBox: this.showCheckBox,\n      autoCheck: this.treeSettings.autoCheck,\n      sortOrder: this.sortOrder,\n      expandOn: this.treeSettings.expandOn,\n      loadOnDemand: this.treeSettings.loadOnDemand,\n      nodeSelecting: this.onBeforeSelect.bind(this),\n      nodeTemplate: this.itemTemplate\n    });\n    this.treeObj.root = this.root ? this.root : this;\n    this.treeObj.appendTo('#' + this.tree.id);\n  }\n  /* To render the popup element */\n\n\n  renderPopup() {\n    if (this.isFilteredData) {\n      this.filterObj.value = '';\n      this.treeObj.fields = this.getTreeFields(this.fields);\n      this.isFilterRestore = true;\n      this.isFilteredData = false;\n      this.hideCheckAll(false);\n    }\n\n    let isCancelled = false;\n    const args = {\n      cancel: false\n    };\n    this.trigger('beforeOpen', args, args => {\n      if (!args.cancel) {\n        addClass([this.inputWrapper], [ICONANIMATION]);\n\n        if (this.isFirstRender) {\n          this.popupEle = this.createElement('div', {\n            id: this.element.id + '_popup',\n            className: POPUP_CLASS + ' ' + (this.cssClass != null ? this.cssClass : '')\n          });\n          document.body.appendChild(this.popupEle);\n          this.createPopup(this.popupEle);\n        } else {\n          this.popupEle = this.popupObj.element;\n        }\n      } else {\n        isCancelled = true;\n      }\n\n      if (this.isFirstRender && !isCancelled) {\n        prepend([this.popupDiv], this.popupEle);\n        removeClass([this.popupDiv], DDTHIDEICON);\n\n        if (this.allowFiltering) {\n          this.renderFilter();\n        }\n\n        if (this.showCheckBox && this.showSelectAll && !this.popupDiv.classList.contains(NODATA)) {\n          this.createSelectAllWrapper();\n          this.popupEle.insertBefore(this.checkAllParent, this.popupDiv);\n        }\n\n        if (this.headerTemplate) {\n          this.setHeaderTemplate();\n        }\n\n        if (this.footerTemplate) {\n          this.setFooterTemplate();\n        }\n\n        this.isFirstRender = false;\n        /* eslint-disable */\n\n        if (this.hasTemplate && this.portals) {\n          this.portals = this.portals.concat(this.treeObj.portals);\n          /* eslint-enable */\n\n          this.renderReactTemplates();\n        }\n      }\n\n      if (!isCancelled) {\n        attributes(this.inputWrapper, {\n          'aria-expanded': 'true'\n        });\n        this.popupObj.show(null, this.zIndex === 1000 ? this.inputEle : null);\n        removeClass([this.popupEle], DDTHIDEICON);\n        this.updatePopupHeight();\n        this.popupObj.refreshPosition();\n\n        if (!(this.showCheckBox && this.showSelectAll) && !this.popupDiv.classList.contains(NODATA) && this.treeItems.length > 0) {\n          this.treeObj.element.focus();\n        }\n\n        if (this.checkSelectAll && this.checkBoxElement) {\n          const wrap = closest(this.checkBoxElement, '.' + CHECKBOXWRAP);\n          this.changeState(wrap, 'check');\n          this.checkSelectAll = false;\n        }\n\n        if (this.allowFiltering) {\n          removeClass([this.inputWrapper], [INPUTFOCUS]);\n          this.filterObj.element.focus();\n        }\n\n        const eventArgs = {\n          popup: this.popupObj\n        };\n        this.trigger('open', eventArgs);\n      }\n    });\n  }\n\n  updatePopupHeight() {\n    if (this.isFirstRender) {\n      return;\n    }\n\n    let popupHeight = this.getHeight();\n    this.popupEle.style.maxHeight = popupHeight;\n\n    if (this.allowFiltering) {\n      const height = Math.round(this.filterContainer.getBoundingClientRect().height);\n      popupHeight = formatUnit(parseInt(popupHeight, 10) - height + 'px');\n    }\n\n    if (this.headerTemplate) {\n      const height = Math.round(this.header.getBoundingClientRect().height);\n      popupHeight = formatUnit(parseInt(popupHeight, 10) - height + 'px');\n    }\n\n    if (this.showCheckBox && this.showSelectAll) {\n      const height = Math.round(this.checkAllParent.getBoundingClientRect().height);\n      popupHeight = formatUnit(parseInt(popupHeight, 10) - height + 'px');\n    }\n\n    if (this.footerTemplate) {\n      const height = Math.round(this.footer.getBoundingClientRect().height);\n      popupHeight = formatUnit(parseInt(popupHeight, 10) - height + 'px');\n    }\n\n    let border = parseInt(window.getComputedStyle(this.popupEle).borderTopWidth, 10);\n    border = border + parseInt(window.getComputedStyle(this.popupEle).borderBottomWidth, 10);\n    popupHeight = formatUnit(parseInt(popupHeight, 10) - border + 'px');\n    this.popupDiv.style.maxHeight = popupHeight;\n  }\n\n  createPopup(element) {\n    if (this.isFirstRender) {\n      this.popupObj = new Popup(element, {\n        width: this.setWidth(),\n        targetType: 'relative',\n        collision: {\n          X: 'flip',\n          Y: 'flip'\n        },\n        relateTo: this.inputWrapper,\n        zIndex: this.zIndex,\n        enableRtl: this.enableRtl,\n        position: {\n          X: 'left',\n          Y: 'bottom'\n        },\n        close: () => {\n          this.isPopupOpen = false;\n        },\n        open: () => {\n          EventHandler.add(document, 'mousedown', this.onDocumentClick, this);\n          this.isPopupOpen = true;\n        },\n        targetExitViewport: () => {\n          if (!Browser.isDevice) {\n            this.hidePopup();\n          }\n        }\n      });\n    }\n  }\n  /* To calculate the width when change via set model */\n\n\n  setElementWidth(inputWidth) {\n    const ddElement = this.inputWrapper;\n\n    if (!isNullOrUndefined(inputWidth)) {\n      if (typeof inputWidth === 'number') {\n        ddElement.style.width = formatUnit(inputWidth);\n      } else if (typeof inputWidth === 'string') {\n        ddElement.style.width = inputWidth.match(/px|%|em/) ? inputWidth : formatUnit(inputWidth);\n      }\n    }\n  }\n  /* To calculate the width of the popup */\n\n\n  setWidth() {\n    let width = formatUnit(this.popupWidth);\n\n    if (width.indexOf('%') > -1) {\n      width = (this.inputWrapper.offsetWidth * parseFloat(width) / 100).toString() + 'px';\n    } else if (typeof this.popupWidth === 'string') {\n      width = this.popupWidth.match(/px|em/) ? this.popupWidth : width;\n    }\n\n    return width;\n  }\n  /* To calculate the height of the popup */\n\n\n  getHeight() {\n    let height = formatUnit(this.popupHeight);\n\n    if (height.indexOf('%') > -1) {\n      // Will set the height of the popup according to the view port height\n      height = (document.documentElement.clientHeight * parseFloat(height) / 100).toString() + 'px';\n    } else if (typeof this.popupHeight === 'string') {\n      height = this.popupHeight.match(/px|em/) ? this.popupHeight : height;\n    }\n\n    return height;\n  }\n\n  onDocumentClick(e) {\n    const target = e.target;\n    const isTree = closest(target, '.' + PARENTITEM);\n    const isFilter = closest(target, '.' + FILTERWRAP);\n    const isHeader = closest(target, '.' + HEADER);\n    const isFooter = closest(target, '.' + FOOTER);\n    const isScroller = target.classList.contains(DROPDOWN) ? true : matches(target, '.e-ddt .e-popup') || matches(target, '.e-ddt .e-treeview');\n\n    if (this.isPopupOpen && (this.inputWrapper.contains(target) || isTree || isFilter || isScroller || isHeader || isFooter) || (this.allowMultiSelection || this.showCheckBox) && (this.isPopupOpen && target.classList.contains(CHIP_CLOSE) || this.isPopupOpen && (target.classList.contains(CHECKALLPARENT) || target.classList.contains(ALLTEXT) || target.classList.contains(CHECKBOXFRAME)))) {\n      this.isDocumentClick = false;\n      e.preventDefault();\n    } else if (!this.inputWrapper.contains(target) && this.inputFocus) {\n      this.focusOut(e);\n    }\n  }\n\n  onActionFailure(e) {\n    this.trigger('actionFailure', e);\n    this.l10nUpdate(true);\n    addClass([this.popupDiv], NODATA);\n  }\n\n  OnDataBound(args) {\n    this.treeItems = args.data;\n\n    if (this.treeItems.length <= 0) {\n      this.l10nUpdate();\n      addClass([this.popupDiv], NODATA);\n      this.hideCheckAll(true);\n    } else if (this.popupDiv.classList.contains(NODATA) && this.treeItems.length >= 1) {\n      removeClass([this.popupDiv], NODATA);\n      this.hideCheckAll(false);\n    }\n\n    this.treeDataType = this.getTreeDataType(this.treeItems, this.fields);\n\n    if (this.isFirstRender && this.isRemoteData) {\n      this.setTreeValue();\n      this.setTreeText();\n      this.updateHiddenValue();\n      this.setSelectedValue();\n\n      if (!this.wrapText) {\n        this.updateView();\n      }\n\n      this.treeObj.element.focus();\n    }\n\n    const eventArgs = {\n      data: args.data\n    };\n    this.trigger('dataBound', eventArgs);\n\n    if (this.isFilteredData) {\n      this.treeObj.expandAll();\n    }\n\n    if (this.isFilterRestore) {\n      this.restoreFilterSelection();\n      this.isFilterRestore = false;\n    }\n  }\n\n  restoreFilterSelection() {\n    if (this.showCheckBox) {\n      this.treeObj.checkedNodes = this.value ? this.value : [];\n    } else {\n      this.treeObj.selectedNodes = this.value ? this.value : [];\n    }\n  }\n  /* To set cssclass for the dropdowntree */\n\n\n  setCssClass(newClass, oldClass) {\n    const elements = this.popupObj ? [this.inputWrapper, this.popupObj.element] : [this.inputWrapper];\n\n    if (!isNullOrUndefined(oldClass) && oldClass !== '') {\n      removeClass(elements, oldClass.split(' '));\n    }\n\n    if (!isNullOrUndefined(newClass) && newClass !== '') {\n      addClass(elements, newClass.split(' '));\n    }\n  }\n\n  setEnableRTL(state) {\n    if (state) {\n      this.inputWrapper.classList.add(RTL);\n    } else {\n      this.inputWrapper.classList.remove(RTL);\n    }\n\n    if (this.popupObj) {\n      this.popupObj.enableRtl = state;\n      this.popupObj.dataBind();\n    }\n\n    if (this.treeObj) {\n      this.treeObj.enableRtl = state;\n      this.treeObj.dataBind();\n    }\n  }\n  /* To set enable property */\n\n\n  setEnable() {\n    Input.setEnabled(this.enabled, this.inputEle);\n\n    if (this.enabled) {\n      removeClass([this.inputWrapper], DISABLED);\n      this.inputEle.setAttribute('aria-disabled', 'false');\n      this.inputWrapper.setAttribute('aria-disabled', 'false');\n    } else {\n      if (this.isPopupOpen) {\n        this.hidePopup();\n      }\n\n      addClass([this.inputWrapper], DISABLED);\n\n      if (this.inputWrapper && this.inputWrapper.classList.contains(INPUTFOCUS)) {\n        removeClass([this.inputWrapper], [INPUTFOCUS]);\n      }\n\n      this.inputEle.setAttribute('aria-disabled', 'true');\n      this.inputWrapper.setAttribute('aria-disabled', 'true');\n    }\n  }\n\n  cloneFields(fields) {\n    const clonedField = {\n      dataSource: fields.dataSource,\n      value: fields.value,\n      text: fields.text,\n      parentValue: fields.parentValue,\n      child: this.cloneChildField(fields.child),\n      hasChildren: fields.hasChildren,\n      expanded: fields.expanded,\n      iconCss: fields.iconCss,\n      imageUrl: fields.imageUrl,\n      htmlAttributes: fields.htmlAttributes,\n      query: fields.query,\n      selected: fields.selected,\n      tableName: fields.tableName,\n      tooltip: fields.tooltip\n    };\n    return clonedField;\n  }\n\n  cloneChildField(fields) {\n    if (typeof fields === 'string') {\n      return fields;\n    } else {\n      const clonedField = {\n        dataSource: fields.dataSource,\n        value: fields.value,\n        text: fields.text,\n        parentValue: fields.parentValue,\n        child: fields.child ? this.cloneChildField(fields.child) : null,\n        hasChildren: fields.hasChildren,\n        expanded: fields.expanded,\n        iconCss: fields.iconCss,\n        imageUrl: fields.imageUrl,\n        htmlAttributes: fields.htmlAttributes,\n        query: fields.query,\n        selected: fields.selected,\n        tableName: fields.tableName,\n        tooltip: fields.tooltip\n      };\n      return clonedField;\n    }\n  }\n\n  getTreeFields(fields) {\n    const treeFields = {\n      dataSource: fields.dataSource,\n      id: fields.value,\n      text: fields.text,\n      parentID: fields.parentValue,\n      child: this.getTreeChildren(fields.child),\n      hasChildren: fields.hasChildren,\n      expanded: fields.expanded,\n      iconCss: fields.iconCss,\n      imageUrl: fields.imageUrl,\n      isChecked: fields.selected,\n      htmlAttributes: fields.htmlAttributes,\n      query: fields.query,\n      selected: fields.selected,\n      tableName: fields.tableName,\n      tooltip: fields.tooltip\n    };\n    return treeFields;\n  }\n\n  getTreeChildren(mapper) {\n    if (typeof mapper === 'string') {\n      return mapper;\n    } else if (!isNullOrUndefined(mapper)) {\n      mapper = this.getActualProperties(mapper);\n      const childFields = mapper;\n\n      if (mapper.value) {\n        childFields.id = mapper.value;\n      }\n\n      if (mapper.parentValue) {\n        childFields.parentID = mapper.parentValue;\n      }\n\n      if (mapper.child) {\n        childFields.child = this.getTreeChildren(mapper.child);\n      }\n\n      if (mapper.selected && this.showCheckBox) {\n        childFields.isChecked = mapper.selected;\n      }\n\n      return childFields;\n    }\n\n    return null;\n  } // eslint-disable-next-line\n\n\n  getTreeDataType(ds, field) {\n    if (this.fields.dataSource instanceof DataManager) {\n      for (let i = 0; i < ds.length; i++) {\n        if (typeof field.child === 'string' && isNullOrUndefined(getValue(field.child, ds[i]))) {\n          return 1;\n        }\n      }\n\n      return 2;\n    }\n\n    this.fields.dataSource = isNullOrUndefined(this.fields.dataSource) ? [] : this.fields.dataSource;\n\n    for (let i = 0, len = this.fields.dataSource.length; i < len; i++) {\n      if (typeof field.child === 'string' && !isNullOrUndefined(getValue(field.child, this.fields.dataSource[i]))) {\n        return 2;\n      }\n\n      if (!isNullOrUndefined(getValue(field.parentValue, this.fields.dataSource[i])) || !isNullOrUndefined(getValue(field.hasChildren, this.fields.dataSource[i]))) {\n        return 1;\n      }\n    }\n\n    return 1;\n  }\n  /* Triggers when the tree fields is changed dynamically */\n\n\n  setFields() {\n    this.resetValue();\n\n    if (this.hasTemplate) {\n      this.updateTemplate();\n    }\n\n    this.treeObj.fields = this.getTreeFields(this.fields);\n    this.treeObj.dataBind();\n  }\n\n  getEventArgs(args) {\n    // eslint-disable-next-line\n    const checkData = args.data; // eslint-disable-next-line\n\n    const selectData = args.nodeData;\n    let state;\n\n    if (this.showCheckBox) {\n      if (args.action === 'check') {\n        state = 'select';\n      } else if (args.action === 'uncheck') {\n        state = 'un-select';\n      }\n    }\n\n    const eventArgs = {\n      action: this.showCheckBox ? state : args.action,\n      isInteracted: this.isClicked ? true : args.isInteracted,\n      item: args.node,\n      itemData: this.showCheckBox ? checkData[0] : selectData\n    };\n    return eventArgs;\n  }\n\n  onBeforeSelect(args) {\n    if (args.isInteracted) {\n      this.oldValue = this.value ? this.value.slice() : this.value;\n\n      if (this.value === null) {\n        this.setProperties({\n          value: []\n        }, true);\n      }\n    }\n  }\n\n  updateHiddenValue() {\n    if (this.allowMultiSelection || this.showCheckBox) {\n      return;\n    }\n\n    if (this.value && this.value.length) {\n      this.hiddenElement.innerHTML = '<option selected value =\"' + this.value[0] + '\">' + this.text + '</option>';\n    } else {\n      this.hiddenElement.innerHTML = '';\n    }\n  }\n  /* Triggers when the tree node is selected */\n\n\n  onNodeSelected(args) {\n    if (this.showCheckBox) {\n      return;\n    }\n\n    let selectedText;\n\n    if (args.isInteracted) {\n      const id = getValue('id', args.nodeData).toString();\n\n      if (!this.allowMultiSelection) {\n        this.hiddenElement.innerHTML = '';\n        this.setProperties({\n          value: [id]\n        }, true);\n\n        if (this.itemTemplate) {\n          selectedText = getValue('text', this.treeObj.getNode(id));\n        } else {\n          selectedText = getValue('text', args.nodeData).toString();\n        }\n\n        Input.setValue(selectedText, this.inputEle, this.floatLabelType);\n        this.setProperties({\n          text: selectedText\n        }, true);\n        this.currentText = this.text;\n        this.currentValue = this.value;\n        attributes(this.inputWrapper, {\n          'aria-describedby': this.element.id\n        });\n        attributes(this.inputWrapper, {\n          'aria-activedescendant': id.toString()\n        });\n        this.updateHiddenValue();\n        this.showOverAllClear();\n        this.hidePopup();\n        this.isNodeSelected = true;\n      } else if (this.allowMultiSelection) {\n        this.setMultiSelect();\n      }\n    }\n\n    const eventArgs = this.getEventArgs(args);\n    this.trigger('select', eventArgs);\n\n    if (this.isValueChange && !this.changeOnBlur) {\n      this.triggerChangeEvent(this.keyEventArgs);\n      this.isValueChange = false;\n    }\n  }\n\n  onNodeClicked(args) {\n    if (!this.changeOnBlur && this.isNodeSelected) {\n      this.triggerChangeEvent(args.event);\n      this.isNodeSelected = false;\n    }\n\n    const target = args.event.target;\n\n    if ((target.classList.contains('e-fullrow') || target.classList.contains('e-list-text')) && this.showCheckBox) {\n      this.isClicked = true; // eslint-disable-next-line\n\n      const getNodeDetails = this.treeObj.getNode(args.node);\n\n      if (getNodeDetails.isChecked === 'true') {\n        this.treeObj.uncheckAll([args.node]);\n      } else {\n        this.treeObj.checkAll([args.node]);\n      }\n\n      this.isClicked = false;\n      this.setMultiSelect();\n      this.ensurePlaceHolder();\n    }\n\n    if (!this.changeOnBlur && (this.allowMultiSelection || this.showCheckBox)) {\n      this.triggerChangeEvent(args.event);\n    }\n  }\n\n  onNodeChecked(args) {\n    const eventArgs = this.getEventArgs(args);\n    this.trigger('select', eventArgs);\n\n    if (this.isFilteredData && args.action === 'uncheck') {\n      const id = getValue('id', args.data[0]).toString();\n      this.removeSelectedData(id, true);\n    }\n\n    if (!this.isChipDelete && args.isInteracted) {\n      this.setMultiSelect();\n      this.ensurePlaceHolder();\n    }\n\n    if (this.showSelectAll && this.checkBoxElement) {\n      const nodes = this.treeObj.element.querySelectorAll('li');\n      const checkedNodes = this.treeObj.element.querySelectorAll('li .e-checkbox-wrapper[aria-checked=true]');\n      const wrap = closest(this.checkBoxElement, '.' + CHECKBOXWRAP);\n\n      if (wrap && args.action === 'uncheck') {\n        this.isReverseUpdate = true;\n        this.changeState(wrap, 'uncheck');\n        this.isReverseUpdate = false;\n      } else if (wrap && args.action === 'check' && checkedNodes.length === nodes.length) {\n        this.isReverseUpdate = true;\n        this.changeState(wrap, 'check');\n        this.isReverseUpdate = false;\n      }\n    }\n  }\n\n  beforeCheck(args) {\n    if (args.isInteracted) {\n      this.oldValue = this.value ? this.value.slice() : this.value;\n    }\n  }\n\n  updateClearButton(state) {\n    if (state) {\n      if (!this.inputWrapper.contains(this.overAllClear)) {\n        this.inputEle.parentElement.insertBefore(this.overAllClear, this.inputEle.nextSibling);\n      } else {\n        removeClass([this.overAllClear], HIDEICON);\n        addClass([this.inputWrapper], SHOW_CLEAR);\n      }\n    } else {\n      addClass([this.overAllClear], HIDEICON);\n      removeClass([this.inputWrapper], SHOW_CLEAR);\n    }\n\n    if ((this.allowMultiSelection || this.showCheckBox) && this.chipWrapper) {\n      const chipClose = selectAll('.' + CHIP_CLOSE, this.chipWrapper);\n\n      for (let i = 0; i < chipClose.length; i++) {\n        if (!state) {\n          addClass([chipClose[i]], HIDEICON);\n        } else {\n          removeClass([chipClose[i]], HIDEICON);\n        }\n      }\n    }\n  }\n\n  updateDropDownIconState(state) {\n    const spinIcon = select('.' + DDTICON, this.inputWrapper);\n\n    if (state) {\n      if (!spinIcon) {\n        Input.appendSpan(DROPDOWNICON, this.inputWrapper, this.createElement);\n      } else {\n        removeClass([spinIcon], HIDEICON);\n      }\n\n      addClass([this.inputWrapper], SHOW_DD_ICON);\n    } else {\n      addClass([spinIcon], HIDEICON);\n      removeClass([this.inputWrapper], SHOW_DD_ICON);\n    }\n  }\n\n  updateMode() {\n    if (this.mode === 'Custom') {\n      return;\n    }\n\n    if (this.mode !== 'Delimiter') {\n      if (!this.inputWrapper.contains(this.chipWrapper)) {\n        this.createChip();\n      }\n\n      const isValid = this.getValidMode();\n\n      if (this.chipWrapper.classList.contains(HIDEICON) && isValid) {\n        removeClass([this.chipWrapper], HIDEICON);\n        addClass([this.inputWrapper], SHOW_CHIP);\n      } else if (!isValid) {\n        addClass([this.chipWrapper], HIDEICON);\n        removeClass([this.inputWrapper], SHOW_CHIP);\n      }\n\n      const isValue = this.value !== null ? this.value.length !== 0 ? true : false : false;\n\n      if (isValid && isValue) {\n        addClass([this.inputEle], CHIP_INPUT);\n      } else {\n        removeClass([this.inputEle], CHIP_INPUT);\n      }\n    } else if (this.inputEle.classList.contains(CHIP_INPUT)) {\n      removeClass([this.inputEle], CHIP_INPUT);\n\n      if (this.chipWrapper) {\n        addClass([this.chipWrapper], HIDEICON);\n        removeClass([this.inputWrapper], SHOW_CHIP);\n      }\n    }\n  }\n\n  ensurePlaceHolder() {\n    if (this.value && this.value.length === 0) {\n      removeClass([this.inputEle], CHIP_INPUT);\n\n      if (this.chipWrapper) {\n        addClass([this.chipWrapper], HIDEICON);\n      }\n    }\n  }\n\n  ensureClearIconPosition(floatLabelType) {\n    if (floatLabelType !== 'Never') {\n      this.inputWrapper.insertBefore(this.overAllClear, this.inputObj.buttons[0]);\n    }\n  }\n\n  setMultiSelectValue(newValues) {\n    if (!this.isFilteredData) {\n      this.setProperties({\n        value: newValues\n      }, true);\n\n      if (newValues && newValues.length !== 0 && !this.showCheckBox) {\n        this.treeObj.selectedNodes = this.value.slice();\n        this.treeObj.dataBind();\n      }\n    } else {\n      const selectedValues = isNullOrUndefined(this.value) ? [] : this.value;\n\n      for (let i = 0; i < newValues.length; i++) {\n        if (isNullOrUndefined(this.value) || this.value.indexOf(newValues[i]) === -1) {\n          selectedValues.push(newValues[i]);\n        }\n      }\n\n      this.setProperties({\n        value: selectedValues\n      }, true);\n    }\n  }\n\n  setMultiSelect() {\n    if (this.showCheckBox && !this.isDynamicChange) {\n      this.setMultiSelectValue(this.treeObj.checkedNodes.slice());\n    } else {\n      const ddtValue = this.allowMultiSelection ? this.showCheckBox ? this.treeObj.checkedNodes : this.treeObj.selectedNodes : this.value ? this.showCheckBox ? this.value : [this.value[0]] : null;\n      this.setMultiSelectValue(ddtValue);\n\n      if (this.showCheckBox && this.value !== null) {\n        this.treeObj.checkedNodes = this.value;\n        this.treeObj.dataBind();\n      }\n    }\n\n    this.selectedText = [];\n    const checkSelection = this.allowMultiSelection ? true : this.showCheckBox ? true : false;\n\n    if (this.inputWrapper.contains(this.chipWrapper) && !checkSelection) {\n      removeClass([this.inputEle], CHIP_INPUT);\n      detach(this.chipWrapper);\n    }\n\n    const isValid = this.getValidMode();\n\n    if (isValid && this.value !== null) {\n      addClass([this.inputEle], CHIP_INPUT);\n\n      if (this.chipWrapper) {\n        removeClass([this.chipWrapper], HIDEICON);\n      }\n    }\n\n    const isValue = this.value ? this.value.length ? true : false : false;\n\n    if (this.chipWrapper && this.mode === 'Box' && !isValue) {\n      addClass([this.chipWrapper], HIDEICON);\n      removeClass([this.inputEle], CHIP_INPUT);\n    }\n\n    this.updateSelectedValues();\n  } // eslint-disable-next-line\n\n\n  getSelectedData(value) {\n    // eslint-disable-next-line\n    let data = null;\n\n    if (this.isFilteredData) {\n      for (let i = 0; i < this.selectedData.length; i++) {\n        if (getValue(this.treeSettings.loadOnDemand ? this.fields.value : 'id', this.selectedData[i]).toString() === value) {\n          data = this.selectedData[i];\n          break;\n        }\n      }\n    }\n\n    if (isNullOrUndefined(data)) {\n      if (this.treeSettings.loadOnDemand) {\n        data = this.getNodeData(value);\n      } else {\n        data = this.treeObj.getNode(value);\n      }\n\n      if (!isNullOrUndefined(data)) {\n        this.selectedData.push(data);\n      }\n    }\n\n    return data;\n  }\n\n  getNodeData(id) {\n    let childItems;\n\n    if (isNullOrUndefined(id)) {\n      return childItems;\n    } else if (this.treeDataType === 1) {\n      for (let i = 0, objlen = this.treeItems.length; i < objlen; i++) {\n        let dataId = getValue(this.fields.value, this.treeItems[i]);\n\n        if (!isNullOrUndefined(this.treeItems[i]) && !isNullOrUndefined(dataId) && dataId.toString() === id) {\n          return this.treeItems[i];\n        }\n      }\n    } else {\n      return this.getChildNodeData(this.treeItems, this.fields, id);\n    }\n\n    return childItems;\n  }\n\n  getChildNodeData(obj, mapper, id) {\n    let newChildItems;\n\n    if (isNullOrUndefined(obj)) {\n      return newChildItems;\n    }\n\n    for (let i = 0, objlen = obj.length; i < objlen; i++) {\n      let dataValue = getValue(mapper.value, obj[i]);\n\n      if (obj[i] && dataValue && dataValue.toString() === id) {\n        return obj[i];\n      } else if (typeof mapper.child === 'string' && !isNullOrUndefined(getValue(mapper.child, obj[i]))) {\n        let childNodeData = getValue(mapper.child, obj[i]);\n        newChildItems = this.getChildNodeData(childNodeData, this.getChildMapperFields(mapper), id);\n\n        if (newChildItems !== undefined) {\n          break;\n        }\n      } else if (this.fields.dataSource instanceof DataManager && !isNullOrUndefined(getValue('child', obj[i]))) {\n        let child = 'child';\n        newChildItems = this.getChildNodeData(getValue(child, obj[i]), this.getChildMapperFields(mapper), id);\n\n        if (newChildItems !== undefined) {\n          break;\n        }\n      }\n    }\n\n    return newChildItems;\n  }\n\n  getChildMapperFields(mapper) {\n    return typeof mapper.child === 'string' || isNullOrUndefined(mapper.child) ? mapper : mapper.child;\n  }\n\n  removeSelectedData(value, muteOnChange) {\n    const selectedValues = isNullOrUndefined(this.value) ? [] : this.value.slice();\n    selectedValues.splice(selectedValues.indexOf(value), 1);\n    this.setProperties({\n      value: selectedValues\n    }, muteOnChange);\n\n    for (let i = 0; i < this.selectedData.length; i++) {\n      if (getValue(this.treeSettings.loadOnDemand ? this.fields.value : 'id', this.selectedData[i]).toString() === value) {\n        this.selectedData.splice(i, 1);\n        break;\n      }\n    }\n  }\n\n  updateSelectedValues() {\n    this.dataValue = '';\n    let temp;\n    let text;\n    let textValue = ''; // eslint-disable-next-line\n\n    let selectedData;\n    this.hiddenElement.innerHTML = '';\n    let hiddenInputValue = '';\n\n    if ((!this.isChipDelete || this.treeSettings.autoCheck) && this.inputWrapper.contains(this.chipWrapper)) {\n      this.chipCollection.innerHTML = '';\n    }\n\n    if (!this.isFilteredData) {\n      this.selectedData = [];\n    }\n\n    if (!isNullOrUndefined(this.value)) {\n      for (let i = 0, len = this.value.length; i < len; i++) {\n        selectedData = this.getSelectedData(this.value[i]);\n        text = getValue(this.treeSettings.loadOnDemand ? this.fields.text : 'text', selectedData);\n        this.selectedText.push(text);\n        temp = this.selectedText[this.selectedText.length - 1];\n\n        if (this.selectedText.length > 1) {\n          this.dataValue += this.delimiterChar + ' ' + temp;\n          textValue += ',' + temp;\n        } else {\n          this.dataValue += temp;\n          textValue += temp;\n        }\n\n        if (this.mode !== 'Custom' && this.mode !== 'Delimiter' && (!this.isChipDelete || this.treeSettings.autoCheck) && (this.allowMultiSelection || this.showCheckBox)) {\n          this.setChipValues(temp, this.value[i]);\n        }\n\n        hiddenInputValue += '<option selected value =\"' + this.value[i] + '\">' + this.selectedText[this.selectedText.length - 1] + '</option>';\n      }\n\n      if (this.selectedText.length >= 1) {\n        this.setProperties({\n          text: textValue\n        }, true);\n      }\n\n      this.hiddenElement.innerHTML = hiddenInputValue;\n\n      if (this.mode === 'Custom' && (this.allowMultiSelection || this.showCheckBox)) {\n        this.setTagValues();\n      }\n    }\n\n    const isValid = this.getValidMode();\n\n    if (this.mode !== 'Custom' && this.mode !== 'Box' && (this.allowMultiSelection || this.showCheckBox) && !isValid) {\n      if (this.chipWrapper) {\n        addClass([this.chipWrapper], HIDEICON);\n        removeClass([this.inputWrapper], SHOW_CHIP);\n      }\n    }\n\n    Input.setValue(this.dataValue, this.inputEle, this.floatLabelType);\n\n    if (textValue === '') {\n      this.setProperties({\n        text: null\n      }, true);\n    } else {\n      this.setProperties({\n        text: textValue\n      }, true);\n    }\n\n    if (this.showClearButton && this.inputFocus) {\n      this.showOverAllClear();\n    }\n\n    if ((this.allowMultiSelection || this.showCheckBox) && this.popupObj) {\n      this.popupObj.refreshPosition();\n    }\n\n    this.currentText = this.text;\n    this.currentValue = this.value;\n  }\n\n  setChipValues(text, value) {\n    if (!this.inputWrapper.contains(this.chipWrapper)) {\n      this.createChip();\n    }\n\n    const chip = this.createElement('span', {\n      className: CHIP,\n      attrs: {\n        'data-value': value\n      }\n    });\n    const chipContent = this.createElement('span', {\n      className: CHIP_CONTENT\n    });\n    const chipClose = this.createElement('span', {\n      className: CHIP_CLOSE + ' ' + ICONS\n    });\n    chipContent.innerHTML = text;\n    chip.appendChild(chipContent);\n    this.chipCollection.appendChild(chip);\n\n    if (this.showClearButton) {\n      chip.appendChild(chipClose);\n      EventHandler.add(chipClose, 'mousedown', this.removeChip, this);\n    }\n  }\n\n  setTagValues() {\n    if (this.value === null || this.text == null) {\n      return;\n    }\n\n    if (!this.inputWrapper.contains(this.chipWrapper)) {\n      this.createChip();\n    }\n\n    if (!this.inputWrapper.classList.contains(SHOW_CHIP)) {\n      addClass([this.inputWrapper], SHOW_CHIP);\n    }\n\n    const chip = this.createElement('span', {\n      className: CHIP\n    });\n\n    if (!this.inputEle.classList.contains(CHIP_INPUT)) {\n      addClass([this.inputEle], CHIP_INPUT);\n    }\n\n    if (this.chipWrapper.classList.contains(HIDEICON)) {\n      removeClass([this.chipWrapper], HIDEICON);\n    }\n\n    const chipContent = this.createElement('span', {\n      className: CHIP_CONTENT\n    });\n    const template = this.customTemplate;\n    const templateId = this.customTemplateId;\n    const templatestring = 'customTemplate';\n    const compiledString = this.templateComplier(template);\n    let tempArr = compiledString({\n      'value': this.value,\n      'text': this.text\n    }, this, templatestring, templateId, this.isStringTemplate, undefined, chipContent);\n\n    if (tempArr) {\n      tempArr = Array.prototype.slice.call(tempArr);\n      append(tempArr, chipContent);\n    }\n\n    chip.appendChild(chipContent);\n    this.chipCollection.appendChild(chip);\n  }\n\n  setSelectAllWrapper(state) {\n    if (this.isFirstRender) {\n      return;\n    }\n\n    if (state && !this.popupEle.contains(this.checkAllParent) && this.showCheckBox) {\n      this.createSelectAllWrapper();\n      this.popupEle.insertBefore(this.checkAllParent, this.popupDiv);\n    } else if (this.popupEle.contains(this.checkAllParent)) {\n      detach(this.checkAllParent);\n      this.checkAllParent = null;\n    }\n  }\n\n  setHeaderTemplate() {\n    if (this.header) {\n      this.header.innerHTML = '';\n    } else {\n      this.header = this.createElement('div');\n      addClass([this.header], HEADER);\n    } // eslint-disable-next-line\n\n\n    const compiledString = this.templateComplier(this.headerTemplate);\n    let tempArr = compiledString({}, this, 'headerTemplate', this.headerTemplateId, this.isStringTemplate, undefined, this.header);\n\n    if (tempArr) {\n      tempArr = Array.prototype.slice.call(tempArr);\n      append(tempArr, this.header);\n    }\n\n    this.popupEle.insertBefore(this.header, this.checkAllParent ? this.checkAllParent : this.popupDiv);\n  } // eslint-disable-next-line\n\n\n  templateComplier(template) {\n    if (template) {\n      // eslint-disable-next-line\n      try {\n        if (document.querySelectorAll(template).length) {\n          return compile(document.querySelector(template).innerHTML.trim());\n        } else {\n          return compile(template);\n        }\n      } catch (e) {\n        return compile(template);\n      }\n    }\n\n    return compile(template);\n  }\n\n  setFooterTemplate() {\n    if (this.footer) {\n      this.footer.innerHTML = '';\n    } else {\n      this.footer = this.createElement('div');\n      addClass([this.footer], FOOTER);\n    } // eslint-disable-next-line\n\n\n    const compiledString = this.templateComplier(this.footerTemplate);\n    let tempArr = compiledString({}, this, 'footerTemplate', this.footerTemplateId, this.isStringTemplate, undefined, this.footer);\n\n    if (tempArr) {\n      tempArr = Array.prototype.slice.call(tempArr);\n      append(tempArr, this.footer);\n    }\n\n    append([this.footer], this.popupEle);\n  }\n\n  clearAll(e) {\n    if (!this.enabled || this.readonly) {\n      return;\n    }\n\n    this.resetValue();\n    this.showOverAllClear();\n\n    if (this.allowMultiSelection || this.showCheckBox) {\n      if (this.popupObj) {\n        this.popupObj.refreshPosition();\n      }\n\n      if (!this.wrapText) {\n        this.updateOverflowWrapper(true);\n      }\n    }\n\n    if (e) {\n      this.isClearButtonClick = true;\n    }\n\n    if (!this.changeOnBlur) {\n      this.triggerChangeEvent(e);\n    }\n  }\n\n  removeChip(e) {\n    if (!this.enabled || this.readonly) {\n      return;\n    }\n\n    const element = e.target.parentElement;\n    const value = element.getAttribute('data-value');\n\n    if (this.chipCollection) {\n      if (element) {\n        remove(element);\n      }\n    }\n\n    this.isChipDelete = true;\n    this.isClearButtonClick = true;\n    this.removeSelectedData(value, true);\n    this.selectedText = [];\n\n    if (this.allowMultiSelection) {\n      this.treeObj.selectedNodes = this.value.slice();\n      this.updateSelectedValues();\n    }\n\n    if (this.showCheckBox) {\n      this.treeObj.uncheckAll([value]);\n      this.clearCheckAll();\n      this.setMultiSelect();\n    }\n\n    this.triggerChangeEvent(e);\n    this.isChipDelete = false;\n    this.ensurePlaceHolder();\n  }\n\n  resetValue(isDynamicChange) {\n    if (this.value == [] && this.text == null) {\n      return;\n    }\n\n    Input.setValue(null, this.inputEle, this.floatLabelType);\n\n    if (!isDynamicChange) {\n      this.oldValue = this.value;\n      this.setProperties({\n        value: []\n      }, true);\n    }\n\n    this.dataValue = null;\n    this.setProperties({\n      text: null\n    }, true);\n    this.selectedData = [];\n    setValue('selectedNodes', [], this.treeObj);\n    this.hiddenElement.innerHTML = '';\n\n    if (this.showCheckBox) {\n      this.treeObj.checkedNodes = [];\n      this.treeObj.dataBind();\n      this.setMultiSelect();\n      this.clearCheckAll();\n    }\n\n    if (this.oldValue === null && !isDynamicChange) {\n      this.removeValue = true;\n    } else if (isDynamicChange) {\n      this.triggerChangeEvent();\n    }\n\n    if ((this.allowMultiSelection || this.showCheckBox) && this.chipWrapper) {\n      this.chipCollection.innerHTML = '';\n\n      if (!this.wrapText) {\n        this.updateOverflowWrapper(true);\n      }\n\n      this.ensurePlaceHolder();\n    }\n  }\n\n  clearCheckAll() {\n    if (this.showSelectAll && this.value && this.value.length === 0) {\n      this.setLocale(false);\n    }\n  }\n\n  selectAllItems(state) {\n    if (this.showCheckBox) {\n      if (state) {\n        this.treeObj.checkAll();\n      } else {\n        this.treeObj.uncheckAll();\n      }\n\n      this.checkSelectAll = true;\n    } else if (this.allowMultiSelection) {\n      if (!state) {\n        this.treeObj.selectedNodes = [];\n      } else {\n        const li = selectAll('li', this.treeObj.element);\n        let id;\n        const arr = [];\n\n        for (let i = 0; i < li.length; i++) {\n          id = li[i].getAttribute('data-uid').toString();\n          arr.push(id);\n        }\n\n        this.treeObj.selectedNodes = arr;\n      }\n    }\n\n    this.updateMode();\n    this.setMultiSelect();\n\n    if (!this.wrapText) {\n      if (state) {\n        this.updateView();\n      } else {\n        this.updateOverflowWrapper(true);\n      }\n    }\n  }\n\n  updateTreeSettings(prop) {\n    const value = Object.keys(prop.treeSettings)[0];\n\n    if (value === 'autoCheck') {\n      this.ensureAutoCheck();\n      this.treeObj.autoCheck = this.treeSettings.autoCheck;\n    } else if (value === 'loadOnDemand') {\n      this.treeObj.loadOnDemand = this.treeSettings.loadOnDemand;\n    } else if (value === 'expandOn') {\n      this.treeObj.expandOn = this.treeSettings.expandOn;\n      this.treeObj.dataBind();\n      return;\n    }\n\n    this.treeObj.dataBind();\n    this.setMultiSelect();\n    this.updateValue(this.value);\n  }\n\n  updateCheckBoxState(checkBox) {\n    if (this.hasTemplate) {\n      this.updateTemplate();\n    }\n\n    if (!this.wrapText) {\n      this.updateOverflowWrapper(false);\n    }\n\n    this.treeObj.showCheckBox = checkBox;\n    this.treeObj.dataBind();\n    this.isDynamicChange = true;\n    this.setSelectAllWrapper(this.showSelectAll);\n\n    if (this.showSelectAll) {\n      this.setLocale();\n    }\n\n    if (this.showCheckBox) {\n      this.updateMode();\n    }\n\n    this.setMultiSelect();\n    this.isDynamicChange = false;\n  }\n\n  updateTemplate() {\n    if (this.popupObj) {\n      this.clearTemplate();\n      /* eslint-disable */\n\n      this.portals = [];\n      /* eslint-enable */\n\n      this.popupObj.destroy();\n\n      if (this.isPopupOpen) {\n        this.hidePopup();\n        this.isFirstRender = true;\n        this.renderPopup();\n      } else {\n        this.isFirstRender = true;\n      }\n    }\n  }\n\n  l10nUpdate(actionFailure) {\n    if (this.noRecord) {\n      this.noRecord.innerHTML = '';\n    } else {\n      this.noRecord = this.createElement('div');\n      addClass([this.noRecord], NODATACONTAINER);\n      prepend([this.noRecord], this.popupDiv);\n    }\n\n    if (this.noRecordsTemplate !== 'No Records Found' || this.actionFailureTemplate !== 'The Request Failed') {\n      const template = actionFailure ? this.actionFailureTemplate : this.noRecordsTemplate;\n      const templateId = actionFailure ? this.actionFailureTemplateId : this.noRecordsTemplateId;\n      const templatestring = actionFailure ? 'actionFailureTemplate' : 'noRecordsTemplate'; // eslint-disable-next-line\n\n      const compiledString = this.templateComplier(template);\n      let tempArr = compiledString({}, this, templatestring, templateId, this.isStringTemplate, undefined, this.noRecord);\n\n      if (tempArr) {\n        tempArr = Array.prototype.slice.call(tempArr);\n        append(tempArr, this.noRecord);\n      }\n    } else {\n      // eslint-disable-next-line\n      const l10nLocale = {\n        noRecordsTemplate: 'No Records Found',\n        actionFailureTemplate: 'The Request Failed'\n      };\n      this.l10n = new L10n(this.getLocaleName(), l10nLocale, this.locale);\n      this.noRecord.innerHTML = actionFailure ? this.l10n.getConstant('actionFailureTemplate') : this.l10n.getConstant('noRecordsTemplate');\n    }\n  }\n\n  updateRecordTemplate(action) {\n    if (this.treeItems && this.treeItems.length <= 0) {\n      this.l10nUpdate(action);\n\n      if (this.hasTemplate) {\n        this.updateTemplate();\n      }\n    }\n  }\n\n  updateOverflowWrapper(state) {\n    if (!state) {\n      if (!this.inputWrapper.contains(this.overFlowWrapper)) {\n        this.overFlowWrapper = this.createElement('span', {\n          className: OVERFLOW_VIEW + ' ' + HIDEICON\n        });\n        this.inputWrapper.insertBefore(this.overFlowWrapper, this.hiddenElement);\n      }\n    } else if (this.inputWrapper.contains(this.overFlowWrapper) && state) {\n      this.overFlowWrapper.innerHTML = '';\n    }\n  }\n\n  updateMultiSelection(state) {\n    if (!this.wrapText) {\n      this.updateOverflowWrapper(false);\n    }\n\n    this.treeObj.allowMultiSelection = state;\n    this.treeObj.dataBind();\n    this.updateOption();\n\n    if (this.allowMultiSelection) {\n      this.updateMode();\n    }\n\n    this.setMultiSelect();\n  }\n\n  updateAllowFiltering(state) {\n    if (!this.isFirstRender) {\n      if (state) {\n        this.renderFilter();\n      } else {\n        this.destroyFilter();\n      }\n    }\n\n    this.ensureAutoCheck();\n  }\n\n  updateFilterPlaceHolder() {\n    if (this.filterObj) {\n      this.filterObj.placeholder = this.filterBarPlaceholder;\n      this.filterObj.element.setAttribute('aria-label', this.filterBarPlaceholder);\n    }\n  }\n\n  updateValue(value) {\n    this.isDynamicChange = true;\n\n    if (isNullOrUndefined(value) || value.length === 0) {\n      this.resetValue(true);\n    } else {\n      this.setTreeValue();\n\n      if ((this.allowMultiSelection || this.showCheckBox) && !this.wrapText) {\n        this.updateOverflowWrapper(false);\n        this.updateView();\n      }\n    }\n\n    this.updateHiddenValue();\n    this.isDynamicChange = false;\n  }\n\n  updateText(text) {\n    if (isNullOrUndefined(text)) {\n      this.resetValue();\n    } else {\n      this.setTreeText();\n\n      if ((this.allowMultiSelection || this.showCheckBox) && !this.wrapText) {\n        this.updateOverflowWrapper(false);\n        this.updateView();\n      }\n    }\n\n    this.updateHiddenValue();\n  }\n\n  updateModelMode() {\n    const validMode = this.allowMultiSelection ? true : this.showCheckBox ? true : false;\n\n    if (!validMode) {\n      return;\n    }\n\n    if (!this.wrapText) {\n      const overFlow = select('.' + OVERFLOW_VIEW, this.inputWrapper);\n\n      if (overFlow) {\n        overFlow.innerHTML = '';\n      }\n    }\n\n    this.updateMode();\n    this.setMultiSelect();\n\n    if (!this.wrapText && this.value && this.value.length !== 0) {\n      this.updateOverFlowView();\n      addClass([this.inputEle], CHIP_INPUT);\n\n      if (this.mode === 'Box') {\n        removeClass([this.overFlowWrapper, this.inputWrapper], SHOW_TEXT);\n      } else {\n        addClass([this.overFlowWrapper, this.inputWrapper], SHOW_TEXT);\n      }\n    }\n  }\n\n  updateOption() {\n    if (!this.hiddenElement.hasAttribute('multiple') && (this.allowMultiSelection || this.showCheckBox)) {\n      this.hiddenElement.setAttribute('multiple', '');\n    } else if (this.hiddenElement.hasAttribute('multiple') && !this.allowMultiSelection && !this.showCheckBox) {\n      this.hiddenElement.removeAttribute('multiple');\n    }\n  }\n  /**\n   * Dynamically change the value of properties.\n   *\n   * @param {DropDownTreeModel} newProp - specifies the newProp value.\n   * @param {DropDownTreeModel} oldProp - specifies the newProp value.\n   * @returns {void}\n   * @private\n   */\n\n\n  onPropertyChanged(newProp, oldProp) {\n    for (const prop of Object.keys(newProp)) {\n      switch (prop) {\n        case 'width':\n          this.setElementWidth(newProp.width);\n\n          if (this.popupObj) {\n            this.popupObj.element.style.width = this.setWidth();\n          }\n\n          break;\n\n        case 'placeholder':\n          Input.setPlaceholder(newProp.placeholder, this.inputEle);\n          break;\n\n        case 'cssClass':\n          this.setCssClass(newProp.cssClass, oldProp.cssClass);\n          break;\n\n        case 'enableRtl':\n          this.setEnableRTL(this.enableRtl);\n          break;\n\n        case 'fields':\n          this.setFields();\n          break;\n\n        case 'readonly':\n          Input.setReadonly(newProp.readonly, this.inputEle);\n          break;\n\n        case 'enabled':\n          this.setEnable();\n          break;\n\n        case 'floatLabelType':\n          Input.removeFloating(this.inputObj);\n          Input.addFloating(this.inputEle, newProp.floatLabelType, this.placeholder, this.createElement);\n          this.ensureClearIconPosition(newProp.floatLabelType);\n          break;\n\n        case 'showClearButton':\n          this.updateClearButton(newProp.showClearButton);\n          break;\n\n        case 'allowFiltering':\n          this.updateAllowFiltering(newProp.allowFiltering);\n          break;\n\n        case 'filterBarPlaceholder':\n          this.updateFilterPlaceHolder();\n          break;\n\n        case 'value':\n          this.oldValue = oldProp.value;\n          this.updateValue(newProp.value);\n          break;\n\n        case 'text':\n          this.updateText(newProp.text);\n          break;\n\n        case 'allowMultiSelection':\n          this.updateMultiSelection(newProp.allowMultiSelection);\n          break;\n\n        case 'mode':\n          if (!this.showCheckBox && !this.allowMultiSelection) {\n            return;\n          }\n\n          if (this.mode === 'Custom') {\n            if (this.overFlowWrapper) {\n              detach(this.overFlowWrapper);\n            }\n\n            if (this.chipWrapper) {\n              detach(this.chipWrapper);\n            }\n\n            this.setTagValues();\n          } else {\n            if (oldProp.mode === 'Custom') {\n              this.updateOverflowWrapper(this.wrapText);\n            }\n\n            this.updateModelMode();\n          }\n\n          break;\n\n        case 'delimiterChar':\n          if (this.mode === 'Box') {\n            return;\n          }\n\n          if (this.showCheckBox || this.allowMultiSelection) {\n            this.setMultiSelect();\n          }\n\n          break;\n\n        case 'selectAllText':\n          if (this.showCheckBox && this.showSelectAll) {\n            this.setLocale();\n          }\n\n          break;\n\n        case 'unSelectAllText':\n          if (this.showCheckBox && this.showSelectAll) {\n            this.setLocale(false);\n          }\n\n          break;\n\n        case 'showSelectAll':\n          if (this.showCheckBox) {\n            this.setSelectAllWrapper(newProp.showSelectAll);\n            this.updatePopupHeight();\n          }\n\n          break;\n\n        case 'showCheckBox':\n          this.updateCheckBoxState(newProp.showCheckBox);\n\n          if (!this.wrapText) {\n            this.updateOverflowWrapper(true);\n          }\n\n          this.updatePopupHeight();\n          this.updateOption();\n          break;\n\n        case 'treeSettings':\n          this.updateTreeSettings(newProp);\n          break;\n\n        case 'customTemplate':\n          if (this.mode !== \"Custom\") {\n            return;\n          }\n\n          this.chipCollection.innerHTML = \"\";\n          this.setTagValues();\n          break;\n\n        case 'sortOrder':\n          if (this.hasTemplate) {\n            this.updateTemplate();\n          }\n\n          this.treeObj.sortOrder = newProp.sortOrder;\n          this.treeObj.dataBind();\n          this.updateValue(this.value);\n          break;\n\n        case 'showDropDownIcon':\n          this.updateDropDownIconState(newProp.showDropDownIcon);\n          break;\n\n        case 'popupWidth':\n          if (this.popupObj) {\n            this.popupObj.element.style.width = this.setWidth();\n          }\n\n          break;\n\n        case 'popupHeight':\n          if (this.popupObj) {\n            this.updatePopupHeight();\n          }\n\n          break;\n\n        case 'zIndex':\n          if (this.popupObj) {\n            this.popupObj.zIndex = newProp.zIndex;\n            this.popupObj.dataBind();\n          }\n\n          break;\n\n        case 'headerTemplate':\n          this.updateTemplate();\n          break;\n\n        case 'footerTemplate':\n          this.updateTemplate();\n          break;\n\n        case 'itemTemplate':\n          this.updateTemplate();\n          this.treeObj.nodeTemplate = newProp.itemTemplate;\n          this.treeObj.dataBind();\n          break;\n\n        case 'noRecordsTemplate':\n          this.updateRecordTemplate();\n          break;\n\n        case 'actionFailureTemplate':\n          this.updateRecordTemplate(true);\n          break;\n\n        case 'htmlAttributes':\n          this.setHTMLAttributes();\n          break;\n\n        case 'wrapText':\n          this.updateOverflowWrapper(this.wrapText);\n\n          if ((this.allowMultiSelection || this.showCheckBox) && !this.wrapText) {\n            this.updateView();\n          } else {\n            addClass([this.overFlowWrapper], HIDEICON);\n\n            if (this.chipWrapper && this.mode === 'Box') {\n              removeClass([this.chipWrapper], HIDEICON);\n            } else {\n              removeClass([this.inputWrapper], SHOW_CHIP);\n              removeClass([this.inputEle], CHIP_INPUT);\n            }\n\n            this.ensurePlaceHolder();\n          }\n\n          break;\n      }\n    }\n  }\n  /**\n   * Allows you to clear the selected values from the Dropdown Tree component.\n   *\n   * @method clear\n   * @returns {void}\n   */\n\n\n  clear() {\n    this.clearAll();\n\n    if (this.inputFocus) {\n      this.onFocusOut();\n    } else {\n      if (this.changeOnBlur) {\n        this.triggerChangeEvent();\n      }\n\n      this.removeValue = false;\n    }\n  }\n  /**\n   * Removes the component from the DOM and detaches all its related event handlers. Also, it removes the attributes and classes.\n   *\n   * @method destroy\n   * @returns {void}\n   */\n\n\n  destroy() {\n    this.clearTemplate();\n    this.unWireEvents();\n    this.setCssClass(null, this.cssClass);\n    this.setProperties({\n      value: []\n    }, true);\n    this.setProperties({\n      text: null\n    }, true);\n    this.treeObj.destroy();\n    this.destroyFilter();\n\n    if (this.popupObj) {\n      this.popupObj.destroy();\n      detach(this.popupObj.element);\n    }\n\n    if (this.element.tagName !== this.getDirective()) {\n      this.inputWrapper.parentElement.insertBefore(this.element, this.inputWrapper);\n    }\n\n    Input.setValue(null, this.inputEle, this.floatLabelType);\n    detach(this.inputWrapper);\n    detach(this.popupDiv);\n    this.element.classList.remove('e-input');\n\n    if (this.showCheckBox || this.allowMultiSelection) {\n      this.element.classList.remove(CHIP_INPUT);\n    }\n\n    super.destroy();\n  }\n\n  destroyFilter() {\n    if (this.filterObj) {\n      this.filterObj.destroy();\n      detach(this.filterObj.element);\n      detach(this.filterContainer);\n      this.filterObj = null;\n    }\n  }\n  /**\n   * Ensures visibility of the Dropdown Tree item by using item value or item element.\n   * If many Dropdown Tree items are present, and we are in need to find a particular item, then the `ensureVisible` property\n   * helps you to bring the item to visibility by expanding the Dropdown Tree and scrolling to the specific item.\n   *\n   * @param  {string | Element} item - Specifies the value of Dropdown Tree item/ Dropdown Tree item element.\n   * @returns {void}\n   */\n\n\n  ensureVisible(item) {\n    this.treeObj.ensureVisible(item);\n  }\n  /**\n   * To get the updated data source of the Dropdown Tree.\n   *\n   * @param  {string | Element} item - Specifies the value of Dropdown Tree item/ Dropdown Tree item element\n   * @returns {'{[key: string]: Object }[]'} - returns the updated data source of the Dropdown Tree.\n   */\n  // eslint-disable-next-line\n\n\n  getData(item) {\n    return this.treeObj.getTreeData(item);\n  }\n  /**\n   * Close the Dropdown tree pop-up.\n   *\n   * @returns {void}\n   */\n\n\n  hidePopup() {\n    const eventArgs = {\n      popup: this.popupObj\n    };\n    this.inputWrapper.classList.remove(ICONANIMATION);\n\n    if (this.popupEle) {\n      addClass([this.popupEle], DDTHIDEICON);\n    }\n\n    attributes(this.inputWrapper, {\n      'aria-expanded': 'false'\n    });\n\n    if (this.popupObj && this.isPopupOpen) {\n      this.popupObj.hide();\n\n      if (this.inputFocus) {\n        this.inputWrapper.focus();\n\n        if (this.allowFiltering) {\n          addClass([this.inputWrapper], [INPUTFOCUS]);\n        }\n      }\n\n      this.trigger('close', eventArgs);\n    }\n  }\n  /**\n   * Based on the state parameter, entire list item will be selected or deselected.\n   *\n   * @param {boolean} state - Unselects/Selects entire Dropdown Tree items.\n   * @returns {void}\n   *\n   */\n\n\n  selectAll(state) {\n    this.selectAllItems(state);\n  }\n  /**\n   * Opens the popup that displays the Dropdown Tree items.\n   *\n   * @returns {void}\n   */\n\n\n  showPopup() {\n    if (!this.enabled || this.readonly || this.isPopupOpen) {\n      return;\n    }\n\n    this.renderPopup();\n    this.focusIn();\n  }\n  /**\n   * Return the module name.\n   *\n   * @private\n   * @returns {string} - returns the module name.\n   */\n\n\n  getModuleName() {\n    return 'dropdowntree';\n  }\n\n};\n\n__decorate$2([Property('The Request Failed')], DropDownTree.prototype, \"actionFailureTemplate\", void 0);\n\n__decorate$2([Property(false)], DropDownTree.prototype, \"allowFiltering\", void 0);\n\n__decorate$2([Property(false)], DropDownTree.prototype, \"allowMultiSelection\", void 0);\n\n__decorate$2([Property(true)], DropDownTree.prototype, \"changeOnBlur\", void 0);\n\n__decorate$2([Property('')], DropDownTree.prototype, \"cssClass\", void 0);\n\n__decorate$2([Property(\"${value.length} item(s) selected\")], DropDownTree.prototype, \"customTemplate\", void 0);\n\n__decorate$2([Property(',')], DropDownTree.prototype, \"delimiterChar\", void 0);\n\n__decorate$2([Property(true)], DropDownTree.prototype, \"enabled\", void 0);\n\n__decorate$2([Complex({}, Fields)], DropDownTree.prototype, \"fields\", void 0);\n\n__decorate$2([Property(null)], DropDownTree.prototype, \"filterBarPlaceholder\", void 0);\n\n__decorate$2([Property('StartsWith')], DropDownTree.prototype, \"filterType\", void 0);\n\n__decorate$2([Property('Never')], DropDownTree.prototype, \"floatLabelType\", void 0);\n\n__decorate$2([Property(null)], DropDownTree.prototype, \"footerTemplate\", void 0);\n\n__decorate$2([Property(false)], DropDownTree.prototype, \"ignoreAccent\", void 0);\n\n__decorate$2([Property(true)], DropDownTree.prototype, \"ignoreCase\", void 0);\n\n__decorate$2([Property(null)], DropDownTree.prototype, \"headerTemplate\", void 0);\n\n__decorate$2([Property({})], DropDownTree.prototype, \"htmlAttributes\", void 0);\n\n__decorate$2([Property(null)], DropDownTree.prototype, \"itemTemplate\", void 0);\n\n__decorate$2([Property('Default')], DropDownTree.prototype, \"mode\", void 0);\n\n__decorate$2([Property('No Records Found')], DropDownTree.prototype, \"noRecordsTemplate\", void 0);\n\n__decorate$2([Property(null)], DropDownTree.prototype, \"placeholder\", void 0);\n\n__decorate$2([Property('300px')], DropDownTree.prototype, \"popupHeight\", void 0);\n\n__decorate$2([Property('100%')], DropDownTree.prototype, \"popupWidth\", void 0);\n\n__decorate$2([Property(false)], DropDownTree.prototype, \"readonly\", void 0);\n\n__decorate$2([Property(false)], DropDownTree.prototype, \"showSelectAll\", void 0);\n\n__decorate$2([Property('Select All')], DropDownTree.prototype, \"selectAllText\", void 0);\n\n__decorate$2([Property(false)], DropDownTree.prototype, \"showCheckBox\", void 0);\n\n__decorate$2([Property(true)], DropDownTree.prototype, \"showClearButton\", void 0);\n\n__decorate$2([Property(true)], DropDownTree.prototype, \"showDropDownIcon\", void 0);\n\n__decorate$2([Property('None')], DropDownTree.prototype, \"sortOrder\", void 0);\n\n__decorate$2([Property(null)], DropDownTree.prototype, \"text\", void 0);\n\n__decorate$2([Complex({}, TreeSettings)], DropDownTree.prototype, \"treeSettings\", void 0);\n\n__decorate$2([Property('Unselect All')], DropDownTree.prototype, \"unSelectAllText\", void 0);\n\n__decorate$2([Property(null)], DropDownTree.prototype, \"value\", void 0);\n\n__decorate$2([Property('100%')], DropDownTree.prototype, \"width\", void 0);\n\n__decorate$2([Property(1000)], DropDownTree.prototype, \"zIndex\", void 0);\n\n__decorate$2([Property(false)], DropDownTree.prototype, \"wrapText\", void 0);\n\n__decorate$2([Event()], DropDownTree.prototype, \"actionFailure\", void 0);\n\n__decorate$2([Event()], DropDownTree.prototype, \"beforeOpen\", void 0);\n\n__decorate$2([Event()], DropDownTree.prototype, \"change\", void 0);\n\n__decorate$2([Event()], DropDownTree.prototype, \"close\", void 0);\n\n__decorate$2([Event()], DropDownTree.prototype, \"blur\", void 0);\n\n__decorate$2([Event()], DropDownTree.prototype, \"created\", void 0);\n\n__decorate$2([Event()], DropDownTree.prototype, \"dataBound\", void 0);\n\n__decorate$2([Event()], DropDownTree.prototype, \"destroyed\", void 0);\n\n__decorate$2([Event()], DropDownTree.prototype, \"filtering\", void 0);\n\n__decorate$2([Event()], DropDownTree.prototype, \"focus\", void 0);\n\n__decorate$2([Event()], DropDownTree.prototype, \"keyPress\", void 0);\n\n__decorate$2([Event()], DropDownTree.prototype, \"open\", void 0);\n\n__decorate$2([Event()], DropDownTree.prototype, \"select\", void 0);\n\nDropDownTree = __decorate$2([NotifyPropertyChanges], DropDownTree);\n/**\n * export all modules from current location\n */\n\nvar __decorate$3 = undefined && undefined.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}; // eslint-disable-next-line @typescript-eslint/triple-slash-reference\n/// <reference path='../drop-down-list/drop-down-list-model.d.ts'/>\n\n\nconst SPINNER_CLASS = 'e-atc-spinner-icon';\ndropDownListClasses.root = 'e-combobox';\nconst inputObject$1 = {\n  container: null,\n  buttons: []\n};\n/**\n * The ComboBox component allows the user to type a value or choose an option from the list of predefined options.\n * ```html\n * <select id=\"list\">\n *      <option value='1'>Badminton</option>\n *      <option value='2'>Basketball</option>\n *      <option value='3'>Cricket</option>\n *      <option value='4'>Football</option>\n *      <option value='5'>Tennis</option>\n * </select>\n * ```\n * ```typescript\n *   let games:ComboBox = new ComboBox();\n *   games.appendTo(\"#list\");\n * ```\n */\n\nlet ComboBox = class ComboBox extends DropDownList {\n  /**\n   * *Constructor for creating the component\n   *\n   * @param {ComboBoxModel} options - Specifies the ComboBox model.\n   * @param {string | HTMLElement} element - Specifies the element to render as component.\n   * @private\n   */\n  constructor(options, element) {\n    super(options, element);\n  }\n  /**\n   * Initialize the event handler\n   *\n   * @private\n   * @returns {void}\n   */\n\n\n  preRender() {\n    super.preRender();\n  }\n\n  getLocaleName() {\n    return 'combo-box';\n  }\n\n  wireEvent() {\n    if (this.getModuleName() === 'combobox') {\n      EventHandler.add(this.inputWrapper.buttons[0], 'mousedown', this.preventBlur, this);\n      EventHandler.add(this.inputWrapper.container, 'blur', this.onBlurHandler, this);\n    }\n\n    if (!isNullOrUndefined(this.inputWrapper.buttons[0])) {\n      EventHandler.add(this.inputWrapper.buttons[0], 'mousedown', this.dropDownClick, this);\n    }\n\n    EventHandler.add(this.inputElement, 'focus', this.targetFocus, this);\n\n    if (!this.readonly) {\n      EventHandler.add(this.inputElement, 'input', this.onInput, this);\n      EventHandler.add(this.inputElement, 'keyup', this.onFilterUp, this);\n      EventHandler.add(this.inputElement, 'keydown', this.onFilterDown, this);\n      EventHandler.add(this.inputElement, 'paste', this.pasteHandler, this);\n    }\n\n    this.bindCommonEvent();\n  }\n\n  preventBlur(e) {\n    if (!this.allowFiltering && document.activeElement !== this.inputElement && !document.activeElement.classList.contains(dropDownListClasses.input) && Browser.isDevice || !Browser.isDevice) {\n      e.preventDefault();\n    }\n  }\n\n  onBlurHandler(e) {\n    const inputValue = this.inputElement && this.inputElement.value === '' ? null : this.inputElement && this.inputElement.value;\n\n    if (!isNullOrUndefined(this.listData) && !isNullOrUndefined(inputValue) && inputValue !== this.text) {\n      this.customValue(e);\n    }\n\n    super.onBlurHandler(e);\n  }\n\n  targetElement() {\n    return this.inputElement;\n  } // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  setOldText(text) {\n    Input.setValue(this.text, this.inputElement, this.floatLabelType, this.showClearButton);\n    this.customValue();\n    this.removeSelection();\n  } // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  setOldValue(value) {\n    if (this.allowCustom) {\n      this.valueMuteChange(this.value);\n    } else {\n      this.valueMuteChange(null);\n    }\n\n    this.removeSelection();\n    this.setHiddenValue();\n  }\n\n  valueMuteChange(value) {\n    const inputValue = isNullOrUndefined(value) ? null : value.toString();\n    Input.setValue(inputValue, this.inputElement, this.floatLabelType, this.showClearButton);\n    this.setProperties({\n      value: value,\n      text: value,\n      index: null\n    }, true);\n    this.activeIndex = this.index;\n    const fields = this.fields;\n    const dataItem = {};\n    dataItem[fields.text] = isNullOrUndefined(value) ? null : value.toString();\n    dataItem[fields.value] = isNullOrUndefined(value) ? null : value.toString();\n    this.itemData = dataItem;\n    this.item = null;\n\n    if (this.previousValue !== this.value) {\n      this.detachChangeEvent(null);\n    }\n  }\n\n  updateValues() {\n    if (!isNullOrUndefined(this.value)) {\n      const li = this.getElementByValue(this.value);\n\n      if (li) {\n        this.setSelection(li, null);\n      } else if (this.allowCustom) {\n        this.valueMuteChange(this.value);\n      } else {\n        this.valueMuteChange(null);\n      }\n    } else if (this.text && isNullOrUndefined(this.value)) {\n      const li = this.getElementByText(this.text);\n\n      if (li) {\n        this.setSelection(li, null);\n      } else {\n        Input.setValue(this.text, this.inputElement, this.floatLabelType, this.showClearButton);\n        this.customValue();\n      }\n    } else {\n      this.setSelection(this.liCollections[this.activeIndex], null);\n    }\n\n    this.setHiddenValue();\n    Input.setValue(this.text, this.inputElement, this.floatLabelType, this.showClearButton);\n  }\n\n  updateIconState() {\n    if (this.showClearButton) {\n      if (this.inputElement && this.inputElement.value !== '' && !this.readonly) {\n        removeClass([this.inputWrapper.clearButton], dropDownListClasses.clearIconHide);\n      } else {\n        addClass([this.inputWrapper.clearButton], dropDownListClasses.clearIconHide);\n      }\n    }\n  }\n\n  getAriaAttributes() {\n    const ariaAttributes = {\n      'aria-owns': this.element.id + '_options',\n      'role': 'combobox',\n      'aria-autocomplete': 'both',\n      'aria-labelledby': this.hiddenElement.id,\n      'aria-hasPopup': 'true',\n      'aria-expanded': 'false',\n      'aria-readonly': this.readonly.toString(),\n      'autocomplete': 'off',\n      'autocorrect': 'off',\n      'autocapitalize': 'off',\n      'spellcheck': 'false'\n    };\n    return ariaAttributes;\n  }\n\n  searchLists(e) {\n    this.isTyped = true;\n\n    if (this.isFiltering()) {\n      super.searchLists(e);\n\n      if (this.ulElement && this.filterInput.value.trim() === '') {\n        this.setHoverList(this.ulElement.querySelector('.' + dropDownListClasses.li));\n      }\n    } else {\n      if (this.ulElement && this.inputElement.value === '' && this.preventAutoFill) {\n        this.setHoverList(this.ulElement.querySelector('.' + dropDownListClasses.li));\n      }\n\n      this.incrementalSearch(e);\n    }\n  }\n\n  getNgDirective() {\n    return 'EJS-COMBOBOX';\n  }\n\n  setSearchBox() {\n    this.filterInput = this.inputElement;\n    return this.isFiltering() ? this.inputWrapper : inputObject$1;\n  } // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  onActionComplete(ulElement, list, e, isUpdated) {\n    super.onActionComplete(ulElement, list, e);\n\n    if (this.isSelectCustom) {\n      this.removeSelection();\n    }\n\n    if (!this.preventAutoFill && this.getModuleName() === 'combobox' && this.isTyped) {\n      setTimeout(() => {\n        this.inlineSearch();\n      });\n    }\n  }\n\n  getFocusElement() {\n    const dataItem = this.isSelectCustom ? {\n      text: ''\n    } : this.getItemData();\n    const selected = this.list.querySelector('.' + dropDownListClasses.selected);\n    const isSelected = dataItem.text === this.inputElement.value && !isNullOrUndefined(selected);\n\n    if (isSelected) {\n      return selected;\n    }\n\n    if ((Browser.isDevice && !this.isDropDownClick || !Browser.isDevice) && !isNullOrUndefined(this.liCollections) && this.liCollections.length > 0) {\n      const inputValue = this.inputElement.value;\n      const activeItem = Search(inputValue, this.liCollections, this.filterType, true);\n      const activeElement = activeItem.item;\n\n      if (!isNullOrUndefined(activeElement)) {\n        const count = this.getIndexByValue(activeElement.getAttribute('data-value')) - 1;\n        const height = parseInt(getComputedStyle(this.liCollections[0], null).getPropertyValue('height'), 10);\n\n        if (!isNaN(height) && this.getModuleName() !== 'autocomplete') {\n          this.removeFocus();\n          const fixedHead = this.fields.groupBy ? this.liCollections[0].offsetHeight : 0;\n          this.list.scrollTop = count * height + fixedHead;\n          addClass([activeElement], dropDownListClasses.focus);\n        }\n      } else {\n        if (this.isSelectCustom && this.inputElement.value.trim() !== '') {\n          this.removeFocus();\n          this.list.scrollTop = 0;\n        }\n      }\n\n      return activeElement;\n    } else {\n      return null;\n    }\n  }\n\n  setValue(e) {\n    if (e && e.type === 'keydown' && e.action === 'enter') {\n      this.removeFillSelection();\n    }\n\n    if (this.autofill && this.getModuleName() === 'combobox' && e && e.type === 'keydown' && e.action !== 'enter') {\n      this.preventAutoFill = false;\n      this.inlineSearch(e);\n      return false;\n    } else {\n      return super.setValue(e);\n    }\n  }\n\n  checkCustomValue() {\n    this.itemData = this.getDataByValue(this.value);\n    const dataItem = this.getItemData();\n\n    if (!(this.allowCustom && isNullOrUndefined(dataItem.value) && isNullOrUndefined(dataItem.text))) {\n      this.setProperties({\n        'value': dataItem.value,\n        'text': dataItem.text\n      }, !this.allowCustom);\n    }\n  }\n  /**\n   * Shows the spinner loader.\n   *\n   * @returns {void}\n   * @deprecated\n   */\n\n\n  showSpinner() {\n    if (isNullOrUndefined(this.spinnerElement)) {\n      this.spinnerElement = this.getModuleName() === 'autocomplete' ? this.inputWrapper.buttons[0] || this.inputWrapper.clearButton || Input.appendSpan('e-input-group-icon ' + SPINNER_CLASS, this.inputWrapper.container, this.createElement) : this.inputWrapper.buttons[0] || this.inputWrapper.clearButton;\n      addClass([this.spinnerElement], dropDownListClasses.disableIcon);\n      createSpinner({\n        target: this.spinnerElement,\n        width: Browser.isDevice ? '16px' : '14px'\n      }, this.createElement);\n      showSpinner(this.spinnerElement);\n    }\n  }\n  /**\n   * Hides the spinner loader.\n   *\n   * @returns {void}\n   * @deprecated\n   */\n\n\n  hideSpinner() {\n    if (!isNullOrUndefined(this.spinnerElement)) {\n      hideSpinner(this.spinnerElement);\n      removeClass([this.spinnerElement], dropDownListClasses.disableIcon);\n\n      if (this.spinnerElement.classList.contains(SPINNER_CLASS)) {\n        detach(this.spinnerElement);\n      } else {\n        this.spinnerElement.innerHTML = '';\n      }\n\n      this.spinnerElement = null;\n    }\n  }\n\n  setAutoFill(activeElement, isHover) {\n    if (!isHover) {\n      this.setHoverList(activeElement);\n    }\n\n    if (this.autofill && !this.preventAutoFill) {\n      const currentValue = this.getTextByValue(activeElement.getAttribute('data-value')).toString();\n      const currentFillValue = this.getFormattedValue(activeElement.getAttribute('data-value'));\n\n      if (this.getModuleName() === 'combobox') {\n        if (!this.isSelected && this.previousValue !== currentFillValue) {\n          this.updateSelectedItem(activeElement, null);\n          this.isSelected = true;\n          this.previousValue = this.getFormattedValue(activeElement.getAttribute('data-value'));\n        } else {\n          this.updateSelectedItem(activeElement, null, true);\n        }\n      }\n\n      if (!this.isAndroidAutoFill(currentValue)) {\n        this.setAutoFillSelection(currentValue, isHover);\n      }\n    }\n  }\n\n  isAndroidAutoFill(value) {\n    if (Browser.isAndroid) {\n      const currentPoints = this.getSelectionPoints();\n      const prevEnd = this.prevSelectPoints.end;\n      const curEnd = currentPoints.end;\n      const prevStart = this.prevSelectPoints.start;\n      const curStart = currentPoints.start;\n\n      if (prevEnd !== 0 && (prevEnd === value.length && prevStart === value.length || prevStart > curStart && prevEnd > curEnd || prevEnd === curEnd && prevStart === curStart)) {\n        return true;\n      } else {\n        return false;\n      }\n    } else {\n      return false;\n    }\n  }\n\n  clearAll(e, property) {\n    if (isNullOrUndefined(property) || !isNullOrUndefined(property) && isNullOrUndefined(property.dataSource)) {\n      super.clearAll(e);\n    }\n\n    if (this.isFiltering() && !isNullOrUndefined(e) && e.target === this.inputWrapper.clearButton) {\n      this.searchLists(e);\n    }\n  }\n\n  isSelectFocusItem(element) {\n    return !isNullOrUndefined(element);\n  }\n\n  inlineSearch(e) {\n    const isKeyNavigate = e && (e.action === 'down' || e.action === 'up' || e.action === 'home' || e.action === 'end' || e.action === 'pageUp' || e.action === 'pageDown');\n    const activeElement = isKeyNavigate ? this.liCollections[this.activeIndex] : this.getFocusElement();\n\n    if (!isNullOrUndefined(activeElement)) {\n      if (!isKeyNavigate) {\n        const value = this.getFormattedValue(activeElement.getAttribute('data-value'));\n        this.activeIndex = this.getIndexByValue(value);\n        this.activeIndex = !isNullOrUndefined(this.activeIndex) ? this.activeIndex : null;\n      }\n\n      this.preventAutoFill = this.inputElement.value === '' ? false : this.preventAutoFill;\n      this.setAutoFill(activeElement, isKeyNavigate);\n    } else if (this.inputElement.value === '') {\n      this.activeIndex = null;\n      this.list.scrollTop = 0;\n      const focusItem = this.list.querySelector('.' + dropDownListClasses.li);\n      this.setHoverList(focusItem);\n    } else {\n      this.activeIndex = null;\n      this.removeSelection();\n\n      if (this.liCollections && this.liCollections.length > 0 && !this.isCustomFilter) {\n        this.removeFocus();\n      }\n    }\n  }\n\n  incrementalSearch(e) {\n    this.showPopup();\n\n    if (!isNullOrUndefined(this.listData)) {\n      this.inlineSearch(e);\n      e.preventDefault();\n    }\n  }\n\n  setAutoFillSelection(currentValue, isKeyNavigate = false) {\n    const selection = this.getSelectionPoints();\n    const value = this.inputElement.value.substr(0, selection.start);\n\n    if (value && value.toLowerCase() === currentValue.substr(0, selection.start).toLowerCase()) {\n      const inputValue = value + currentValue.substr(value.length, currentValue.length);\n      Input.setValue(inputValue, this.inputElement, this.floatLabelType, this.showClearButton);\n      this.inputElement.setSelectionRange(selection.start, this.inputElement.value.length);\n    } else if (isKeyNavigate) {\n      Input.setValue(currentValue, this.inputElement, this.floatLabelType, this.showClearButton);\n      this.inputElement.setSelectionRange(0, this.inputElement.value.length);\n    }\n  }\n\n  getValueByText(text) {\n    return super.getValueByText(text, true, this.ignoreAccent);\n  }\n\n  unWireEvent() {\n    if (this.getModuleName() === 'combobox') {\n      EventHandler.remove(this.inputWrapper.buttons[0], 'mousedown', this.preventBlur);\n      EventHandler.remove(this.inputWrapper.container, 'blur', this.onBlurHandler);\n    }\n\n    if (!isNullOrUndefined(this.inputWrapper.buttons[0])) {\n      EventHandler.remove(this.inputWrapper.buttons[0], 'mousedown', this.dropDownClick);\n    }\n\n    if (this.inputElement) {\n      EventHandler.remove(this.inputElement, 'focus', this.targetFocus);\n\n      if (!this.readonly) {\n        EventHandler.remove(this.inputElement, 'input', this.onInput);\n        EventHandler.remove(this.inputElement, 'keyup', this.onFilterUp);\n        EventHandler.remove(this.inputElement, 'keydown', this.onFilterDown);\n        EventHandler.remove(this.inputElement, 'paste', this.pasteHandler);\n      }\n    }\n\n    this.unBindCommonEvent();\n  }\n\n  setSelection(li, e) {\n    super.setSelection(li, e);\n\n    if (!isNullOrUndefined(li) && !this.autofill && !this.isDropDownClick) {\n      this.removeFocus();\n    }\n  }\n\n  selectCurrentItem(e) {\n    let li;\n\n    if (this.isPopupOpen) {\n      if (this.isSelected) {\n        li = this.list.querySelector('.' + dropDownListClasses.selected);\n      } else {\n        li = this.list.querySelector('.' + dropDownListClasses.focus);\n      }\n\n      if (li) {\n        this.setSelection(li, e);\n        this.isTyped = false;\n      }\n\n      if (this.isSelected) {\n        this.isSelectCustom = false;\n        this.onChangeEvent(e);\n      }\n    }\n\n    if (e.action === 'enter' && this.inputElement.value.trim() === '') {\n      this.clearAll(e);\n    } else if (this.isTyped && !this.isSelected && isNullOrUndefined(li)) {\n      this.customValue(e);\n    }\n\n    this.hidePopup(e);\n  }\n\n  setHoverList(li) {\n    this.removeSelection();\n\n    if (this.isValidLI(li) && !li.classList.contains(dropDownListClasses.selected)) {\n      this.removeFocus();\n      li.classList.add(dropDownListClasses.focus);\n    }\n  }\n\n  targetFocus(e) {\n    if (Browser.isDevice && !this.allowFiltering) {\n      this.preventFocus = false;\n    }\n\n    this.onFocus(e);\n  }\n\n  dropDownClick(e) {\n    e.preventDefault();\n\n    if (Browser.isDevice && !this.isFiltering()) {\n      this.preventFocus = true;\n    }\n\n    super.dropDownClick(e);\n  }\n\n  customValue(e) {\n    const value = this.getValueByText(this.inputElement.value);\n\n    if (!this.allowCustom && this.inputElement.value !== '') {\n      const previousValue = this.previousValue;\n      const currentValue = this.value;\n      this.setProperties({\n        value: value\n      });\n\n      if (isNullOrUndefined(this.value)) {\n        Input.setValue('', this.inputElement, this.floatLabelType, this.showClearButton);\n      }\n\n      if (this.autofill && previousValue === this.value && currentValue !== this.value) {\n        this.onChangeEvent(null);\n      }\n    } else if (this.inputElement.value.trim() !== '') {\n      const previousValue = this.value;\n\n      if (isNullOrUndefined(value)) {\n        const value = this.inputElement.value === '' ? null : this.inputElement.value; // eslint-disable-next-line max-len\n\n        const eventArgs = {\n          text: value,\n          item: {}\n        };\n\n        if (!this.initial) {\n          this.trigger('customValueSpecifier', eventArgs, eventArgs => {\n            this.updateCustomValueCallback(value, eventArgs, previousValue, e);\n          });\n        } else {\n          this.updateCustomValueCallback(value, eventArgs, previousValue);\n        }\n      } else {\n        this.isSelectCustom = false;\n        this.setProperties({\n          value: value\n        });\n\n        if (previousValue !== this.value) {\n          this.onChangeEvent(e);\n        }\n      }\n    } else if (this.allowCustom) {\n      this.isSelectCustom = true;\n    }\n  }\n\n  updateCustomValueCallback(value, eventArgs, previousValue, e) {\n    const fields = this.fields;\n    const item = eventArgs.item;\n    let dataItem = {};\n\n    if (item && getValue(fields.text, item) && getValue(fields.value, item)) {\n      dataItem = item;\n    } else {\n      setValue(fields.text, value, dataItem);\n      setValue(fields.value, value, dataItem);\n    }\n\n    this.itemData = dataItem;\n    const changeData = {\n      text: getValue(fields.text, this.itemData),\n      value: getValue(fields.value, this.itemData),\n      index: null\n    };\n    this.setProperties(changeData, true);\n    this.setSelection(null, null);\n    this.isSelectCustom = true;\n\n    if (previousValue !== this.value) {\n      this.onChangeEvent(e);\n    }\n  }\n  /**\n   * Dynamically change the value of properties.\n   *\n   * @param {ComboBoxModel} newProp - Returns the dynamic property value of the component.\n   * @param {ComboBoxModel} oldProp - Returns the previous property value of the component.\n   * @private\n   * @returns {void}\n   */\n\n\n  onPropertyChanged(newProp, oldProp) {\n    if (this.getModuleName() === 'combobox') {\n      this.checkData(newProp);\n      this.setUpdateInitial(['fields', 'query', 'dataSource'], newProp);\n    }\n\n    for (const prop of Object.keys(newProp)) {\n      switch (prop) {\n        case 'readonly':\n          Input.setReadonly(this.readonly, this.inputElement);\n\n          if (this.readonly) {\n            EventHandler.remove(this.inputElement, 'input', this.onInput);\n            EventHandler.remove(this.inputElement, 'keyup', this.onFilterUp);\n            EventHandler.remove(this.inputElement, 'keydown', this.onFilterDown);\n          } else {\n            EventHandler.add(this.inputElement, 'input', this.onInput, this);\n            EventHandler.add(this.inputElement, 'keyup', this.onFilterUp, this);\n            EventHandler.add(this.inputElement, 'keydown', this.onFilterDown, this);\n          }\n\n          this.setReadOnly();\n          break;\n\n        case 'allowFiltering':\n          this.setSearchBox();\n\n          if (this.isFiltering() && this.getModuleName() === 'combobox' && isNullOrUndefined(this.list)) {\n            super.renderList();\n          }\n\n          break;\n\n        case 'allowCustom':\n          break;\n\n        default:\n          {\n            // eslint-disable-next-line max-len\n            const comboProps = this.getPropObject(prop, newProp, oldProp);\n            super.onPropertyChanged(comboProps.newProperty, comboProps.oldProperty);\n\n            if (this.isFiltering() && prop === 'dataSource' && isNullOrUndefined(this.list) && this.itemTemplate && this.getModuleName() === 'combobox') {\n              super.renderList();\n            }\n\n            break;\n          }\n      }\n    }\n  }\n  /**\n   * To initialize the control rendering.\n   *\n   * @private\n   * @returns {void}\n   */\n\n\n  render() {\n    super.render();\n    this.setSearchBox();\n\n    if (this.isFiltering() && this.getModuleName() === 'combobox' && isNullOrUndefined(this.list)) {\n      super.renderList();\n    }\n\n    this.renderComplete();\n  }\n  /**\n   * Return the module name of this component.\n   *\n   * @private\n   * @returns {string} Return the module name of this component.\n   */\n\n\n  getModuleName() {\n    return 'combobox';\n  }\n  /**\n   * Adds a new item to the combobox popup list. By default, new item appends to the list as the last item,\n   * but you can insert based on the index parameter.\n   *\n   * @param  { Object[] } items - Specifies an array of JSON data or a JSON data.\n   * @param { number } itemIndex - Specifies the index to place the newly added item in the popup list.\n   * @returns {void}\n   * @deprecated\n   */\n\n\n  addItem(items, itemIndex) {\n    super.addItem(items, itemIndex);\n  }\n  /**\n   * To filter the data from given data source by using query\n   *\n   * @param  {Object[] | DataManager } dataSource - Set the data source to filter.\n   * @param  {Query} query - Specify the query to filter the data.\n   * @param  {FieldSettingsModel} fields - Specify the fields to map the column in the data table.\n   * @returns {void}\n   * @deprecated\n   */\n\n\n  filter(dataSource, query, fields) {\n    super.filter(dataSource, query, fields);\n  }\n  /**\n   * Opens the popup that displays the list of items.\n   *\n   * @returns {void}\n   * @deprecated\n   */\n\n\n  showPopup() {\n    super.showPopup();\n  }\n  /* eslint-disable valid-jsdoc, jsdoc/require-param */\n\n  /**\n   * Hides the popup if it is in open state.\n   *\n   * @returns {void}\n   * @deprecated\n   */\n\n\n  hidePopup(e) {\n    /* eslint-enable valid-jsdoc, jsdoc/require-param */\n    const inputValue = this.inputElement && this.inputElement.value === '' ? null : this.inputElement && this.inputElement.value;\n\n    if (!isNullOrUndefined(this.listData)) {\n      const isEscape = this.isEscapeKey;\n\n      if (this.isEscapeKey) {\n        Input.setValue(this.typedString, this.inputElement, this.floatLabelType, this.showClearButton);\n        this.isEscapeKey = false;\n      }\n\n      if (this.autofill) {\n        this.removeFillSelection();\n      }\n\n      const dataItem = this.isSelectCustom ? {\n        text: ''\n      } : this.getItemData();\n      const selected = this.list.querySelector('.' + dropDownListClasses.selected);\n\n      if (this.inputElement && dataItem.text === this.inputElement.value && !isNullOrUndefined(selected)) {\n        if (this.isSelected) {\n          this.onChangeEvent(e);\n          this.isSelectCustom = false;\n        }\n\n        super.hidePopup(e);\n        return;\n      }\n\n      if (this.getModuleName() === 'combobox' && this.inputElement.value.trim() !== '') {\n        const searchItem = Search(this.inputElement.value, this.liCollections, 'Equal', true);\n        this.selectedLI = searchItem.item;\n\n        if (isNullOrUndefined(searchItem.index)) {\n          searchItem.index = Search(this.inputElement.value, this.liCollections, 'StartsWith', true).index;\n        }\n\n        this.activeIndex = searchItem.index;\n\n        if (!isNullOrUndefined(this.selectedLI)) {\n          this.updateSelectedItem(this.selectedLI, null, true);\n        } else if (isEscape) {\n          this.isSelectCustom = true;\n          this.removeSelection();\n        }\n      }\n\n      if (!this.isEscapeKey && this.isTyped && !this.isInteracted) {\n        this.customValue(e);\n      }\n    }\n\n    if (isNullOrUndefined(this.listData) && this.allowCustom && !isNullOrUndefined(inputValue) && inputValue !== this.value) {\n      this.customValue();\n    }\n\n    super.hidePopup(e);\n  }\n  /**\n   * Sets the focus to the component for interaction.\n   *\n   * @returns {void}\n   */\n\n\n  focusIn() {\n    if (!this.enabled) {\n      return;\n    }\n\n    if (Browser.isDevice && !this.isFiltering()) {\n      this.preventFocus = true;\n    }\n\n    super.focusIn();\n  }\n  /**\n   * Allows you to clear the selected values from the component.\n   *\n   * @returns {void}\n   * @deprecated\n   */\n\n\n  clear() {\n    this.value = null;\n  }\n  /* eslint-disable valid-jsdoc, jsdoc/require-param */\n\n  /**\n   * Moves the focus from the component if the component is already focused.\n   *\n   * @returns {void}\n   * @deprecated\n   */\n\n\n  focusOut(e) {\n    /* eslint-enable valid-jsdoc, jsdoc/require-param */\n    super.focusOut(e);\n  }\n  /* eslint-disable valid-jsdoc, jsdoc/require-returns-description */\n\n  /**\n   * Gets all the list items bound on this component.\n   *\n   * @returns {Element[]}\n   * @deprecated\n   */\n\n\n  getItems() {\n    return super.getItems();\n  }\n  /**\n   * Gets the data Object that matches the given value.\n   *\n   * @param { string | number } value - Specifies the value of the list item.\n   * @returns {Object}\n   * @deprecated\n   */\n\n\n  getDataByValue(value) {\n    return super.getDataByValue(value);\n  }\n  /* eslint-enable valid-jsdoc, jsdoc/require-returns-description */\n\n\n  renderHightSearch() {// update high light search\n  }\n\n};\n\n__decorate$3([Property(false)], ComboBox.prototype, \"autofill\", void 0);\n\n__decorate$3([Property(true)], ComboBox.prototype, \"allowCustom\", void 0);\n\n__decorate$3([Property({})], ComboBox.prototype, \"htmlAttributes\", void 0);\n\n__decorate$3([Property(false)], ComboBox.prototype, \"allowFiltering\", void 0);\n\n__decorate$3([Property(null)], ComboBox.prototype, \"query\", void 0);\n\n__decorate$3([Property(null)], ComboBox.prototype, \"index\", void 0);\n\n__decorate$3([Property(true)], ComboBox.prototype, \"showClearButton\", void 0);\n\n__decorate$3([Property(false)], ComboBox.prototype, \"enableRtl\", void 0);\n\n__decorate$3([Event()], ComboBox.prototype, \"customValueSpecifier\", void 0);\n\n__decorate$3([Event()], ComboBox.prototype, \"filtering\", void 0);\n\n__decorate$3([Property(null)], ComboBox.prototype, \"valueTemplate\", void 0);\n\n__decorate$3([Property('Never')], ComboBox.prototype, \"floatLabelType\", void 0);\n\n__decorate$3([Property(null)], ComboBox.prototype, \"filterBarPlaceholder\", void 0);\n\n__decorate$3([Property(null)], ComboBox.prototype, \"cssClass\", void 0);\n\n__decorate$3([Property(null)], ComboBox.prototype, \"headerTemplate\", void 0);\n\n__decorate$3([Property(null)], ComboBox.prototype, \"footerTemplate\", void 0);\n\n__decorate$3([Property(null)], ComboBox.prototype, \"placeholder\", void 0);\n\n__decorate$3([Property('100%')], ComboBox.prototype, \"width\", void 0);\n\n__decorate$3([Property('300px')], ComboBox.prototype, \"popupHeight\", void 0);\n\n__decorate$3([Property('100%')], ComboBox.prototype, \"popupWidth\", void 0);\n\n__decorate$3([Property(false)], ComboBox.prototype, \"readonly\", void 0);\n\n__decorate$3([Property(null)], ComboBox.prototype, \"text\", void 0);\n\n__decorate$3([Property(null)], ComboBox.prototype, \"value\", void 0);\n\nComboBox = __decorate$3([NotifyPropertyChanges], ComboBox);\n/**\n * export all modules from current location\n */\n\nvar __decorate$4 = undefined && undefined.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}; // eslint-disable-next-line @typescript-eslint/triple-slash-reference\n/// <reference path='../combo-box/combo-box-model.d.ts'/>\n\n\ndropDownListClasses.root = 'e-autocomplete';\ndropDownListClasses.icon = 'e-input-group-icon e-ddl-icon e-search-icon';\n/**\n * The AutoComplete component provides the matched suggestion list when type into the input,\n * from which the user can select one.\n * ```html\n * <input id=\"list\" type=\"text\"/>\n * ```\n * ```typescript\n *   let atcObj:AutoComplete = new AutoComplete();\n *   atcObj.appendTo(\"#list\");\n * ```\n */\n\nlet AutoComplete = class AutoComplete extends ComboBox {\n  /**\n   * * Constructor for creating the widget\n   *\n   * @param {AutoCompleteModel} options - Specifies the AutoComplete model.\n   * @param {string | HTMLElement} element - Specifies the element to render as component.\n   * @private\n   */\n  constructor(options, element) {\n    super(options, element);\n    this.isFiltered = false;\n    this.searchList = false;\n  }\n  /**\n   * Initialize the event handler\n   *\n   * @private\n   * @returns {void}\n   */\n\n\n  preRender() {\n    super.preRender();\n  }\n\n  getLocaleName() {\n    return 'auto-complete';\n  }\n\n  getNgDirective() {\n    return 'EJS-AUTOCOMPLETE';\n  }\n\n  getQuery(query) {\n    const filterQuery = query ? query.clone() : this.query ? this.query.clone() : new Query();\n    const filterType = this.queryString === '' && !isNullOrUndefined(this.value) ? 'equal' : this.filterType;\n    const queryString = this.queryString === '' && !isNullOrUndefined(this.value) ? this.value : this.queryString;\n\n    if (this.isFiltered) {\n      return filterQuery;\n    }\n\n    if (this.queryString !== null && this.queryString !== '') {\n      const dataType = this.typeOfData(this.dataSource).typeof;\n\n      if (!(this.dataSource instanceof DataManager) && dataType === 'string' || dataType === 'number') {\n        filterQuery.where('', filterType, queryString, this.ignoreCase, this.ignoreAccent);\n      } else {\n        const mapping = !isNullOrUndefined(this.fields.value) ? this.fields.value : '';\n        filterQuery.where(mapping, filterType, queryString, this.ignoreCase, this.ignoreAccent);\n      }\n    }\n\n    if (!isNullOrUndefined(this.suggestionCount)) {\n      // Since defualt value of suggestioncount is 20, checked the condition\n      if (this.suggestionCount !== 20) {\n        for (let queryElements = 0; queryElements < filterQuery.queries.length; queryElements++) {\n          if (filterQuery.queries[queryElements].fn === 'onTake') {\n            filterQuery.queries.splice(queryElements, 1);\n          }\n        }\n      }\n\n      filterQuery.take(this.suggestionCount);\n    }\n\n    return filterQuery;\n  }\n\n  searchLists(e) {\n    this.isTyped = true;\n    this.isDataFetched = this.isSelectCustom = false;\n\n    if (isNullOrUndefined(this.list)) {\n      super.renderList(true);\n    }\n\n    this.queryString = this.filterInput.value;\n\n    if (e.type !== 'mousedown' && (e.keyCode === 40 || e.keyCode === 38)) {\n      this.queryString = this.queryString === '' ? null : this.queryString;\n      this.beforePopupOpen = true;\n      this.resetList(this.dataSource, this.fields);\n      return;\n    }\n\n    this.isSelected = false;\n    this.activeIndex = null;\n    const eventArgs = {\n      preventDefaultAction: false,\n      text: this.filterInput.value,\n      updateData: (dataSource, query, fields) => {\n        if (eventArgs.cancel) {\n          return;\n        }\n\n        this.isFiltered = true;\n        this.filterAction(dataSource, query, fields);\n      },\n      cancel: false\n    };\n    this.trigger('filtering', eventArgs, eventArgs => {\n      if (!eventArgs.cancel && !this.isFiltered && !eventArgs.preventDefaultAction) {\n        this.searchList = true;\n        this.filterAction(this.dataSource, null, this.fields);\n      }\n    });\n  }\n  /**\n   * To filter the data from given data source by using query\n   *\n   * @param  {Object[] | DataManager } dataSource - Set the data source to filter.\n   * @param  {Query} query - Specify the query to filter the data.\n   * @param  {FieldSettingsModel} fields - Specify the fields to map the column in the data table.\n   * @returns {void}\n   * @deprecated\n   */\n\n\n  filter(dataSource, query, fields) {\n    this.isFiltered = true;\n    this.filterAction(dataSource, query, fields);\n  }\n\n  filterAction(dataSource, query, fields) {\n    this.beforePopupOpen = true;\n\n    if (this.queryString !== '' && this.queryString.length >= this.minLength) {\n      this.resetList(dataSource, fields, query);\n    } else {\n      this.hidePopup();\n      this.beforePopupOpen = false;\n    }\n\n    this.renderReactTemplates();\n  }\n\n  clearAll(e, property) {\n    if (isNullOrUndefined(property) || !isNullOrUndefined(property) && isNullOrUndefined(property.dataSource)) {\n      super.clearAll(e);\n    }\n\n    if (this.beforePopupOpen) {\n      this.hidePopup();\n    }\n  } // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  onActionComplete(ulElement, list, e, isUpdated) {\n    this.fixedHeaderElement = null;\n    super.onActionComplete(ulElement, list, e);\n    const item = this.list.querySelector('.' + dropDownListClasses.li);\n\n    if (!isNullOrUndefined(item)) {\n      removeClass([item], dropDownListClasses.focus);\n    }\n\n    this.postBackAction();\n  }\n\n  postBackAction() {\n    if (this.autofill && !isNullOrUndefined(this.liCollections[0]) && this.searchList) {\n      const items = [this.liCollections[0]];\n      const searchItem = Search(this.inputElement.value, items, 'StartsWith', this.ignoreCase);\n      this.searchList = false;\n\n      if (!isNullOrUndefined(searchItem.item)) {\n        super.setAutoFill(this.liCollections[0], true);\n      }\n    }\n  }\n\n  setSelection(li, e) {\n    if (!this.isValidLI(li)) {\n      return;\n    }\n\n    if (!isNullOrUndefined(e) && e.type === 'keydown' && e.action !== 'enter' && e.action !== 'tab' && this.isValidLI(li)) {\n      const value = this.getFormattedValue(li.getAttribute('data-value'));\n      this.activeIndex = this.getIndexByValue(value);\n      this.setHoverList(li);\n      this.selectedLI = li;\n      this.setScrollPosition(e);\n\n      if (this.autofill && this.isPopupOpen) {\n        this.preventAutoFill = false;\n        const isKeyNavigate = e && e.action === 'down' || e.action === 'up' || e.action === 'home' || e.action === 'end' || e.action === 'pageUp' || e.action === 'pageDown';\n        super.setAutoFill(li, isKeyNavigate);\n      }\n\n      attributes(this.inputElement, {\n        'aria-activedescendant': this.selectedLI ? this.selectedLI.id : null\n      });\n    } else {\n      super.setSelection(li, e);\n    }\n  }\n\n  listOption(dataSource, fieldsSettings) {\n    const fields = super.listOption(dataSource, fieldsSettings);\n\n    if (isNullOrUndefined(fields.itemCreated)) {\n      fields.itemCreated = e => {\n        if (this.highlight) {\n          if (this.element.tagName === this.getNgDirective() && this.itemTemplate) {\n            setTimeout(() => {\n              highlightSearch(e.item, this.queryString, this.ignoreCase, this.filterType);\n            }, 0);\n          } else {\n            highlightSearch(e.item, this.queryString, this.ignoreCase, this.filterType);\n          }\n        }\n      };\n    } else {\n      const itemCreated = fields.itemCreated;\n\n      fields.itemCreated = e => {\n        if (this.highlight) {\n          highlightSearch(e.item, this.queryString, this.ignoreCase, this.filterType);\n        }\n\n        itemCreated.apply(this, [e]);\n      };\n    }\n\n    return fields;\n  }\n\n  isFiltering() {\n    return true;\n  }\n\n  renderPopup() {\n    this.list.scrollTop = 0;\n    super.renderPopup();\n  }\n\n  isEditTextBox() {\n    return true && this.inputElement.value.trim() !== '';\n  }\n\n  isPopupButton() {\n    return this.showPopupButton;\n  } // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  isSelectFocusItem(element) {\n    return false;\n  }\n  /**\n   * Search the entered text and show it in the suggestion list if available.\n   *\n   * @returns {void}\n   * @deprecated\n   */\n\n\n  showPopup() {\n    if (!this.enabled) {\n      return;\n    }\n\n    if (this.beforePopupOpen) {\n      this.refreshPopup();\n      return;\n    }\n\n    this.beforePopupOpen = true;\n    this.preventAutoFill = true;\n\n    if (isNullOrUndefined(this.list)) {\n      this.renderList();\n    } else {\n      this.resetList(this.dataSource, this.fields);\n    }\n  }\n  /**\n   * Hides the popup if it is in open state.\n   *\n   * @returns {void}\n   */\n\n\n  hidePopup(e) {\n    super.hidePopup(e);\n    this.activeIndex = -1;\n  }\n  /**\n   * Dynamically change the value of properties.\n   *\n   * @param {AutoCompleteModel} newProp - Returns the dynamic property value of the component.\n   * @param {AutoCompleteModel} oldProp - Returns the previous property value of the component.\n   * @private\n   * @returns {void}\n   */\n\n\n  onPropertyChanged(newProp, oldProp) {\n    if (this.getModuleName() === 'autocomplete') {\n      this.setUpdateInitial(['fields', 'query', 'dataSource'], newProp);\n    }\n\n    for (const prop of Object.keys(newProp)) {\n      switch (prop) {\n        case 'showPopupButton':\n          if (this.showPopupButton) {\n            const button = Input.appendSpan(dropDownListClasses.icon, this.inputWrapper.container, this.createElement);\n            this.inputWrapper.buttons[0] = button;\n\n            if (this.inputWrapper && this.inputWrapper.buttons && this.inputWrapper.buttons[0]) {\n              EventHandler.add(this.inputWrapper.buttons[0], 'click', this.dropDownClick, this);\n            }\n          } else {\n            detach(this.inputWrapper.buttons[0]);\n            this.inputWrapper.buttons[0] = null;\n          }\n\n          break;\n\n        default:\n          {\n            // eslint-disable-next-line max-len\n            const atcProps = this.getPropObject(prop, newProp, oldProp);\n            super.onPropertyChanged(atcProps.newProperty, atcProps.oldProperty);\n            break;\n          }\n      }\n    }\n  }\n\n  renderHightSearch() {\n    if (this.highlight) {\n      for (let i = 0; i < this.liCollections.length; i++) {\n        const isHighlight = this.ulElement.querySelector('.e-active');\n\n        if (!isHighlight) {\n          revertHighlightSearch(this.liCollections[i]);\n          highlightSearch(this.liCollections[i], this.queryString, this.ignoreCase, this.filterType);\n        }\n      }\n    }\n  }\n  /**\n   * Return the module name of this component.\n   *\n   * @private\n   * @returns {string} Return the module name of this component.\n   */\n\n\n  getModuleName() {\n    return 'autocomplete';\n  }\n  /**\n   * To initialize the control rendering\n   *\n   * @private\n   * @returns {void}\n   */\n\n\n  render() {\n    super.render();\n  }\n\n};\n\n__decorate$4([Complex({\n  value: null,\n  iconCss: null,\n  groupBy: null\n}, FieldSettings)], AutoComplete.prototype, \"fields\", void 0);\n\n__decorate$4([Property(true)], AutoComplete.prototype, \"ignoreCase\", void 0);\n\n__decorate$4([Property(false)], AutoComplete.prototype, \"showPopupButton\", void 0);\n\n__decorate$4([Property(false)], AutoComplete.prototype, \"highlight\", void 0);\n\n__decorate$4([Property(20)], AutoComplete.prototype, \"suggestionCount\", void 0);\n\n__decorate$4([Property({})], AutoComplete.prototype, \"htmlAttributes\", void 0);\n\n__decorate$4([Property(null)], AutoComplete.prototype, \"query\", void 0);\n\n__decorate$4([Property(1)], AutoComplete.prototype, \"minLength\", void 0);\n\n__decorate$4([Property('Contains')], AutoComplete.prototype, \"filterType\", void 0);\n\n__decorate$4([Event()], AutoComplete.prototype, \"filtering\", void 0);\n\n__decorate$4([Property(null)], AutoComplete.prototype, \"index\", void 0);\n\n__decorate$4([Property('Never')], AutoComplete.prototype, \"floatLabelType\", void 0);\n\n__decorate$4([Property(null)], AutoComplete.prototype, \"valueTemplate\", void 0);\n\n__decorate$4([Property(null)], AutoComplete.prototype, \"filterBarPlaceholder\", void 0);\n\n__decorate$4([Property(false)], AutoComplete.prototype, \"allowFiltering\", void 0);\n\n__decorate$4([Property(null)], AutoComplete.prototype, \"text\", void 0);\n\nAutoComplete = __decorate$4([NotifyPropertyChanges], AutoComplete);\n/**\n * export all modules from current location\n */\n\n/**\n * FloatLable Moduel\n * Specifies whether to display the floating label above the input element.\n */\n\nconst FLOATLINE = 'e-float-line';\nconst FLOATTEXT = 'e-float-text';\nconst LABELTOP = 'e-label-top';\nconst LABELBOTTOM = 'e-label-bottom';\n/* eslint-disable valid-jsdoc */\n\n/**\n * Function to create Float Label element.\n *\n * @param {HTMLDivElement} overAllWrapper - Overall wrapper of multiselect.\n * @param {HTMLElement} searchWrapper - Search wrapper of multiselect.\n * @param {HTMLElement} element - The given html element.\n * @param {HTMLInputElement} inputElement - Specify the input wrapper.\n * @param {number[] | string[] | boolean[]} value - Value of the MultiSelect.\n * @param {FloatLabelType} floatLabelType - Specify the FloatLabel Type.\n * @param {string} placeholder - Specify the PlaceHolder text.\n */\n\nfunction createFloatLabel(overAllWrapper, searchWrapper, element, inputElement, value, floatLabelType, placeholder) {\n  const floatLinelement = createElement('span', {\n    className: FLOATLINE\n  });\n  const floatLabelElement = createElement('label', {\n    className: FLOATTEXT\n  });\n\n  if (!isNullOrUndefined(element.id) && element.id !== '') {\n    floatLabelElement.id = 'label_' + element.id.replace(/ /g, '_');\n    attributes(element, {\n      'aria-labelledby': floatLabelElement.id\n    });\n  }\n\n  if (!isNullOrUndefined(inputElement.placeholder) && inputElement.placeholder !== '') {\n    floatLabelElement.innerText = encodePlaceholder(inputElement.placeholder);\n    inputElement.removeAttribute('placeholder');\n  }\n\n  floatLabelElement.innerText = encodePlaceholder(placeholder);\n  searchWrapper.appendChild(floatLinelement);\n  searchWrapper.appendChild(floatLabelElement);\n  overAllWrapper.classList.add('e-float-input');\n  updateFloatLabelState(value, floatLabelElement);\n\n  if (floatLabelType === 'Always') {\n    if (floatLabelElement.classList.contains(LABELBOTTOM)) {\n      removeClass([floatLabelElement], LABELBOTTOM);\n    }\n\n    addClass([floatLabelElement], LABELTOP);\n  }\n}\n/**\n * Function to update status of the Float Label element.\n *\n * @param {string[] | number[] | boolean[]} value - Value of the MultiSelect.\n * @param {HTMLElement} label - Float label element.\n */\n\n\nfunction updateFloatLabelState(value, label) {\n  if (value && value.length > 0) {\n    addClass([label], LABELTOP);\n    removeClass([label], LABELBOTTOM);\n  } else {\n    removeClass([label], LABELTOP);\n    addClass([label], LABELBOTTOM);\n  }\n}\n/**\n * Function to remove Float Label element.\n *\n * @param {HTMLDivElement} overAllWrapper - Overall wrapper of multiselect.\n * @param {HTMLDivElement} componentWrapper - Wrapper element of multiselect.\n * @param {HTMLElement} searchWrapper - Search wrapper of multiselect.\n * @param {HTMLInputElement} inputElement - Specify the input wrapper.\n * @param {number[] | string[] | boolean[]} value - Value of the MultiSelect.\n * @param {FloatLabelType} floatLabelType - Specify the FloatLabel Type.\n * @param {string} placeholder - Specify the PlaceHolder text.\n */\n\n\nfunction removeFloating(overAllWrapper, componentWrapper, searchWrapper, inputElement, value, floatLabelType, placeholder) {\n  const placeholderElement = componentWrapper.querySelector('.' + FLOATTEXT);\n  const floatLine = componentWrapper.querySelector('.' + FLOATLINE);\n  let placeholderText;\n\n  if (!isNullOrUndefined(placeholderElement)) {\n    placeholderText = placeholderElement.innerText;\n    detach(searchWrapper.querySelector('.' + FLOATTEXT));\n    setPlaceHolder(value, inputElement, placeholderText);\n\n    if (!isNullOrUndefined(floatLine)) {\n      detach(searchWrapper.querySelector('.' + FLOATLINE));\n    }\n  } else {\n    placeholderText = placeholder !== null ? placeholder : '';\n    setPlaceHolder(value, inputElement, placeholderText);\n  }\n\n  overAllWrapper.classList.remove('e-float-input');\n}\n/**\n * Function to set the placeholder to the element.\n *\n * @param {number[] | string[] | boolean[]} value - Value of the MultiSelect.\n * @param {HTMLInputElement} inputElement - Specify the input wrapper.\n * @param {string} placeholder - Specify the PlaceHolder text.\n */\n\n\nfunction setPlaceHolder(value, inputElement, placeholder) {\n  if (value && value.length) {\n    inputElement.placeholder = '';\n  } else {\n    inputElement.placeholder = placeholder;\n  }\n}\n/**\n * Function for focusing the Float Element.\n *\n * @param {HTMLDivElement} overAllWrapper - Overall wrapper of multiselect.\n * @param {HTMLDivElement} componentWrapper - Wrapper element of multiselect.\n */\n\n\nfunction floatLabelFocus(overAllWrapper, componentWrapper) {\n  overAllWrapper.classList.add('e-input-focus');\n  const label = componentWrapper.querySelector('.' + FLOATTEXT);\n\n  if (!isNullOrUndefined(label)) {\n    addClass([label], LABELTOP);\n\n    if (label.classList.contains(LABELBOTTOM)) {\n      removeClass([label], LABELBOTTOM);\n    }\n  }\n}\n/* eslint-disable @typescript-eslint/no-unused-vars */\n\n/**\n * Function to focus the Float Label element.\n *\n * @param {HTMLDivElement} overAllWrapper - Overall wrapper of multiselect.\n * @param {HTMLDivElement} componentWrapper - Wrapper element of multiselect.\n * @param {number[] | string[] | boolean[]} value - Value of the MultiSelect.\n * @param {FloatLabelType} floatLabelType - Specify the FloatLabel Type.\n * @param {string} placeholder - Specify the PlaceHolder text.\n */\n\n\nfunction floatLabelBlur(overAllWrapper, componentWrapper, value, floatLabelType, placeholder) {\n  /* eslint-enable @typescript-eslint/no-unused-vars */\n  overAllWrapper.classList.remove('e-input-focus');\n  const label = componentWrapper.querySelector('.' + FLOATTEXT);\n\n  if (value && value.length <= 0 && floatLabelType === 'Auto' && !isNullOrUndefined(label)) {\n    if (label.classList.contains(LABELTOP)) {\n      removeClass([label], LABELTOP);\n    }\n\n    addClass([label], LABELBOTTOM);\n  }\n}\n\nfunction encodePlaceholder(placeholder) {\n  let result = '';\n\n  if (!isNullOrUndefined(placeholder) && placeholder !== '') {\n    const spanElement = document.createElement('span');\n    spanElement.innerHTML = '<input  placeholder=\"' + placeholder + '\"/>';\n    const hiddenInput = spanElement.children[0];\n    result = hiddenInput.placeholder;\n  }\n\n  return result;\n}\n/* eslint-enable valid-jsdoc */\n\n\nvar __decorate$5 = undefined && undefined.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}; // eslint-disable-next-line @typescript-eslint/triple-slash-reference\n/// <reference path='../drop-down-base/drop-down-base-model.d.ts'/>\n\n\nconst FOCUS = 'e-input-focus';\nconst DISABLED$1 = 'e-disabled';\nconst OVER_ALL_WRAPPER = 'e-multiselect e-input-group e-control-wrapper';\nconst ELEMENT_WRAPPER = 'e-multi-select-wrapper';\nconst ELEMENT_MOBILE_WRAPPER = 'e-mob-wrapper';\nconst HIDE_LIST = 'e-hide-listitem';\nconst DELIMITER_VIEW = 'e-delim-view';\nconst CHIP_WRAPPER$1 = 'e-chips-collection';\nconst CHIP$1 = 'e-chips';\nconst CHIP_CONTENT$1 = 'e-chipcontent';\nconst CHIP_CLOSE$1 = 'e-chips-close';\nconst CHIP_SELECTED = 'e-chip-selected';\nconst SEARCHBOX_WRAPPER = 'e-searcher';\nconst DELIMITER_VIEW_WRAPPER = 'e-delimiter';\nconst ZERO_SIZE = 'e-zero-size';\nconst REMAIN_WRAPPER$1 = 'e-remain';\nconst CLOSEICON_CLASS$1 = 'e-chips-close e-close-hooker';\nconst DELIMITER_WRAPPER = 'e-delim-values';\nconst POPUP_WRAPPER = 'e-ddl e-popup e-multi-select-list-wrapper';\nconst INPUT_ELEMENT = 'e-dropdownbase';\nconst RTL_CLASS = 'e-rtl';\nconst CLOSE_ICON_HIDE = 'e-close-icon-hide';\nconst MOBILE_CHIP = 'e-mob-chip';\nconst FOOTER$1 = 'e-ddl-footer';\nconst HEADER$1 = 'e-ddl-header';\nconst DISABLE_ICON = 'e-ddl-disable-icon';\nconst SPINNER_CLASS$1 = 'e-ms-spinner-icon';\nconst HIDDEN_ELEMENT = 'e-multi-hidden';\nconst destroy = 'destroy';\nconst dropdownIcon = 'e-input-group-icon e-ddl-icon';\nconst iconAnimation = 'e-icon-anim';\nconst TOTAL_COUNT_WRAPPER$1 = 'e-delim-total';\nconst BOX_ELEMENT = 'e-multiselect-box';\nconst FILTERPARENT = 'e-filter-parent';\nconst CUSTOM_WIDTH = 'e-search-custom-width';\nconst FILTERINPUT = 'e-input-filter';\n/**\n * The Multiselect allows the user to pick a more than one value from list of predefined values.\n * ```html\n * <select id=\"list\">\n *      <option value='1'>Badminton</option>\n *      <option value='2'>Basketball</option>\n *      <option value='3'>Cricket</option>\n *      <option value='4'>Football</option>\n *      <option value='5'>Tennis</option>\n * </select>\n * ```\n * ```typescript\n * <script>\n *   var multiselectObj = new Multiselect();\n *   multiselectObj.appendTo(\"#list\");\n * </script>\n * ```\n */\n\nlet MultiSelect = class MultiSelect extends DropDownBase {\n  /**\n   * Constructor for creating the DropDownList widget.\n   *\n   * @param {MultiSelectModel} option - Specifies the MultiSelect model.\n   * @param {string | HTMLElement} element - Specifies the element to render as component.\n   * @private\n   */\n  constructor(option, element) {\n    super(option, element);\n    this.clearIconWidth = 0;\n    this.previousFilterText = '';\n    this.isValidKey = false;\n    this.selectAllEventData = [];\n    this.selectAllEventEle = [];\n    this.scrollFocusStatus = false;\n    this.keyDownStatus = false;\n  }\n\n  enableRTL(state) {\n    if (state) {\n      this.overAllWrapper.classList.add(RTL_CLASS);\n    } else {\n      this.overAllWrapper.classList.remove(RTL_CLASS);\n    }\n\n    if (this.popupObj) {\n      this.popupObj.enableRtl = state;\n      this.popupObj.dataBind();\n    }\n  }\n\n  requiredModules() {\n    const modules = [];\n\n    if (this.mode === 'CheckBox') {\n      this.isGroupChecking = this.enableGroupCheckBox;\n\n      if (this.enableGroupCheckBox) {\n        const prevOnChange = this.isProtectedOnChange;\n        this.isProtectedOnChange = true;\n        this.enableSelectionOrder = false;\n        this.isProtectedOnChange = prevOnChange;\n      }\n\n      this.allowCustomValue = false;\n      this.hideSelectedItem = false;\n      this.closePopupOnSelect = false;\n      modules.push({\n        member: 'CheckBoxSelection',\n        args: [this]\n      });\n    }\n\n    return modules;\n  }\n\n  updateHTMLAttribute() {\n    if (Object.keys(this.htmlAttributes).length) {\n      for (const htmlAttr of Object.keys(this.htmlAttributes)) {\n        switch (htmlAttr) {\n          case 'class':\n            {\n              const updatedClassValue = this.htmlAttributes[htmlAttr].replace(/\\s+/g, ' ').trim();\n\n              if (updatedClassValue !== '') {\n                addClass([this.overAllWrapper], updatedClassValue.split(' '));\n                addClass([this.popupWrapper], updatedClassValue.split(' '));\n              }\n\n              break;\n            }\n\n          case 'disabled':\n            this.enable(false);\n            break;\n\n          case 'placeholder':\n            if (!this.placeholder) {\n              this.inputElement.setAttribute(htmlAttr, this.htmlAttributes[htmlAttr]);\n              this.setProperties({\n                placeholder: this.inputElement.placeholder\n              }, true);\n              this.refreshPlaceHolder();\n            }\n\n            break;\n\n          default:\n            {\n              const defaultAttr = ['id'];\n              const validateAttr = ['name', 'required', 'aria-required', 'form'];\n              const containerAttr = ['title', 'role', 'style', 'class'];\n\n              if (defaultAttr.indexOf(htmlAttr) > -1) {\n                this.element.setAttribute(htmlAttr, this.htmlAttributes[htmlAttr]);\n              } else if (htmlAttr.indexOf('data') === 0 || validateAttr.indexOf(htmlAttr) > -1) {\n                this.hiddenElement.setAttribute(htmlAttr, this.htmlAttributes[htmlAttr]);\n              } else if (containerAttr.indexOf(htmlAttr) > -1) {\n                this.overAllWrapper.setAttribute(htmlAttr, this.htmlAttributes[htmlAttr]);\n              } else if (htmlAttr !== 'size') {\n                this.inputElement.setAttribute(htmlAttr, this.htmlAttributes[htmlAttr]);\n              }\n\n              break;\n            }\n        }\n      }\n    }\n  }\n\n  updateReadonly(state) {\n    if (state || this.mode === 'CheckBox') {\n      this.inputElement.setAttribute('readonly', 'true');\n    } else {\n      this.inputElement.removeAttribute('readonly');\n    }\n  }\n\n  updateClearButton(state) {\n    if (state) {\n      if (this.overAllClear.parentNode) {\n        this.overAllClear.style.display = '';\n      } else {\n        this.componentWrapper.appendChild(this.overAllClear);\n      }\n\n      this.componentWrapper.classList.remove(CLOSE_ICON_HIDE);\n    } else {\n      this.overAllClear.style.display = 'none';\n      this.componentWrapper.classList.add(CLOSE_ICON_HIDE);\n    }\n  }\n\n  updateCssClass() {\n    if (!isNullOrUndefined(this.cssClass) && this.cssClass !== '') {\n      let updatedCssClassValues = this.cssClass;\n      updatedCssClassValues = this.cssClass.replace(/\\s+/g, ' ').trim();\n\n      if (updatedCssClassValues !== '') {\n        addClass([this.overAllWrapper], updatedCssClassValues.split(' '));\n        addClass([this.popupWrapper], updatedCssClassValues.split(' '));\n      }\n    }\n  }\n\n  updateOldPropCssClass(oldClass) {\n    if (!isNullOrUndefined(oldClass) && oldClass !== '') {\n      oldClass = oldClass.replace(/\\s+/g, ' ').trim();\n\n      if (oldClass !== '') {\n        removeClass([this.overAllWrapper], oldClass.split(' '));\n        removeClass([this.popupWrapper], oldClass.split(' '));\n      }\n    }\n  }\n\n  onPopupShown() {\n    if (Browser.isDevice && this.mode === 'CheckBox' && this.allowFiltering) {\n      // eslint-disable-next-line @typescript-eslint/no-this-alias\n      const proxy = this;\n\n      window.onpopstate = () => {\n        proxy.hidePopup();\n        proxy.inputElement.focus();\n      };\n\n      history.pushState({}, '');\n    }\n\n    const animModel = {\n      name: 'FadeIn',\n      duration: 100\n    };\n    const eventArgs = {\n      popup: this.popupObj,\n      cancel: false,\n      animation: animModel\n    };\n    this.trigger('open', eventArgs, eventArgs => {\n      if (!eventArgs.cancel) {\n        this.focusAtFirstListItem();\n        document.body.appendChild(this.popupObj.element);\n\n        if (this.mode === 'CheckBox' && this.enableGroupCheckBox && !isNullOrUndefined(this.fields.groupBy)) {\n          this.updateListItems(this.list.querySelectorAll('li.e-list-item'), this.mainList.querySelectorAll('li.e-list-item'));\n        }\n\n        if (this.mode === 'CheckBox' || this.showDropDownIcon) {\n          addClass([this.overAllWrapper], [iconAnimation]);\n        }\n\n        this.refreshPopup();\n        this.renderReactTemplates();\n        this.popupObj.show(eventArgs.animation, this.zIndex === 1000 ? this.element : null);\n        attributes(this.inputElement, {\n          'aria-expanded': 'true'\n        });\n\n        if (this.isFirstClick) {\n          this.loadTemplate();\n        }\n      }\n    });\n  }\n\n  updateListItems(listItems, mainListItems) {\n    for (let i = 0; i < listItems.length; i++) {\n      this.findGroupStart(listItems[i]);\n      this.findGroupStart(mainListItems[i]);\n    }\n\n    this.deselectHeader();\n  }\n\n  loadTemplate() {\n    this.refreshListItems(null);\n\n    if (this.mode === 'CheckBox') {\n      this.removeFocus();\n    }\n\n    this.notify('reOrder', {\n      module: 'CheckBoxSelection',\n      enable: this.mode === 'CheckBox',\n      e: this\n    });\n  }\n\n  setScrollPosition() {\n    if ((!this.hideSelectedItem && this.mode !== 'CheckBox' || this.mode === 'CheckBox' && !this.enableSelectionOrder) && !isNullOrUndefined(this.value) && this.value.length > 0) {\n      const valueEle = this.findListElement(this.hideSelectedItem ? this.ulElement : this.list, 'li', 'data-value', this.value[this.value.length - 1]);\n\n      if (!isNullOrUndefined(valueEle)) {\n        this.scrollBottom(valueEle);\n      }\n    }\n  }\n\n  focusAtFirstListItem() {\n    if (this.ulElement && this.ulElement.querySelector('li.' + dropDownBaseClasses.li)) {\n      let element;\n\n      if (this.mode === 'CheckBox') {\n        this.removeFocus();\n        return;\n      } else {\n        element = this.ulElement.querySelector('li.' + dropDownBaseClasses.li + ':not(.' + HIDE_LIST + ')');\n      }\n\n      if (element !== null) {\n        this.removeFocus();\n        this.addListFocus(element);\n      }\n    }\n  }\n\n  focusAtLastListItem(data) {\n    let activeElement;\n\n    if (data) {\n      activeElement = Search(data, this.liCollections, 'StartsWith', this.ignoreCase);\n    } else {\n      if (this.value && this.value.length) {\n        Search(this.value[this.value.length - 1], this.liCollections, 'StartsWith', this.ignoreCase);\n      } else {\n        activeElement = null;\n      }\n    }\n\n    if (activeElement && activeElement.item !== null) {\n      this.addListFocus(activeElement.item);\n      this.scrollBottom(activeElement.item, activeElement.index);\n    }\n  }\n\n  getAriaAttributes() {\n    const ariaAttributes = {\n      'aria-disabled': 'false',\n      'aria-owns': this.element.id + '_options',\n      'role': 'listbox',\n      'aria-multiselectable': 'true',\n      'aria-activedescendant': 'null',\n      'aria-haspopup': 'true',\n      'aria-expanded': 'false'\n    };\n    return ariaAttributes;\n  }\n\n  updateListARIA() {\n    if (!isNullOrUndefined(this.ulElement)) {\n      attributes(this.ulElement, {\n        'id': this.element.id + '_options',\n        'role': 'listbox',\n        'aria-hidden': 'false'\n      });\n    }\n\n    const disableStatus = this.inputElement.disabled ? true : false;\n    attributes(this.inputElement, this.getAriaAttributes());\n\n    if (disableStatus) {\n      attributes(this.inputElement, {\n        'aria-disabled': 'true'\n      });\n    }\n\n    this.ensureAriaDisabled(disableStatus ? 'true' : 'false');\n  }\n\n  ensureAriaDisabled(status) {\n    if (this.htmlAttributes && this.htmlAttributes['aria-disabled']) {\n      const attr = this.htmlAttributes;\n      extend(attr, {\n        'aria-disabled': status\n      }, attr);\n      this.setProperties({\n        htmlAttributes: attr\n      }, true);\n    }\n  }\n\n  removelastSelection(e) {\n    const elements = this.chipCollectionWrapper.querySelectorAll('span.' + CHIP$1);\n    const value = elements[elements.length - 1].getAttribute('data-value');\n\n    if (!isNullOrUndefined(this.value)) {\n      this.tempValues = this.value.slice();\n    }\n\n    let customValue = this.getFormattedValue(value);\n\n    if (this.allowCustomValue && (value !== 'false' && customValue === false || !isNullOrUndefined(customValue) && customValue.toString() === 'NaN')) {\n      customValue = value;\n    }\n\n    this.removeValue(customValue, e);\n    this.removeChipSelection();\n    this.updateDelimeter(this.delimiterChar, e);\n    this.makeTextBoxEmpty();\n\n    if (this.mainList && this.listData) {\n      this.refreshSelection();\n    }\n\n    this.checkPlaceholderSize();\n  }\n\n  onActionFailure(e) {\n    super.onActionFailure(e);\n    this.renderPopup();\n    this.onPopupShown();\n  }\n\n  targetElement() {\n    this.targetInputElement = this.inputElement;\n\n    if (this.mode === 'CheckBox' && this.allowFiltering) {\n      this.notify('targetElement', {\n        module: 'CheckBoxSelection',\n        enable: this.mode === 'CheckBox'\n      });\n    }\n\n    return this.targetInputElement.value;\n  }\n\n  getForQuery(valuecheck) {\n    let predicate;\n    const field = isNullOrUndefined(this.fields.value) ? this.fields.text : this.fields.value;\n\n    for (let i = 0; i < valuecheck.length; i++) {\n      if (i === 0) {\n        predicate = new Predicate(field, 'equal', valuecheck[i]);\n      } else {\n        predicate = predicate.or(field, 'equal', valuecheck[i]);\n      }\n    }\n\n    return this.getQuery(this.query).where(predicate);\n  }\n  /* eslint-disable @typescript-eslint/no-unused-vars */\n\n\n  onActionComplete(ulElement, list, e, isUpdated) {\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    super.onActionComplete(ulElement, list, e);\n    this.updateSelectElementData(this.allowFiltering); // eslint-disable-next-line @typescript-eslint/no-this-alias\n\n    const proxy = this;\n\n    if (!isNullOrUndefined(this.value) && !this.allowCustomValue) {\n      for (let i = 0; i < this.value.length; i++) {\n        const checkEle = this.findListElement(this.allowFiltering && !isNullOrUndefined(this.mainList) ? this.mainList : ulElement, 'li', 'data-value', proxy.value[i]);\n\n        if (!checkEle) {\n          this.value.splice(i, 1);\n          i -= 1;\n        }\n      }\n    }\n\n    this.updateActionList(ulElement, list, e);\n\n    if (this.dataSource instanceof DataManager && this.mode === 'CheckBox' && this.allowFiltering) {\n      this.removeFocus();\n    }\n  }\n  /* eslint-disable @typescript-eslint/no-unused-vars */\n\n\n  updateActionList(ulElement, list, e, isUpdated) {\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    if (this.mode === 'CheckBox' && this.showSelectAll) {\n      this.notify('selectAll', {\n        module: 'CheckBoxSelection',\n        enable: this.mode === 'CheckBox'\n      });\n    }\n\n    if (!this.mainList && !this.mainData) {\n      this.mainList = ulElement.cloneNode ? ulElement.cloneNode(true) : ulElement;\n      this.mainData = list;\n      this.mainListCollection = this.liCollections;\n    } else if (isNullOrUndefined(this.mainData) || this.mainData.length === 0) {\n      this.mainData = list;\n    }\n\n    if ((this.remoteCustomValue || list.length <= 0) && this.allowCustomValue && this.inputFocus && this.allowFiltering && this.inputElement.value && this.inputElement.value !== '') {\n      this.checkForCustomValue(this.tempQuery, this.fields);\n      return;\n    }\n\n    if (this.value && this.value.length && (this.mode !== 'CheckBox' && this.inputElement.value.trim() !== '' || this.mode === 'CheckBox' || (this.keyCode === 8 || this.keyCode === 46) && this.allowFiltering && this.allowCustomValue && this.dataSource instanceof DataManager && this.inputElement.value === '')) {\n      this.refreshSelection();\n    }\n\n    this.updateListARIA();\n    this.unwireListEvents();\n    this.wireListEvents();\n\n    if (!isNullOrUndefined(this.setInitialValue)) {\n      this.setInitialValue();\n    }\n\n    if (!isNullOrUndefined(this.selectAllAction)) {\n      this.selectAllAction();\n    }\n\n    if (this.setDynValue) {\n      if (!isNullOrUndefined(this.text) && (isNullOrUndefined(this.value) || this.value.length === 0)) {\n        this.initialTextUpdate();\n      }\n\n      this.initialValueUpdate();\n      this.initialUpdate();\n      this.refreshPlaceHolder();\n\n      if (this.mode !== 'CheckBox' && this.changeOnBlur) {\n        this.updateValueState(null, this.value, null);\n      }\n    }\n\n    this.renderPopup();\n\n    if (this.beforePopupOpen) {\n      this.beforePopupOpen = false;\n      this.onPopupShown();\n    }\n  }\n\n  refreshSelection() {\n    let value;\n    let element;\n    const className = this.hideSelectedItem ? HIDE_LIST : dropDownBaseClasses.selected;\n\n    if (!isNullOrUndefined(this.value)) {\n      for (let index = 0; !isNullOrUndefined(this.value[index]); index++) {\n        value = this.value[index];\n        element = this.findListElement(this.list, 'li', 'data-value', value);\n\n        if (element) {\n          addClass([element], className);\n\n          if (this.hideSelectedItem && element.previousSibling && element.previousElementSibling.classList.contains(dropDownBaseClasses.group) && (!element.nextElementSibling || element.nextElementSibling.classList.contains(dropDownBaseClasses.group))) {\n            addClass([element.previousElementSibling], className);\n          }\n\n          if (this.hideSelectedItem && this.fields.groupBy && !element.previousElementSibling.classList.contains(HIDE_LIST)) {\n            this.hideGroupItem(value);\n          }\n\n          if (this.hideSelectedItem && element.classList.contains(dropDownBaseClasses.focus)) {\n            removeClass([element], dropDownBaseClasses.focus);\n            const listEle = element.parentElement.querySelectorAll('.' + dropDownBaseClasses.li + ':not(.' + HIDE_LIST + ')');\n\n            if (listEle.length > 0) {\n              addClass([listEle[0]], dropDownBaseClasses.focus);\n            } else {\n              //EJ2-57588 - for this task, we prevent the ul element cloning ( this.ulElement = this.ulElement.cloneNode ? <HTMLElement>this.ulElement.cloneNode(true) : this.ulElement;)\n              if (!(this.list && this.list.querySelectorAll('.' + dropDownBaseClasses.li).length > 0)) {\n                this.l10nUpdate();\n                addClass([this.list], dropDownBaseClasses.noData);\n              }\n            }\n          }\n\n          element.setAttribute('aria-selected', 'true');\n\n          if (this.mode === 'CheckBox' && element.classList.contains('e-active')) {\n            const ariaValue = element.firstElementChild.getAttribute('aria-checked');\n\n            if (isNullOrUndefined(ariaValue) || ariaValue === 'false') {\n              const args = {\n                module: 'CheckBoxSelection',\n                enable: this.mode === 'CheckBox',\n                li: element,\n                e: null\n              };\n              this.notify('updatelist', args);\n            }\n          }\n        }\n      }\n    }\n\n    this.checkSelectAll();\n    this.checkMaxSelection();\n  }\n\n  hideGroupItem(value) {\n    let element;\n    let element1;\n    const className = this.hideSelectedItem ? HIDE_LIST : dropDownBaseClasses.selected;\n    element1 = element = this.findListElement(this.ulElement, 'li', 'data-value', value);\n    let i = 0;\n    let j = 0;\n    let temp = true;\n    let temp1 = true;\n\n    do {\n      if (element && element.previousElementSibling && !element.previousElementSibling.classList.contains(HIDE_LIST) && element.previousElementSibling.classList.contains(dropDownBaseClasses.li)) {\n        temp = false;\n      }\n\n      if (!temp || !element || element.previousElementSibling && element.previousElementSibling.classList.contains(dropDownBaseClasses.group)) {\n        i = 10;\n      } else {\n        element = element.previousElementSibling;\n      }\n\n      if (element1 && element1.nextElementSibling && !element1.nextElementSibling.classList.contains(HIDE_LIST) && element1.nextElementSibling.classList.contains(dropDownBaseClasses.li)) {\n        temp1 = false;\n      }\n\n      if (!temp1 || !element1 || element1.nextElementSibling && element1.nextElementSibling.classList.contains(dropDownBaseClasses.group)) {\n        j = 10;\n      } else {\n        element1 = element1.nextElementSibling;\n      }\n    } while (i < 10 || j < 10);\n\n    if (temp && temp1 && !element.previousElementSibling.classList.contains(HIDE_LIST)) {\n      addClass([element.previousElementSibling], className);\n    } else if (temp && temp1 && element.previousElementSibling.classList.contains(HIDE_LIST)) {\n      removeClass([element.previousElementSibling], className);\n    }\n  }\n\n  getValidLi() {\n    let liElement = this.ulElement.querySelector('li.' + dropDownBaseClasses.li + ':not(.' + HIDE_LIST + ')');\n    return !isNullOrUndefined(liElement) ? liElement : this.liCollections[0];\n  }\n\n  checkSelectAll() {\n    const groupItemLength = this.list.querySelectorAll('li.e-list-group-item.e-active').length;\n    const listItem = this.list.querySelectorAll('li.e-list-item');\n    const searchCount = this.list.querySelectorAll('li.' + dropDownBaseClasses.li).length;\n    let searchActiveCount = this.list.querySelectorAll('li.' + dropDownBaseClasses.selected).length;\n\n    if (this.enableGroupCheckBox && !isNullOrUndefined(this.fields.groupBy)) {\n      searchActiveCount = searchActiveCount - groupItemLength;\n    }\n\n    if ((searchCount === searchActiveCount || searchActiveCount === this.maximumSelectionLength) && this.mode === 'CheckBox' && this.showSelectAll) {\n      this.notify('checkSelectAll', {\n        module: 'CheckBoxSelection',\n        enable: this.mode === 'CheckBox',\n        value: 'check'\n      });\n    } else if (searchCount !== searchActiveCount && this.mode === 'CheckBox' && this.showSelectAll) {\n      this.notify('checkSelectAll', {\n        module: 'CheckBoxSelection',\n        enable: this.mode === 'CheckBox',\n        value: 'uncheck'\n      });\n    }\n\n    if (this.enableGroupCheckBox && this.fields.groupBy && !this.enableSelectionOrder) {\n      for (let i = 0; i < listItem.length; i++) {\n        this.findGroupStart(listItem[i]);\n      }\n\n      this.deselectHeader();\n    }\n  } // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  openClick(e) {\n    if (!this.openOnClick && this.mode !== 'CheckBox') {\n      if (this.targetElement() !== '') {\n        this.showPopup();\n      } else {\n        this.hidePopup(e);\n      }\n    } else if (!this.openOnClick && this.mode === 'CheckBox' && !this.isPopupOpen()) {\n      this.showPopup();\n    }\n  }\n\n  keyUp(e) {\n    if (this.mode === 'CheckBox' && !this.openOnClick) {\n      const char = String.fromCharCode(e.keyCode);\n      const isWordCharacter = char.match(/\\w/);\n\n      if (!isNullOrUndefined(isWordCharacter)) {\n        this.isValidKey = true;\n      }\n    }\n\n    this.isValidKey = this.isPopupOpen() && e.keyCode === 8 || this.isValidKey;\n    this.isValidKey = e.ctrlKey && e.keyCode === 86 ? false : this.isValidKey;\n\n    if (this.isValidKey) {\n      this.isValidKey = false;\n      this.expandTextbox();\n      this.showOverAllClear();\n\n      switch (e.keyCode) {\n        default:\n          // For filtering works in mobile firefox\n          this.search(e);\n      }\n    }\n  }\n  /**\n   * To filter the multiselect data from given data source by using query\n   *\n   * @param  {Object[] | DataManager } dataSource - Set the data source to filter.\n   * @param  {Query} query - Specify the query to filter the data.\n   * @param  {FieldSettingsModel} fields - Specify the fields to map the column in the data table.\n   * @returns {void}\n   */\n\n\n  filter(dataSource, query, fields) {\n    this.isFiltered = true;\n    this.remoteFilterAction = true;\n    this.dataUpdater(dataSource, query, fields);\n  }\n\n  getQuery(query) {\n    const filterQuery = query ? query.clone() : this.query ? this.query.clone() : new Query();\n\n    if (this.isFiltered) {\n      return filterQuery;\n    }\n\n    if (this.filterAction) {\n      if (this.targetElement() !== null) {\n        const dataType = this.typeOfData(this.dataSource).typeof;\n\n        if (!(this.dataSource instanceof DataManager) && dataType === 'string' || dataType === 'number') {\n          filterQuery.where('', this.filterType, this.targetElement(), this.ignoreCase, this.ignoreAccent);\n        } else {\n          const fields = this.fields;\n          filterQuery.where(!isNullOrUndefined(fields.text) ? fields.text : '', this.filterType, this.targetElement(), this.ignoreCase, this.ignoreAccent);\n        }\n      }\n\n      return filterQuery;\n    } else {\n      return query ? query : this.query ? this.query : new Query();\n    }\n  }\n\n  dataUpdater(dataSource, query, fields) {\n    this.isDataFetched = false;\n\n    if (this.targetElement().trim() === '') {\n      const list = this.mainList.cloneNode ? this.mainList.cloneNode(true) : this.mainList;\n\n      if (this.backCommand) {\n        this.remoteCustomValue = false;\n\n        if (this.allowCustomValue && list.querySelectorAll('li').length == 0 && this.mainData.length > 0) {\n          this.mainData = [];\n        }\n\n        this.onActionComplete(list, this.mainData);\n\n        if (this.value && this.value.length) {\n          this.refreshSelection();\n        }\n\n        if (this.keyCode !== 8) {\n          this.focusAtFirstListItem();\n        }\n\n        this.notify('reOrder', {\n          module: 'CheckBoxSelection',\n          enable: this.mode === 'CheckBox',\n          e: this\n        });\n      }\n    } else {\n      this.resetList(dataSource, fields, query);\n\n      if (this.allowCustomValue) {\n        if (!(dataSource instanceof DataManager)) {\n          this.checkForCustomValue(query, fields);\n        } else {\n          this.remoteCustomValue = true;\n          this.tempQuery = query;\n        }\n      }\n    }\n\n    this.refreshPopup();\n\n    if (this.mode === 'CheckBox') {\n      this.removeFocus();\n    }\n  }\n\n  checkForCustomValue(query, fields) {\n    const dataChecks = !this.getValueByText(this.inputElement.value, this.ignoreCase);\n\n    if (this.allowCustomValue && dataChecks) {\n      const value = this.inputElement.value;\n      const field = fields ? fields : this.fields;\n      const customData = !isNullOrUndefined(this.mainData) && this.mainData.length > 0 ? this.mainData[0] : this.mainData;\n\n      if (typeof customData !== 'string' && typeof customData !== 'number' && typeof customData !== 'boolean') {\n        const dataItem = {};\n        setValue(field.text, value, dataItem);\n\n        if (typeof getValue(this.fields.value ? this.fields.value : 'value', customData) === 'number') {\n          setValue(field.value, Math.random(), dataItem);\n        } else {\n          setValue(field.value, value, dataItem);\n        }\n\n        const tempData = JSON.parse(JSON.stringify(this.listData));\n        tempData.splice(0, 0, dataItem);\n        this.resetList(tempData, field, query);\n      } else {\n        const tempData = [this.inputElement.value];\n        tempData[0] = typeof customData === 'number' && !isNaN(parseFloat(tempData[0])) ? parseFloat(tempData[0]) : tempData[0];\n        tempData[0] = typeof customData === 'boolean' ? tempData[0] === 'true' ? true : tempData[0] === 'false' ? false : tempData[0] : tempData[0];\n        this.resetList(tempData, field);\n      }\n    }\n\n    if (this.value && this.value.length) {\n      this.refreshSelection();\n    }\n  }\n\n  getNgDirective() {\n    return 'EJS-MULTISELECT';\n  }\n\n  wrapperClick(e) {\n    this.setDynValue = false;\n\n    if (!this.enabled) {\n      return;\n    }\n\n    if (e.target === this.overAllClear) {\n      e.preventDefault();\n      return;\n    }\n\n    if (!this.inputFocus) {\n      this.inputElement.focus();\n    }\n\n    if (!this.readonly) {\n      if (e.target && e.target.classList.toString().indexOf(CHIP_CLOSE$1) !== -1) {\n        if (this.isPopupOpen()) {\n          this.refreshPopup();\n        }\n\n        return;\n      }\n\n      if (!this.isPopupOpen() && (this.openOnClick || this.showDropDownIcon && e.target && e.target.className === dropdownIcon)) {\n        this.showPopup();\n      } else {\n        this.hidePopup(e);\n\n        if (this.mode === 'CheckBox') {\n          this.showOverAllClear();\n          this.inputFocus = true;\n\n          if (!this.overAllWrapper.classList.contains(FOCUS)) {\n            this.overAllWrapper.classList.add(FOCUS);\n          }\n        }\n      }\n    }\n\n    if (!(this.targetElement() && this.targetElement() !== '')) {\n      e.preventDefault();\n    }\n  }\n\n  enable(state) {\n    if (state) {\n      this.overAllWrapper.classList.remove(DISABLED$1);\n      this.inputElement.removeAttribute('disabled');\n      attributes(this.inputElement, {\n        'aria-disabled': 'false'\n      });\n      this.ensureAriaDisabled('false');\n    } else {\n      this.overAllWrapper.classList.add(DISABLED$1);\n      this.inputElement.setAttribute('disabled', 'true');\n      attributes(this.inputElement, {\n        'aria-disabled': 'true'\n      });\n      this.ensureAriaDisabled('true');\n    }\n\n    if (this.enabled !== state) {\n      this.enabled = state;\n    }\n\n    this.hidePopup();\n  }\n\n  onBlurHandler(eve, isDocClickFromCheck) {\n    let target;\n\n    if (!isNullOrUndefined(eve)) {\n      target = eve.relatedTarget;\n    }\n\n    if (this.popupObj && document.body.contains(this.popupObj.element) && this.popupObj.element.contains(target)) {\n      if (this.mode !== 'CheckBox') {\n        this.inputElement.focus();\n      } else if (this.floatLabelType === 'Auto' && (this.overAllWrapper.classList.contains('e-outline') || this.overAllWrapper.classList.contains('e-filled'))) {\n        addClass([this.overAllWrapper], 'e-valid-input');\n      }\n\n      return;\n    }\n\n    if (this.floatLabelType === 'Auto' && this.overAllWrapper.classList.contains('e-outline') && this.mode === 'CheckBox' && (isNullOrUndefined(this.value) || this.value.length === 0)) {\n      removeClass([this.overAllWrapper], 'e-valid-input');\n    }\n\n    if (this.mode === 'CheckBox' && Browser.isIE && !isNullOrUndefined(eve) && !isDocClickFromCheck) {\n      this.inputFocus = false;\n      this.overAllWrapper.classList.remove(FOCUS);\n      return;\n    }\n\n    if (this.scrollFocusStatus) {\n      if (!isNullOrUndefined(eve)) {\n        eve.preventDefault();\n      }\n\n      this.inputElement.focus();\n      this.scrollFocusStatus = false;\n      return;\n    }\n\n    this.inputFocus = false;\n    this.overAllWrapper.classList.remove(FOCUS);\n\n    if (this.addTagOnBlur) {\n      const dataChecks = this.getValueByText(this.inputElement.value, this.ignoreCase, this.ignoreAccent);\n      const listLiElement = this.findListElement(this.list, 'li', 'data-value', dataChecks);\n      const className = this.hideSelectedItem ? HIDE_LIST : dropDownBaseClasses.selected;\n      const allowChipAddition = listLiElement && !listLiElement.classList.contains(className) ? true : false;\n\n      if (allowChipAddition) {\n        this.updateListSelection(listLiElement, eve);\n\n        if (this.mode === 'Delimiter') {\n          this.updateDelimeter(this.delimiterChar);\n        }\n      }\n    }\n\n    this.updateDataList();\n    this.refreshListItems(null);\n\n    if (this.mode !== 'Box' && this.mode !== 'CheckBox') {\n      this.updateDelimView();\n    }\n\n    if (this.changeOnBlur) {\n      this.updateValueState(eve, this.value, this.tempValues);\n      this.dispatchEvent(this.hiddenElement, 'change');\n    }\n\n    this.overAllClear.style.display = 'none';\n\n    if (this.isPopupOpen()) {\n      this.hidePopup(eve);\n    }\n\n    this.makeTextBoxEmpty();\n    this.trigger('blur');\n    this.focused = true;\n\n    if (Browser.isDevice && this.mode !== 'Delimiter' && this.mode !== 'CheckBox') {\n      this.removeChipFocus();\n    }\n\n    this.removeChipSelection();\n    this.refreshInputHight();\n    floatLabelBlur(this.overAllWrapper, this.componentWrapper, this.value, this.floatLabelType, this.placeholder);\n    this.refreshPlaceHolder();\n\n    if ((this.allowFiltering || this.enableSelectionOrder === true && this.mode === 'CheckBox') && !isNullOrUndefined(this.mainList)) {\n      this.ulElement = this.mainList;\n    }\n\n    this.checkPlaceholderSize();\n  }\n\n  checkPlaceholderSize() {\n    if (this.showDropDownIcon) {\n      const downIconWidth = this.dropIcon.offsetWidth + parseInt(window.getComputedStyle(this.dropIcon).marginRight, 10);\n      this.setPlaceholderSize(downIconWidth);\n    } else {\n      if (!isNullOrUndefined(this.dropIcon)) {\n        this.setPlaceholderSize(this.showDropDownIcon ? this.dropIcon.offsetWidth : 0);\n      }\n    }\n  }\n\n  setPlaceholderSize(downIconWidth) {\n    if (isNullOrUndefined(this.value) || this.value.length === 0) {\n      if (this.dropIcon.offsetWidth !== 0) {\n        this.searchWrapper.style.width = 'calc(100% - ' + (downIconWidth + 10) + 'px';\n      } else {\n        addClass([this.searchWrapper], CUSTOM_WIDTH);\n      }\n    } else if (!isNullOrUndefined(this.value)) {\n      this.searchWrapper.removeAttribute('style');\n      removeClass([this.searchWrapper], CUSTOM_WIDTH);\n    }\n  }\n\n  refreshInputHight() {\n    if ((!this.value || !this.value.length) && (isNullOrUndefined(this.text) || this.text === '')) {\n      this.searchWrapper.classList.remove(ZERO_SIZE);\n    } else {\n      this.searchWrapper.classList.add(ZERO_SIZE);\n    }\n  }\n\n  validateValues(newValue, oldValue) {\n    return JSON.stringify(newValue.slice().sort()) !== JSON.stringify(oldValue.slice().sort());\n  }\n\n  updateValueState(event, newVal, oldVal) {\n    const newValue = newVal ? newVal : [];\n    const oldValue = oldVal ? oldVal : [];\n\n    if (this.initStatus && this.validateValues(newValue, oldValue)) {\n      const eventArgs = {\n        e: event,\n        oldValue: oldVal,\n        value: newVal,\n        isInteracted: event ? true : false,\n        element: this.element,\n        event: event\n      };\n\n      if (this.isAngular && this.preventChange) {\n        this.preventChange = false;\n      } else {\n        this.trigger('change', eventArgs);\n      }\n\n      this.updateTempValue();\n\n      if (!this.changeOnBlur) {\n        this.dispatchEvent(this.hiddenElement, 'change');\n      }\n    }\n  }\n\n  updateTempValue() {\n    if (!this.value) {\n      this.tempValues = this.value;\n    } else {\n      this.tempValues = this.value.slice();\n    }\n  }\n\n  getPagingCount() {\n    const height = this.list.classList.contains(dropDownBaseClasses.noData) ? null : getComputedStyle(this.getItems()[0], null).getPropertyValue('height');\n    return Math.round(this.list.offsetHeight / parseInt(height, 10));\n  }\n\n  pageUpSelection(steps) {\n    const collection = this.list.querySelectorAll('li.' + dropDownBaseClasses.li + ':not(.' + HIDE_LIST + ')' + ':not(.e-reorder-hide)');\n    const previousItem = steps >= 0 ? collection[steps + 1] : collection[0];\n    this.addListFocus(previousItem);\n    this.scrollBottom(previousItem, this.getIndexByValue(previousItem.getAttribute('data-value')));\n  }\n\n  pageDownSelection(steps) {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const list = this.getItems();\n    const collection = this.list.querySelectorAll('li.' + dropDownBaseClasses.li + ':not(.' + HIDE_LIST + ')' + ':not(.e-reorder-hide)');\n    const previousItem = steps <= collection.length ? collection[steps - 1] : collection[collection.length - 1];\n    this.addListFocus(previousItem);\n    this.scrollBottom(previousItem, this.getIndexByValue(previousItem.getAttribute('data-value')));\n  }\n\n  getItems() {\n    if (!this.list) {\n      super.render();\n    }\n\n    return this.ulElement && this.ulElement.querySelectorAll('.' + dropDownBaseClasses.li).length > 0 ? this.ulElement.querySelectorAll('.' + dropDownBaseClasses.li + ':not(.' + HIDE_LIST + ')') : [];\n  }\n\n  focusInHandler(e) {\n    if (this.enabled) {\n      this.showOverAllClear();\n      this.inputFocus = true;\n\n      if (this.value && this.value.length) {\n        if (this.mode !== 'Delimiter' && this.mode !== 'CheckBox') {\n          this.chipCollectionWrapper.style.display = '';\n        } else {\n          this.showDelimWrapper();\n        }\n\n        if (this.mode !== 'CheckBox') {\n          this.viewWrapper.style.display = 'none';\n        }\n      }\n\n      if (this.mode !== 'CheckBox') {\n        this.searchWrapper.classList.remove(ZERO_SIZE);\n      }\n\n      this.checkPlaceholderSize();\n\n      if (this.focused) {\n        const args = {\n          isInteracted: e ? true : false,\n          event: e\n        };\n        this.trigger('focus', args);\n        this.focused = false;\n      }\n\n      if (!this.overAllWrapper.classList.contains(FOCUS)) {\n        this.overAllWrapper.classList.add(FOCUS);\n      }\n\n      floatLabelFocus(this.overAllWrapper, this.componentWrapper);\n\n      if (this.isPopupOpen()) {\n        this.refreshPopup();\n      }\n\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  showDelimWrapper() {\n    if (this.mode === 'CheckBox') {\n      this.viewWrapper.style.display = '';\n    } else {\n      this.delimiterWrapper.style.display = '';\n    }\n\n    this.componentWrapper.classList.add(DELIMITER_VIEW_WRAPPER);\n  }\n\n  hideDelimWrapper() {\n    this.delimiterWrapper.style.display = 'none';\n    this.componentWrapper.classList.remove(DELIMITER_VIEW_WRAPPER);\n  }\n\n  expandTextbox() {\n    let size = 5;\n\n    if (this.placeholder) {\n      size = size > this.inputElement.placeholder.length ? size : this.inputElement.placeholder.length;\n    }\n\n    if (this.inputElement.value.length > size) {\n      this.inputElement.size = this.inputElement.value.length;\n    } else {\n      this.inputElement.size = size;\n    }\n  }\n\n  isPopupOpen() {\n    return this.popupWrapper !== null && this.popupWrapper.parentElement !== null;\n  }\n\n  refreshPopup() {\n    if (this.popupObj && this.mobFilter) {\n      this.popupObj.setProperties({\n        width: this.calcPopupWidth()\n      });\n      this.popupObj.refreshPosition(this.overAllWrapper);\n      this.popupObj.resolveCollision();\n    }\n  }\n\n  checkTextLength() {\n    return this.targetElement().length < 1;\n  }\n\n  popupKeyActions(e) {\n    switch (e.keyCode) {\n      case 38:\n        this.hidePopup(e);\n\n        if (this.mode === 'CheckBox') {\n          this.inputElement.focus();\n        }\n\n        e.preventDefault();\n        break;\n\n      case 40:\n        if (!this.isPopupOpen()) {\n          this.showPopup();\n          e.preventDefault();\n        }\n\n        break;\n    }\n  }\n\n  updateAriaAttribute() {\n    const focusedItem = this.list.querySelector('.' + dropDownBaseClasses.focus);\n\n    if (!isNullOrUndefined(focusedItem)) {\n      this.inputElement.setAttribute('aria-activedescendant', focusedItem.id);\n\n      if (this.allowFiltering) {\n        var filterInput = this.popupWrapper.querySelector('.' + FILTERINPUT);\n        filterInput && filterInput.setAttribute('aria-activedescendant', focusedItem.id);\n      } else if (this.mode == \"CheckBox\") {\n        this.overAllWrapper.setAttribute('aria-activedescendant', focusedItem.id);\n      }\n    }\n  }\n\n  homeNavigation(isHome) {\n    this.removeFocus();\n    const scrollEle = this.ulElement.querySelectorAll('li.' + dropDownBaseClasses.li + ':not(.' + HIDE_LIST + ')' + ':not(.e-reorder-hide)');\n\n    if (scrollEle.length > 0) {\n      const element = scrollEle[isHome ? 0 : scrollEle.length - 1];\n      element.classList.add(dropDownBaseClasses.focus);\n      this.scrollBottom(element);\n    }\n  }\n\n  onKeyDown(e) {\n    if (this.readonly || !this.enabled && this.mode !== 'CheckBox') {\n      return;\n    }\n\n    this.keyCode = e.keyCode;\n    this.keyDownStatus = true;\n\n    if (e.keyCode > 111 && e.keyCode < 124) {\n      return;\n    }\n\n    if (e.altKey) {\n      this.popupKeyActions(e);\n      return;\n    } else if (this.isPopupOpen()) {\n      const focusedItem = this.list.querySelector('.' + dropDownBaseClasses.focus);\n      let activeIndex;\n\n      switch (e.keyCode) {\n        case 36:\n        case 35:\n          this.homeNavigation(e.keyCode === 36 ? true : false);\n          break;\n\n        case 33:\n          e.preventDefault();\n\n          if (focusedItem) {\n            this.getIndexByValue(focusedItem.getAttribute('data-value'));\n            this.pageUpSelection(activeIndex - this.getPagingCount());\n            this.updateAriaAttribute();\n          }\n\n          return;\n\n        case 34:\n          e.preventDefault();\n\n          if (focusedItem) {\n            this.getIndexByValue(focusedItem.getAttribute('data-value'));\n            this.pageDownSelection(activeIndex + this.getPagingCount());\n            this.updateAriaAttribute();\n          }\n\n          return;\n\n        case 38:\n          this.arrowUp(e);\n          break;\n\n        case 40:\n          this.arrowDown(e);\n          break;\n\n        case 27:\n          e.preventDefault();\n          this.hidePopup(e);\n\n          if (this.mode === 'CheckBox') {\n            this.inputElement.focus();\n          }\n\n          return;\n\n        case 13:\n          e.preventDefault();\n\n          if (this.mode !== 'CheckBox') {\n            this.selectByKey(e);\n          }\n\n          this.checkPlaceholderSize();\n          return;\n\n        case 32:\n          this.spaceKeySelection(e);\n          return;\n\n        case 9:\n          e.preventDefault();\n          this.hidePopup(e);\n          this.inputElement.focus();\n          this.overAllWrapper.classList.add(FOCUS);\n      }\n    } else {\n      switch (e.keyCode) {\n        case 13:\n        case 9:\n        case 16:\n        case 17:\n        case 20:\n          return;\n\n        case 40:\n          if (this.openOnClick) {\n            this.showPopup();\n          }\n\n          break;\n\n        case 27:\n          e.preventDefault();\n          this.escapeAction();\n          return;\n      }\n    }\n\n    if (this.checkTextLength()) {\n      this.keyNavigation(e);\n    }\n\n    if (this.mode === 'CheckBox' && this.enableSelectionOrder) {\n      if (this.allowFiltering) {\n        this.previousFilterText = this.targetElement();\n      }\n\n      this.checkBackCommand(e);\n    }\n\n    this.expandTextbox();\n\n    if (!(this.mode === 'CheckBox' && this.showSelectAll)) {\n      this.refreshPopup();\n    }\n  }\n\n  arrowDown(e) {\n    e.preventDefault();\n    this.moveByList(1);\n    this.keyAction = true;\n\n    if (document.activeElement.classList.contains(FILTERINPUT) || this.mode === 'CheckBox' && !this.allowFiltering && document.activeElement !== this.list) {\n      EventHandler.add(this.list, 'keydown', this.onKeyDown, this);\n    }\n\n    this.updateAriaAttribute();\n  }\n\n  arrowUp(e) {\n    e.preventDefault();\n    this.keyAction = true;\n    let list = this.list.querySelectorAll('li.' + dropDownBaseClasses.li + ':not(.' + HIDE_LIST + ')' + ':not(.e-reorder-hide)');\n\n    if (this.enableGroupCheckBox && this.mode === 'CheckBox' && !isNullOrUndefined(this.fields.groupBy)) {\n      list = this.list.querySelectorAll('li.' + dropDownBaseClasses.li + ',li.' + dropDownBaseClasses.group + ':not(.' + HIDE_LIST + ')' + ':not(.e-reorder-hide)');\n    }\n\n    const focuseElem = this.list.querySelector('li.' + dropDownBaseClasses.focus);\n    const index = Array.prototype.slice.call(list).indexOf(focuseElem);\n\n    if (index <= 0 && this.mode === 'CheckBox' && this.allowFiltering) {\n      this.keyAction = false;\n      this.notify('inputFocus', {\n        module: 'CheckBoxSelection',\n        enable: this.mode === 'CheckBox',\n        value: 'focus'\n      });\n    }\n\n    this.moveByList(-1);\n    this.updateAriaAttribute();\n  }\n\n  spaceKeySelection(e) {\n    if (this.mode === 'CheckBox') {\n      if (!document.activeElement.classList.contains(FILTERINPUT)) {\n        e.preventDefault();\n        this.keyAction = true;\n      }\n\n      this.selectByKey(e);\n    }\n\n    this.checkPlaceholderSize();\n  }\n\n  checkBackCommand(e) {\n    if (e.keyCode === 8 && this.allowFiltering ? this.targetElement() !== this.previousFilterText : this.targetElement() === '') {\n      this.backCommand = false;\n    } else {\n      this.backCommand = true;\n    }\n  }\n\n  keyNavigation(e) {\n    if (this.mode !== 'Delimiter' && this.mode !== 'CheckBox' && this.value && this.value.length) {\n      switch (e.keyCode) {\n        case 37:\n          //left arrow\n          e.preventDefault();\n          this.moveBy(-1, e);\n          break;\n\n        case 39:\n          //right arrow\n          e.preventDefault();\n          this.moveBy(1, e);\n          break;\n\n        case 8:\n          this.removelastSelection(e);\n          break;\n\n        case 46:\n          //del\n          this.removeSelectedChip(e);\n          break;\n      }\n    } else if (e.keyCode === 8 && this.mode === 'Delimiter') {\n      if (this.value && this.value.length) {\n        e.preventDefault();\n        const temp = this.value[this.value.length - 1];\n        this.removeValue(temp, e);\n        this.updateDelimeter(this.delimiterChar, e);\n        this.focusAtLastListItem(temp);\n      }\n    }\n  }\n\n  selectByKey(e) {\n    this.removeChipSelection();\n    this.selectListByKey(e);\n\n    if (this.hideSelectedItem) {\n      this.focusAtFirstListItem();\n    }\n  }\n\n  escapeAction() {\n    const temp = this.tempValues ? this.tempValues.slice() : [];\n\n    if (this.value && this.validateValues(this.value, temp)) {\n      if (this.mode !== 'CheckBox') {\n        this.value = temp;\n        this.initialValueUpdate();\n      }\n\n      if (this.mode !== 'Delimiter' && this.mode !== 'CheckBox') {\n        this.chipCollectionWrapper.style.display = '';\n      } else {\n        this.showDelimWrapper();\n      }\n\n      this.refreshPlaceHolder();\n\n      if (this.value.length) {\n        this.showOverAllClear();\n      } else {\n        this.hideOverAllClear();\n      }\n    }\n\n    this.makeTextBoxEmpty();\n  }\n\n  scrollBottom(selectedLI, activeIndex) {\n    const currentOffset = this.list.offsetHeight;\n    const nextBottom = selectedLI.offsetTop + selectedLI.offsetHeight - this.list.scrollTop;\n    const nextOffset = this.list.scrollTop + nextBottom - currentOffset;\n    let boxRange = selectedLI.offsetTop + selectedLI.offsetHeight - this.list.scrollTop;\n    boxRange = this.fields.groupBy && !isNullOrUndefined(this.fixedHeaderElement) ? boxRange - this.fixedHeaderElement.offsetHeight : boxRange;\n\n    if (activeIndex === 0) {\n      this.list.scrollTop = 0;\n    } else if (nextBottom > currentOffset) {\n      this.list.scrollTop = nextOffset;\n    } else if (!(boxRange > 0 && this.list.offsetHeight > boxRange)) {\n      this.list.scrollTop = nextOffset;\n    }\n  }\n\n  scrollTop(selectedLI, activeIndex) {\n    let nextOffset = selectedLI.offsetTop - this.list.scrollTop;\n    nextOffset = this.fields.groupBy && !isUndefined(this.fixedHeaderElement) ? nextOffset - this.fixedHeaderElement.offsetHeight : nextOffset;\n    const boxRange = selectedLI.offsetTop + selectedLI.offsetHeight - this.list.scrollTop;\n\n    if (activeIndex === 0) {\n      this.list.scrollTop = 0;\n    } else if (nextOffset < 0) {\n      this.list.scrollTop = this.list.scrollTop + nextOffset;\n    } else if (!(boxRange > 0 && this.list.offsetHeight > boxRange)) {\n      this.list.scrollTop = selectedLI.offsetTop - (this.fields.groupBy && !isUndefined(this.fixedHeaderElement) ? this.fixedHeaderElement.offsetHeight : 0);\n    }\n  }\n\n  selectListByKey(e) {\n    const li = this.list.querySelector('li.' + dropDownBaseClasses.focus);\n    let limit = this.value && this.value.length ? this.value.length : 0;\n    let target;\n\n    if (li !== null) {\n      if (li.classList.contains('e-active')) {\n        limit = limit - 1;\n      }\n\n      if (this.isValidLI(li) && limit < this.maximumSelectionLength) {\n        this.updateListSelection(li, e);\n        this.addListFocus(li);\n\n        if (this.mode === 'CheckBox') {\n          this.updateDelimView();\n          this.updateDelimeter(this.delimiterChar, e);\n          this.refreshInputHight();\n          this.checkPlaceholderSize();\n\n          if (this.enableGroupCheckBox && !isNullOrUndefined(this.fields.groupBy)) {\n            target = li.firstElementChild.lastElementChild;\n            this.findGroupStart(target);\n            this.deselectHeader();\n          }\n        } else {\n          this.updateDelimeter(this.delimiterChar, e);\n        }\n\n        this.makeTextBoxEmpty();\n\n        if (this.mode !== 'CheckBox') {\n          this.refreshListItems(li.textContent);\n        }\n\n        if (!this.changeOnBlur) {\n          this.updateValueState(e, this.value, this.tempValues);\n        }\n\n        this.refreshPopup();\n      } else {\n        if (!this.isValidLI(li) && limit < this.maximumSelectionLength) {\n          target = li.firstElementChild.lastElementChild;\n\n          if (target.classList.contains('e-check')) {\n            this.selectAllItem(false, e, li);\n          } else {\n            this.selectAllItem(true, e, li);\n          }\n        }\n      }\n\n      this.refreshSelection();\n\n      if (this.closePopupOnSelect) {\n        this.hidePopup(e);\n      }\n    }\n\n    this.refreshPlaceHolder();\n  }\n\n  refreshListItems(data) {\n    if ((this.allowFiltering || this.mode === 'CheckBox' && this.enableSelectionOrder === true || this.allowCustomValue) && this.mainList && this.listData) {\n      const list = this.mainList.cloneNode ? this.mainList.cloneNode(true) : this.mainList;\n      this.onActionComplete(list, this.mainData);\n      this.focusAtLastListItem(data);\n\n      if (this.value && this.value.length) {\n        this.refreshSelection();\n      }\n    }\n  }\n\n  removeSelectedChip(e) {\n    const selectedElem = this.chipCollectionWrapper.querySelector('span.' + CHIP_SELECTED);\n    let temp;\n\n    if (selectedElem !== null) {\n      if (!isNullOrUndefined(this.value)) {\n        this.tempValues = this.value.slice();\n      }\n\n      temp = selectedElem.nextElementSibling;\n\n      if (temp !== null) {\n        this.removeChipSelection();\n        this.addChipSelection(temp, e);\n      }\n\n      this.removeValue(selectedElem.getAttribute('data-value'), e);\n      this.makeTextBoxEmpty();\n    }\n\n    if (this.closePopupOnSelect) {\n      this.hidePopup(e);\n    }\n\n    this.checkPlaceholderSize();\n  }\n\n  moveByTop(state) {\n    const elements = this.list.querySelectorAll('li.' + dropDownBaseClasses.li);\n    let index;\n\n    if (elements.length > 1) {\n      this.removeFocus();\n      index = state ? 0 : elements.length - 1;\n      this.addListFocus(elements[index]);\n      this.scrollBottom(elements[index], index);\n    }\n\n    this.updateAriaAttribute();\n  }\n\n  moveByList(position) {\n    if (this.list) {\n      let elements = this.list.querySelectorAll('li.' + dropDownBaseClasses.li + ':not(.' + HIDE_LIST + ')' + ':not(.e-reorder-hide)');\n\n      if (this.mode === 'CheckBox' && this.enableGroupCheckBox && !isNullOrUndefined(this.fields.groupBy)) {\n        elements = this.list.querySelectorAll('li.' + dropDownBaseClasses.li + ',li.' + dropDownBaseClasses.group + ':not(.' + HIDE_LIST + ')' + ':not(.e-reorder-hide)');\n      }\n\n      const selectedElem = this.list.querySelector('li.' + dropDownBaseClasses.focus);\n      let temp = -1;\n\n      if (elements.length) {\n        for (let index = 0; index < elements.length; index++) {\n          if (elements[index] === selectedElem) {\n            temp = index;\n            break;\n          }\n        }\n\n        if (position > 0) {\n          if (temp < elements.length - 1) {\n            this.removeFocus();\n            this.addListFocus(elements[++temp]);\n            this.updateCheck(elements[temp]);\n            this.scrollBottom(elements[temp], temp);\n          }\n        } else {\n          if (temp > 0) {\n            this.removeFocus();\n            this.addListFocus(elements[--temp]);\n            this.updateCheck(elements[temp]);\n            this.scrollTop(elements[temp], temp);\n          }\n        }\n      }\n    }\n  }\n\n  updateCheck(element) {\n    if (this.mode === 'CheckBox' && this.enableGroupCheckBox && !isNullOrUndefined(this.fields.groupBy)) {\n      const checkElement = element.firstElementChild.lastElementChild;\n\n      if (checkElement.classList.contains('e-check')) {\n        element.classList.add('e-active');\n      } else {\n        element.classList.remove('e-active');\n      }\n    }\n  }\n\n  moveBy(position, e) {\n    let temp;\n    const elements = this.chipCollectionWrapper.querySelectorAll('span.' + CHIP$1);\n    const selectedElem = this.chipCollectionWrapper.querySelector('span.' + CHIP_SELECTED);\n\n    if (selectedElem === null) {\n      if (position < 0) {\n        this.addChipSelection(elements[elements.length - 1], e);\n      }\n    } else {\n      if (position < 0) {\n        temp = selectedElem.previousElementSibling;\n\n        if (temp !== null) {\n          this.removeChipSelection();\n          this.addChipSelection(temp, e);\n        }\n      } else {\n        temp = selectedElem.nextElementSibling;\n        this.removeChipSelection();\n\n        if (temp !== null) {\n          this.addChipSelection(temp, e);\n        }\n      }\n    }\n  }\n\n  chipClick(e) {\n    if (this.enabled) {\n      const elem = closest(e.target, '.' + CHIP$1);\n      this.removeChipSelection();\n      this.addChipSelection(elem, e);\n    }\n  }\n\n  removeChipSelection() {\n    if (this.chipCollectionWrapper) {\n      this.removeChipFocus();\n    }\n  }\n\n  addChipSelection(element, e) {\n    addClass([element], CHIP_SELECTED);\n    this.trigger('chipSelection', e);\n  }\n\n  onChipRemove(e) {\n    if (e.which === 3 || e.button === 2) {\n      return;\n    }\n\n    if (this.enabled && !this.readonly) {\n      const element = e.target.parentElement;\n      const customVal = element.getAttribute('data-value');\n      let value = this.getFormattedValue(customVal);\n\n      if (this.allowCustomValue && (customVal !== 'false' && value === false || !isNullOrUndefined(value) && value.toString() === 'NaN')) {\n        value = customVal;\n      }\n\n      if (this.isPopupOpen() && this.mode !== 'CheckBox') {\n        this.hidePopup(e);\n      }\n\n      if (!this.inputFocus) {\n        this.inputElement.focus();\n      }\n\n      this.removeValue(value, e);\n\n      if (isNullOrUndefined(this.findListElement(this.list, 'li', 'data-value', value)) && this.mainList && this.listData) {\n        const list = this.mainList.cloneNode ? this.mainList.cloneNode(true) : this.mainList;\n        this.onActionComplete(list, this.mainData);\n      }\n\n      this.updateDelimeter(this.delimiterChar, e);\n\n      if (this.placeholder && this.floatLabelType === 'Never') {\n        this.makeTextBoxEmpty();\n        this.checkPlaceholderSize();\n      } else {\n        this.inputElement.value = '';\n      }\n\n      e.preventDefault();\n    }\n  }\n\n  makeTextBoxEmpty() {\n    this.inputElement.value = '';\n    this.refreshPlaceHolder();\n  }\n\n  refreshPlaceHolder() {\n    if (this.placeholder && this.floatLabelType === 'Never') {\n      if (this.value && this.value.length || !isNullOrUndefined(this.text) && this.text !== '') {\n        this.inputElement.placeholder = '';\n      } else {\n        this.inputElement.placeholder = encodePlaceholder(this.placeholder);\n      }\n    } else {\n      this.setFloatLabelType();\n    }\n\n    this.expandTextbox();\n  }\n\n  removeAllItems(value, eve, isClearAll, element, mainElement) {\n    let index = this.value.indexOf(value);\n    const removeVal = this.value.slice(0);\n    removeVal.splice(index, 1);\n    this.setProperties({\n      value: [].concat([], removeVal)\n    }, true);\n    element.setAttribute('aria-selected', 'false');\n    const className = this.hideSelectedItem ? HIDE_LIST : dropDownBaseClasses.selected;\n    removeClass([element], className);\n    this.notify('activeList', {\n      module: 'CheckBoxSelection',\n      enable: this.mode === 'CheckBox',\n      li: element,\n      e: this,\n      index: index\n    });\n    this.invokeCheckboxSelection(element, eve, isClearAll);\n    this.updateMainList(true, value, mainElement);\n    this.updateChipStatus();\n  }\n\n  invokeCheckboxSelection(element, eve, isClearAll) {\n    this.notify('updatelist', {\n      module: 'CheckBoxSelection',\n      enable: this.mode === 'CheckBox',\n      li: element,\n      e: eve\n    });\n    attributes(this.inputElement, {\n      'aria-activedescendant': element.id\n    });\n\n    if (this.value && this.value.length !== this.mainData.length && this.mode === 'CheckBox' && this.showSelectAll && !(this.isSelectAll || isClearAll)) {\n      this.notify('checkSelectAll', {\n        module: 'CheckBoxSelection',\n        enable: this.mode === 'CheckBox',\n        value: 'uncheck'\n      });\n    }\n  }\n\n  removeValue(value, eve, length, isClearAll) {\n    let index = this.value.indexOf(this.getFormattedValue(value));\n\n    if (index === -1 && this.allowCustomValue && !isNullOrUndefined(value)) {\n      index = this.value.indexOf(value.toString());\n    }\n\n    const targetEle = eve && eve.target;\n    isClearAll = isClearAll || targetEle && targetEle.classList.contains('e-close-hooker') ? true : null;\n    const className = this.hideSelectedItem ? HIDE_LIST : dropDownBaseClasses.selected;\n\n    if (index !== -1) {\n      const element = this.findListElement(this.list, 'li', 'data-value', value);\n      const val = this.getDataByValue(value);\n      const eventArgs = {\n        e: eve,\n        item: element,\n        itemData: val,\n        isInteracted: eve ? true : false,\n        cancel: false\n      };\n      this.trigger('removing', eventArgs, eventArgs => {\n        if (eventArgs.cancel) {\n          this.removeIndex++;\n        } else {\n          const removeVal = this.value.slice(0);\n          removeVal.splice(index, 1);\n          this.setProperties({\n            value: [].concat([], removeVal)\n          }, true);\n\n          if (element !== null) {\n            const hideElement = this.findListElement(this.mainList, 'li', 'data-value', value);\n            element.setAttribute('aria-selected', 'false');\n            removeClass([element], className);\n\n            if (hideElement) {\n              hideElement.setAttribute('aria-selected', 'false');\n              removeClass([element, hideElement], className);\n            }\n\n            this.notify('activeList', {\n              module: 'CheckBoxSelection',\n              enable: this.mode === 'CheckBox',\n              li: element,\n              e: this,\n              index: index\n            });\n            this.invokeCheckboxSelection(element, eve, isClearAll);\n          }\n\n          if (this.hideSelectedItem && this.fields.groupBy && element) {\n            this.hideGroupItem(value);\n          }\n\n          if (this.hideSelectedItem && this.fixedHeaderElement && this.fields.groupBy && this.mode !== 'CheckBox' && this.isPopupOpen()) {\n            super.scrollStop();\n          }\n\n          this.updateMainList(true, value);\n          this.removeChip(value);\n          this.updateChipStatus();\n          const limit = this.value && this.value.length ? this.value.length : 0;\n\n          if (limit < this.maximumSelectionLength) {\n            const collection = this.list.querySelectorAll('li.' + dropDownBaseClasses.li + ':not(.e-active)');\n            removeClass(collection, 'e-disable');\n          }\n\n          this.trigger('removed', eventArgs);\n          const targetEle = eve && eve.currentTarget;\n          const isSelectAll = targetEle && targetEle.classList.contains('e-selectall-parent') ? true : null;\n\n          if (!this.changeOnBlur && !isClearAll && eve && length && !isSelectAll) {\n            this.updateValueState(eve, this.value, this.tempValues);\n          }\n\n          if (length) {\n            this.selectAllEventData.push(val);\n            this.selectAllEventEle.push(element);\n          }\n\n          if (length === 1) {\n            if (!this.changeOnBlur) {\n              this.updateValueState(eve, this.value, this.tempValues);\n            }\n\n            const args = {\n              event: eve,\n              items: this.selectAllEventEle,\n              itemData: this.selectAllEventData,\n              isInteracted: eve ? true : false,\n              isChecked: false\n            };\n            this.trigger('selectedAll', args);\n            this.selectAllEventData = [];\n            this.selectAllEventEle = [];\n          }\n\n          if (isClearAll && (length === 1 || length === null)) {\n            this.clearAllCallback(eve, isClearAll);\n          }\n        }\n      });\n    }\n  }\n\n  updateMainList(state, value, mainElement) {\n    if (this.allowFiltering || this.mode === 'CheckBox') {\n      const element2 = mainElement ? mainElement : this.findListElement(this.mainList, 'li', 'data-value', value);\n\n      if (element2) {\n        if (state) {\n          element2.setAttribute('aria-selected', 'false');\n          removeClass([element2], this.hideSelectedItem ? HIDE_LIST : dropDownBaseClasses.selected);\n\n          if (this.mode === 'CheckBox') {\n            element2.firstElementChild.setAttribute('aria-checked', 'false');\n            removeClass([element2.firstElementChild.lastElementChild], 'e-check');\n          }\n        } else {\n          element2.setAttribute('aria-selected', 'true');\n          addClass([element2], this.hideSelectedItem ? HIDE_LIST : dropDownBaseClasses.selected);\n\n          if (this.mode === 'CheckBox') {\n            element2.firstElementChild.setAttribute('aria-checked', 'true');\n            addClass([element2.firstElementChild.lastElementChild], 'e-check');\n          }\n        }\n      }\n    }\n  }\n\n  removeChip(value) {\n    if (this.chipCollectionWrapper) {\n      const element = this.findListElement(this.chipCollectionWrapper, 'span', 'data-value', value);\n\n      if (element) {\n        remove(element);\n      }\n    }\n  }\n\n  setWidth(width) {\n    if (!isNullOrUndefined(width)) {\n      if (typeof width === 'number') {\n        this.overAllWrapper.style.width = formatUnit(width);\n      } else if (typeof width === 'string') {\n        this.overAllWrapper.style.width = width.match(/px|%|em/) ? width : formatUnit(width);\n      }\n    }\n  }\n\n  updateChipStatus() {\n    if (this.value && this.value.length) {\n      if (!isNullOrUndefined(this.chipCollectionWrapper)) {\n        this.chipCollectionWrapper.style.display = '';\n      }\n\n      if (this.mode === 'Delimiter' || this.mode === 'CheckBox') {\n        this.showDelimWrapper();\n      }\n\n      this.showOverAllClear();\n    } else {\n      if (!isNullOrUndefined(this.chipCollectionWrapper)) {\n        this.chipCollectionWrapper.style.display = 'none';\n      }\n\n      if (!isNullOrUndefined(this.delimiterWrapper)) {\n        this.delimiterWrapper.style.display = 'none';\n      }\n\n      this.hideOverAllClear();\n    }\n  }\n\n  addValue(value, text, eve) {\n    if (!this.value) {\n      this.value = [];\n    }\n\n    if (this.value.indexOf(value) < 0) {\n      this.setProperties({\n        value: [].concat([], this.value, [value])\n      }, true);\n    }\n\n    const element = this.findListElement(this.list, 'li', 'data-value', value);\n    this.removeFocus();\n\n    if (element) {\n      this.addListFocus(element);\n      this.addListSelection(element);\n    }\n\n    if (this.mode !== 'Delimiter' && this.mode !== 'CheckBox') {\n      this.addChip(text, value, eve);\n    }\n\n    if (this.hideSelectedItem && this.fields.groupBy) {\n      this.hideGroupItem(value);\n    }\n\n    this.updateChipStatus();\n    this.checkMaxSelection();\n  }\n\n  checkMaxSelection() {\n    const limit = this.value && this.value.length ? this.value.length : 0;\n\n    if (limit === this.maximumSelectionLength) {\n      const collection = this.list.querySelectorAll('li.' + dropDownBaseClasses.li + ':not(.e-active)');\n      addClass(collection, 'e-disable');\n    }\n  }\n\n  dispatchSelect(value, eve, element, isNotTrigger, length) {\n    const list = this.listData;\n\n    if (this.initStatus && !isNotTrigger) {\n      const val = this.getDataByValue(value);\n      const eventArgs = {\n        e: eve,\n        item: element,\n        itemData: val,\n        isInteracted: eve ? true : false,\n        cancel: false\n      };\n      this.trigger('select', eventArgs, eventArgs => {\n        if (!eventArgs.cancel) {\n          if (length) {\n            this.selectAllEventData.push(val);\n            this.selectAllEventEle.push(element);\n          }\n\n          if (length === 1) {\n            const args = {\n              event: eve,\n              items: this.selectAllEventEle,\n              itemData: this.selectAllEventData,\n              isInteracted: eve ? true : false,\n              isChecked: true\n            };\n            this.trigger('selectedAll', args);\n            this.selectAllEventData = [];\n          }\n\n          if (this.allowCustomValue && this.isServerRendered && this.listData !== list) {\n            this.listData = list;\n          }\n\n          this.updateListSelectEventCallback(value, element, eve);\n\n          if (this.hideSelectedItem && this.fixedHeaderElement && this.fields.groupBy && this.mode !== 'CheckBox') {\n            super.scrollStop();\n          }\n        }\n      });\n    }\n  }\n\n  addChip(text, value, e) {\n    if (this.chipCollectionWrapper) {\n      this.getChip(text, value, e);\n    }\n  }\n\n  removeChipFocus() {\n    const elements = this.chipCollectionWrapper.querySelectorAll('span.' + CHIP$1);\n    const closeElements = this.chipCollectionWrapper.querySelectorAll('span.' + CHIP_CLOSE$1.split(' ')[0]);\n    removeClass(elements, CHIP_SELECTED);\n\n    if (Browser.isDevice) {\n      for (let index = 0; index < closeElements.length; index++) {\n        closeElements[index].style.display = 'none';\n      }\n    }\n  }\n\n  onMobileChipInteraction(e) {\n    const chipElem = closest(e.target, '.' + CHIP$1);\n    const chipClose = chipElem.querySelector('span.' + CHIP_CLOSE$1.split(' ')[0]);\n\n    if (this.enabled && !this.readonly) {\n      if (!chipElem.classList.contains(CHIP_SELECTED)) {\n        this.removeChipFocus();\n        chipClose.style.display = '';\n        chipElem.classList.add(CHIP_SELECTED);\n      }\n\n      this.refreshPopup();\n      e.preventDefault();\n    }\n  }\n\n  multiCompiler(multiselectTemplate) {\n    let checkTemplate = false;\n\n    if (multiselectTemplate) {\n      try {\n        checkTemplate = selectAll(multiselectTemplate, document).length ? true : false;\n      } catch (exception) {\n        checkTemplate = false;\n      }\n    }\n\n    return checkTemplate;\n  }\n\n  getChip(data, value, e) {\n    let itemData = {\n      text: value,\n      value: value\n    };\n    const chip = this.createElement('span', {\n      className: CHIP$1,\n      attrs: {\n        'data-value': value,\n        'title': data\n      }\n    });\n    let compiledString;\n    const chipContent = this.createElement('span', {\n      className: CHIP_CONTENT$1\n    });\n    const chipClose = this.createElement('span', {\n      className: CHIP_CLOSE$1\n    });\n\n    if (this.mainData) {\n      itemData = this.getDataByValue(value);\n    }\n\n    if (this.valueTemplate && !isNullOrUndefined(itemData)) {\n      const valuecheck = this.multiCompiler(this.valueTemplate);\n\n      if (valuecheck) {\n        compiledString = compile(select(this.valueTemplate, document).innerHTML.trim());\n      } else {\n        compiledString = compile(this.valueTemplate);\n      } // eslint-disable-next-line\n\n\n      let valueCompTemp = compiledString(itemData, this, 'valueTemplate', this.valueTemplateId, this.isStringTemplate, null, chipContent);\n\n      if (valueCompTemp && valueCompTemp.length > 0) {\n        for (let i = 0; i < valueCompTemp.length; i++) {\n          chipContent.appendChild(valueCompTemp[i]);\n        }\n      }\n\n      this.renderReactTemplates();\n    } else if (this.enableHtmlSanitizer) {\n      chipContent.innerText = data;\n    } else {\n      chipContent.innerHTML = data;\n    }\n\n    chip.appendChild(chipContent);\n    const eventArgs = {\n      isInteracted: e ? true : false,\n      itemData: itemData,\n      e: e,\n      setClass: classes => {\n        addClass([chip], classes);\n      },\n      cancel: false\n    };\n    this.isPreventChange = this.isAngular && this.preventChange;\n    this.trigger('tagging', eventArgs, eventArgs => {\n      if (!eventArgs.cancel) {\n        if (Browser.isDevice) {\n          chip.classList.add(MOBILE_CHIP);\n          append([chipClose], chip);\n          chipClose.style.display = 'none';\n          EventHandler.add(chip, 'click', this.onMobileChipInteraction, this);\n        } else {\n          EventHandler.add(chip, 'mousedown', this.chipClick, this);\n\n          if (this.showClearButton) {\n            chip.appendChild(chipClose);\n          }\n        }\n\n        EventHandler.add(chipClose, 'mousedown', this.onChipRemove, this);\n        this.chipCollectionWrapper.appendChild(chip);\n\n        if (!this.changeOnBlur && e) {\n          this.updateValueState(e, this.value, this.tempValues);\n        }\n      }\n    });\n  }\n\n  calcPopupWidth() {\n    let width = formatUnit(this.popupWidth);\n\n    if (width.indexOf('%') > -1) {\n      const inputWidth = this.componentWrapper.offsetWidth * parseFloat(width) / 100;\n      width = inputWidth.toString() + 'px';\n    }\n\n    return width;\n  }\n\n  mouseIn() {\n    if (this.enabled && !this.readonly) {\n      this.showOverAllClear();\n    }\n  }\n\n  mouseOut() {\n    if (!this.inputFocus) {\n      this.overAllClear.style.display = 'none';\n    }\n  }\n\n  listOption(dataSource, fields) {\n    const iconCss = isNullOrUndefined(fields.iconCss) ? false : true;\n    const fieldProperty = isNullOrUndefined(fields.properties) ? fields : fields.properties;\n    this.listCurrentOptions = fields.text !== null || fields.value !== null ? {\n      fields: fieldProperty,\n      showIcon: iconCss,\n      ariaAttributes: {\n        groupItemRole: 'presentation'\n      }\n    } : {\n      fields: {\n        value: 'text'\n      }\n    };\n    extend(this.listCurrentOptions, this.listCurrentOptions, fields, true);\n\n    if (this.mode === 'CheckBox') {\n      this.notify('listoption', {\n        module: 'CheckBoxSelection',\n        enable: this.mode === 'CheckBox',\n        dataSource,\n        fieldProperty\n      });\n    }\n\n    return this.listCurrentOptions;\n  }\n\n  renderPopup() {\n    if (!this.list) {\n      super.render();\n    }\n\n    if (!this.popupObj) {\n      document.body.appendChild(this.popupWrapper);\n      const checkboxFilter = this.popupWrapper.querySelector('.' + FILTERPARENT);\n\n      if (this.mode === 'CheckBox' && !this.allowFiltering && checkboxFilter && this.filterParent) {\n        checkboxFilter.remove();\n        this.filterParent = null;\n      }\n\n      let overAllHeight = parseInt(this.popupHeight, 10);\n      this.popupWrapper.style.visibility = 'hidden';\n\n      if (this.headerTemplate) {\n        this.setHeaderTemplate();\n        overAllHeight -= this.header.offsetHeight;\n      }\n\n      append([this.list], this.popupWrapper);\n\n      if (this.footerTemplate) {\n        this.setFooterTemplate();\n        overAllHeight -= this.footer.offsetHeight;\n      }\n\n      if (this.mode === 'CheckBox' && this.showSelectAll) {\n        this.notify('selectAll', {\n          module: 'CheckBoxSelection',\n          enable: this.mode === 'CheckBox'\n        });\n        overAllHeight -= this.selectAllHeight;\n      } else if (this.mode === 'CheckBox' && !this.showSelectAll && !this.headerTemplate && !this.footerTemplate) {\n        this.notify('selectAll', {\n          module: 'CheckBoxSelection',\n          enable: this.mode === 'CheckBox'\n        });\n        overAllHeight = parseInt(this.popupHeight, 10);\n      } else if (this.mode === 'CheckBox' && !this.showSelectAll) {\n        this.notify('selectAll', {\n          module: 'CheckBoxSelection',\n          enable: this.mode === 'CheckBox'\n        });\n        overAllHeight = parseInt(this.popupHeight, 10);\n\n        if (this.headerTemplate && this.header) {\n          overAllHeight -= this.header.offsetHeight;\n        }\n\n        if (this.footerTemplate && this.footer) {\n          overAllHeight -= this.footer.offsetHeight;\n        }\n      }\n\n      if (this.mode === 'CheckBox') {\n        const args = {\n          module: 'CheckBoxSelection',\n          enable: this.mode === 'CheckBox',\n          popupElement: this.popupWrapper\n        };\n\n        if (this.allowFiltering) {\n          this.notify('searchBox', args);\n          overAllHeight -= this.searchBoxHeight;\n        }\n\n        addClass([this.popupWrapper], 'e-checkbox');\n      }\n\n      if (this.popupHeight !== 'auto') {\n        this.list.style.maxHeight = formatUnit(overAllHeight);\n        this.popupWrapper.style.maxHeight = formatUnit(this.popupHeight);\n      } else {\n        this.list.style.maxHeight = formatUnit(this.popupHeight);\n      }\n\n      this.popupObj = new Popup(this.popupWrapper, {\n        width: this.calcPopupWidth(),\n        targetType: 'relative',\n        position: {\n          X: 'left',\n          Y: 'bottom'\n        },\n        relateTo: this.overAllWrapper,\n        collision: {\n          X: 'flip',\n          Y: 'flip'\n        },\n        offsetY: 1,\n        enableRtl: this.enableRtl,\n        zIndex: this.zIndex,\n        close: () => {\n          if (this.popupObj.element.parentElement) {\n            this.popupObj.unwireScrollEvents(); // For restrict the page scrolling in safari browser\n\n            const checkboxFilterInput = this.popupWrapper.querySelector('.' + FILTERINPUT);\n\n            if (this.mode === 'CheckBox' && checkboxFilterInput && document.activeElement === checkboxFilterInput) {\n              checkboxFilterInput.blur();\n            }\n\n            detach(this.popupObj.element);\n          }\n        },\n        open: () => {\n          this.popupObj.resolveCollision();\n\n          if (!this.isFirstClick) {\n            const ulElement = this.list.querySelector('ul');\n\n            if (ulElement) {\n              if (!(this.mode !== 'CheckBox' && (this.allowFiltering || this.allowCustomValue) && this.targetElement().trim() !== '')) {\n                this.mainList = ulElement.cloneNode ? ulElement.cloneNode(true) : ulElement;\n              }\n            }\n\n            this.isFirstClick = true;\n          }\n\n          this.popupObj.wireScrollEvents();\n\n          if (!(this.mode !== 'CheckBox' && (this.allowFiltering || this.allowCustomValue) && this.targetElement().trim() !== '')) {\n            this.loadTemplate();\n          }\n\n          this.setScrollPosition();\n\n          if (this.allowFiltering) {\n            this.notify('inputFocus', {\n              module: 'CheckBoxSelection',\n              enable: this.mode === 'CheckBox',\n              value: 'focus'\n            });\n          }\n        },\n        targetExitViewport: () => {\n          if (!Browser.isDevice) {\n            this.hidePopup();\n          }\n        }\n      });\n\n      if (this.mode === 'CheckBox' && Browser.isDevice && this.allowFiltering) {\n        this.notify('deviceSearchBox', {\n          module: 'CheckBoxSelection',\n          enable: this.mode === 'CheckBox'\n        });\n      }\n\n      this.popupObj.close();\n      this.popupWrapper.style.visibility = '';\n    }\n  }\n\n  setHeaderTemplate() {\n    let compiledString;\n\n    if (this.header) {\n      this.header.remove();\n    }\n\n    this.header = this.createElement('div');\n    addClass([this.header], HEADER$1);\n    const headercheck = this.multiCompiler(this.headerTemplate);\n\n    if (headercheck) {\n      compiledString = compile(select(this.headerTemplate, document).innerHTML.trim());\n    } else {\n      compiledString = compile(this.headerTemplate);\n    } // eslint-disable-next-line\n\n\n    let elements = compiledString({}, this, 'headerTemplate', this.headerTemplateId, this.isStringTemplate, null, this.header);\n\n    if (elements && elements.length > 0) {\n      for (let temp = 0; temp < elements.length; temp++) {\n        this.header.appendChild(elements[temp]);\n      }\n    }\n\n    if (this.mode === 'CheckBox' && this.showSelectAll) {\n      prepend([this.header], this.popupWrapper);\n    } else {\n      append([this.header], this.popupWrapper);\n    }\n\n    EventHandler.add(this.header, 'mousedown', this.onListMouseDown, this);\n  }\n\n  setFooterTemplate() {\n    let compiledString;\n\n    if (this.footer) {\n      this.footer.remove();\n    }\n\n    this.footer = this.createElement('div');\n    addClass([this.footer], FOOTER$1);\n    const footercheck = this.multiCompiler(this.footerTemplate);\n\n    if (footercheck) {\n      compiledString = compile(select(this.footerTemplate, document).innerHTML.trim());\n    } else {\n      compiledString = compile(this.footerTemplate);\n    } // eslint-disable-next-line\n\n\n    let elements = compiledString({}, this, 'footerTemplate', this.footerTemplateId, this.isStringTemplate, null, this.footer);\n\n    if (elements && elements.length > 0) {\n      for (let temp = 0; temp < elements.length; temp++) {\n        this.footer.appendChild(elements[temp]);\n      }\n    }\n\n    append([this.footer], this.popupWrapper);\n    EventHandler.add(this.footer, 'mousedown', this.onListMouseDown, this);\n  }\n\n  clearAll(e) {\n    if (this.enabled && !this.readonly) {\n      let temp;\n\n      if (this.value && this.value.length > 0) {\n        const liElement = this.list && this.list.querySelectorAll('li.e-list-item');\n\n        if (liElement && liElement.length > 0) {\n          this.selectAllItems(false, e);\n        } else {\n          this.removeIndex = 0;\n\n          for (temp = this.value[this.removeIndex]; this.removeIndex < this.value.length; temp = this.value[this.removeIndex]) {\n            this.removeValue(temp, e, null, true);\n          }\n        }\n      } else {\n        this.clearAllCallback(e);\n      }\n    }\n  }\n\n  clearAllCallback(e, isClearAll) {\n    const tempValues = this.value ? this.value.slice() : [];\n\n    if (this.mainList && this.listData && (this.allowFiltering && this.mode !== 'CheckBox' || this.allowCustomValue)) {\n      const list = this.mainList.cloneNode ? this.mainList.cloneNode(true) : this.mainList;\n      this.onActionComplete(list, this.mainData);\n    }\n\n    this.focusAtFirstListItem();\n    this.updateDelimeter(this.delimiterChar, e);\n\n    if (this.mode !== 'Box' && (!this.inputFocus || this.mode === 'CheckBox')) {\n      this.updateDelimView();\n    }\n\n    if (this.inputElement.value !== '') {\n      this.makeTextBoxEmpty();\n      this.search(null);\n    }\n\n    this.checkPlaceholderSize();\n\n    if (this.isPopupOpen()) {\n      this.refreshPopup();\n    }\n\n    if (!this.inputFocus) {\n      if (this.changeOnBlur) {\n        this.updateValueState(e, this.value, tempValues);\n      }\n\n      if (this.mode !== 'CheckBox') {\n        this.inputElement.focus();\n      }\n    }\n\n    if (this.mode === 'CheckBox') {\n      this.refreshPlaceHolder();\n      this.refreshInputHight();\n\n      if (this.changeOnBlur && isClearAll && (isNullOrUndefined(this.value) || this.value.length === 0)) {\n        this.updateValueState(e, this.value, this.tempValues);\n      }\n    }\n\n    if (!this.changeOnBlur && isClearAll && (isNullOrUndefined(this.value) || this.value.length === 0)) {\n      this.updateValueState(e, this.value, this.tempValues);\n    }\n\n    if (this.mode === 'CheckBox' && this.enableGroupCheckBox && !isNullOrUndefined(this.fields.groupBy)) {\n      this.updateListItems(this.list.querySelectorAll('li.e-list-item'), this.mainList.querySelectorAll('li.e-list-item'));\n    }\n\n    e.preventDefault();\n  }\n\n  windowResize() {\n    this.refreshPopup();\n\n    if ((!this.inputFocus || this.mode === 'CheckBox') && this.viewWrapper && this.viewWrapper.parentElement) {\n      this.updateDelimView();\n    }\n  }\n\n  resetValueHandler(e) {\n    const formElement = closest(this.inputElement, 'form');\n\n    if (formElement && e.target === formElement) {\n      const textVal = this.element.tagName === this.getNgDirective() ? null : this.element.getAttribute('data-initial-value');\n      this.text = textVal;\n    }\n  }\n\n  wireEvent() {\n    EventHandler.add(this.componentWrapper, 'mousedown', this.wrapperClick, this);\n    EventHandler.add(window, 'resize', this.windowResize, this);\n    EventHandler.add(this.inputElement, 'focus', this.focusInHandler, this);\n    EventHandler.add(this.inputElement, 'keydown', this.onKeyDown, this);\n    EventHandler.add(this.inputElement, 'keyup', this.keyUp, this);\n\n    if (this.mode !== 'CheckBox') {\n      EventHandler.add(this.inputElement, 'input', this.onInput, this);\n    }\n\n    EventHandler.add(this.inputElement, 'blur', this.onBlurHandler, this);\n    EventHandler.add(this.componentWrapper, 'mouseover', this.mouseIn, this);\n    const formElement = closest(this.inputElement, 'form');\n\n    if (formElement) {\n      EventHandler.add(formElement, 'reset', this.resetValueHandler, this);\n    }\n\n    EventHandler.add(this.componentWrapper, 'mouseout', this.mouseOut, this);\n    EventHandler.add(this.overAllClear, 'mouseup', this.clearAll, this);\n    EventHandler.add(this.inputElement, 'paste', this.pasteHandler, this);\n  }\n\n  onInput(e) {\n    if (this.keyDownStatus) {\n      this.isValidKey = true;\n    } else {\n      this.isValidKey = false;\n    }\n\n    this.keyDownStatus = false; // For Filtering works in mobile firefox\n\n    if (Browser.isDevice && Browser.info.name === 'mozilla') {\n      this.search(e);\n    }\n  }\n\n  pasteHandler(event) {\n    setTimeout(() => {\n      this.expandTextbox();\n      this.search(event);\n    });\n  }\n\n  search(e) {\n    if (!isNullOrUndefined(e)) {\n      this.keyCode = e.keyCode;\n    }\n\n    if (!this.isPopupOpen() && this.openOnClick) {\n      this.showPopup();\n    }\n\n    this.openClick(e);\n\n    if (this.checkTextLength() && !this.allowFiltering && !isNullOrUndefined(e) && e.keyCode !== 8) {\n      this.focusAtFirstListItem();\n    } else {\n      const text = this.targetElement();\n\n      if (this.allowFiltering) {\n        const eventArgs = {\n          preventDefaultAction: false,\n          text: this.targetElement(),\n          updateData: (dataSource, query, fields) => {\n            if (eventArgs.cancel) {\n              return;\n            }\n\n            this.isFiltered = true;\n            this.remoteFilterAction = true;\n            this.dataUpdater(dataSource, query, fields);\n          },\n          event: e,\n          cancel: false\n        };\n        this.trigger('filtering', eventArgs, eventArgs => {\n          if (!eventArgs.cancel) {\n            if (!this.isFiltered && !eventArgs.preventDefaultAction) {\n              this.filterAction = true;\n              this.dataUpdater(this.dataSource, null, this.fields);\n            }\n          }\n        });\n      } else if (this.allowCustomValue) {\n        let query = new Query();\n        query = text !== '' ? query.where(this.fields.text, 'startswith', text, this.ignoreCase, this.ignoreAccent) : query;\n        this.dataUpdater(this.mainData, query, this.fields);\n      } else {\n        const liCollections = this.list.querySelectorAll('li.' + dropDownBaseClasses.li + ':not(.e-hide-listitem)');\n        const activeElement = Search(this.targetElement(), liCollections, 'StartsWith', this.ignoreCase);\n\n        if (activeElement && activeElement.item !== null) {\n          this.addListFocus(activeElement.item);\n          this.list.scrollTop = activeElement.item.offsetHeight * activeElement.index;\n        } else if (this.targetElement() !== '') {\n          this.removeFocus();\n        } else {\n          this.focusAtFirstListItem();\n        }\n      }\n    }\n  }\n\n  preRender() {\n    if (this.allowFiltering === null) {\n      this.allowFiltering = this.mode === 'CheckBox' ? true : false;\n    }\n\n    this.initializeData();\n    this.updateDataAttribute(this.htmlAttributes);\n    super.preRender();\n  }\n\n  getLocaleName() {\n    return 'multi-select';\n  }\n\n  initializeData() {\n    this.mainListCollection = [];\n    this.beforePopupOpen = false;\n    this.filterAction = false;\n    this.remoteFilterAction = false;\n    this.isFirstClick = false;\n    this.mobFilter = true;\n    this.isFiltered = false;\n    this.focused = true;\n    this.initial = true;\n    this.backCommand = true;\n  }\n\n  updateData(delimiterChar, e) {\n    let data = '';\n    const delim = this.mode === 'Delimiter' || this.mode === 'CheckBox';\n    const text = [];\n    let temp;\n    const tempData = this.listData;\n    this.listData = this.mainData;\n    this.hiddenElement.innerHTML = '';\n\n    if (!isNullOrUndefined(this.value)) {\n      for (let index = 0; !isNullOrUndefined(this.value[index]); index++) {\n        const listValue = this.findListElement(!isNullOrUndefined(this.mainList) ? this.mainList : this.ulElement, 'li', 'data-value', this.value[index]);\n\n        if (isNullOrUndefined(listValue) && !this.allowCustomValue) {\n          this.value.splice(index, 1);\n          index -= 1;\n        } else {\n          if (this.listData) {\n            temp = this.getTextByValue(this.value[index]);\n          } else {\n            temp = this.value[index];\n          }\n\n          data += temp + delimiterChar + ' ';\n          text.push(temp);\n        }\n\n        this.hiddenElement.innerHTML += '<option selected value =\"' + this.value[index] + '\">' + index + '</option>';\n      }\n    }\n\n    this.setProperties({\n      text: text.toString()\n    }, true);\n\n    if (delim) {\n      this.updateWrapperText(this.delimiterWrapper, data);\n      this.delimiterWrapper.setAttribute('id', getUniqueID('delim_val'));\n      this.inputElement.setAttribute('aria-describedby', this.delimiterWrapper.id);\n      this.inputElement.setAttribute('aria-labelledby', this.delimiterWrapper.id);\n    }\n\n    const targetEle = e && e.target;\n    const isClearAll = targetEle && targetEle.classList.contains('e-close-hooker') ? true : null;\n\n    if (!this.changeOnBlur && e && !isClearAll || this.isSelectAll) {\n      this.isSelectAll = false;\n      this.updateValueState(e, this.value, this.tempValues);\n    }\n\n    this.listData = tempData;\n    this.addValidInputClass();\n  }\n\n  initialTextUpdate() {\n    if (!isNullOrUndefined(this.text)) {\n      const textArr = this.text.split(this.delimiterChar);\n      const textVal = [];\n\n      for (let index = 0; textArr.length > index; index++) {\n        const val = this.getValueByText(textArr[index]);\n\n        if (!isNullOrUndefined(val)) {\n          textVal.push(val);\n        } else if (this.allowCustomValue) {\n          textVal.push(textArr[index]);\n        }\n      }\n\n      if (textVal && textVal.length) {\n        this.setProperties({\n          value: textVal\n        }, true);\n      }\n    } else {\n      this.setProperties({\n        value: null\n      }, true);\n    }\n  }\n\n  renderList(isEmptyData) {\n    if (!isEmptyData && this.allowCustomValue && this.list && (this.list.textContent === this.noRecordsTemplate || this.list.querySelector('.e-ul') && this.list.querySelector('.e-ul').childElementCount === 0)) {\n      isEmptyData = true;\n    }\n\n    super.render(isEmptyData);\n    this.unwireListEvents();\n    this.wireListEvents();\n  }\n\n  initialValueUpdate() {\n    if (this.list) {\n      let text;\n      let element;\n      let value;\n\n      if (this.chipCollectionWrapper) {\n        this.chipCollectionWrapper.innerHTML = '';\n      }\n\n      this.removeListSelection();\n\n      if (!isNullOrUndefined(this.value)) {\n        for (let index = 0; !isNullOrUndefined(this.value[index]); index++) {\n          value = this.value[index];\n          element = this.findListElement(this.hideSelectedItem ? this.ulElement : this.list, 'li', 'data-value', value);\n          text = this.getTextByValue(value);\n\n          if (element && element.getAttribute('aria-selected') !== 'true' || element && element.getAttribute('aria-selected') === 'true' && this.hideSelectedItem && (this.mode === 'Box' || this.mode === 'Default')) {\n            this.addChip(text, value);\n            this.addListSelection(element);\n          } else if (value && this.allowCustomValue) {\n            const indexItem = this.listData.length;\n            const newValue = {};\n            setValue(this.fields.text, value, newValue);\n            setValue(this.fields.value, value, newValue);\n            const noDataEle = this.popupWrapper.querySelector('.' + dropDownBaseClasses.noData);\n            this.addItem(newValue, indexItem);\n            element = element ? element : this.findListElement(this.hideSelectedItem ? this.ulElement : this.list, 'li', 'data-value', value);\n\n            if (this.popupWrapper.contains(noDataEle)) {\n              this.list.setAttribute('style', noDataEle.getAttribute('style'));\n              this.popupWrapper.replaceChild(this.list, noDataEle);\n              this.wireListEvents();\n            }\n\n            this.addChip(text, value);\n            this.addListSelection(element);\n          }\n        }\n      }\n\n      if (this.mode === 'CheckBox') {\n        this.updateDelimView();\n\n        if (this.changeOnBlur) {\n          this.updateValueState(null, this.value, this.tempValues);\n        }\n\n        this.updateDelimeter(this.delimiterChar);\n        this.refreshInputHight();\n      } else {\n        this.updateDelimeter(this.delimiterChar);\n      }\n\n      if (this.mode === 'CheckBox' && this.showSelectAll && (isNullOrUndefined(this.value) || !this.value.length)) {\n        this.notify('checkSelectAll', {\n          module: 'CheckBoxSelection',\n          enable: this.mode === 'CheckBox',\n          value: 'uncheck'\n        });\n      }\n\n      if (this.mode === 'Box' || this.mode === 'Default' && this.inputFocus) {\n        this.chipCollectionWrapper.style.display = '';\n      } else if (this.mode === 'Delimiter' || this.mode === 'CheckBox') {\n        this.showDelimWrapper();\n      }\n    }\n  } // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  updateActionCompleteData(li, item) {\n    if (this.value && this.value.indexOf(li.getAttribute('data-value')) > -1) {\n      this.mainList = this.ulElement;\n\n      if (this.hideSelectedItem) {\n        addClass([li], HIDE_LIST);\n      }\n    }\n  } // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  updateAddItemList(list, itemCount) {\n    if (this.popupObj && this.popupObj.element && this.popupObj.element.querySelector('.' + dropDownBaseClasses.noData) && list) {\n      this.list = list;\n      this.mainList = this.ulElement = list.querySelector('ul');\n      remove(this.popupWrapper.querySelector('.e-content'));\n      this.popupObj = null;\n      this.renderPopup();\n    } else if (this.allowCustomValue) {\n      this.list = list;\n      this.mainList = this.ulElement = list.querySelector('ul');\n    }\n  }\n\n  updateDataList() {\n    if (this.mainList && this.ulElement && !(this.isFiltered || this.filterAction)) {\n      let isDynamicGroupItemUpdate = this.mainList.childElementCount < this.ulElement.childElementCount;\n      let isReactTemplateUpdate = this.ulElement.childElementCount > 0 && this.ulElement.children[0].childElementCount > 0 && this.mainList.children[0].childElementCount < this.ulElement.children[0].childElementCount;\n      let isAngularTemplateUpdate = this.itemTemplate && this.ulElement.childElementCount > 0 && !(this.ulElement.childElementCount < this.mainList.childElementCount) && (this.ulElement.children[0].childElementCount > 0 || this.fields.groupBy && this.ulElement.children[1] && this.ulElement.children[1].childElementCount > 0);\n\n      if (isDynamicGroupItemUpdate || isReactTemplateUpdate || isAngularTemplateUpdate) {\n        //EJ2-57748 - for this task, we prevent the ul element cloning ( this.mainList = this.ulElement.cloneNode ? <HTMLElement>this.ulElement.cloneNode(true) : this.ulElement;)\n        this.mainList = this.ulElement;\n      }\n    }\n  }\n\n  isValidLI(li) {\n    return li && !li.classList.contains(dropDownBaseClasses.disabled) && !li.classList.contains(dropDownBaseClasses.group) && li.classList.contains(dropDownBaseClasses.li);\n  }\n\n  updateListSelection(li, e, length) {\n    const customVal = li.getAttribute('data-value');\n    let value = this.getFormattedValue(customVal);\n\n    if (this.allowCustomValue && (customVal !== 'false' && value === false || !isNullOrUndefined(value) && value.toString() === 'NaN')) {\n      value = customVal;\n    }\n\n    this.removeHover();\n\n    if (!this.value || this.value.indexOf(value) === -1) {\n      this.dispatchSelect(value, e, li, li.getAttribute('aria-selected') === 'true', length);\n    } else {\n      this.removeValue(value, e, length);\n    }\n  }\n\n  updateListSelectEventCallback(value, li, e) {\n    const text = this.getTextByValue(value);\n\n    if ((this.allowCustomValue || this.allowFiltering) && !this.findListElement(this.mainList, 'li', 'data-value', value)) {\n      const temp = li.cloneNode(true);\n      const fieldValue = this.fields.value ? this.fields.value : 'value';\n\n      if (this.allowCustomValue && this.mainData.length && typeof getValue(fieldValue, this.mainData[0]) === 'number') {\n        value = !isNaN(parseFloat(value.toString())) ? parseFloat(value.toString()) : value;\n      }\n\n      const data = this.getDataByValue(value);\n      const eventArgs = {\n        newData: data,\n        cancel: false\n      };\n      this.trigger('customValueSelection', eventArgs, eventArgs => {\n        if (!eventArgs.cancel) {\n          append([temp], this.mainList);\n          this.mainData.push(data);\n          this.remoteCustomValue = false;\n          this.addValue(value, text, e);\n        }\n      });\n    } else {\n      this.remoteCustomValue = false;\n      this.addValue(value, text, e);\n    }\n  }\n\n  removeListSelection() {\n    const className = this.hideSelectedItem ? HIDE_LIST : dropDownBaseClasses.selected;\n    const selectedItems = this.list.querySelectorAll('.' + className);\n    let temp = selectedItems.length;\n\n    if (selectedItems && selectedItems.length) {\n      removeClass(selectedItems, className);\n\n      while (temp > 0) {\n        selectedItems[temp - 1].setAttribute('aria-selected', 'false');\n        temp--;\n      }\n    }\n\n    if (!isNullOrUndefined(this.mainList)) {\n      const selectItems = this.mainList.querySelectorAll('.' + className);\n      let temp1 = selectItems.length;\n\n      if (selectItems && selectItems.length) {\n        removeClass(selectItems, className);\n\n        while (temp1 > 0) {\n          selectItems[temp1 - 1].setAttribute('aria-selected', 'false');\n\n          if (this.mode === 'CheckBox') {\n            if (selectedItems && selectedItems.length > temp1 - 1) {\n              selectedItems[temp1 - 1].firstElementChild.setAttribute('aria-checked', 'false');\n              removeClass([selectedItems[temp1 - 1].firstElementChild.lastElementChild], 'e-check');\n            }\n\n            selectItems[temp1 - 1].firstElementChild.setAttribute('aria-checked', 'false');\n            removeClass([selectItems[temp1 - 1].firstElementChild.lastElementChild], 'e-check');\n          }\n\n          temp1--;\n        }\n      }\n    }\n  }\n\n  removeHover() {\n    const hoveredItem = this.list.querySelectorAll('.' + dropDownBaseClasses.hover);\n\n    if (hoveredItem && hoveredItem.length) {\n      removeClass(hoveredItem, dropDownBaseClasses.hover);\n    }\n  }\n\n  removeFocus() {\n    if (this.list && this.mainList) {\n      const hoveredItem = this.list.querySelectorAll('.' + dropDownBaseClasses.focus);\n      const mainlist = this.mainList.querySelectorAll('.' + dropDownBaseClasses.focus);\n\n      if (hoveredItem && hoveredItem.length) {\n        removeClass(hoveredItem, dropDownBaseClasses.focus);\n        removeClass(mainlist, dropDownBaseClasses.focus);\n      }\n    }\n  }\n\n  addListHover(li) {\n    if (this.enabled && this.isValidLI(li)) {\n      this.removeHover();\n      addClass([li], dropDownBaseClasses.hover);\n    } else {\n      if (li !== null && li.classList.contains('e-list-group-item') && this.enableGroupCheckBox && this.mode === 'CheckBox' && !isNullOrUndefined(this.fields.groupBy)) {\n        this.removeHover();\n        addClass([li], dropDownBaseClasses.hover);\n      }\n    }\n  }\n\n  addListFocus(element) {\n    if (this.enabled && this.isValidLI(element)) {\n      this.removeFocus();\n      addClass([element], dropDownBaseClasses.focus);\n    } else {\n      if (this.enableGroupCheckBox && this.mode === 'CheckBox' && !isNullOrUndefined(this.fields.groupBy)) {\n        addClass([element], dropDownBaseClasses.focus);\n      }\n    }\n  }\n\n  addListSelection(element, mainElement) {\n    const className = this.hideSelectedItem ? HIDE_LIST : dropDownBaseClasses.selected;\n\n    if (this.isValidLI(element) && !element.classList.contains(dropDownBaseClasses.hover)) {\n      addClass([element], className);\n      this.updateMainList(false, element.getAttribute('data-value'), mainElement);\n      element.setAttribute('aria-selected', 'true');\n\n      if (this.mode === 'CheckBox') {\n        const ariaCheck = element.firstElementChild.getAttribute('aria-checked');\n\n        if (ariaCheck === 'false' || isNullOrUndefined(ariaCheck)) {\n          this.notify('updatelist', {\n            module: 'CheckBoxSelection',\n            enable: this.mode === 'CheckBox',\n            li: element,\n            e: this\n          });\n        }\n      }\n\n      this.notify('activeList', {\n        module: 'CheckBoxSelection',\n        enable: this.mode === 'CheckBox',\n        li: element,\n        e: this\n      });\n\n      if (this.chipCollectionWrapper) {\n        this.removeChipSelection();\n      }\n\n      attributes(this.inputElement, {\n        'aria-activedescendant': element.id\n      });\n    }\n  }\n\n  updateDelimeter(delimChar, e) {\n    this.updateData(delimChar, e);\n  }\n\n  onMouseClick(e) {\n    this.keyCode = null;\n    this.scrollFocusStatus = false;\n    let target = e.target;\n    const li = closest(target, '.' + dropDownBaseClasses.li);\n    const headerLi = closest(target, '.' + dropDownBaseClasses.group);\n\n    if (headerLi && this.enableGroupCheckBox && this.mode === 'CheckBox' && this.fields.groupBy) {\n      target = target.classList.contains('e-list-group-item') ? target.firstElementChild.lastElementChild : e.target;\n\n      if (target.classList.contains('e-check')) {\n        this.selectAllItem(false, e);\n        target.classList.remove('e-check');\n        target.classList.remove('e-stop');\n        closest(target, '.' + 'e-list-group-item').classList.remove('e-active');\n        target.setAttribute('aria-selected', 'false');\n      } else {\n        this.selectAllItem(true, e);\n        target.classList.remove('e-stop');\n        target.classList.add('e-check');\n        closest(target, '.' + 'e-list-group-item').classList.add('e-active');\n        target.setAttribute('aria-selected', 'true');\n      }\n\n      this.refreshSelection();\n      this.checkSelectAll();\n    } else {\n      if (this.isValidLI(li)) {\n        let limit = this.value && this.value.length ? this.value.length : 0;\n\n        if (li.classList.contains('e-active')) {\n          limit = limit - 1;\n        }\n\n        if (limit < this.maximumSelectionLength) {\n          this.updateListSelection(li, e);\n          this.checkPlaceholderSize();\n          this.addListFocus(li);\n\n          if ((this.allowCustomValue || this.allowFiltering) && this.mainList && this.listData) {\n            if (this.mode !== 'CheckBox') {\n              this.focusAtLastListItem(li.getAttribute('data-value'));\n              this.refreshSelection();\n            }\n          } else {\n            this.makeTextBoxEmpty();\n          }\n        }\n\n        if (this.mode === 'CheckBox') {\n          this.updateDelimView();\n\n          if (this.value && this.value.length > 50) {\n            setTimeout(() => {\n              this.updateDelimeter(this.delimiterChar, e);\n            }, 0);\n          } else {\n            this.updateDelimeter(this.delimiterChar, e);\n          }\n\n          this.refreshInputHight();\n        } else {\n          this.updateDelimeter(this.delimiterChar, e);\n        }\n\n        this.checkSelectAll();\n        this.refreshPopup();\n\n        if (this.hideSelectedItem) {\n          this.focusAtFirstListItem();\n        }\n\n        if (this.closePopupOnSelect) {\n          this.hidePopup(e);\n        } else {\n          e.preventDefault();\n        }\n\n        this.makeTextBoxEmpty();\n        this.findGroupStart(target);\n\n        if (this.mode !== 'CheckBox') {\n          this.refreshListItems(isNullOrUndefined(li) ? null : li.textContent);\n        }\n      } else {\n        e.preventDefault();\n      }\n\n      this.refreshPlaceHolder();\n      this.deselectHeader();\n    }\n  }\n\n  findGroupStart(target) {\n    if (this.enableGroupCheckBox && this.mode === 'CheckBox' && !isNullOrUndefined(this.fields.groupBy)) {\n      const count = 0;\n      const liChecked = 0;\n      const liUnchecked = 0;\n      let groupValues;\n\n      if (this.itemTemplate && !target.getElementsByClassName('e-frame').length) {\n        while (!target.getElementsByClassName('e-frame').length) {\n          target = target.parentElement;\n        }\n      }\n\n      if (target.classList.contains('e-frame')) {\n        target = target.parentElement.parentElement;\n      }\n\n      groupValues = this.findGroupAttrtibutes(target, liChecked, liUnchecked, count, 0);\n      groupValues = this.findGroupAttrtibutes(target, groupValues[0], groupValues[1], groupValues[2], 1);\n\n      while (!target.classList.contains('e-list-group-item')) {\n        if (target.classList.contains('e-list-icon')) {\n          target = target.parentElement;\n        }\n\n        target = target.previousElementSibling;\n\n        if (target == null) {\n          break;\n        }\n      }\n\n      this.updateCheckBox(target, groupValues[0], groupValues[1], groupValues[2]);\n    }\n  }\n\n  findGroupAttrtibutes(listElement, checked, unChecked, count, position) {\n    while (!listElement.classList.contains('e-list-group-item')) {\n      if (listElement.classList.contains('e-list-icon')) {\n        listElement = listElement.parentElement;\n      }\n\n      if (listElement.getElementsByClassName('e-frame')[0].classList.contains('e-check') && listElement.classList.contains('e-list-item')) {\n        checked++;\n      } else if (listElement.classList.contains('e-list-item')) {\n        unChecked++;\n      }\n\n      count++;\n      listElement = position ? listElement.nextElementSibling : listElement.previousElementSibling;\n\n      if (listElement == null) {\n        break;\n      }\n    }\n\n    return [checked, unChecked, count];\n  }\n\n  updateCheckBox(groupHeader, checked, unChecked, count) {\n    if (groupHeader === null) {\n      return;\n    }\n\n    const checkBoxElement = groupHeader.getElementsByClassName('e-frame')[0];\n\n    if (count === checked) {\n      checkBoxElement.classList.remove('e-stop');\n      checkBoxElement.classList.add('e-check');\n      closest(checkBoxElement, '.' + 'e-list-group-item').classList.add('e-active');\n      groupHeader.setAttribute('aria-selected', 'true');\n    } else if (count === unChecked) {\n      checkBoxElement.classList.remove('e-check');\n      checkBoxElement.classList.remove('e-stop');\n      closest(checkBoxElement, '.' + 'e-list-group-item').classList.remove('e-active');\n      groupHeader.setAttribute('aria-selected', 'false');\n    } else if (this.maximumSelectionLength === checked - 1) {\n      checkBoxElement.classList.remove('e-stop');\n      groupHeader.setAttribute('aria-selected', 'true');\n      closest(checkBoxElement, '.' + 'e-list-group-item').classList.add('e-active');\n      checkBoxElement.classList.add('e-check');\n    } else {\n      checkBoxElement.classList.remove('e-check');\n      checkBoxElement.classList.add('e-stop');\n      closest(checkBoxElement, '.' + 'e-list-group-item').classList.add('e-active');\n      groupHeader.setAttribute('aria-selected', 'false');\n    }\n  }\n\n  deselectHeader() {\n    const limit = this.value && this.value.length ? this.value.length : 0;\n    const collection = this.list.querySelectorAll('li.e-list-group-item:not(.e-active)');\n\n    if (limit < this.maximumSelectionLength) {\n      removeClass(collection, 'e-disable');\n    }\n\n    if (limit === this.maximumSelectionLength) {\n      addClass(collection, 'e-disable');\n    }\n  }\n\n  onMouseOver(e) {\n    let currentLi = closest(e.target, '.' + dropDownBaseClasses.li);\n\n    if (currentLi === null && this.mode === 'CheckBox' && !isNullOrUndefined(this.fields.groupBy) && this.enableGroupCheckBox) {\n      currentLi = closest(e.target, '.' + dropDownBaseClasses.group);\n    }\n\n    this.addListHover(currentLi);\n  }\n\n  onMouseLeave() {\n    this.removeHover();\n  }\n\n  onListMouseDown(e) {\n    e.preventDefault();\n    this.scrollFocusStatus = true;\n  }\n\n  onDocumentClick(e) {\n    if (this.mode !== 'CheckBox') {\n      const target = e.target;\n\n      if (!(!isNullOrUndefined(this.popupObj) && closest(target, '[id=\"' + this.popupObj.element.id + '\"]')) && !this.overAllWrapper.contains(e.target)) {\n        this.scrollFocusStatus = false;\n      } else {\n        this.scrollFocusStatus = (Browser.isIE || Browser.info.name === 'edge') && document.activeElement === this.inputElement;\n      }\n    }\n  }\n\n  wireListEvents() {\n    if (!isNullOrUndefined(this.list)) {\n      EventHandler.add(document, 'mousedown', this.onDocumentClick, this);\n      EventHandler.add(this.list, 'mousedown', this.onListMouseDown, this);\n      EventHandler.add(this.list, 'mouseup', this.onMouseClick, this);\n      EventHandler.add(this.list, 'mouseover', this.onMouseOver, this);\n      EventHandler.add(this.list, 'mouseout', this.onMouseLeave, this);\n    }\n  }\n\n  unwireListEvents() {\n    EventHandler.remove(document, 'mousedown', this.onDocumentClick);\n\n    if (this.list) {\n      EventHandler.remove(this.list, 'mousedown', this.onListMouseDown);\n      EventHandler.remove(this.list, 'mouseup', this.onMouseClick);\n      EventHandler.remove(this.list, 'mouseover', this.onMouseOver);\n      EventHandler.remove(this.list, 'mouseout', this.onMouseLeave);\n    }\n  }\n\n  hideOverAllClear() {\n    if (!this.value || !this.value.length || this.inputElement.value === '') {\n      this.overAllClear.style.display = 'none';\n    }\n  }\n\n  showOverAllClear() {\n    if ((this.value && this.value.length || this.inputElement.value !== '') && this.showClearButton && this.readonly !== true) {\n      this.overAllClear.style.display = '';\n    } else {\n      this.overAllClear.style.display = 'none';\n    }\n  }\n  /**\n   * Sets the focus to widget for interaction.\n   *\n   * @returns {void}\n   */\n\n\n  focusIn() {\n    if (document.activeElement !== this.inputElement && this.enabled) {\n      this.inputElement.focus();\n    }\n  }\n  /**\n   * Remove the focus from widget, if the widget is in focus state.\n   *\n   * @returns {void}\n   */\n\n\n  focusOut() {\n    if (document.activeElement === this.inputElement && this.enabled) {\n      this.inputElement.blur();\n    }\n  }\n  /**\n   * Shows the spinner loader.\n   *\n   * @returns {void}\n   */\n\n\n  showSpinner() {\n    if (isNullOrUndefined(this.spinnerElement)) {\n      let filterClear = this.filterParent && this.filterParent.querySelector('.e-clear-icon.e-icons');\n\n      if (this.overAllClear.style.display !== 'none' || filterClear) {\n        this.spinnerElement = filterClear ? filterClear : this.overAllClear;\n      } else {\n        this.spinnerElement = this.createElement('span', {\n          className: CLOSEICON_CLASS$1 + ' ' + SPINNER_CLASS$1\n        });\n        this.componentWrapper.appendChild(this.spinnerElement);\n      }\n\n      createSpinner({\n        target: this.spinnerElement,\n        width: Browser.isDevice ? '16px' : '14px'\n      }, this.createElement);\n      addClass([this.spinnerElement], DISABLE_ICON);\n      showSpinner(this.spinnerElement);\n    }\n  }\n  /**\n   * Hides the spinner loader.\n   *\n   * @returns {void}\n   */\n\n\n  hideSpinner() {\n    if (!isNullOrUndefined(this.spinnerElement)) {\n      hideSpinner(this.spinnerElement);\n      removeClass([this.spinnerElement], DISABLE_ICON);\n\n      if (this.spinnerElement.classList.contains(SPINNER_CLASS$1)) {\n        detach(this.spinnerElement);\n      } else {\n        this.spinnerElement.innerHTML = '';\n      }\n\n      this.spinnerElement = null;\n    }\n  }\n\n  updateWrapperText(wrapperType, wrapperData) {\n    if (this.valueTemplate || !this.enableHtmlSanitizer) {\n      wrapperType.innerHTML = wrapperData;\n    } else {\n      wrapperType.innerText = SanitizeHtmlHelper.sanitize(wrapperData);\n    }\n  }\n\n  updateDelimView() {\n    if (this.delimiterWrapper) {\n      this.hideDelimWrapper();\n    }\n\n    if (this.chipCollectionWrapper) {\n      this.chipCollectionWrapper.style.display = 'none';\n    }\n\n    this.viewWrapper.style.display = '';\n    this.viewWrapper.style.width = '';\n    this.viewWrapper.classList.remove(TOTAL_COUNT_WRAPPER$1);\n\n    if (this.value && this.value.length) {\n      let data = '';\n      let temp;\n      let tempData;\n      let tempIndex = 1;\n      let wrapperleng;\n      let remaining;\n      let downIconWidth = 0;\n      let overAllContainer;\n      this.updateWrapperText(this.viewWrapper, data);\n      const l10nLocale = {\n        noRecordsTemplate: 'No records found',\n        actionFailureTemplate: 'Request failed',\n        overflowCountTemplate: '+${count} more..',\n        totalCountTemplate: '${count} selected'\n      };\n      let l10n = new L10n(this.getLocaleName(), l10nLocale, this.locale);\n\n      if (l10n.getConstant('actionFailureTemplate') === '') {\n        l10n = new L10n('dropdowns', l10nLocale, this.locale);\n      }\n\n      if (l10n.getConstant('noRecordsTemplate') === '') {\n        l10n = new L10n('dropdowns', l10nLocale, this.locale);\n      }\n\n      const remainContent = l10n.getConstant('overflowCountTemplate');\n      const totalContent = l10n.getConstant('totalCountTemplate');\n      const raminElement = this.createElement('span', {\n        className: REMAIN_WRAPPER$1\n      });\n      let remainCompildTemp = remainContent.replace('${count}', this.value.length.toString());\n      raminElement.innerText = remainCompildTemp;\n      this.viewWrapper.appendChild(raminElement);\n      this.renderReactTemplates();\n      const remainSize = raminElement.offsetWidth;\n      remove(raminElement);\n\n      if (this.showDropDownIcon) {\n        downIconWidth = this.dropIcon.offsetWidth + parseInt(window.getComputedStyle(this.dropIcon).marginRight, 10);\n      }\n\n      this.checkClearIconWidth();\n\n      if (!isNullOrUndefined(this.value)) {\n        for (let index = 0; !isNullOrUndefined(this.value[index]); index++) {\n          data += index === 0 ? '' : this.delimiterChar + ' ';\n          temp = this.getOverflowVal(index);\n          data += temp;\n          temp = this.viewWrapper.innerHTML;\n          this.updateWrapperText(this.viewWrapper, data);\n          wrapperleng = this.viewWrapper.offsetWidth + parseInt(window.getComputedStyle(this.viewWrapper).paddingRight, 10);\n          overAllContainer = this.componentWrapper.offsetWidth - parseInt(window.getComputedStyle(this.componentWrapper).paddingLeft, 10) - parseInt(window.getComputedStyle(this.componentWrapper).paddingRight, 10);\n\n          if (wrapperleng + downIconWidth + this.clearIconWidth > overAllContainer) {\n            if (tempData !== undefined && tempData !== '') {\n              temp = tempData;\n              index = tempIndex + 1;\n            }\n\n            this.updateWrapperText(this.viewWrapper, temp);\n            remaining = this.value.length - index;\n            wrapperleng = this.viewWrapper.offsetWidth + parseInt(window.getComputedStyle(this.viewWrapper).paddingRight, 10);\n\n            while (wrapperleng + remainSize + downIconWidth + this.clearIconWidth > overAllContainer && wrapperleng !== 0 && this.viewWrapper.innerHTML !== '') {\n              const textArr = [];\n              this.viewWrapper.innerHTML = textArr.join(this.delimiterChar);\n              remaining = this.value.length;\n              wrapperleng = this.viewWrapper.offsetWidth + parseInt(window.getComputedStyle(this.viewWrapper).paddingRight, 10);\n            }\n\n            break;\n          } else if (wrapperleng + remainSize + downIconWidth + this.clearIconWidth <= overAllContainer) {\n            tempData = data;\n            tempIndex = index;\n          } else if (index === 0) {\n            tempData = '';\n            tempIndex = -1;\n          }\n        }\n      }\n\n      if (remaining > 0) {\n        const totalWidth = overAllContainer - downIconWidth - this.clearIconWidth;\n        this.viewWrapper.appendChild(this.updateRemainTemplate(raminElement, this.viewWrapper, remaining, remainContent, totalContent, totalWidth));\n        this.updateRemainWidth(this.viewWrapper, totalWidth);\n        this.updateRemainingText(raminElement, downIconWidth, remaining, remainContent, totalContent);\n      }\n    } else {\n      this.viewWrapper.innerHTML = '';\n      this.viewWrapper.style.display = 'none';\n    }\n  }\n\n  checkClearIconWidth() {\n    if (this.showClearButton) {\n      this.clearIconWidth = this.overAllClear.offsetWidth;\n    }\n  }\n\n  updateRemainWidth(viewWrapper, totalWidth) {\n    if (viewWrapper.classList.contains(TOTAL_COUNT_WRAPPER$1) && totalWidth < viewWrapper.offsetWidth + parseInt(window.getComputedStyle(viewWrapper).paddingLeft, 10) + parseInt(window.getComputedStyle(viewWrapper).paddingLeft, 10)) {\n      viewWrapper.style.width = totalWidth + 'px';\n    }\n  }\n\n  updateRemainTemplate(raminElement, viewWrapper, remaining, remainContent, totalContent, totalWidth) {\n    if (viewWrapper.firstChild && viewWrapper.firstChild.nodeType === 3 && viewWrapper.firstChild.nodeValue === '') {\n      viewWrapper.removeChild(viewWrapper.firstChild);\n    }\n\n    raminElement.innerHTML = '';\n    let remainTemp = remainContent.replace('${count}', remaining.toString());\n    let totalTemp = totalContent.replace('${count}', remaining.toString());\n    raminElement.innerText = viewWrapper.firstChild && viewWrapper.firstChild.nodeType === 3 ? remainTemp : totalTemp;\n\n    if (viewWrapper.firstChild && viewWrapper.firstChild.nodeType === 3) {\n      viewWrapper.classList.remove(TOTAL_COUNT_WRAPPER$1);\n    } else {\n      viewWrapper.classList.add(TOTAL_COUNT_WRAPPER$1);\n      this.updateRemainWidth(viewWrapper, totalWidth);\n    }\n\n    return raminElement;\n  }\n\n  updateRemainingText(raminElement, downIconWidth, remaining, remainContent, totalContent) {\n    const overAllContainer = this.componentWrapper.offsetWidth - parseInt(window.getComputedStyle(this.componentWrapper).paddingLeft, 10) - parseInt(window.getComputedStyle(this.componentWrapper).paddingRight, 10);\n    let wrapperleng = this.viewWrapper.offsetWidth + parseInt(window.getComputedStyle(this.viewWrapper).paddingRight, 10);\n\n    if (wrapperleng + downIconWidth >= overAllContainer && wrapperleng !== 0 && this.viewWrapper.firstChild && this.viewWrapper.firstChild.nodeType === 3) {\n      while (wrapperleng + downIconWidth > overAllContainer && wrapperleng !== 0 && this.viewWrapper.firstChild && this.viewWrapper.firstChild.nodeType === 3) {\n        const textArr = this.viewWrapper.firstChild.nodeValue.split(this.delimiterChar);\n        textArr.pop();\n        this.viewWrapper.firstChild.nodeValue = textArr.join(this.delimiterChar);\n\n        if (this.viewWrapper.firstChild.nodeValue === '') {\n          this.viewWrapper.removeChild(this.viewWrapper.firstChild);\n        }\n\n        remaining++;\n        wrapperleng = this.viewWrapper.offsetWidth;\n      }\n\n      const totalWidth = overAllContainer - downIconWidth;\n      this.updateRemainTemplate(raminElement, this.viewWrapper, remaining, remainContent, totalContent, totalWidth);\n    }\n  }\n\n  getOverflowVal(index) {\n    let temp;\n\n    if (this.mainData && this.mainData.length) {\n      if (this.mode === 'CheckBox') {\n        const newTemp = this.listData;\n        this.listData = this.mainData;\n        temp = this.getTextByValue(this.value[index]);\n        this.listData = newTemp;\n      } else {\n        temp = this.getTextByValue(this.value[index]);\n      }\n    } else {\n      temp = this.value[index];\n    }\n\n    return temp;\n  }\n\n  unWireEvent() {\n    EventHandler.remove(this.componentWrapper, 'mousedown', this.wrapperClick);\n    EventHandler.remove(window, 'resize', this.windowResize);\n    EventHandler.remove(this.inputElement, 'focus', this.focusInHandler);\n    EventHandler.remove(this.inputElement, 'keydown', this.onKeyDown);\n\n    if (this.mode !== 'CheckBox') {\n      EventHandler.remove(this.inputElement, 'input', this.onInput);\n    }\n\n    EventHandler.remove(this.inputElement, 'keyup', this.keyUp);\n    const formElement = closest(this.inputElement, 'form');\n\n    if (formElement) {\n      EventHandler.remove(formElement, 'reset', this.resetValueHandler);\n    }\n\n    EventHandler.remove(this.inputElement, 'blur', this.onBlurHandler);\n    EventHandler.remove(this.componentWrapper, 'mouseover', this.mouseIn);\n    EventHandler.remove(this.componentWrapper, 'mouseout', this.mouseOut);\n    EventHandler.remove(this.overAllClear, 'mousedown', this.clearAll);\n    EventHandler.remove(this.inputElement, 'paste', this.pasteHandler);\n  }\n\n  selectAllItem(state, event, list) {\n    let li;\n    li = this.list.querySelectorAll(state ? 'li.e-list-item:not([aria-selected=\"true\"]):not(.e-reorder-hide)' : 'li.e-list-item[aria-selected=\"true\"]:not(.e-reorder-hide)');\n\n    if (this.value && this.value.length && event && event.target && closest(event.target, '.e-close-hooker') && this.allowFiltering) {\n      li = this.mainList.querySelectorAll(state ? 'li.e-list-item:not([aria-selected=\"true\"]):not(.e-reorder-hide)' : 'li.e-list-item[aria-selected=\"true\"]:not(.e-reorder-hide)');\n    }\n\n    if (this.enableGroupCheckBox && this.mode === 'CheckBox' && !isNullOrUndefined(this.fields.groupBy)) {\n      let target = event ? this.groupTemplate ? closest(event.target, '.e-list-group-item') : event.target : null;\n      target = event && event.keyCode === 32 ? list : target;\n      target = target && target.classList.contains('e-frame') ? target.parentElement.parentElement : target;\n\n      if (target && target.classList.contains('e-list-group-item')) {\n        let listElement = target.nextElementSibling;\n\n        if (isNullOrUndefined(listElement)) {\n          return;\n        }\n\n        while (listElement.classList.contains('e-list-item')) {\n          if (state) {\n            if (!listElement.firstElementChild.lastElementChild.classList.contains('e-check')) {\n              let selectionLimit = this.value && this.value.length ? this.value.length : 0;\n\n              if (listElement.classList.contains('e-active')) {\n                selectionLimit -= 1;\n              }\n\n              if (selectionLimit < this.maximumSelectionLength) {\n                this.updateListSelection(listElement, event);\n              }\n            }\n          } else {\n            if (listElement.firstElementChild.lastElementChild.classList.contains('e-check')) {\n              this.updateListSelection(listElement, event);\n            }\n          }\n\n          listElement = listElement.nextElementSibling;\n\n          if (listElement == null) {\n            break;\n          }\n        }\n\n        if (target.classList.contains('e-list-group-item')) {\n          const focusedElement = this.list.getElementsByClassName('e-item-focus')[0];\n\n          if (focusedElement) {\n            focusedElement.classList.remove('e-item-focus');\n          }\n\n          if (state) {\n            target.classList.add('e-active');\n          } else {\n            target.classList.remove('e-active');\n          }\n\n          target.classList.add('e-item-focus');\n        }\n\n        this.textboxValueUpdate();\n        this.checkPlaceholderSize();\n\n        if (!this.changeOnBlur && event) {\n          this.updateValueState(event, this.value, this.tempValues);\n        }\n      } else {\n        this.updateValue(event, li, state);\n      }\n    } else {\n      this.updateValue(event, li, state);\n    }\n  }\n\n  updateValue(event, li, state) {\n    const length = li.length;\n    const beforeSelectArgs = {\n      event: event,\n      items: state ? li : [],\n      itemData: state ? this.listData : [],\n      isInteracted: event ? true : false,\n      isChecked: state,\n      preventSelectEvent: false\n    };\n    this.trigger('beforeSelectAll', beforeSelectArgs);\n\n    if (li && li.length) {\n      let index = 0;\n      let count = 0;\n\n      if (this.enableGroupCheckBox) {\n        count = state ? this.maximumSelectionLength - (this.value ? this.value.length : 0) : li.length;\n      } else {\n        count = state ? this.maximumSelectionLength - (this.value ? this.value.length : 0) : this.maximumSelectionLength;\n      }\n\n      if (!beforeSelectArgs.preventSelectEvent) {\n        while (index < length && index <= 50 && index < count) {\n          this.updateListSelection(li[index], event, length - index);\n\n          if (this.enableGroupCheckBox) {\n            this.findGroupStart(li[index]);\n          }\n\n          index++;\n        }\n\n        if (length > 50) {\n          setTimeout(() => {\n            while (index < length && index < count) {\n              this.updateListSelection(li[index], event, length - index);\n\n              if (this.enableGroupCheckBox) {\n                this.findGroupStart(li[index]);\n              }\n\n              index++;\n            }\n\n            this.updatedataValueItems(event);\n\n            if (!this.changeOnBlur) {\n              this.updateValueState(event, this.value, this.tempValues);\n              this.isSelectAll = this.isSelectAll ? !this.isSelectAll : this.isSelectAll;\n            }\n\n            this.updateHiddenElement();\n          }, 0);\n        }\n      } else {\n        for (let i = 0; i < li.length && i < count; i++) {\n          this.removeHover();\n          let customVal = li[i].getAttribute('data-value');\n          let value = this.getFormattedValue(customVal);\n          let mainElement = this.mainList ? this.mainList.querySelectorAll(state ? 'li.e-list-item:not([aria-selected=\"true\"]):not(.e-reorder-hide)' : 'li.e-list-item[aria-selected=\"true\"]:not(.e-reorder-hide)')[i] : null;\n\n          if (state) {\n            this.value = !this.value ? [] : this.value;\n\n            if (this.value.indexOf(value) < 0) {\n              this.setProperties({\n                value: [].concat([], this.value, [value])\n              }, true);\n            }\n\n            this.removeFocus();\n            this.addListSelection(li[i], mainElement);\n            this.updateChipStatus();\n            this.checkMaxSelection();\n          } else {\n            this.removeAllItems(value, event, false, li[i], mainElement);\n          }\n\n          if (this.enableGroupCheckBox) {\n            this.findGroupStart(li[i]);\n          }\n        }\n\n        if (!state) {\n          const limit = this.value && this.value.length ? this.value.length : 0;\n\n          if (limit < this.maximumSelectionLength) {\n            const collection = this.list.querySelectorAll('li.' + dropDownBaseClasses.li + ':not(.e-active)');\n            removeClass(collection, 'e-disable');\n          }\n        }\n\n        const args = {\n          event: event,\n          items: state ? li : [],\n          itemData: state ? this.listData : [],\n          isInteracted: event ? true : false,\n          isChecked: state\n        };\n        this.trigger('selectedAll', args);\n      }\n    }\n\n    this.updatedataValueItems(event);\n    this.checkPlaceholderSize();\n\n    if (length <= 50 && !beforeSelectArgs.preventSelectEvent) {\n      if (!this.changeOnBlur) {\n        this.updateValueState(event, this.value, this.tempValues);\n        this.isSelectAll = this.isSelectAll ? !this.isSelectAll : this.isSelectAll;\n      }\n\n      this.updateHiddenElement();\n    }\n  }\n\n  updateHiddenElement() {\n    let hiddenValue = '';\n    let wrapperText = '';\n    let data = '';\n    const text = [];\n\n    if (this.mode === 'CheckBox') {\n      this.value.map((value, index) => {\n        hiddenValue += '<option selected value =\"' + value + '\">' + index + '</option>';\n\n        if (this.listData) {\n          data = this.getTextByValue(value);\n        } else {\n          data = value;\n        }\n\n        wrapperText += data + this.delimiterChar + ' ';\n        text.push(data);\n      });\n      this.hiddenElement.innerHTML = hiddenValue;\n      this.updateWrapperText(this.delimiterWrapper, wrapperText);\n      this.delimiterWrapper.setAttribute('id', getUniqueID('delim_val'));\n      this.inputElement.setAttribute('aria-describedby', this.delimiterWrapper.id);\n      this.inputElement.setAttribute('aria-labelledby', this.delimiterWrapper.id);\n      this.setProperties({\n        text: text.toString()\n      }, true);\n      this.refreshInputHight();\n      this.refreshPlaceHolder();\n    }\n  }\n\n  updatedataValueItems(event) {\n    this.deselectHeader();\n    this.textboxValueUpdate(event);\n  }\n\n  textboxValueUpdate(event) {\n    const isRemoveAll = event && event.target && (closest(event.target, '.e-selectall-parent') || closest(event.target, '.e-close-hooker'));\n\n    if (this.mode !== 'Box' && !this.isPopupOpen() && !(this.mode === 'CheckBox' && (this.isSelectAll || isRemoveAll))) {\n      this.updateDelimView();\n    } else {\n      this.searchWrapper.classList.remove(ZERO_SIZE);\n    }\n\n    if (this.mode === 'CheckBox') {\n      this.updateDelimView();\n\n      if (!(isRemoveAll || this.isSelectAll)) {\n        this.updateDelimeter(this.delimiterChar, event);\n      }\n\n      this.refreshInputHight();\n    } else {\n      this.updateDelimeter(this.delimiterChar, event);\n    }\n\n    this.refreshPlaceHolder();\n  }\n\n  setZIndex() {\n    if (this.popupObj) {\n      this.popupObj.setProperties({\n        'zIndex': this.zIndex\n      });\n    }\n  } // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  updateDataSource(prop) {\n    if (isNullOrUndefined(this.list)) {\n      this.renderPopup();\n    } else {\n      this.resetList(this.dataSource);\n    }\n\n    if (this.value && this.value.length) {\n      this.setProperties({\n        'value': this.value\n      });\n      this.refreshSelection();\n    }\n  }\n\n  onLoadSelect() {\n    this.setDynValue = true;\n    this.renderPopup();\n  }\n\n  selectAllItems(state, event) {\n    if (isNullOrUndefined(this.list)) {\n      this.selectAllAction = () => {\n        if (this.mode === 'CheckBox' && this.showSelectAll) {\n          const args = {\n            module: 'CheckBoxSelection',\n            enable: this.mode === 'CheckBox',\n            value: state ? 'check' : 'uncheck'\n          };\n          this.notify('checkSelectAll', args);\n        }\n\n        this.selectAllItem(state, event);\n        this.selectAllAction = null;\n      };\n\n      super.render();\n    } else {\n      this.selectAllAction = null;\n\n      if (this.mode === 'CheckBox' && this.showSelectAll) {\n        const args = {\n          value: state ? 'check' : 'uncheck',\n          enable: this.mode === 'CheckBox',\n          module: 'CheckBoxSelection'\n        };\n        this.notify('checkSelectAll', args);\n      }\n\n      this.selectAllItem(state, event);\n    }\n  }\n  /**\n   * Get the properties to be maintained in the persisted state.\n   *\n   * @returns {string} Returns the persisted data of the component.\n   */\n\n\n  getPersistData() {\n    return this.addOnPersist(['value']);\n  }\n  /**\n   * Dynamically change the value of properties.\n   *\n   * @param {MultiSelectModel} newProp - Returns the dynamic property value of the component.\n   * @param {MultiSelectModel} oldProp - Returns the previous property value of the component.\n   * @private\n   * @returns {void}\n   */\n\n\n  onPropertyChanged(newProp, oldProp) {\n    if (newProp.dataSource && !isNullOrUndefined(Object.keys(newProp.dataSource)) || newProp.query && !isNullOrUndefined(Object.keys(newProp.query))) {\n      this.mainList = null;\n      this.mainData = null;\n      this.isFirstClick = false;\n      this.isDynamicDataChange = true;\n    }\n\n    if (this.getModuleName() === 'multiselect') {\n      this.filterAction = false;\n      this.setUpdateInitial(['fields', 'query', 'dataSource'], newProp);\n    }\n\n    for (const prop of Object.keys(newProp)) {\n      switch (prop) {\n        case 'query':\n        case 'dataSource':\n          if (this.mode === 'CheckBox' && this.showSelectAll) {\n            if (!isNullOrUndefined(this.popupObj)) {\n              this.popupObj.destroy();\n              this.popupObj = null;\n            }\n\n            this.renderPopup();\n          }\n\n          break;\n\n        case 'htmlAttributes':\n          this.updateHTMLAttribute();\n          break;\n\n        case 'showClearButton':\n          this.updateClearButton(newProp.showClearButton);\n          break;\n\n        case 'text':\n          this.updateVal(this.value, this.value, 'text');\n          break;\n\n        case 'value':\n          this.updateVal(this.value, oldProp.value, 'value');\n          this.addValidInputClass();\n\n          if (!this.closePopupOnSelect && this.isPopupOpen()) {\n            this.refreshPopup();\n          }\n\n          this.preventChange = this.isAngular && this.preventChange ? !this.preventChange : this.preventChange;\n          break;\n\n        case 'width':\n          this.setWidth(newProp.width);\n          this.popupObj.setProperties({\n            width: this.calcPopupWidth()\n          });\n          break;\n\n        case 'placeholder':\n          this.refreshPlaceHolder();\n          break;\n\n        case 'filterBarPlaceholder':\n          if (this.allowFiltering) {\n            this.notify('filterBarPlaceholder', {\n              filterBarPlaceholder: newProp.filterBarPlaceholder\n            });\n          }\n\n          break;\n\n        case 'delimiterChar':\n          if (this.mode !== 'Box') {\n            this.updateDelimView();\n          }\n\n          this.updateData(newProp.delimiterChar);\n          break;\n\n        case 'cssClass':\n          this.updateOldPropCssClass(oldProp.cssClass);\n          this.updateCssClass();\n          break;\n\n        case 'enableRtl':\n          this.enableRTL(newProp.enableRtl);\n          super.onPropertyChanged(newProp, oldProp);\n          break;\n\n        case 'readonly':\n          this.updateReadonly(newProp.readonly);\n          this.hidePopup();\n          break;\n\n        case 'enabled':\n          this.hidePopup();\n          this.enable(newProp.enabled);\n          break;\n\n        case 'showSelectAll':\n          if (this.popupObj) {\n            this.popupObj.destroy();\n            this.popupObj = null;\n          }\n\n          this.renderPopup();\n          break;\n\n        case 'showDropDownIcon':\n          this.dropDownIcon();\n          break;\n\n        case 'floatLabelType':\n          this.setFloatLabelType();\n          this.addValidInputClass();\n          break;\n\n        case 'enableSelectionOrder':\n          break;\n\n        case 'selectAllText':\n          this.notify('selectAllText', false);\n          break;\n\n        case 'popupHeight':\n          if (this.popupObj) {\n            let overAllHeight = parseInt(this.popupHeight, 10);\n\n            if (this.popupHeight !== 'auto') {\n              this.list.style.maxHeight = formatUnit(overAllHeight);\n              this.popupWrapper.style.maxHeight = formatUnit(this.popupHeight);\n            } else {\n              this.list.style.maxHeight = formatUnit(this.popupHeight);\n            }\n          }\n\n          break;\n\n        case 'headerTemplate':\n        case 'footerTemplate':\n          this.reInitializePoup();\n          break;\n\n        case 'allowFiltering':\n          if (this.mode === 'CheckBox' && this.popupObj) {\n            this.reInitializePoup();\n          }\n\n          this.updateSelectElementData(this.allowFiltering);\n          break;\n\n        default:\n          {\n            // eslint-disable-next-line max-len\n            const msProps = this.getPropObject(prop, newProp, oldProp);\n            super.onPropertyChanged(msProps.newProperty, msProps.oldProperty);\n          }\n          break;\n      }\n    }\n  }\n\n  reInitializePoup() {\n    if (this.popupObj) {\n      this.popupObj.destroy();\n      this.popupObj = null;\n    }\n\n    this.renderPopup();\n  }\n\n  presentItemValue(ulElement) {\n    let valuecheck = [];\n\n    for (let i = 0; i < this.value.length; i++) {\n      let checkEle = this.findListElement(this.allowFiltering && !isNullOrUndefined(this.mainList) ? this.mainList : ulElement, 'li', 'data-value', this.value[i]);\n\n      if (!checkEle) {\n        valuecheck.push(this.value[i]);\n      }\n    }\n\n    return valuecheck;\n  }\n\n  addNonPresentItems(valuecheck, ulElement, list, event) {\n    this.dataSource.executeQuery(this.getForQuery(valuecheck)).then(e => {\n      this.addItem(e.result, list.length);\n      this.updateActionList(ulElement, list, event);\n    });\n  }\n\n  updateVal(newProp, oldProp, prop) {\n    if (!this.list) {\n      this.onLoadSelect();\n    } else if (this.dataSource instanceof DataManager && (!this.listData || !(this.mainList && this.mainData))) {\n      this.onLoadSelect();\n    } else {\n      let valuecheck = [];\n\n      if (!isNullOrUndefined(this.value) && !this.allowCustomValue) {\n        valuecheck = this.presentItemValue(this.ulElement);\n      }\n\n      if (prop == 'value' && valuecheck.length > 0 && this.dataSource instanceof DataManager && !isNullOrUndefined(this.value) && this.listData != null) {\n        this.mainData = null;\n        this.setDynValue = true;\n        this.addNonPresentItems(valuecheck, this.ulElement, this.listData);\n      } else {\n        if (prop === 'text') {\n          this.initialTextUpdate();\n          newProp = this.value;\n        }\n\n        if (isNullOrUndefined(this.value) || this.value.length === 0) {\n          this.tempValues = oldProp;\n        } // eslint-disable-next-line\n\n\n        if (this.allowCustomValue && (this.mode === 'Default' || this.mode === 'Box') && this.isReact && this.inputFocus && this.isPopupOpen() && this.mainData !== this.listData) {\n          const list = this.mainList.cloneNode ? this.mainList.cloneNode(true) : this.mainList;\n          this.onActionComplete(list, this.mainData);\n        }\n\n        this.initialValueUpdate();\n\n        if (this.mode !== 'Box' && !this.inputFocus) {\n          this.updateDelimView();\n        }\n\n        if (!this.inputFocus) {\n          this.refreshInputHight();\n        }\n\n        this.refreshPlaceHolder();\n\n        if (this.mode !== 'CheckBox' && this.changeOnBlur) {\n          this.updateValueState(null, newProp, oldProp);\n        }\n\n        this.checkPlaceholderSize();\n      }\n    }\n\n    if (!this.changeOnBlur) {\n      this.updateValueState(null, newProp, oldProp);\n    }\n  }\n  /**\n   * Adds a new item to the multiselect popup list. By default, new item appends to the list as the last item,\n   * but you can insert based on the index parameter.\n   *\n   * @param  { Object[] } items - Specifies an array of JSON data or a JSON data.\n   * @param { number } itemIndex - Specifies the index to place the newly added item in the popup list.\n   * @returns {void}\n   */\n\n\n  addItem(items, itemIndex) {\n    super.addItem(items, itemIndex);\n  }\n  /**\n   * Hides the popup, if the popup in a open state.\n   *\n   * @returns {void}\n   */\n\n\n  hidePopup(e) {\n    const delay = 100;\n\n    if (this.isPopupOpen()) {\n      const animModel = {\n        name: 'FadeOut',\n        duration: 100,\n        delay: delay ? delay : 0\n      };\n      const eventArgs = {\n        popup: this.popupObj,\n        cancel: false,\n        animation: animModel,\n        event: e || null\n      };\n      this.trigger('close', eventArgs, eventArgs => {\n        if (!eventArgs.cancel) {\n          if (this.fields.groupBy && this.mode !== 'CheckBox' && this.fixedHeaderElement) {\n            remove(this.fixedHeaderElement);\n            this.fixedHeaderElement = null;\n          }\n\n          this.beforePopupOpen = false;\n          this.overAllWrapper.classList.remove(iconAnimation);\n          this.popupObj.hide(new Animation(eventArgs.animation));\n          attributes(this.inputElement, {\n            'aria-expanded': 'false'\n          });\n\n          if (this.allowFiltering) {\n            this.notify('inputFocus', {\n              module: 'CheckBoxSelection',\n              enable: this.mode === 'CheckBox',\n              value: 'clear'\n            });\n          }\n\n          this.popupObj.hide();\n          removeClass([document.body, this.popupObj.element], 'e-popup-full-page');\n          EventHandler.remove(this.list, 'keydown', this.onKeyDown);\n        }\n      });\n    }\n  }\n  /**\n   * Shows the popup, if the popup in a closed state.\n   *\n   * @returns {void}\n   */\n\n\n  showPopup() {\n    if (!this.enabled) {\n      return;\n    }\n\n    const args = {\n      cancel: false\n    };\n    this.trigger('beforeOpen', args, args => {\n      if (!args.cancel) {\n        if (!this.ulElement) {\n          this.beforePopupOpen = true;\n          super.render();\n\n          if (this.mode === 'CheckBox' && Browser.isDevice && this.allowFiltering) {\n            this.notify('popupFullScreen', {\n              module: 'CheckBoxSelection',\n              enable: this.mode === 'CheckBox'\n            });\n          }\n\n          return;\n        }\n\n        if (this.mode === 'CheckBox' && Browser.isDevice && this.allowFiltering) {\n          this.notify('popupFullScreen', {\n            module: 'CheckBoxSelection',\n            enable: this.mode === 'CheckBox'\n          });\n        }\n\n        const mainLiLength = this.ulElement.querySelectorAll('li.' + 'e-list-item').length;\n        const liLength = this.ulElement.querySelectorAll('li.' + dropDownBaseClasses.li + '.' + HIDE_LIST).length;\n\n        if (mainLiLength > 0 && mainLiLength === liLength && liLength === this.mainData.length && !(this.targetElement() !== '' && this.allowCustomValue)) {\n          this.beforePopupOpen = false;\n          return;\n        }\n\n        this.onPopupShown();\n      }\n    });\n  }\n  /**\n   * Based on the state parameter, entire list item will be selected/deselected.\n   * parameter\n   * `true`   - Selects entire list items.\n   * `false`  - Un Selects entire list items.\n   *\n   * @param {boolean} state - if it’s true then Selects the entire list items. If it’s false the Unselects entire list items.\n   * @returns {void}\n   */\n\n\n  selectAll(state) {\n    this.isSelectAll = true;\n    this.selectAllItems(state);\n  }\n  /**\n   * Return the module name of this component.\n   *\n   * @private\n   * @returns {string} Return the module name of this component.\n   */\n\n\n  getModuleName() {\n    return 'multiselect';\n  }\n  /**\n   * Allows you to clear the selected values from the Multiselect component.\n   *\n   * @returns {void}\n   */\n\n\n  clear() {\n    this.selectAll(false);\n\n    if (this.value && this.value.length) {\n      setTimeout(() => {\n        this.setProperties({\n          value: null\n        }, true);\n      }, 0);\n    } else {\n      this.setProperties({\n        value: null\n      }, true);\n    }\n  }\n  /**\n   * To Initialize the control rendering\n   *\n   * @private\n   * @returns {void}\n   */\n\n\n  render() {\n    this.setDynValue = this.initStatus = false;\n    this.isSelectAll = false;\n    this.searchWrapper = this.createElement('span', {\n      className: SEARCHBOX_WRAPPER + ' ' + (this.mode === 'Box' ? BOX_ELEMENT : '')\n    });\n    this.viewWrapper = this.createElement('span', {\n      className: DELIMITER_VIEW + ' ' + DELIMITER_WRAPPER,\n      styles: 'display:none;'\n    });\n    this.overAllClear = this.createElement('span', {\n      className: CLOSEICON_CLASS$1,\n      styles: 'display:none;'\n    });\n    this.componentWrapper = this.createElement('div', {\n      className: ELEMENT_WRAPPER\n    });\n    this.overAllWrapper = this.createElement('div', {\n      className: OVER_ALL_WRAPPER\n    });\n\n    if (this.mode === 'CheckBox') {\n      addClass([this.overAllWrapper], 'e-checkbox');\n    }\n\n    if (Browser.isDevice) {\n      this.componentWrapper.classList.add(ELEMENT_MOBILE_WRAPPER);\n    }\n\n    this.setWidth(this.width);\n    this.overAllWrapper.appendChild(this.componentWrapper);\n    this.popupWrapper = this.createElement('div', {\n      id: this.element.id + '_popup',\n      className: POPUP_WRAPPER\n    });\n\n    if (this.mode === 'Delimiter' || this.mode === 'CheckBox') {\n      this.delimiterWrapper = this.createElement('span', {\n        className: DELIMITER_WRAPPER,\n        styles: 'display:none'\n      });\n      this.componentWrapper.appendChild(this.delimiterWrapper);\n    } else {\n      this.chipCollectionWrapper = this.createElement('span', {\n        className: CHIP_WRAPPER$1,\n        styles: 'display:none'\n      });\n\n      if (this.mode === 'Default') {\n        this.chipCollectionWrapper.setAttribute('id', getUniqueID('chip_default'));\n      } else if (this.mode === 'Box') {\n        this.chipCollectionWrapper.setAttribute('id', getUniqueID('chip_box'));\n      }\n\n      this.componentWrapper.appendChild(this.chipCollectionWrapper);\n    }\n\n    if (this.mode !== 'Box') {\n      this.componentWrapper.appendChild(this.viewWrapper);\n    }\n\n    this.componentWrapper.appendChild(this.searchWrapper);\n\n    if (this.showClearButton && !Browser.isDevice) {\n      this.componentWrapper.appendChild(this.overAllClear);\n    } else {\n      this.componentWrapper.classList.add(CLOSE_ICON_HIDE);\n    }\n\n    this.dropDownIcon();\n    this.inputElement = this.createElement('input', {\n      className: INPUT_ELEMENT,\n      attrs: {\n        spellcheck: 'false',\n        type: 'text',\n        autocomplete: 'off',\n        tabindex: '0'\n      }\n    });\n\n    if (this.mode === 'Default' || this.mode === 'Box') {\n      this.inputElement.setAttribute('aria-describedby', this.chipCollectionWrapper.id);\n      this.inputElement.setAttribute('aria-labelledby', this.chipCollectionWrapper.id);\n    }\n\n    if (this.element.tagName !== this.getNgDirective()) {\n      this.element.style.display = 'none';\n    }\n\n    if (this.element.tagName === this.getNgDirective()) {\n      this.element.appendChild(this.overAllWrapper);\n      this.searchWrapper.appendChild(this.inputElement);\n    } else {\n      this.element.parentElement.insertBefore(this.overAllWrapper, this.element);\n      this.searchWrapper.appendChild(this.inputElement);\n      this.searchWrapper.appendChild(this.element);\n      this.element.removeAttribute('tabindex');\n    }\n\n    if (this.floatLabelType !== 'Never') {\n      createFloatLabel(this.overAllWrapper, this.searchWrapper, this.element, this.inputElement, this.value, this.floatLabelType, this.placeholder);\n    } else if (this.floatLabelType === 'Never') {\n      this.refreshPlaceHolder();\n    }\n\n    this.addValidInputClass();\n    this.element.style.opacity = '';\n    const id = this.element.getAttribute('id') ? this.element.getAttribute('id') : getUniqueID('ej2_dropdownlist');\n    this.element.id = id;\n    this.hiddenElement = this.createElement('select', {\n      attrs: {\n        'aria-hidden': 'true',\n        'class': HIDDEN_ELEMENT,\n        'tabindex': '-1',\n        'multiple': ''\n      }\n    });\n    this.componentWrapper.appendChild(this.hiddenElement);\n    this.validationAttribute(this.element, this.hiddenElement);\n\n    if (this.mode !== 'CheckBox') {\n      this.hideOverAllClear();\n    }\n\n    this.wireEvent();\n    this.enable(this.enabled);\n    this.enableRTL(this.enableRtl);\n    this.checkInitialValue();\n\n    if (this.element.hasAttribute('data-val')) {\n      this.element.setAttribute('data-val', 'false');\n    }\n\n    this.renderComplete();\n  }\n\n  checkInitialValue() {\n    const isData = this.dataSource instanceof Array ? this.dataSource.length > 0 : !isNullOrUndefined(this.dataSource);\n\n    if (!(this.value && this.value.length) && isNullOrUndefined(this.text) && !isData && this.element.tagName === 'SELECT' && this.element.options.length > 0) {\n      const optionsElement = this.element.options;\n      const valueCol = [];\n      let textCol = '';\n\n      for (let index = 0, optionsLen = optionsElement.length; index < optionsLen; index++) {\n        const opt = optionsElement[index];\n\n        if (!isNullOrUndefined(opt.getAttribute('selected'))) {\n          if (opt.getAttribute('value')) {\n            valueCol.push(opt.getAttribute('value'));\n          } else {\n            textCol += opt.text + this.delimiterChar;\n          }\n        }\n      }\n\n      if (valueCol.length > 0) {\n        this.setProperties({\n          value: valueCol\n        }, true);\n      } else if (textCol !== '') {\n        this.setProperties({\n          text: textCol\n        }, true);\n      }\n\n      if (valueCol.length > 0 || textCol !== '') {\n        this.refreshInputHight();\n        this.refreshPlaceHolder();\n      }\n    }\n\n    if (this.value && this.value.length || !isNullOrUndefined(this.text)) {\n      if (!this.list) {\n        super.render();\n      }\n    }\n\n    if (!isNullOrUndefined(this.text) && (isNullOrUndefined(this.value) || this.value.length === 0)) {\n      this.initialTextUpdate();\n    }\n\n    if (this.value && this.value.length) {\n      if (!(this.dataSource instanceof DataManager)) {\n        this.initialValueUpdate();\n        this.initialUpdate();\n      } else {\n        this.setInitialValue = () => {\n          this.initStatus = false;\n          this.initialValueUpdate();\n          this.initialUpdate();\n          this.setInitialValue = null;\n          this.initStatus = true;\n        };\n      }\n\n      this.updateTempValue();\n    } else {\n      this.initialUpdate();\n    }\n\n    this.initStatus = true;\n    this.checkAutoFocus();\n\n    if (!isNullOrUndefined(this.text)) {\n      this.element.setAttribute('data-initial-value', this.text);\n    }\n  }\n\n  checkAutoFocus() {\n    if (this.element.hasAttribute('autofocus')) {\n      this.inputElement.focus();\n    }\n  }\n\n  setFloatLabelType() {\n    removeFloating(this.overAllWrapper, this.componentWrapper, this.searchWrapper, this.inputElement, this.value, this.floatLabelType, this.placeholder);\n\n    if (this.floatLabelType !== 'Never') {\n      createFloatLabel(this.overAllWrapper, this.searchWrapper, this.element, this.inputElement, this.value, this.floatLabelType, this.placeholder);\n    }\n  }\n\n  addValidInputClass() {\n    if (!isNullOrUndefined(this.value) && this.value.length || this.floatLabelType === 'Always') {\n      addClass([this.overAllWrapper], 'e-valid-input');\n    } else {\n      removeClass([this.overAllWrapper], 'e-valid-input');\n    }\n  }\n\n  dropDownIcon() {\n    if (this.showDropDownIcon) {\n      this.dropIcon = this.createElement('span', {\n        className: dropdownIcon\n      });\n      this.componentWrapper.appendChild(this.dropIcon);\n      addClass([this.componentWrapper], ['e-down-icon']);\n    } else {\n      if (!isNullOrUndefined(this.dropIcon)) {\n        this.dropIcon.parentElement.removeChild(this.dropIcon);\n        removeClass([this.componentWrapper], ['e-down-icon']);\n      }\n    }\n  }\n\n  initialUpdate() {\n    if (this.mode !== 'Box' && !(this.setDynValue && this.mode === 'Default' && this.inputFocus)) {\n      this.updateDelimView();\n    }\n\n    this.updateCssClass();\n    this.updateHTMLAttribute();\n    this.updateReadonly(this.readonly);\n    this.refreshInputHight();\n    this.checkPlaceholderSize();\n  }\n  /**\n   * Removes the component from the DOM and detaches all its related event handlers. Also it removes the attributes and classes.\n   *\n   * @method destroy\n   * @returns {void}\n   */\n\n\n  destroy() {\n    // eslint-disable-next-line\n    if (this.isReact) {\n      this.clearTemplate();\n    }\n\n    if (this.popupObj) {\n      this.popupObj.hide();\n    }\n\n    this.notify(destroy, {});\n    this.unwireListEvents();\n    this.unWireEvent();\n    this.list = null;\n    this.popupObj = null;\n    this.mainList = null;\n    this.mainData = null;\n    this.filterParent = null;\n    this.ulElement = null;\n    this.mainListCollection = null;\n    super.destroy();\n    const temp = ['readonly', 'aria-disabled', 'aria-placeholder', 'placeholder'];\n    let length = temp.length;\n\n    while (length > 0) {\n      this.inputElement.removeAttribute(temp[length - 1]);\n      length--;\n    }\n\n    this.element.removeAttribute('data-initial-value');\n    this.element.style.display = 'block';\n\n    if (this.overAllWrapper.parentElement) {\n      if (this.overAllWrapper.parentElement.tagName === this.getNgDirective()) {\n        remove(this.overAllWrapper);\n      } else {\n        this.overAllWrapper.parentElement.insertBefore(this.element, this.overAllWrapper);\n        remove(this.overAllWrapper);\n      }\n    }\n  }\n\n};\n\n__decorate$5([Complex({\n  text: null,\n  value: null,\n  iconCss: null,\n  groupBy: null\n}, FieldSettings)], MultiSelect.prototype, \"fields\", void 0);\n\n__decorate$5([Property(false)], MultiSelect.prototype, \"enablePersistence\", void 0);\n\n__decorate$5([Property(null)], MultiSelect.prototype, \"groupTemplate\", void 0);\n\n__decorate$5([Property('No records found')], MultiSelect.prototype, \"noRecordsTemplate\", void 0);\n\n__decorate$5([Property('Request failed')], MultiSelect.prototype, \"actionFailureTemplate\", void 0);\n\n__decorate$5([Property('None')], MultiSelect.prototype, \"sortOrder\", void 0);\n\n__decorate$5([Property(true)], MultiSelect.prototype, \"enabled\", void 0);\n\n__decorate$5([Property(false)], MultiSelect.prototype, \"enableHtmlSanitizer\", void 0);\n\n__decorate$5([Property([])], MultiSelect.prototype, \"dataSource\", void 0);\n\n__decorate$5([Property(null)], MultiSelect.prototype, \"query\", void 0);\n\n__decorate$5([Property('StartsWith')], MultiSelect.prototype, \"filterType\", void 0);\n\n__decorate$5([Property(1000)], MultiSelect.prototype, \"zIndex\", void 0);\n\n__decorate$5([Property(false)], MultiSelect.prototype, \"ignoreAccent\", void 0);\n\n__decorate$5([Property()], MultiSelect.prototype, \"locale\", void 0);\n\n__decorate$5([Property(false)], MultiSelect.prototype, \"enableGroupCheckBox\", void 0);\n\n__decorate$5([Property(null)], MultiSelect.prototype, \"cssClass\", void 0);\n\n__decorate$5([Property('100%')], MultiSelect.prototype, \"width\", void 0);\n\n__decorate$5([Property('300px')], MultiSelect.prototype, \"popupHeight\", void 0);\n\n__decorate$5([Property('100%')], MultiSelect.prototype, \"popupWidth\", void 0);\n\n__decorate$5([Property(null)], MultiSelect.prototype, \"placeholder\", void 0);\n\n__decorate$5([Property(null)], MultiSelect.prototype, \"filterBarPlaceholder\", void 0);\n\n__decorate$5([Property({})], MultiSelect.prototype, \"htmlAttributes\", void 0);\n\n__decorate$5([Property(null)], MultiSelect.prototype, \"valueTemplate\", void 0);\n\n__decorate$5([Property(null)], MultiSelect.prototype, \"headerTemplate\", void 0);\n\n__decorate$5([Property(null)], MultiSelect.prototype, \"footerTemplate\", void 0);\n\n__decorate$5([Property(null)], MultiSelect.prototype, \"itemTemplate\", void 0);\n\n__decorate$5([Property(null)], MultiSelect.prototype, \"allowFiltering\", void 0);\n\n__decorate$5([Property(true)], MultiSelect.prototype, \"changeOnBlur\", void 0);\n\n__decorate$5([Property(false)], MultiSelect.prototype, \"allowCustomValue\", void 0);\n\n__decorate$5([Property(true)], MultiSelect.prototype, \"showClearButton\", void 0);\n\n__decorate$5([Property(1000)], MultiSelect.prototype, \"maximumSelectionLength\", void 0);\n\n__decorate$5([Property(false)], MultiSelect.prototype, \"readonly\", void 0);\n\n__decorate$5([Property(null)], MultiSelect.prototype, \"text\", void 0);\n\n__decorate$5([Property(null)], MultiSelect.prototype, \"value\", void 0);\n\n__decorate$5([Property(true)], MultiSelect.prototype, \"hideSelectedItem\", void 0);\n\n__decorate$5([Property(true)], MultiSelect.prototype, \"closePopupOnSelect\", void 0);\n\n__decorate$5([Property('Default')], MultiSelect.prototype, \"mode\", void 0);\n\n__decorate$5([Property(',')], MultiSelect.prototype, \"delimiterChar\", void 0);\n\n__decorate$5([Property(true)], MultiSelect.prototype, \"ignoreCase\", void 0);\n\n__decorate$5([Property(false)], MultiSelect.prototype, \"showDropDownIcon\", void 0);\n\n__decorate$5([Property('Never')], MultiSelect.prototype, \"floatLabelType\", void 0);\n\n__decorate$5([Property(false)], MultiSelect.prototype, \"showSelectAll\", void 0);\n\n__decorate$5([Property('Select All')], MultiSelect.prototype, \"selectAllText\", void 0);\n\n__decorate$5([Property('Unselect All')], MultiSelect.prototype, \"unSelectAllText\", void 0);\n\n__decorate$5([Property(true)], MultiSelect.prototype, \"enableSelectionOrder\", void 0);\n\n__decorate$5([Property(true)], MultiSelect.prototype, \"openOnClick\", void 0);\n\n__decorate$5([Property(false)], MultiSelect.prototype, \"addTagOnBlur\", void 0);\n\n__decorate$5([Event()], MultiSelect.prototype, \"change\", void 0);\n\n__decorate$5([Event()], MultiSelect.prototype, \"removing\", void 0);\n\n__decorate$5([Event()], MultiSelect.prototype, \"removed\", void 0);\n\n__decorate$5([Event()], MultiSelect.prototype, \"beforeSelectAll\", void 0);\n\n__decorate$5([Event()], MultiSelect.prototype, \"selectedAll\", void 0);\n\n__decorate$5([Event()], MultiSelect.prototype, \"beforeOpen\", void 0);\n\n__decorate$5([Event()], MultiSelect.prototype, \"open\", void 0);\n\n__decorate$5([Event()], MultiSelect.prototype, \"close\", void 0);\n\n__decorate$5([Event()], MultiSelect.prototype, \"blur\", void 0);\n\n__decorate$5([Event()], MultiSelect.prototype, \"focus\", void 0);\n\n__decorate$5([Event()], MultiSelect.prototype, \"chipSelection\", void 0);\n\n__decorate$5([Event()], MultiSelect.prototype, \"filtering\", void 0);\n\n__decorate$5([Event()], MultiSelect.prototype, \"tagging\", void 0);\n\n__decorate$5([Event()], MultiSelect.prototype, \"customValueSelection\", void 0);\n\nMultiSelect = __decorate$5([NotifyPropertyChanges], MultiSelect);\nconst ICON = 'e-icons';\nconst CHECKBOXFRAME$1 = 'e-frame';\nconst CHECK$1 = 'e-check';\nconst CHECKBOXWRAP$1 = 'e-checkbox-wrapper';\nconst INDETERMINATE = 'e-stop';\nconst checkAllParent = 'e-selectall-parent';\nconst searchBackIcon = 'e-input-group-icon e-back-icon e-icons';\nconst filterBarClearIcon = 'e-input-group-icon e-clear-icon e-icons';\nconst filterInput = 'e-input-filter';\nconst filterParent = 'e-filter-parent';\nconst mobileFilter = 'e-ddl-device-filter';\nconst clearIcon = 'e-clear-icon';\nconst popupFullScreen = 'e-popup-full-page';\nconst device = 'e-ddl-device';\nconst FOCUS$1 = 'e-input-focus';\n/**\n * The Multiselect enable CheckBoxSelection call this inject module.\n */\n\nclass CheckBoxSelection {\n  constructor(parent) {\n    this.activeLi = [];\n    this.activeEle = [];\n    this.parent = parent;\n    this.removeEventListener();\n    this.addEventListener();\n  }\n\n  getModuleName() {\n    return 'CheckBoxSelection';\n  }\n\n  addEventListener() {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n\n    this.parent.on('updatelist', this.listSelection, this);\n    this.parent.on('listoption', this.listOption, this);\n    this.parent.on('selectAll', this.setSelectAll, this);\n    this.parent.on('checkSelectAll', this.checkSelectAll, this);\n    this.parent.on('searchBox', this.setSearchBox, this);\n    this.parent.on('blur', this.onBlurHandler, this);\n    this.parent.on('targetElement', this.targetElement, this);\n    this.parent.on('deviceSearchBox', this.setDeviceSearchBox, this);\n    this.parent.on('inputFocus', this.getFocus, this);\n    this.parent.on('reOrder', this.setReorder, this);\n    this.parent.on('activeList', this.getActiveList, this);\n    this.parent.on('selectAllText', this.setLocale, this);\n    this.parent.on('filterBarPlaceholder', this.setPlaceholder, this);\n    EventHandler.add(document, 'mousedown', this.onDocumentClick, this);\n    this.parent.on('addItem', this.checboxCreate, this);\n    this.parent.on('popupFullScreen', this.setPopupFullScreen, this);\n  }\n\n  removeEventListener() {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n\n    this.parent.off('updatelist', this.listSelection);\n    this.parent.off('listoption', this.listOption);\n    this.parent.off('selectAll', this.setSelectAll);\n    this.parent.off('checkSelectAll', this.checkSelectAll);\n    this.parent.off('searchBox', this.setSearchBox);\n    this.parent.off('blur', this.onBlurHandler);\n    this.parent.off('targetElement', this.targetElement);\n    this.parent.off('deviceSearchBox', this.setDeviceSearchBox);\n    this.parent.off('inputFocus', this.getFocus);\n    this.parent.off('reOrder', this.setReorder);\n    this.parent.off('activeList', this.getActiveList);\n    this.parent.off('selectAllText', this.setLocale);\n    this.parent.off('filterBarPlaceholder', this.setPlaceholder);\n    this.parent.off('addItem', this.checboxCreate);\n    this.parent.off('popupFullScreen', this.setPopupFullScreen);\n  } // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  listOption(args) {\n    if (isNullOrUndefined(this.parent.listCurrentOptions.itemCreated)) {\n      this.parent.listCurrentOptions.itemCreated = e => {\n        this.checboxCreate(e);\n      };\n    } else {\n      const itemCreated = this.parent.listCurrentOptions.itemCreated;\n\n      this.parent.listCurrentOptions.itemCreated = e => {\n        this.checboxCreate(e);\n        itemCreated.apply(this, [e]);\n      };\n    }\n  }\n\n  setPlaceholder(props) {\n    Input.setPlaceholder(props.filterBarPlaceholder, this.filterInput);\n  }\n\n  checboxCreate(e) {\n    let item;\n\n    if (!isNullOrUndefined(e.item)) {\n      item = e.item;\n    } else {\n      item = e;\n    }\n\n    if (this.parent.enableGroupCheckBox || item.className !== 'e-list-group-item ' && item.className !== 'e-list-group-item') {\n      const checkboxEle = createCheckBox(this.parent.createElement, true);\n      const icon = select('div.' + ICON, item);\n      item.insertBefore(checkboxEle, item.childNodes[isNullOrUndefined(icon) ? 0 : 1]);\n      select('.' + CHECKBOXFRAME$1, checkboxEle);\n\n      if (this.parent.enableGroupCheckBox) {\n        this.parent.popupWrapper.classList.add('e-multiselect-group');\n      }\n\n      return item;\n    } else {\n      return item;\n    }\n  }\n\n  setSelectAll() {\n    if (this.parent.showSelectAll) {\n      if (isNullOrUndefined(this.checkAllParent)) {\n        this.checkAllParent = this.parent.createElement('div', {\n          className: checkAllParent\n        });\n        this.selectAllSpan = this.parent.createElement('span', {\n          className: 'e-all-text'\n        });\n        this.selectAllSpan.textContent = '';\n        this.checkAllParent.appendChild(this.selectAllSpan);\n        this.setLocale();\n        this.checboxCreate(this.checkAllParent);\n\n        if (this.parent.headerTemplate) {\n          if (!isNullOrUndefined(this.parent.filterParent)) {\n            append([this.checkAllParent], this.parent.filterParent);\n          } else {\n            append([this.checkAllParent], this.parent.popupWrapper);\n          }\n        }\n\n        if (!this.parent.headerTemplate) {\n          if (!isNullOrUndefined(this.parent.filterParent)) {\n            this.parent.filterParent.parentNode.insertBefore(this.checkAllParent, this.parent.filterParent.nextSibling);\n          } else {\n            prepend([this.checkAllParent], this.parent.popupWrapper);\n          }\n        }\n\n        EventHandler.add(this.checkAllParent, 'mousedown', this.clickHandler, this);\n      }\n\n      if (this.parent.list.classList.contains('e-nodata') || this.parent.listData && this.parent.listData.length <= 1 && !this.parent.isDynamicDataChange || this.parent.isDynamicDataChange && this.parent.listData && this.parent.listData.length <= 1) {\n        this.checkAllParent.style.display = 'none';\n      } else {\n        this.checkAllParent.style.display = 'block';\n      }\n\n      this.parent.selectAllHeight = this.checkAllParent.getBoundingClientRect().height;\n    } else if (!isNullOrUndefined(this.checkAllParent)) {\n      this.checkAllParent.parentElement.removeChild(this.checkAllParent);\n      this.checkAllParent = null;\n    }\n  }\n\n  destroy() {\n    this.removeEventListener();\n    EventHandler.remove(document, 'mousedown', this.onDocumentClick);\n  }\n\n  listSelection(args) {\n    let target;\n\n    if (!isNullOrUndefined(args.e)) {\n      const frameElm = args.li.querySelector('.e-checkbox-wrapper .e-frame');\n      target = !isNullOrUndefined(args.e.target) ? args.e.target.classList.contains('e-frame') && (!this.parent.showSelectAll || this.checkAllParent && !this.checkAllParent.contains(args.e.target)) ? args.e.target : args.li.querySelector('.e-checkbox-wrapper').childNodes[1] : args.li.querySelector('.e-checkbox-wrapper').childNodes[1];\n    } else {\n      const checkboxWrapper = args.li.querySelector('.e-checkbox-wrapper');\n      target = checkboxWrapper ? checkboxWrapper.childNodes[1] : args.li.lastElementChild.childNodes[1];\n    }\n\n    if (this.parent.itemTemplate || this.parent.enableGroupCheckBox) {\n      target = args.li.firstElementChild.childNodes[1];\n    }\n\n    if (!isNullOrUndefined(target)) {\n      this.checkWrapper = closest(target, '.' + CHECKBOXWRAP$1);\n    }\n\n    if (!isNullOrUndefined(this.checkWrapper)) {\n      const checkElement = select('.' + CHECKBOXFRAME$1, this.checkWrapper);\n      const selectAll$$1 = false;\n      this.validateCheckNode(this.checkWrapper, checkElement.classList.contains(CHECK$1), args.li, args.e, selectAll$$1);\n    }\n  }\n\n  validateCheckNode(checkWrap, isCheck, li, e, selectAll$$1) {\n    this.changeState(checkWrap, isCheck ? 'uncheck' : 'check', e, true, selectAll$$1);\n  }\n\n  clickHandler(e) {\n    let target;\n\n    if (e.currentTarget.classList.contains(this.checkAllParent.className)) {\n      target = e.currentTarget.firstElementChild.lastElementChild;\n    } else {\n      target = e.currentTarget;\n    }\n\n    this.checkWrapper = closest(target, '.' + CHECKBOXWRAP$1);\n    const selectAll$$1 = true;\n\n    if (!isNullOrUndefined(this.checkWrapper)) {\n      const checkElement = select('.' + CHECKBOXFRAME$1, this.checkWrapper);\n      this.validateCheckNode(this.checkWrapper, checkElement.classList.contains(CHECK$1), null, e, selectAll$$1);\n    }\n\n    e.preventDefault();\n  }\n\n  changeState(wrapper, state, e, isPrevent, selectAll$$1) {\n    let ariaState;\n    const frameSpan = wrapper.getElementsByClassName(CHECKBOXFRAME$1)[0];\n\n    if (state === 'check' && !frameSpan.classList.contains(CHECK$1)) {\n      frameSpan.classList.remove(INDETERMINATE);\n      frameSpan.classList.add(CHECK$1);\n      ariaState = 'true';\n\n      if (selectAll$$1) {\n        this.parent.selectAllItems(true, e);\n        this.setLocale(true);\n      }\n    } else if (state === 'uncheck' && (frameSpan.classList.contains(CHECK$1) || frameSpan.classList.contains(INDETERMINATE))) {\n      removeClass([frameSpan], [CHECK$1, INDETERMINATE]);\n      ariaState = 'false';\n\n      if (selectAll$$1) {\n        this.parent.selectAllItems(false, e);\n        this.setLocale();\n      }\n    } else if (state === 'indeterminate' && !frameSpan.classList.contains(INDETERMINATE)) {\n      removeClass([frameSpan], [CHECK$1]);\n      frameSpan.classList.add(INDETERMINATE);\n      ariaState = 'false';\n\n      if (selectAll$$1) {\n        this.parent.selectAllItems(false, e);\n        this.setLocale();\n      }\n    }\n\n    ariaState = state === 'check' ? 'true' : state === 'uncheck' ? 'false' : ariaState;\n\n    if (!isNullOrUndefined(ariaState)) {\n      wrapper.setAttribute('aria-checked', ariaState);\n    }\n  }\n\n  setSearchBox(args) {\n    if (isNullOrUndefined(this.parent.filterParent)) {\n      this.parent.filterParent = this.parent.createElement('span', {\n        className: filterParent\n      });\n      this.filterInput = this.parent.createElement('input', {\n        attrs: {\n          type: 'text'\n        },\n        className: filterInput\n      });\n      this.parent.element.parentNode.insertBefore(this.filterInput, this.parent.element);\n      let backIcon = false;\n\n      if (Browser.isDevice) {\n        backIcon = true;\n        this.parent.mobFilter = false;\n      }\n\n      this.filterInputObj = Input.createInput({\n        element: this.filterInput,\n        buttons: backIcon ? [searchBackIcon, filterBarClearIcon] : [filterBarClearIcon],\n        properties: {\n          placeholder: this.parent.filterBarPlaceholder\n        }\n      }, this.parent.createElement);\n\n      if (!isNullOrUndefined(this.parent.cssClass)) {\n        if (this.parent.cssClass.split(' ').indexOf('e-outline') !== -1) {\n          addClass([this.filterInputObj.container], 'e-outline');\n        } else if (this.parent.cssClass.split(' ').indexOf('e-filled') !== -1) {\n          addClass([this.filterInputObj.container], 'e-filled');\n        }\n      }\n\n      append([this.filterInputObj.container], this.parent.filterParent);\n      prepend([this.parent.filterParent], args.popupElement);\n      attributes(this.filterInput, {\n        'aria-disabled': 'false',\n        'aria-owns': this.parent.element.id + '_options',\n        'role': 'listbox',\n        'aria-activedescendant': null,\n        'autocomplete': 'off',\n        'autocorrect': 'off',\n        'autocapitalize': 'off',\n        'spellcheck': 'false'\n      });\n      this.clearIconElement = this.filterInput.parentElement.querySelector('.' + clearIcon);\n\n      if (!Browser.isDevice && this.clearIconElement) {\n        EventHandler.add(this.clearIconElement, 'mousedown', this.clearText, this);\n        this.clearIconElement.style.visibility = 'hidden';\n      }\n\n      EventHandler.add(this.filterInput, 'input', this.parent.onInput, this.parent);\n      EventHandler.add(this.filterInput, 'keyup', this.parent.keyUp, this.parent);\n      EventHandler.add(this.filterInput, 'keydown', this.parent.onKeyDown, this.parent);\n      EventHandler.add(this.filterInput, 'blur', this.onBlurHandler, this);\n      EventHandler.add(this.filterInput, 'paste', this.parent.pasteHandler, this.parent);\n      this.parent.searchBoxHeight = this.filterInputObj.container.parentElement.getBoundingClientRect().height;\n      return this.filterInputObj;\n    }\n  } // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  clickOnBackIcon(e) {\n    this.parent.hidePopup();\n    removeClass([document.body, this.parent.popupObj.element], popupFullScreen);\n    this.parent.inputElement.focus();\n  }\n\n  clearText(e) {\n    this.parent.targetInputElement.value = '';\n\n    if (this.parent.allowFiltering && this.parent.targetInputElement.value === '') {\n      this.parent.search(null);\n    }\n\n    this.parent.refreshPopup();\n    this.parent.refreshListItems(null);\n    this.clearIconElement.style.visibility = 'hidden';\n    this.filterInput.focus();\n    this.setReorder(e);\n    e.preventDefault();\n  }\n\n  setDeviceSearchBox() {\n    this.parent.popupObj.element.classList.add(device);\n    this.parent.popupObj.element.classList.add(mobileFilter);\n    this.parent.popupObj.position = {\n      X: 0,\n      Y: 0\n    };\n    this.parent.popupObj.dataBind();\n    this.setSearchBoxPosition();\n    this.backIconElement = this.filterInputObj.container.querySelector('.e-back-icon');\n    this.clearIconElement = this.filterInputObj.container.querySelector('.' + clearIcon);\n    this.clearIconElement.style.visibility = 'hidden';\n    EventHandler.add(this.backIconElement, 'click', this.clickOnBackIcon, this);\n    EventHandler.add(this.clearIconElement, 'click', this.clearText, this);\n  }\n\n  setSearchBoxPosition() {\n    const searchBoxHeight = this.filterInput.parentElement.getBoundingClientRect().height;\n    let selectAllHeight = 0;\n\n    if (this.checkAllParent) {\n      selectAllHeight = this.checkAllParent.getBoundingClientRect().height;\n    }\n\n    this.parent.popupObj.element.style.maxHeight = '100%';\n    this.parent.popupObj.element.style.width = '100%';\n    this.parent.list.style.maxHeight = window.innerHeight - searchBoxHeight - selectAllHeight + 'px';\n    this.parent.list.style.height = window.innerHeight - searchBoxHeight - selectAllHeight + 'px';\n    const clearElement = this.filterInput.parentElement.querySelector('.' + clearIcon);\n    detach(this.filterInput);\n    clearElement.parentElement.insertBefore(this.filterInput, clearElement);\n  }\n\n  setPopupFullScreen() {\n    attributes(this.parent.popupObj.element, {\n      style: 'left:0px;right:0px;top:0px;bottom:0px;'\n    });\n    addClass([document.body, this.parent.popupObj.element], popupFullScreen);\n    this.parent.popupObj.element.style.maxHeight = '100%';\n    this.parent.popupObj.element.style.width = '100%';\n  }\n\n  targetElement() {\n    if (!isNullOrUndefined(this.clearIconElement)) {\n      this.parent.targetInputElement = this.filterInput;\n      this.clearIconElement.style.visibility = this.parent.targetInputElement.value === '' ? 'hidden' : 'visible';\n    }\n\n    return this.parent.targetInputElement.value;\n  }\n\n  onBlurHandler(e) {\n    if (!this.parent.element.classList.contains('e-listbox')) {\n      let target;\n\n      if (this.parent.keyAction) {\n        return;\n      }\n\n      if (Browser.isIE) {\n        target = !isNullOrUndefined(e) && e.target;\n      }\n\n      if (!Browser.isIE) {\n        target = !isNullOrUndefined(e) && e.relatedTarget;\n      } // eslint-disable-next-line max-len\n\n\n      if (this.parent.popupObj && document.body.contains(this.parent.popupObj.element) && this.parent.popupObj.element.contains(target) && !Browser.isIE && this.filterInput) {\n        this.filterInput.focus();\n        return;\n      }\n\n      if (this.parent.scrollFocusStatus && this.filterInput) {\n        e.preventDefault();\n        this.filterInput.focus();\n        this.parent.scrollFocusStatus = false;\n        return;\n      }\n\n      if (this.parent.popupObj && document.body.contains(this.parent.popupObj.element) && !this.parent.popupObj.element.classList.contains('e-popup-close')) {\n        this.parent.inputFocus = false;\n        this.parent.updateValueState(e, this.parent.value, this.parent.tempValues);\n        this.parent.dispatchEvent(this.parent.hiddenElement, 'change');\n      }\n\n      if (this.parent.popupObj && document.body.contains(this.parent.popupObj.element) && !this.parent.popupObj.element.classList.contains('e-popup-close')) {\n        this.parent.inputFocus = false;\n        this.parent.overAllWrapper.classList.remove(FOCUS$1);\n        this.parent.trigger('blur');\n        this.parent.focused = true;\n      }\n\n      if (this.parent.popupObj && document.body.contains(this.parent.popupObj.element) && !this.parent.popupObj.element.classList.contains('e-popup-close') && !Browser.isDevice) {\n        this.parent.hidePopup();\n      }\n    }\n  }\n\n  onDocumentClick(e) {\n    if (this.parent.getLocaleName() !== 'listbox') {\n      const target = e.target;\n\n      if (!isNullOrUndefined(this.parent.popupObj) && closest(target, '[id=\"' + this.parent.popupObj.element.id + '\"]')) {\n        if (!(this.filterInput && this.filterInput.value !== '')) {\n          e.preventDefault();\n        }\n      }\n\n      if (!(!isNullOrUndefined(this.parent.popupObj) && closest(target, '[id=\"' + this.parent.popupObj.element.id + '\"]')) && !this.parent.overAllWrapper.contains(e.target)) {\n        if (this.parent.overAllWrapper.classList.contains(dropDownBaseClasses.focus) || this.parent.isPopupOpen()) {\n          this.parent.inputFocus = false;\n          this.parent.scrollFocusStatus = false;\n          this.parent.hidePopup();\n          this.parent.onBlurHandler(e, true);\n          this.parent.focused = true;\n        }\n      } else {\n        this.parent.scrollFocusStatus = (Browser.isIE || Browser.info.name === 'edge') && document.activeElement === this.filterInput;\n      }\n\n      if (!this.parent.overAllWrapper.contains(e.target) && this.parent.overAllWrapper.classList.contains('e-input-focus') && !this.parent.isPopupOpen()) {\n        if (Browser.isIE) {\n          this.parent.onBlurHandler();\n        } else {\n          this.parent.onBlurHandler(e);\n        }\n      }\n\n      if (this.filterInput === target) {\n        this.filterInput.focus();\n      }\n    }\n  }\n\n  getFocus(e) {\n    this.parent.overAllWrapper.classList.remove(FOCUS$1);\n\n    if (this.parent.keyAction && e.value !== 'clear' && e.value !== 'focus') {\n      this.parent.keyAction = false;\n      return;\n    }\n\n    if (e.value === 'focus') {\n      this.filterInput.focus();\n      this.parent.removeFocus();\n      EventHandler.remove(this.parent.list, 'keydown', this.parent.onKeyDown);\n    }\n\n    if (e.value === 'clear') {\n      this.filterInput.value = '';\n      this.clearIconElement.style.visibility = 'hidden';\n    }\n  }\n\n  checkSelectAll(e) {\n    if (e.value === 'check' && this.checkAllParent.getAttribute('aria-checked') !== 'true') {\n      this.changeState(this.checkAllParent, e.value, null, null, false);\n      this.setLocale(true);\n    }\n\n    if (e.value === 'uncheck') {\n      this.changeState(this.checkAllParent, e.value, null, null, false);\n      this.setLocale();\n    }\n\n    if (e.value === 'indeterminate') {\n      this.changeState(this.checkAllParent, e.value, null, null, false);\n      this.setLocale();\n    }\n  }\n\n  setLocale(unSelect) {\n    if (this.parent.selectAllText !== 'Select All' || this.parent.unSelectAllText !== 'Unselect All') {\n      const template = unSelect ? this.parent.unSelectAllText : this.parent.selectAllText;\n      this.selectAllSpan.textContent = '';\n      const compiledString = compile(template);\n      const templateName = unSelect ? 'unSelectAllText' : 'selectAllText';\n\n      for (const item of compiledString({}, this.parent, templateName, null, !this.parent.isStringTemplate)) {\n        this.selectAllSpan.textContent = item.textContent;\n      }\n    } else {\n      const l10nLocale = {\n        selectAllText: 'Select All',\n        unSelectAllText: 'Unselect All'\n      };\n      let l10n = new L10n(this.parent.getLocaleName(), {}, this.parent.locale);\n\n      if (l10n.getConstant('selectAllText') === '') {\n        l10n = new L10n('dropdowns', l10nLocale, this.parent.locale);\n      }\n\n      this.selectAllSpan.textContent = unSelect ? l10n.getConstant('unSelectAllText') : l10n.getConstant('selectAllText');\n    }\n  }\n\n  getActiveList(args) {\n    if (args.li.classList.contains('e-active')) {\n      this.activeLi.push(args.li.cloneNode(true));\n    } else {\n      this.activeLi.splice(args.index, 1);\n    }\n  } // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  setReorder(args) {\n    if (this.parent.enableSelectionOrder && !isNullOrUndefined(this.parent.value)) {\n      const activeLiCount = this.parent.ulElement.querySelectorAll('li.e-active').length;\n      let remLi;\n      const ulEle = this.parent.createElement('ul', {\n        className: 'e-list-parent e-ul e-reorder'\n      });\n\n      if (activeLiCount > 0) {\n        append(this.parent.ulElement.querySelectorAll('li.e-active'), ulEle);\n        remLi = this.parent.ulElement.querySelectorAll('li.e-active');\n        addClass(remLi, 'e-reorder-hide');\n        prepend([ulEle], this.parent.list);\n      }\n\n      this.parent.focusAtFirstListItem();\n    }\n  }\n\n}\n/**\n * export all modules from current location\n */\n\n\nvar __decorate$6 = undefined && undefined.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar ListBox_1; // eslint-disable-next-line @typescript-eslint/triple-slash-reference\n/// <reference path='../drop-down-base/drop-down-base-model.d.ts'/>\n\n/**\n * Defines the Selection settings of List Box.\n */\n\nclass SelectionSettings extends ChildProperty {}\n\n__decorate$6([Property('Multiple')], SelectionSettings.prototype, \"mode\", void 0);\n\n__decorate$6([Property(false)], SelectionSettings.prototype, \"showCheckbox\", void 0);\n\n__decorate$6([Property(false)], SelectionSettings.prototype, \"showSelectAll\", void 0);\n\n__decorate$6([Property('Left')], SelectionSettings.prototype, \"checkboxPosition\", void 0);\n/**\n * Defines the toolbar settings of List Box.\n */\n\n\nclass ToolbarSettings extends ChildProperty {}\n\n__decorate$6([Property([])], ToolbarSettings.prototype, \"items\", void 0);\n\n__decorate$6([Property('Right')], ToolbarSettings.prototype, \"position\", void 0);\n/**\n * The ListBox is a graphical user interface component used to display a list of items.\n * Users can select one or more items in the list using a checkbox or by keyboard selection.\n * It supports sorting, grouping, reordering and drag and drop of items.\n * ```html\n * <select id=\"listbox\">\n *      <option value='1'>Badminton</option>\n *      <option value='2'>Basketball</option>\n *      <option value='3'>Cricket</option>\n *      <option value='4'>Football</option>\n *      <option value='5'>Tennis</option>\n * </select>\n * ```\n * ```typescript\n * <script>\n *   var listObj = new ListBox();\n *   listObj.appendTo(\"#listbox\");\n * </script>\n * ```\n */\n\n\nlet ListBox = ListBox_1 = class ListBox extends DropDownBase {\n  /**\n   * Constructor for creating the ListBox component.\n   *\n   * @param {ListBoxModel} options - Specifies ListBox model\n   * @param {string | HTMLElement} element - Specifies the element.\n   */\n  constructor(options, element) {\n    super(options, element);\n    this.isValidKey = false;\n    this.isDataSourceUpdate = false;\n    this.keyDownStatus = false;\n  }\n  /**\n   * Adds a new item to the popup list. By default, new item appends to the list as the last item,\n   * but you can insert based on the index parameter.\n   *\n   * @param  { Object[] } items - Specifies an array of JSON data or a JSON data.\n   * @param { number } itemIndex - Specifies the index to place the newly added item in the popup list.\n   * @returns {void}.\n   * @private\n   */\n\n\n  addItem(items, itemIndex) {\n    super.addItem(items, itemIndex);\n  }\n  /**\n   * Build and render the component.\n   *\n   * @private\n   * @returns {void}\n   */\n\n\n  render() {\n    this.inputString = '';\n    this.initLoad = true;\n    this.isCustomFiltering = false;\n    this.initialSelectedOptions = this.value;\n    super.render();\n    this.renderComplete();\n  }\n\n  initWrapper() {\n    const hiddenSelect = this.createElement('select', {\n      className: 'e-hidden-select',\n      attrs: {\n        'multiple': ''\n      }\n    });\n    hiddenSelect.style.visibility = 'hidden';\n    this.list.classList.add('e-listbox-wrapper');\n\n    if (this.itemTemplate) {\n      this.list.classList.add('e-list-template');\n    }\n\n    this.list.classList.add('e-wrapper');\n    this.list.classList.add('e-lib');\n\n    if (this.element.tagName === 'EJS-LISTBOX') {\n      this.element.setAttribute('tabindex', '0');\n\n      if (this.initLoad) {\n        this.element.appendChild(this.list);\n      }\n    } else {\n      if (this.initLoad) {\n        this.element.parentElement.insertBefore(this.list, this.element);\n      }\n\n      this.list.insertBefore(this.element, this.list.firstChild);\n      this.element.style.display = 'none';\n    }\n\n    this.list.insertBefore(hiddenSelect, this.list.firstChild);\n\n    if (this.list.getElementsByClassName('e-list-item')[0]) {\n      this.list.getElementsByClassName('e-list-item')[0].classList.remove(dropDownBaseClasses.focus);\n    }\n\n    if (this.itemTemplate) {\n      this.renderReactTemplates();\n    }\n\n    removeClass([this.list], [dropDownBaseClasses.content, dropDownBaseClasses.root]);\n    this.validationAttribute(this.element, hiddenSelect);\n    this.list.setAttribute('role', 'listbox');\n    attributes(this.list, {\n      'role': 'listbox',\n      'aria-multiselectable': this.selectionSettings.mode === 'Multiple' ? 'true' : 'false'\n    });\n    this.updateSelectionSettings();\n  }\n\n  updateSelectionSettings() {\n    if (this.selectionSettings.showCheckbox && this.selectionSettings.showSelectAll && this.liCollections.length) {\n      const l10nSelect = new L10n(this.getModuleName(), {\n        selectAllText: 'Select All',\n        unSelectAllText: 'Unselect All'\n      }, this.locale);\n      this.showSelectAll = true;\n      this.selectAllText = l10nSelect.getConstant('selectAllText');\n      this.unSelectAllText = l10nSelect.getConstant('unSelectAllText');\n      this.popupWrapper = this.list;\n      this.checkBoxSelectionModule.checkAllParent = null;\n      this.notify('selectAll', {});\n    }\n  }\n\n  initDraggable() {\n    if (this.ulElement) {\n      this.ulElement.id = this.element.id + '_parent';\n    }\n\n    if (this.allowDragAndDrop) {\n      new Sortable(this.ulElement, {\n        scope: this.scope,\n        itemClass: 'e-list-item',\n        dragStart: this.triggerDragStart.bind(this),\n        drag: this.triggerDrag.bind(this),\n        beforeDrop: this.beforeDragEnd.bind(this),\n        drop: this.dragEnd.bind(this),\n        placeHolder: () => {\n          return this.createElement('span', {\n            className: 'e-placeholder'\n          });\n        },\n        helper: e => {\n          const wrapper = this.list.cloneNode();\n          const ele = e.sender.cloneNode(true);\n          wrapper.appendChild(ele);\n          const refEle = this.getItems()[0];\n          wrapper.style.width = refEle.offsetWidth + 'px';\n          wrapper.style.height = refEle.offsetHeight + 'px';\n\n          if ((this.value && this.value.length) > 1 && this.isSelected(ele)) {\n            ele.appendChild(this.createElement('span', {\n              className: 'e-list-badge',\n              innerHTML: this.value.length + ''\n            }));\n          }\n\n          wrapper.style.zIndex = getZindexPartial(this.element) + '';\n          return wrapper;\n        }\n      });\n    }\n  }\n\n  updateActionCompleteData(li, item, index) {\n    this.jsonData.splice(index, 0, item);\n  }\n\n  initToolbar() {\n    const pos = this.toolbarSettings.position;\n    const prevScope = this.element.getAttribute('data-value');\n\n    if (this.toolbarSettings.items.length) {\n      const toolElem = this.createElement('div', {\n        className: 'e-listbox-tool',\n        attrs: {\n          'role': 'toolbar'\n        }\n      });\n      const wrapper = this.createElement('div', {\n        className: 'e-listboxtool-wrapper e-lib e-' + pos.toLowerCase()\n      });\n      this.list.parentElement.insertBefore(wrapper, this.list);\n      wrapper.appendChild(pos === 'Right' ? this.list : toolElem);\n      wrapper.appendChild(pos === 'Right' ? toolElem : this.list);\n      this.createButtons(toolElem);\n\n      if (!this.element.id) {\n        this.element.id = getUniqueID('e-' + this.getModuleName());\n      }\n\n      if (this.scope) {\n        document.querySelector(this.scope).setAttribute('data-value', this.element.id);\n      } else {\n        this.updateToolBarState();\n      }\n    }\n\n    const scope = this.element.getAttribute('data-value');\n\n    if (prevScope && scope && prevScope !== scope) {\n      this.tBListBox = getComponent(document.getElementById(prevScope), this.getModuleName());\n      this.tBListBox.updateToolBarState();\n    } else if (scope) {\n      this.tBListBox = getComponent(document.getElementById(scope), this.getModuleName());\n      this.tBListBox.updateToolBarState();\n    }\n  }\n\n  createButtons(toolElem) {\n    let btn;\n    let ele;\n    let title;\n    const l10n = new L10n(this.getModuleName(), {\n      moveUp: 'Move Up',\n      moveDown: 'Move Down',\n      moveTo: 'Move To',\n      moveFrom: 'Move From',\n      moveAllTo: 'Move All To',\n      moveAllFrom: 'Move All From'\n    }, this.locale);\n    this.toolbarSettings.items.forEach(value => {\n      title = l10n.getConstant(value);\n      ele = this.createElement('button', {\n        attrs: {\n          'type': 'button',\n          'data-value': value,\n          'title': title,\n          'aria-label': title\n        }\n      });\n      toolElem.appendChild(ele);\n      btn = new Button({\n        iconCss: 'e-icons e-' + value.toLowerCase()\n      }, ele);\n      btn.createElement = this.createElement;\n    });\n  }\n\n  validationAttribute(input, hiddenSelect) {\n    super.validationAttribute(input, hiddenSelect);\n    hiddenSelect.required = input.required;\n    input.required = false;\n  }\n\n  setHeight() {\n    const ele = this.toolbarSettings.items.length ? this.list.parentElement : this.list;\n    ele.style.height = formatUnit(this.height);\n\n    if (this.allowFiltering && this.height.toString().indexOf('%') < 0) {\n      addClass([this.list], 'e-filter-list');\n    } else {\n      removeClass([this.list], 'e-filter-list');\n    }\n  }\n\n  setCssClass() {\n    const wrap = this.toolbarSettings.items.length ? this.list.parentElement : this.list;\n\n    if (this.cssClass) {\n      addClass([wrap], this.cssClass.split(' '));\n    }\n\n    if (this.enableRtl) {\n      addClass([this.list], 'e-rtl');\n    }\n  }\n\n  setEnable() {\n    const ele = this.toolbarSettings.items.length ? this.list.parentElement : this.list;\n\n    if (this.enabled) {\n      removeClass([ele], cssClass.disabled);\n    } else {\n      addClass([ele], cssClass.disabled);\n    }\n  }\n\n  showSpinner() {\n    if (!this.spinner) {\n      this.spinner = this.createElement('div', {\n        className: 'e-listbox-wrapper'\n      });\n    }\n\n    this.spinner.style.height = formatUnit(this.height);\n    this.element.parentElement.insertBefore(this.spinner, this.element.nextSibling);\n    createSpinner({\n      target: this.spinner\n    }, this.createElement);\n    showSpinner(this.spinner);\n  }\n\n  hideSpinner() {\n    if (this.spinner.querySelector('.e-spinner-pane')) {\n      hideSpinner(this.spinner);\n    }\n\n    if (this.spinner.parentElement) {\n      detach(this.spinner);\n    }\n  }\n\n  onInput() {\n    this.isDataSourceUpdate = false;\n\n    if (this.keyDownStatus) {\n      this.isValidKey = true;\n    } else {\n      this.isValidKey = false;\n    }\n\n    this.keyDownStatus = false;\n    this.refreshClearIcon();\n  }\n\n  clearText() {\n    this.filterInput.value = '';\n    this.refreshClearIcon();\n    const event = document.createEvent('KeyboardEvent');\n    this.isValidKey = true;\n    this.KeyUp(event);\n  }\n\n  refreshClearIcon() {\n    if (this.filterInput.parentElement.querySelector('.' + listBoxClasses.clearIcon)) {\n      const clearElement = this.filterInput.parentElement.querySelector('.' + listBoxClasses.clearIcon);\n      clearElement.style.visibility = this.filterInput.value === '' ? 'hidden' : 'visible';\n    }\n  }\n\n  onActionComplete(ulElement, list, e) {\n    let searchEle;\n\n    if (this.allowFiltering && this.list.getElementsByClassName('e-filter-parent')[0]) {\n      searchEle = this.list.getElementsByClassName('e-filter-parent')[0].cloneNode(true);\n    }\n\n    if (list.length === 0) {\n      const noRecElem = ulElement.childNodes[0];\n\n      if (noRecElem) {\n        ulElement.removeChild(noRecElem);\n      }\n    }\n\n    super.onActionComplete(ulElement, list, e);\n\n    if (this.allowFiltering && !isNullOrUndefined(searchEle)) {\n      this.list.insertBefore(searchEle, this.list.firstElementChild);\n      this.filterParent = this.list.getElementsByClassName('e-filter-parent')[0];\n      this.filterWireEvents(searchEle);\n    }\n\n    this.initWrapper();\n    this.setSelection();\n    this.initDraggable();\n    this.mainList = this.ulElement;\n\n    if (this.initLoad) {\n      this.jsonData = [];\n      extend(this.jsonData, list, []);\n      this.initToolbarAndStyles();\n      this.wireEvents();\n\n      if (this.showCheckbox) {\n        this.setCheckboxPosition();\n      }\n\n      if (this.allowFiltering) {\n        this.setFiltering();\n      }\n    } else {\n      if (this.isDataSourceUpdate) {\n        this.jsonData = [];\n        extend(this.jsonData, list, []);\n        this.isDataSourceUpdate = false;\n      }\n\n      if (this.allowFiltering) {\n        const filterElem = this.list.getElementsByClassName('e-input-filter')[0];\n        const txtLength = this.filterInput.value.length;\n        filterElem.selectionStart = txtLength;\n        filterElem.selectionEnd = txtLength;\n        filterElem.focus();\n      }\n    }\n\n    if (this.toolbarSettings.items.length && this.scope && this.scope.indexOf('#') > -1 && !isNullOrUndefined(e)) {\n      const scope = this.scope.replace('#', '');\n      const scopedLB = getComponent(document.getElementById(scope), this.getModuleName());\n      scopedLB.initToolbar();\n    }\n\n    this.initLoad = false;\n  }\n\n  initToolbarAndStyles() {\n    this.initToolbar();\n    this.setCssClass();\n    this.setEnable();\n    this.setHeight();\n  }\n\n  triggerDragStart(args) {\n    let badge;\n    args = extend(this.getDragArgs(args), {\n      dragSelected: true\n    });\n\n    if (Browser.isIos) {\n      this.list.style.overflow = 'hidden';\n    }\n\n    this.trigger('dragStart', args, dragEventArgs => {\n      this.allowDragAll = dragEventArgs.dragSelected;\n\n      if (!this.allowDragAll) {\n        badge = this.ulElement.getElementsByClassName('e-list-badge')[0];\n\n        if (badge) {\n          detach(badge);\n        }\n      }\n    });\n  }\n\n  triggerDrag(args) {\n    let scrollParent;\n    let boundRect;\n    let scrollMoved = 36; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n    let event = args.event;\n    let wrapper;\n\n    if (args.target && (args.target.classList.contains(\"e-listbox-wrapper\") || args.target.classList.contains(\"e-list-item\") || args.target.classList.contains(\"e-filter-parent\") || args.target.classList.contains(\"e-input-group\"))) {\n      if (args.target.classList.contains(\"e-list-item\") || args.target.classList.contains(\"e-filter-parent\") || args.target.classList.contains(\"e-input-group\")) {\n        wrapper = args.target.closest('.e-listbox-wrapper');\n      } else {\n        wrapper = args.target;\n      }\n\n      if (this.allowFiltering) {\n        scrollParent = wrapper.querySelector('.e-list-parent');\n      } else {\n        scrollParent = wrapper;\n      }\n\n      boundRect = scrollParent.getBoundingClientRect();\n\n      if (boundRect.y + scrollParent.offsetHeight - (event.pageY + scrollMoved) < 1) {\n        scrollParent.scrollTop = scrollParent.scrollTop + 10;\n      } else if (event.pageY - scrollMoved - boundRect.y < 1) {\n        scrollParent.scrollTop = scrollParent.scrollTop - 10;\n      }\n    }\n\n    if (args.target === null) {\n      return;\n    }\n\n    this.trigger('drag', this.getDragArgs(args));\n    const listObj = this.getComponent(args.target);\n\n    if (listObj && listObj.listData.length === 0) {\n      const noRecElem = listObj.ulElement.childNodes[0];\n\n      if (noRecElem) {\n        listObj.ulElement.removeChild(noRecElem);\n      }\n    }\n  }\n\n  beforeDragEnd(args) {\n    this.dragValue = this.getFormattedValue(args.droppedElement.getAttribute('data-value'));\n\n    if (this.value.indexOf(this.dragValue) > -1) {\n      args.items = this.getDataByValues(this.value);\n    } else {\n      args.items = this.getDataByValues([this.dragValue]);\n    }\n\n    this.trigger('beforeDrop', args);\n  }\n\n  dragEnd(args) {\n    let listData;\n    let liColl;\n    let jsonData;\n    let droppedData;\n    let selectedOptions;\n    let sortedData;\n    const dropValue = this.getFormattedValue(args.droppedElement.getAttribute('data-value'));\n    const listObj = this.getComponent(args.droppedElement);\n    const getArgs = this.getDragArgs({\n      target: args.droppedElement\n    }, true);\n    const sourceArgs = {\n      previousData: this.dataSource\n    };\n    const destArgs = {\n      previousData: listObj.dataSource\n    };\n    let dragArgs = extend({}, getArgs, {\n      target: args.target,\n      source: {\n        previousData: this.dataSource\n      },\n      previousIndex: args.previousIndex,\n      currentIndex: args.currentIndex\n    });\n\n    if (listObj !== this) {\n      const sourceArgs1 = extend(sourceArgs, {\n        currentData: this.listData\n      });\n      dragArgs = extend(dragArgs, {\n        source: sourceArgs1,\n        destination: destArgs\n      });\n    }\n\n    if (Browser.isIos) {\n      this.list.style.overflow = '';\n    }\n\n    if (listObj === this) {\n      const ul = this.ulElement;\n      listData = [].slice.call(this.listData);\n      liColl = [].slice.call(this.liCollections);\n      jsonData = [].slice.call(this.jsonData);\n      sortedData = [].slice.call(this.sortedData);\n      const toSortIdx = args.currentIndex;\n      let toIdx = args.currentIndex = this.getCurIdx(this, args.currentIndex);\n      const rIdx = listData.indexOf(this.getDataByValue(dropValue));\n      const jsonIdx = jsonData.indexOf(this.getDataByValue(dropValue));\n      const sIdx = sortedData.indexOf(this.getDataByValue(dropValue));\n      listData.splice(toIdx, 0, listData.splice(rIdx, 1)[0]);\n      sortedData.splice(toSortIdx, 0, sortedData.splice(sIdx, 1)[0]);\n      jsonData.splice(toIdx, 0, jsonData.splice(jsonIdx, 1)[0]);\n      liColl.splice(toIdx, 0, liColl.splice(rIdx, 1)[0]);\n\n      if (this.allowDragAll) {\n        selectedOptions = this.value && Array.prototype.indexOf.call(this.value, dropValue) > -1 ? this.value : [dropValue];\n        selectedOptions.forEach(value => {\n          if (value !== dropValue) {\n            const idx = listData.indexOf(this.getDataByValue(value));\n            const jsonIdx = jsonData.indexOf(this.getDataByValue(value));\n            const sIdx = sortedData.indexOf(this.getDataByValue(value));\n\n            if (idx > toIdx) {\n              toIdx++;\n            }\n\n            jsonData.splice(toIdx, 0, jsonData.splice(jsonIdx, 1)[0]);\n            listData.splice(toIdx, 0, listData.splice(idx, 1)[0]);\n            sortedData.splice(toSortIdx, 0, sortedData.splice(sIdx, 1)[0]);\n            liColl.splice(toIdx, 0, liColl.splice(idx, 1)[0]);\n            ul.insertBefore(this.getItems()[this.getIndexByValue(value)], ul.getElementsByClassName('e-placeholder')[0]);\n          }\n        });\n      }\n\n      this.listData = listData;\n      this.jsonData = jsonData;\n      this.sortedData = sortedData;\n      this.liCollections = liColl;\n    } else {\n      let li;\n      const fLiColl = [].slice.call(this.liCollections);\n      let currIdx = args.currentIndex = this.getCurIdx(listObj, args.currentIndex);\n      const ul = listObj.ulElement;\n      listData = [].slice.call(listObj.listData);\n      liColl = [].slice.call(listObj.liCollections);\n      jsonData = [].slice.call(listObj.jsonData);\n      sortedData = [].slice.call(listObj.sortedData);\n      selectedOptions = this.value && Array.prototype.indexOf.call(this.value, dropValue) > -1 && this.allowDragAll ? this.value : [dropValue];\n      const fListData = [].slice.call(this.listData);\n      const fSortData = [].slice.call(this.sortedData);\n      selectedOptions.forEach((value, index) => {\n        droppedData = this.getDataByValue(value);\n        const srcIdx = this.listData.indexOf(droppedData);\n        const jsonSrcIdx = this.jsonData.indexOf(droppedData);\n        const sortIdx = this.sortedData.indexOf(droppedData);\n        fListData.splice(srcIdx, 1);\n        this.jsonData.splice(jsonSrcIdx, 1);\n        fSortData.splice(sortIdx, 1);\n        this.listData = fListData;\n        this.sortedData = fSortData;\n        const destIdx = value === dropValue ? args.currentIndex : currIdx;\n        listData.splice(destIdx, 0, droppedData);\n        jsonData.splice(destIdx, 0, droppedData);\n        sortedData.splice(destIdx, 0, droppedData);\n        liColl.splice(destIdx, 0, fLiColl.splice(srcIdx, 1)[0]);\n\n        if (!value) {\n          const liCollElem = this.getItems();\n\n          for (let i = 0; i < liCollElem.length; i++) {\n            if (liCollElem[i].getAttribute('data-value') === null && liCollElem[i].classList.contains('e-list-item')) {\n              li = liCollElem[i];\n              break;\n            }\n          }\n        } else {\n          li = this.getItems()[this.getIndexByValue(value)];\n        }\n\n        if (!li) {\n          li = args.helper;\n        }\n\n        this.removeSelected(this, value === dropValue ? [args.droppedElement] : [li]);\n        ul.insertBefore(li, ul.getElementsByClassName('e-placeholder')[0]);\n        currIdx++;\n      });\n\n      if (this.fields.groupBy) {\n        let sourceElem = this.renderItems(this.listData, this.fields);\n        this.updateListItems(sourceElem, this.ulElement);\n        this.setSelection();\n      }\n\n      if (listObj.sortOrder !== 'None' || this.selectionSettings.showCheckbox !== listObj.selectionSettings.showCheckbox || listObj.fields.groupBy || listObj.itemTemplate || this.itemTemplate) {\n        const sortable = getComponent(ul, 'sortable');\n        let sourceElem = listObj.renderItems(listData, listObj.fields);\n        listObj.updateListItems(sourceElem, ul);\n        this.setSelection();\n\n        if (sortable.placeHolderElement) {\n          ul.appendChild(sortable.placeHolderElement);\n        }\n\n        ul.appendChild(args.helper);\n        listObj.setSelection();\n      }\n\n      this.liCollections = fLiColl;\n      listObj.liCollections = liColl;\n      listObj.jsonData = extend([], [], jsonData, false);\n      listObj.listData = extend([], [], listData, false);\n      listObj.sortedData = extend([], [], sortedData, false);\n\n      if (this.listData.length === 0) {\n        this.l10nUpdate();\n      }\n    }\n\n    if (this === listObj) {\n      const sourceArgs1 = extend(sourceArgs, {\n        currentData: listData\n      });\n      dragArgs = extend(dragArgs, {\n        source: sourceArgs1\n      });\n    } else {\n      const dragArgs1 = extend(destArgs, {\n        currentData: listData\n      });\n      dragArgs = extend(dragArgs, {\n        destination: dragArgs1\n      });\n    }\n\n    this.trigger('drop', dragArgs);\n  }\n\n  updateListItems(sourceElem, destElem) {\n    const i = 0;\n    destElem.innerHTML = \"\";\n\n    while (i < sourceElem.childNodes.length) {\n      destElem.appendChild(sourceElem.childNodes[i]);\n    }\n  }\n\n  removeSelected(listObj, elems) {\n    if (listObj.selectionSettings.showCheckbox) {\n      elems.forEach(ele => {\n        ele.getElementsByClassName('e-frame')[0].classList.remove('e-check');\n      });\n    } else {\n      removeClass(elems, cssClass.selected);\n    }\n  }\n\n  getCurIdx(listObj, idx) {\n    if (listObj.fields.groupBy) {\n      idx -= [].slice.call(listObj.ulElement.children).slice(0, idx).filter(ele => ele.classList.contains(cssClass.group)).length;\n    }\n\n    return idx;\n  }\n\n  getComponent(li) {\n    let listObj;\n    const ele = this.element.tagName === 'EJS-LISTBOX' ? closest(li, '.e-listbox') : closest(li, '.e-listbox-wrapper') && closest(li, '.e-listbox-wrapper').querySelector('.e-listbox');\n\n    if (ele) {\n      listObj = getComponent(ele, this.getModuleName());\n    }\n\n    return listObj;\n  }\n\n  listOption(dataSource, fields) {\n    this.listCurrentOptions = super.listOption(dataSource, fields);\n    this.listCurrentOptions = extend({}, this.listCurrentOptions, {\n      itemCreated: this.triggerBeforeItemRender.bind(this)\n    }, true);\n    this.notify('listoption', {\n      module: 'CheckBoxSelection'\n    });\n    return this.listCurrentOptions;\n  }\n\n  triggerBeforeItemRender(e) {\n    e.item.setAttribute('tabindex', '-1');\n    this.trigger('beforeItemRender', {\n      element: e.item,\n      item: e.curData\n    });\n  }\n\n  requiredModules() {\n    const modules = [];\n\n    if (this.selectionSettings.showCheckbox) {\n      modules.push({\n        member: 'CheckBoxSelection',\n        args: [this]\n      });\n    }\n\n    return modules;\n  }\n  /**\n   * This method is used to enable or disable the items in the ListBox based on the items and enable argument.\n   *\n   * @param {string[]} items - Text items that needs to be enabled/disabled.\n   * @param {boolean} enable - Set `true`/`false` to enable/disable the list items.\n   * @param {boolean} isValue - Set `true` if `items` parameter is a array of unique values.\n   * @returns {void}\n   */\n\n\n  enableItems(items, enable = true, isValue) {\n    let li;\n    items.forEach(item => {\n      let text = item;\n      li = this.findListElement(this.list, 'li', 'data-value', isValue ? text : this.getValueByText(text));\n\n      if (!li) {\n        return;\n      }\n\n      if (enable) {\n        removeClass([li], cssClass.disabled);\n        li.removeAttribute('aria-disabled');\n      } else {\n        addClass([li], cssClass.disabled);\n        li.setAttribute('aria-disabled', 'true');\n      }\n    });\n  }\n  /**\n   * Based on the state parameter, specified list item will be selected/deselected.\n   *\n   * @param {string[]} items - Array of text value of the item.\n   * @param {boolean} state - Set `true`/`false` to select/un select the list items.\n   * @param {boolean} isValue - Set `true` if `items` parameter is a array of unique values.\n   * @returns {void}\n   */\n\n\n  selectItems(items, state = true, isValue) {\n    this.setSelection(items, state, !isValue);\n    this.updateSelectedOptions();\n  }\n  /**\n   * Based on the state parameter, entire list item will be selected/deselected.\n   *\n   * @param {boolean} state - Set `true`/`false` to select/un select the entire list items.\n   * @returns {void}\n   */\n\n\n  selectAll(state = true) {\n    this.selectAllItems(state);\n  }\n  /**\n   * Adds a new item to the list. By default, new item appends to the list as the last item,\n   * but you can insert based on the index parameter.\n   *\n   * @param  { Object[] } items - Specifies an array of JSON data or a JSON data.\n   * @param { number } itemIndex - Specifies the index to place the newly added item in the list.\n   * @returns {void}.\n   */\n\n\n  addItems(items, itemIndex) {\n    super.addItem(items, itemIndex);\n  }\n  /**\n   * Removes a item from the list. By default, removed the last item in the list,\n   * but you can remove based on the index parameter.\n   *\n   * @param  { Object[] } items - Specifies an array of JSON data or a JSON data.\n   * @param { number } itemIndex - Specifies the index to remove the item from the list.\n   * @returns {void}.\n   */\n\n\n  removeItems(items, itemIndex) {\n    this.removeItem(items, itemIndex);\n  }\n  /**\n   * Removes a item from the list. By default, removed the last item in the list,\n   * but you can remove based on the index parameter.\n   *\n   * @param  { Object[] } items - Specifies an array of JSON data or a JSON data.\n   * @param { number } itemIndex - Specifies the index to remove the item from the list.\n   * @returns {void}.\n   */\n\n\n  removeItem(items, itemIndex) {\n    const liCollections = [];\n    const liElement = this.list.querySelectorAll('.' + dropDownBaseClasses.li);\n\n    if (items) {\n      items = items instanceof Array ? items : [items];\n      const fields = this.fields;\n      let dataValue;\n      let objValue;\n      const dupData = [];\n      let itemIdx;\n      extend(dupData, [], this.jsonData);\n      const removeIdxes = [];\n      const removeLiIdxes = [];\n\n      for (let j = 0; j < items.length; j++) {\n        if (items[j] instanceof Object) {\n          dataValue = getValue(fields.value, items[j]);\n        } else {\n          dataValue = items[j].toString();\n        }\n\n        for (let i = 0, len = dupData.length; i < len; i++) {\n          if (dupData[i] instanceof Object) {\n            objValue = getValue(fields.value, dupData[i]);\n          } else {\n            objValue = dupData[i].toString();\n          }\n\n          if (objValue === dataValue) {\n            itemIdx = this.getIndexByValue(dataValue);\n            const idx = itemIdx === i ? itemIdx : i;\n            liCollections.push(liElement[idx]);\n            removeIdxes.push(idx);\n            removeLiIdxes.push(idx);\n          }\n        }\n      }\n\n      for (let k = removeIdxes.length - 1; k >= 0; k--) {\n        this.listData.splice(removeIdxes[k], 1);\n      }\n\n      for (let k = removeIdxes.length - 1; k >= 0; k--) {\n        this.jsonData.splice(removeIdxes[k], 1);\n      }\n\n      for (let k = removeLiIdxes.length - 1; k >= 0; k--) {\n        this.updateLiCollection(removeLiIdxes[k]);\n      }\n    } else {\n      itemIndex = itemIndex ? itemIndex : 0;\n      liCollections.push(liElement[itemIndex]);\n      this.listData.splice(itemIndex, 1);\n      this.jsonData.splice(itemIndex, 1);\n      this.updateLiCollection(itemIndex);\n    }\n\n    for (let i = 0; i < liCollections.length; i++) {\n      this.ulElement.removeChild(liCollections[i]);\n    }\n\n    if (this.listData.length === 0) {\n      this.l10nUpdate();\n    }\n\n    this.value = null;\n    this.updateToolBarState();\n  }\n  /**\n   * Gets the array of data Object that matches the given array of values.\n   *\n   * @param  { string[] | number[] | boolean[] } value - Specifies the array value of the list item.\n   * @returns {object[]}.\n   */\n\n\n  getDataByValues(value) {\n    const data = [];\n\n    for (let i = 0; i < value.length; i++) {\n      data.push(this.getDataByValue(value[i]));\n    }\n\n    return data;\n  }\n  /**\n   * Moves the given value(s) / selected value(s) upwards.\n   *\n   * @param  { string[] | number[] | boolean[] } value - Specifies the value(s).\n   * @returns {void}\n   */\n\n\n  moveUp(value) {\n    const elem = value ? this.getElemByValue(value) : this.getSelectedItems();\n    this.moveUpDown(true, false, elem);\n  }\n  /**\n   * Moves the given value(s) / selected value(s) downwards.\n   *\n   * @param  { string[] | number[] | boolean[] } value - Specifies the value(s).\n   * @returns {void}\n   */\n\n\n  moveDown(value) {\n    const elem = value ? this.getElemByValue(value) : this.getSelectedItems();\n    this.moveUpDown(false, false, elem);\n  }\n  /**\n   * Moves the given value(s) / selected value(s) to the given / default scoped ListBox.\n   *\n   * @param  { string[] | number[] | boolean[] } value - Specifies the value or array value of the list item.\n   * @param {number} index - Specifies the index.\n   * @param {string} targetId - Specifies the target id.\n   * @returns {void}\n   */\n\n\n  moveTo(value, index, targetId) {\n    const elem = value ? this.getElemByValue(value) : this.getSelectedItems();\n    const tlistbox = targetId ? getComponent(targetId, ListBox_1) : this.getScopedListBox();\n    this.moveData(this, tlistbox, false, elem, index);\n  }\n  /**\n   * Moves all the values from one ListBox to the scoped ListBox.\n   *\n   * @param  { string } targetId - Specifies the scoped ListBox ID.\n   * @param  { string } index - Specifies the index to where the items moved.\n   * @returns {void}\n   */\n\n\n  moveAllTo(targetId, index) {\n    if (this.listData.length > 0) {\n      const tlistbox = targetId ? getComponent(targetId, ListBox_1) : this.getScopedListBox();\n      this.moveAllData(this, tlistbox, false, index);\n    }\n  }\n  /* eslint-disable */\n\n  /**\n   * Gets the updated dataSource in ListBox.\n   *\n   * @returns {{ [key: string]: Object }[] | string[] | boolean[] | number[]} - Updated DataSource.\n   */\n\n  /* eslint-enable */\n\n\n  getDataList() {\n    return this.jsonData;\n  }\n  /* eslint-disable */\n\n  /**\n   * Returns the sorted Data in ListBox.\n   *\n   * @returns {{ [key: string]: Object }[] | string[] | boolean[] | number[]} - Sorted data\n   */\n\n  /* eslint-enable */\n\n\n  getSortedList() {\n    let sortData;\n    let tempData;\n    sortData = tempData = this.sortedData;\n\n    if (this.fields.groupBy) {\n      sortData = [];\n\n      for (let i = 0; i < tempData.length; i++) {\n        if (tempData[i].isHeader) {\n          continue;\n        }\n\n        sortData.push(tempData[i]);\n      }\n    }\n\n    return sortData;\n  }\n\n  getElemByValue(value) {\n    const elem = [];\n\n    for (let i = 0; i < value.length; i++) {\n      elem.push(this.ulElement.querySelector('[data-value =\"' + value[i] + '\"]'));\n    }\n\n    return elem;\n  }\n\n  updateLiCollection(index) {\n    const tempLi = [].slice.call(this.liCollections);\n    tempLi.splice(index, 1);\n    this.liCollections = tempLi;\n  }\n\n  selectAllItems(state, event) {\n    [].slice.call(this.getItems()).forEach(li => {\n      if (!li.classList.contains(cssClass.disabled)) {\n        if (this.selectionSettings.showCheckbox) {\n          const ele = li.getElementsByClassName('e-check')[0];\n\n          if (!ele && state || ele && !state) {\n            this.notify('updatelist', {\n              li: li,\n              module: 'listbox'\n            });\n\n            if (this.maximumSelectionLength >= this.list.querySelectorAll('.e-list-item span.e-check').length) {\n              this.checkMaxSelection();\n            }\n          }\n        } else {\n          if (state) {\n            li.classList.add(cssClass.selected);\n          } else {\n            li.classList.remove(cssClass.selected);\n          }\n        }\n      }\n    });\n    this.updateSelectedOptions();\n\n    if (this.allowFiltering && this.selectionSettings.showCheckbox) {\n      const liEle = this.list.getElementsByTagName('li');\n      let index = 0;\n\n      if (state) {\n        for (index = 0; index < liEle.length; index++) {\n          const dataValue1 = this.getFormattedValue(liEle[index].getAttribute('data-value'));\n\n          if (!this.value.some(e => e === dataValue1)) {\n            this.value.push(this.getFormattedValue(liEle[index].getAttribute('data-value')));\n          }\n        }\n      } else {\n        for (index = 0; index < liEle.length; index++) {\n          const dataValue2 = this.getFormattedValue(liEle[index].getAttribute('data-value'));\n          this.value = this.value.filter(e => e !== dataValue2);\n        }\n      }\n\n      if (document.querySelectorAll('ul').length < 2) {\n        this.updateMainList();\n      }\n    }\n\n    this.triggerChange(this.getSelectedItems(), event);\n  }\n\n  updateMainList() {\n    const mainList = this.mainList.querySelectorAll('.e-list-item');\n    const ulList = this.ulElement.querySelectorAll('.e-list-item');\n    const mainCount = mainList.length;\n    const ulEleCount = ulList.length;\n\n    if (this.selectionSettings.showCheckbox || document.querySelectorAll('ul').length > 1 || mainCount !== ulEleCount) {\n      let listindex = 0;\n      let valueindex = 0;\n      let count = 0;\n\n      for (listindex; listindex < mainCount;) {\n        if (this.value) {\n          for (valueindex; valueindex < this.value.length; valueindex++) {\n            if (mainList[listindex].getAttribute('data-value') === this.value[valueindex]) {\n              count++;\n            }\n          }\n        }\n\n        if (!count && this.selectionSettings.showCheckbox) {\n          mainList[listindex].getElementsByClassName('e-frame')[0].classList.remove('e-check');\n        }\n\n        if (document.querySelectorAll('ul').length > 1 && count && mainCount !== ulEleCount) {\n          this.mainList.removeChild(this.mainList.getElementsByTagName('li')[listindex]);\n          listindex = 0;\n        } else {\n          listindex++;\n        }\n\n        count = 0;\n        valueindex = 0;\n      }\n    }\n  }\n\n  wireEvents() {\n    const form = closest(this.element, 'form');\n    const wrapper = this.element.tagName === 'EJS-LISTBOX' ? this.element : this.list;\n    EventHandler.add(this.list, 'click', this.clickHandler, this);\n    EventHandler.add(wrapper, 'keydown', this.keyDownHandler, this);\n    EventHandler.add(wrapper, 'focusout', this.focusOutHandler, this);\n    this.wireToolbarEvent();\n\n    if (this.selectionSettings.showCheckbox) {\n      EventHandler.remove(document, 'mousedown', this.checkBoxSelectionModule.onDocumentClick);\n    }\n\n    if (this.fields.groupBy || this.element.querySelector('select>optgroup')) {\n      EventHandler.remove(this.list, 'scroll', this.setFloatingHeader);\n    }\n\n    if (form) {\n      EventHandler.add(form, 'reset', this.formResetHandler, this);\n    }\n  }\n\n  wireToolbarEvent() {\n    if (this.toolbarSettings.items.length) {\n      EventHandler.add(this.getToolElem(), 'click', this.toolbarClickHandler, this);\n    }\n  }\n\n  unwireEvents() {\n    const form = closest(this.element, 'form');\n    const wrapper = this.element.tagName === 'EJS-LISTBOX' ? this.element : this.list;\n    EventHandler.remove(this.list, 'click', this.clickHandler);\n    EventHandler.remove(wrapper, 'keydown', this.keyDownHandler);\n    EventHandler.remove(wrapper, 'focusout', this.focusOutHandler);\n\n    if (this.allowFiltering && this.clearFilterIconElem) {\n      EventHandler.remove(this.clearFilterIconElem, 'click', this.clearText);\n    }\n\n    if (this.toolbarSettings.items.length) {\n      EventHandler.remove(this.getToolElem(), 'click', this.toolbarClickHandler);\n    }\n\n    if (form) {\n      EventHandler.remove(form, 'reset', this.formResetHandler);\n    }\n  }\n\n  clickHandler(e) {\n    this.selectHandler(e);\n  }\n\n  checkSelectAll() {\n    let searchCount = 0;\n    const liItems = this.list.querySelectorAll('li.' + dropDownBaseClasses.li);\n\n    for (let i = 0; i < liItems.length; i++) {\n      if (!liItems[i].classList.contains('e-disabled')) {\n        searchCount++;\n      }\n    }\n\n    const len = this.getSelectedItems().length;\n\n    if (this.showSelectAll && searchCount) {\n      this.notify('checkSelectAll', {\n        module: 'CheckBoxSelection',\n        value: searchCount === len ? 'check' : len === 0 ? 'uncheck' : 'indeterminate'\n      });\n    }\n  }\n\n  getQuery(query) {\n    let filterQuery = query ? query.clone() : this.query ? this.query.clone() : new Query();\n\n    if (this.allowFiltering) {\n      const filterType = this.inputString === '' ? 'contains' : this.filterType;\n      let dataType = this.typeOfData(this.dataSource).typeof;\n\n      if (dataType === null) {\n        dataType = this.typeOfData(this.jsonData).typeof;\n      }\n\n      if (!(this.dataSource instanceof DataManager) && dataType === 'string' || dataType === 'number') {\n        filterQuery.where('', filterType, this.inputString, this.ignoreCase, this.ignoreAccent);\n      } else {\n        const fields = this.fields.text ? this.fields.text : '';\n        filterQuery.where(fields, filterType, this.inputString, this.ignoreCase, this.ignoreAccent);\n      }\n    } else {\n      filterQuery = query ? query : this.query ? this.query : new Query();\n    }\n\n    return filterQuery;\n  }\n\n  setFiltering() {\n    let filterInputObj;\n\n    if (this.initLoad || isNullOrUndefined(this.filterParent)) {\n      this.filterParent = this.createElement('span', {\n        className: listBoxClasses.filterParent\n      });\n      this.filterInput = this.createElement('input', {\n        attrs: {\n          type: 'text'\n        },\n        className: listBoxClasses.filterInput\n      });\n      this.element.parentNode.insertBefore(this.filterInput, this.element);\n      filterInputObj = Input.createInput({\n        element: this.filterInput,\n        buttons: [listBoxClasses.filterBarClearIcon],\n        properties: {\n          placeholder: this.filterBarPlaceholder\n        }\n      }, this.createElement);\n      append([filterInputObj.container], this.filterParent);\n      prepend([this.filterParent], this.list);\n      attributes(this.filterInput, {\n        'aria-disabled': 'false',\n        'aria-owns': this.element.id + '_options',\n        'role': 'listbox',\n        'aria-activedescendant': null,\n        'autocomplete': 'off',\n        'autocorrect': 'off',\n        'autocapitalize': 'off',\n        'spellcheck': 'false'\n      });\n\n      if (this.height.toString().indexOf('%') < 0) {\n        addClass([this.list], 'e-filter-list');\n      }\n\n      this.inputString = this.filterInput.value;\n      this.filterWireEvents();\n      return filterInputObj;\n    }\n  }\n\n  filterWireEvents(filterElem) {\n    if (filterElem) {\n      this.filterInput = filterElem.querySelector('.e-input-filter');\n    }\n\n    this.clearFilterIconElem = this.filterInput.parentElement.querySelector('.' + listBoxClasses.clearIcon);\n\n    if (this.clearFilterIconElem) {\n      EventHandler.add(this.clearFilterIconElem, 'click', this.clearText, this);\n\n      if (!filterElem) {\n        this.clearFilterIconElem.style.visibility = 'hidden';\n      }\n    }\n\n    EventHandler.add(this.filterInput, 'input', this.onInput, this);\n    EventHandler.add(this.filterInput, 'keyup', this.KeyUp, this);\n    EventHandler.add(this.filterInput, 'keydown', this.onKeyDown, this);\n  }\n\n  selectHandler(e, isKey) {\n    let isSelect = true;\n    let currSelIdx;\n    const li = closest(e.target, '.' + 'e-list-item');\n    let selectedLi = [li];\n\n    if (li && li.parentElement) {\n      currSelIdx = [].slice.call(li.parentElement.children).indexOf(li);\n\n      if (!this.selectionSettings.showCheckbox) {\n        if ((e.ctrlKey || Browser.isDevice) && this.isSelected(li)) {\n          li.classList.remove(cssClass.selected);\n          li.removeAttribute('aria-selected');\n          isSelect = false;\n        } else if (!(this.selectionSettings.mode === 'Multiple' && (e.ctrlKey || Browser.isDevice))) {\n          this.getSelectedItems().forEach(ele => {\n            ele.removeAttribute('aria-selected');\n          });\n          removeClass(this.getSelectedItems(), cssClass.selected);\n        }\n      } else {\n        isSelect = !li.getElementsByClassName('e-frame')[0].classList.contains('e-check');\n      }\n\n      if (e.shiftKey && !this.selectionSettings.showCheckbox && this.selectionSettings.mode !== 'Single') {\n        selectedLi = [].slice.call(li.parentElement.children).slice(Math.min(currSelIdx, this.prevSelIdx), Math.max(currSelIdx, this.prevSelIdx) + 1).filter(ele => {\n          return ele.classList.contains('e-list-item');\n        });\n      } else {\n        this.prevSelIdx = [].slice.call(li.parentElement.children).indexOf(li);\n      }\n\n      if (isSelect) {\n        if (!this.selectionSettings.showCheckbox) {\n          addClass(selectedLi, cssClass.selected);\n        }\n\n        selectedLi.forEach(ele => {\n          ele.setAttribute('aria-selected', 'true');\n        });\n        this.list.setAttribute('aria-activedescendant', li.id);\n      } else {\n        selectedLi.forEach(ele => {\n          ele.setAttribute('aria-selected', 'false');\n        });\n      }\n\n      if (!isKey && (this.maximumSelectionLength > (this.value && this.value.length) || !isSelect) && (this.maximumSelectionLength >= (this.value && this.value.length) || !isSelect) && !(this.maximumSelectionLength < (this.value && this.value.length))) {\n        this.notify('updatelist', {\n          li: li,\n          e: e,\n          module: 'listbox'\n        });\n      }\n\n      if (this.allowFiltering && !isKey) {\n        const liDataValue = this.getFormattedValue(li.getAttribute('data-value'));\n\n        if (!isSelect) {\n          this.value = this.value.filter(value1 => value1 !== liDataValue);\n        } else {\n          const values = [];\n          extend(values, this.value);\n          values.push(liDataValue);\n          this.value = values;\n        }\n\n        if (document.querySelectorAll('ul').length < 2) {\n          this.updateMainList();\n        }\n      }\n\n      this.updateSelectedOptions();\n      this.triggerChange(this.getSelectedItems(), e);\n      this.checkMaxSelection();\n    }\n  }\n\n  triggerChange(selectedLis, event) {\n    this.trigger('change', {\n      elements: selectedLis,\n      items: this.getDataByElements(selectedLis),\n      value: this.value,\n      event: event\n    });\n  }\n\n  getDataByElems(elems) {\n    const data = [];\n\n    for (let i = 0, len = elems.length; i < len; i++) {\n      data.push(this.getDataByValue(this.getFormattedValue(elems[i].getAttribute('data-value'))));\n    }\n\n    return data;\n  }\n\n  getDataByElements(elems) {\n    const data = [];\n    let value;\n    let sIdx = 0;\n\n    if (!isNullOrUndefined(this.listData)) {\n      const type = this.typeOfData(this.listData).typeof;\n\n      if (type === 'string' || type === 'number' || type === 'boolean') {\n        for (const item of this.listData) {\n          for (let i = sIdx, len = elems.length; i < len; i++) {\n            value = this.getFormattedValue(elems[i].getAttribute('data-value'));\n\n            if (!isNullOrUndefined(item) && item === value) {\n              sIdx = i;\n              data.push(item);\n              break;\n            }\n          }\n\n          if (elems.length === data.length) {\n            break;\n          }\n        }\n      } else {\n        for (const item of this.listData) {\n          for (let i = sIdx, len = elems.length; i < len; i++) {\n            value = this.getFormattedValue(elems[i].getAttribute('data-value'));\n\n            if (!isNullOrUndefined(item) && getValue(this.fields.value ? this.fields.value : 'value', item) === value) {\n              sIdx = i;\n              data.push(item);\n              break;\n            }\n          }\n\n          if (elems.length === data.length) {\n            break;\n          }\n        }\n      }\n\n      return data;\n    }\n\n    return null;\n  }\n\n  checkMaxSelection() {\n    const limit = this.list.querySelectorAll('.e-list-item span.e-check').length;\n\n    if (this.selectionSettings.showCheckbox) {\n      let index = 0;\n      const liCollElem = this.list.getElementsByClassName('e-list-item');\n\n      for (index; index < liCollElem.length; index++) {\n        if (!liCollElem[index].querySelector('.e-frame.e-check')) {\n          if (limit === this.maximumSelectionLength) {\n            liCollElem[index].classList.add('e-disable');\n          } else if (liCollElem[index].classList.contains('e-disable')) {\n            liCollElem[index].classList.remove('e-disable');\n          }\n        }\n      }\n    }\n  }\n\n  toolbarClickHandler(e) {\n    const btn = closest(e.target, 'button');\n\n    if (btn) {\n      this.toolbarAction = btn.getAttribute('data-value');\n\n      if (btn.disabled) {\n        return;\n      }\n\n      switch (this.toolbarAction) {\n        case 'moveUp':\n          this.moveUpDown(true);\n          break;\n\n        case 'moveDown':\n          this.moveUpDown();\n          break;\n\n        case 'moveTo':\n          this.moveItemTo();\n          break;\n\n        case 'moveFrom':\n          this.moveItemFrom();\n          break;\n\n        case 'moveAllTo':\n          this.moveAllItemTo();\n          break;\n\n        case 'moveAllFrom':\n          this.moveAllItemFrom();\n          break;\n\n        default:\n          this.trigger('actionBegin', {\n            cancel: false,\n            items: this.getDataByElems(this.getSelectedItems()),\n            eventName: this.toolbarAction\n          });\n          break;\n      }\n    }\n  }\n\n  moveUpDown(isUp, isKey, value) {\n    let elems = this.getSelectedItems();\n\n    if (value) {\n      elems = value;\n    }\n\n    if ((isUp && this.isSelected(this.ulElement.firstElementChild) || !isUp && this.isSelected(this.ulElement.lastElementChild)) && !value) {\n      return;\n    }\n\n    const tempItems = this.getDataByElems(elems);\n    const localDataArgs = {\n      cancel: false,\n      items: tempItems,\n      eventName: this.toolbarAction\n    };\n    this.trigger('actionBegin', localDataArgs);\n\n    if (localDataArgs.cancel) {\n      return;\n    }\n\n    (isUp ? elems : elems.reverse()).forEach(ele => {\n      const jsonToIdx = Array.prototype.indexOf.call(this.ulElement.querySelectorAll('.e-list-item'), ele);\n      const idx = Array.prototype.indexOf.call(this.ulElement.children, ele);\n      moveTo(this.ulElement, this.ulElement, [idx], isUp ? idx - 1 : idx + 2);\n      this.changeData(idx, isUp ? idx - 1 : idx + 1, isUp ? jsonToIdx - 1 : jsonToIdx + 1, ele);\n    });\n    this.trigger('actionComplete', {\n      items: tempItems,\n      eventName: this.toolbarAction\n    });\n    elems[0].focus();\n\n    if (!isKey && this.toolbarSettings.items.length) {\n      this.getToolElem().querySelector('[data-value=' + (isUp ? 'moveUp' : 'moveDown') + ']').focus();\n    }\n\n    this.updateToolBarState();\n  }\n\n  moveItemTo() {\n    this.moveData(this, this.getScopedListBox());\n  }\n\n  moveItemFrom() {\n    this.moveData(this.getScopedListBox(), this);\n  }\n  /**\n   * Called internally if any of the property value changed.\n   *\n   * @param {ListBox} fListBox - Specifies the from listbox.\n   * @param {ListBox} tListBox - Specifies the to listbox.\n   * @param {boolean} isKey - Specifies the key.\n   * @param {Element[]} value - Specifies the value.\n   * @param {number} index - Specifies the index.\n   * @returns {void}\n   * @private\n   */\n\n\n  moveData(fListBox, tListBox, isKey, value, index) {\n    const idx = [];\n    const dataIdx = [];\n    const jsonIdx = [];\n    const sortIdx = [];\n    const listData = [].slice.call(fListBox.listData);\n    const tListData = [].slice.call(tListBox.listData);\n    const sortData = [].slice.call(fListBox.sortedData);\n    let tSortData = [].slice.call(tListBox.sortedData);\n    const fliCollections = [].slice.call(fListBox.liCollections);\n    const dataLiIdx = [];\n    const tliCollections = [].slice.call(tListBox.liCollections);\n    const tempItems = [];\n    const data = [];\n    let elems = fListBox.getSelectedItems();\n\n    if (value) {\n      elems = value;\n    }\n\n    const isRefresh = tListBox.sortOrder !== 'None' || tListBox.selectionSettings.showCheckbox !== fListBox.selectionSettings.showCheckbox || tListBox.fields.groupBy || tListBox.itemTemplate || fListBox.itemTemplate;\n    fListBox.value = [];\n\n    if (elems.length) {\n      this.removeSelected(fListBox, elems);\n      elems.forEach(ele => {\n        idx.push(Array.prototype.indexOf.call(fListBox.ulElement.children, ele)); // update sortable elem\n        // To update lb view data\n\n        dataLiIdx.push(Array.prototype.indexOf.call(fListBox.ulElement.querySelectorAll('.e-list-item'), ele)); // To update lb listdata data\n\n        dataIdx.push(Array.prototype.indexOf.call(fListBox.listData, fListBox.getDataByElems([ele])[0])); // To update lb sorted data\n\n        sortIdx.push(Array.prototype.indexOf.call(fListBox.sortedData, fListBox.getDataByElems([ele])[0])); // To update lb original data\n\n        jsonIdx.push(Array.prototype.indexOf.call(fListBox.jsonData, fListBox.getDataByElems([ele])[0]));\n      });\n\n      if (this.sortOrder !== 'None') {\n        sortIdx.forEach(i => {\n          tempItems.push(fListBox.sortedData[i]);\n        });\n      } else {\n        jsonIdx.forEach(i => {\n          tempItems.push(fListBox.jsonData[i]);\n        });\n      }\n\n      const localDataArgs = {\n        cancel: false,\n        items: tempItems,\n        eventName: this.toolbarAction\n      };\n      fListBox.trigger('actionBegin', localDataArgs);\n\n      if (localDataArgs.cancel) {\n        return;\n      }\n\n      const rLiCollection = [];\n      dataLiIdx.sort((n1, n2) => n1 - n2).reverse().forEach(i => {\n        rLiCollection.push(fliCollections.splice(i, 1)[0]);\n      });\n      fListBox.liCollections = fliCollections;\n\n      if (index) {\n        const toColl = tliCollections.splice(0, index);\n        tListBox.liCollections = toColl.concat(rLiCollection.reverse()).concat(tliCollections);\n      } else {\n        tListBox.liCollections = tliCollections.concat(rLiCollection.reverse());\n      }\n\n      if (tListBox.listData.length === 0) {\n        const noRecElem = tListBox.ulElement.childNodes[0];\n\n        if (noRecElem) {\n          tListBox.ulElement.removeChild(noRecElem);\n        }\n      }\n\n      dataIdx.sort((n1, n2) => n2 - n1).forEach(i => {\n        // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n        listData.splice(i, 1)[0];\n      });\n      sortIdx.sort((n1, n2) => n2 - n1).forEach(i => {\n        // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n        sortData.splice(i, 1)[0];\n      });\n      jsonIdx.slice().reverse().forEach(i => {\n        data.push(fListBox.jsonData.splice(i, 1)[0]);\n      });\n\n      if (isRefresh) {\n        if (fListBox.fields.groupBy) {\n          let sourceElem = fListBox.renderItems(listData, fListBox.fields);\n          fListBox.updateListItems(sourceElem, fListBox.ulElement);\n        } else {\n          elems.forEach(ele => {\n            detach(ele);\n          });\n        }\n      } else {\n        moveTo(fListBox.ulElement, tListBox.ulElement, idx, index);\n        fListBox.trigger('actionComplete', {\n          items: tempItems,\n          eventName: this.toolbarAction\n        });\n      }\n\n      if (tListBox.mainList.childElementCount !== tListBox.jsonData.length) {\n        tListBox.mainList = tListBox.ulElement;\n      }\n\n      fListBox.updateMainList();\n      const tJsonData = [].slice.call(tListBox.jsonData);\n      tSortData = [].slice.call(tListBox.sortedData);\n      this.selectNextList(elems, dataLiIdx, dataIdx, fListBox);\n\n      if (isKey) {\n        this.list.focus();\n      }\n\n      fListBox.listData = listData;\n      fListBox.sortedData = sortData;\n      index = index ? index : tListData.length;\n\n      for (let i = tempItems.length - 1; i >= 0; i--) {\n        tListData.splice(index, 0, tempItems[i]);\n        tJsonData.splice(index, 0, tempItems[i]);\n        tSortData.splice(index, 0, tempItems[i]);\n      }\n\n      tListBox.listData = tListData;\n      tListBox.jsonData = tJsonData;\n      tListBox.sortedData = tSortData;\n\n      if (isRefresh) {\n        let sourceElem = tListBox.renderItems(tListData, tListBox.fields);\n        tListBox.updateListItems(sourceElem, tListBox.ulElement);\n        tListBox.setSelection();\n        fListBox.trigger('actionComplete', {\n          items: tempItems,\n          eventName: this.toolbarAction\n        });\n      }\n\n      fListBox.updateSelectedOptions();\n\n      if (fListBox.listData.length === 0) {\n        fListBox.l10nUpdate();\n      }\n    }\n\n    if (fListBox.value.length === 1 && fListBox.getSelectedItems().length) {\n      fListBox.value[0] = fListBox.getFormattedValue(fListBox.getSelectedItems()[0].getAttribute('data-value'));\n    }\n  }\n\n  selectNextList(elems, dataLiIdx, dataIdx, inst) {\n    const childCnt = inst.ulElement.querySelectorAll('.e-list-item').length;\n    let ele;\n    let liIdx;\n    let validIdx = -1;\n\n    if (elems.length === 1 && childCnt && !inst.selectionSettings.showCheckbox) {\n      liIdx = childCnt <= dataLiIdx[0] ? childCnt - 1 : dataLiIdx[0];\n      ele = inst.ulElement.querySelectorAll('.e-list-item')[liIdx];\n      validIdx = inst.getValidIndex(ele, liIdx, childCnt === dataIdx[0] ? 38 : 40);\n\n      if (validIdx > -1) {\n        inst.ulElement.querySelectorAll('.e-list-item')[validIdx].classList.add(cssClass.selected);\n      }\n    }\n  }\n\n  moveAllItemTo() {\n    this.moveAllData(this, this.getScopedListBox());\n  }\n\n  moveAllItemFrom() {\n    this.moveAllData(this.getScopedListBox(), this);\n  }\n\n  moveAllData(fListBox, tListBox, isKey, index) {\n    let listData = [].slice.call(tListBox.listData);\n    const jsonData = [].slice.call(tListBox.jsonData);\n    const isRefresh = tListBox.sortOrder !== 'None' || tListBox.selectionSettings.showCheckbox !== fListBox.selectionSettings.showCheckbox || tListBox.fields.groupBy || tListBox.itemTemplate || fListBox.itemTemplate;\n    this.removeSelected(fListBox, fListBox.getSelectedItems());\n    const tempItems = [].slice.call(fListBox.jsonData);\n    const localDataArgs = {\n      cancel: false,\n      items: tempItems,\n      eventName: this.toolbarAction\n    };\n    fListBox.trigger('actionBegin', localDataArgs);\n\n    if (localDataArgs.cancel) {\n      return;\n    }\n\n    if (tListBox.listData.length === 0) {\n      const noRecElem = tListBox.ulElement.childNodes[0];\n\n      if (noRecElem) {\n        tListBox.ulElement.removeChild(noRecElem);\n      }\n    }\n\n    if (isRefresh) {\n      const noRecElem = fListBox.ulElement.childNodes[0];\n\n      if (noRecElem) {\n        fListBox.ulElement.removeChild(noRecElem);\n      }\n    }\n\n    moveTo(fListBox.ulElement, tListBox.ulElement, // eslint-disable-next-line prefer-spread\n    Array.apply(null, {\n      length: fListBox.ulElement.childElementCount\n    }).map(Number.call, Number), index);\n    this.trigger('actionComplete', {\n      items: tempItems,\n      eventName: this.toolbarAction\n    });\n\n    if (isKey) {\n      this.list.focus();\n    }\n\n    index = index ? index : listData.length;\n\n    for (let i = 0; i < fListBox.listData.length; i++) {\n      listData.splice(index + i, 0, fListBox.listData[i]);\n    }\n\n    for (let i = 0; i < fListBox.jsonData.length; i++) {\n      jsonData.splice(index + i, 0, fListBox.jsonData[i]);\n    }\n\n    const fliCollections = [].slice.call(fListBox.liCollections);\n    const tliCollections = [].slice.call(tListBox.liCollections);\n    fListBox.liCollections = [];\n\n    if (index) {\n      const toColl = tliCollections.splice(0, index);\n      tListBox.liCollections = toColl.concat(fliCollections).concat(tliCollections);\n    } else {\n      tListBox.liCollections = tliCollections.concat(fliCollections);\n    }\n\n    fListBox.value = [];\n    listData = listData.filter(data => data.isHeader !== true);\n    tListBox.listData = listData;\n    tListBox.jsonData = jsonData;\n    fListBox.listData = fListBox.sortedData = fListBox.jsonData = [];\n\n    if (isRefresh) {\n      let sourceElem = tListBox.renderItems(listData, tListBox.fields);\n      tListBox.updateListItems(sourceElem, tListBox.ulElement);\n      this.trigger('actionComplete', {\n        items: tempItems,\n        eventName: this.toolbarAction\n      });\n    } else {\n      tListBox.sortedData = listData;\n    }\n\n    fListBox.updateSelectedOptions();\n\n    if (fListBox.listData.length === 0) {\n      fListBox.l10nUpdate();\n    }\n  }\n\n  changeData(fromIdx, toIdx, jsonToIdx, ele) {\n    const listData = [].slice.call(this.listData);\n    const jsonData = [].slice.call(this.jsonData);\n    const sortData = [].slice.call(this.sortedData);\n    const jsonIdx = Array.prototype.indexOf.call(this.jsonData, this.getDataByElems([ele])[0]);\n    const sortIdx = Array.prototype.indexOf.call(this.sortedData, this.getDataByElems([ele])[0]);\n    const liColl = [].slice.call(this.liCollections);\n    listData.splice(toIdx, 0, listData.splice(fromIdx, 1)[0]);\n    jsonData.splice(jsonToIdx, 0, jsonData.splice(jsonIdx, 1)[0]);\n    sortData.splice(toIdx, 0, sortData.splice(sortIdx, 1)[0]);\n    liColl.splice(toIdx, 0, liColl.splice(fromIdx, 1)[0]);\n    this.listData = listData;\n    this.jsonData = jsonData;\n    this.liCollections = liColl;\n    this.sortedData = sortData;\n  }\n\n  getSelectedItems() {\n    let ele = [];\n\n    if (this.selectionSettings.showCheckbox) {\n      [].slice.call(this.ulElement.getElementsByClassName('e-check')).forEach(cbox => {\n        ele.push(closest(cbox, '.' + 'e-list-item'));\n      });\n    } else {\n      ele = [].slice.call(this.ulElement.getElementsByClassName(cssClass.selected));\n    }\n\n    return ele;\n  }\n\n  getScopedListBox() {\n    let listObj;\n\n    if (this.scope) {\n      [].slice.call(document.querySelectorAll(this.scope)).forEach(ele => {\n        if (getComponent(ele, this.getModuleName())) {\n          listObj = getComponent(ele, this.getModuleName());\n        }\n      });\n    }\n\n    return listObj;\n  }\n\n  getGrabbedItems() {\n    for (let i = 0; i < this.value.length; i++) {\n      if (this.value[i] === this.dragValue) {\n        const liColl = this.list.querySelectorAll('[aria-selected=\"true\"]');\n\n        for (let i = 0; i < liColl.length; i++) {\n          liColl[i].classList.add('e-grabbed');\n        }\n\n        break;\n      }\n    }\n\n    const elems = Array.prototype.slice.call(this.element.querySelectorAll('.e-grabbed'));\n    return elems;\n  }\n\n  getDragArgs(args, isDragEnd) {\n    let elems = this.getGrabbedItems();\n\n    if (elems.length) {\n      if (isDragEnd) {\n        elems.push(args.target);\n      }\n    } else {\n      elems = [args.target];\n    }\n\n    return {\n      elements: elems,\n      items: this.getDataByElems(elems)\n    };\n  }\n\n  onKeyDown(e) {\n    this.keyDownHandler(e);\n    e.stopPropagation();\n  }\n\n  keyDownHandler(e) {\n    if ([32, 35, 36, 37, 38, 39, 40, 65].indexOf(e.keyCode) > -1 && !this.allowFiltering) {\n      if (e.target && e.target.className.indexOf('e-edit-template') > -1) {\n        return;\n      }\n\n      e.preventDefault();\n\n      if (e.keyCode === 32 && this.ulElement.children.length) {\n        this.selectHandler({\n          target: this.ulElement.getElementsByClassName('e-focused')[0],\n          ctrlKey: e.ctrlKey,\n          shiftKey: e.shiftKey\n        });\n      } else if (e.keyCode === 65 && e.ctrlKey) {\n        this.selectAll();\n      } else if ((e.keyCode === 38 || e.keyCode === 40) && e.ctrlKey && e.shiftKey) {\n        this.moveUpDown(e.keyCode === 38 ? true : false, true);\n      } else if ((this.toolbarSettings.items.length || this.tBListBox) && (e.keyCode === 39 || e.keyCode === 37) && e.ctrlKey) {\n        const listObj = this.tBListBox || this.getScopedListBox();\n\n        if (e.keyCode === 39) {\n          if (e.shiftKey) {\n            this.moveAllData(this, listObj, true);\n          } else {\n            this.moveData(this, listObj, true);\n          }\n        } else {\n          if (e.shiftKey) {\n            this.moveAllData(listObj, this, true);\n          } else {\n            this.moveData(listObj, this, true);\n          }\n        }\n      } else if (e.keyCode !== 37 && e.keyCode !== 39 && e.code !== \"KeyA\") {\n        this.upDownKeyHandler(e);\n      }\n    } else if (this.allowFiltering) {\n      if (e.keyCode === 40 || e.keyCode === 38) {\n        this.upDownKeyHandler(e);\n      }\n    }\n  }\n\n  upDownKeyHandler(e) {\n    const ul = this.ulElement;\n    const defaultIdx = e.keyCode === 40 || e.keyCode === 36 ? 0 : ul.childElementCount - 1;\n    let fliIdx = defaultIdx;\n    const fli = ul.getElementsByClassName('e-focused')[0] || ul.getElementsByClassName(cssClass.selected)[0];\n\n    if (fli) {\n      if (e.keyCode !== 35 && e.keyCode !== 36) {\n        fliIdx = Array.prototype.indexOf.call(ul.children, fli);\n\n        if (e.keyCode === 40) {\n          fliIdx++;\n        } else {\n          fliIdx--;\n        }\n\n        if (fliIdx < 0 || fliIdx > ul.childElementCount - 1) {\n          return;\n        }\n      }\n\n      removeClass([fli], 'e-focused');\n    }\n\n    const cli = ul.children[fliIdx];\n\n    if (cli) {\n      fliIdx = this.getValidIndex(cli, fliIdx, e.keyCode);\n\n      if (fliIdx === -1) {\n        addClass([fli], 'e-focused');\n        return;\n      }\n\n      ul.children[fliIdx].focus();\n      ul.children[fliIdx].classList.add('e-focused');\n\n      if (!e.ctrlKey || !this.selectionSettings.showCheckbox && e.shiftKey && (e.keyCode === 36 || e.keyCode === 35)) {\n        this.selectHandler({\n          target: ul.children[fliIdx],\n          ctrlKey: e.ctrlKey,\n          shiftKey: e.shiftKey\n        }, true);\n      }\n\n      if (this.selectionSettings.showCheckbox && e.ctrlKey && e.shiftKey && (e.keyCode === 36 || e.keyCode === 35)) {\n        let selectedidx = Array.prototype.indexOf.call(ul.children, fli);\n        let sidx = e.code === \"Home\" ? 0 : selectedidx;\n        let eidx = e.code === \"Home\" ? selectedidx : ul.children.length - 1;\n\n        for (let i = sidx; i <= eidx; i++) {\n          const item = ul.children[i];\n          this.notify('updatelist', {\n            li: item,\n            e: {\n              target: this.ulElement.getElementsByClassName('e-focused')[0],\n              ctrlKey: e.ctrlKey,\n              shiftKey: e.shiftKey\n            },\n            module: 'listbox'\n          });\n        }\n      }\n    }\n  }\n\n  KeyUp(e) {\n    const char = String.fromCharCode(e.keyCode);\n    const isWordCharacter = char.match(/\\w/);\n\n    if (!isNullOrUndefined(isWordCharacter)) {\n      this.isValidKey = true;\n    }\n\n    this.isValidKey = e.keyCode === 8 || e.keyCode === 46 || this.isValidKey;\n\n    if (this.isValidKey) {\n      this.isValidKey = false;\n\n      switch (e.keyCode) {\n        default:\n          if (this.allowFiltering) {\n            const eventArgsData = {\n              preventDefaultAction: false,\n              text: this.targetElement(),\n              updateData: (dataSource, query, fields) => {\n                if (eventArgsData.cancel) {\n                  return;\n                }\n\n                this.isFiltered = true;\n                this.remoteFilterAction = true;\n                this.dataUpdater(dataSource, query, fields);\n              },\n              event: e,\n              cancel: false\n            };\n            this.trigger('filtering', eventArgsData, args => {\n              this.isDataFetched = false;\n\n              if (args.cancel || this.filterInput.value !== '' && this.isFiltered) {\n                return;\n              }\n\n              if (!args.cancel && !this.isCustomFiltering && !args.preventDefaultAction) {\n                this.inputString = this.filterInput.value;\n                this.filteringAction(this.jsonData, new Query(), this.fields);\n              }\n\n              if (!this.isFiltered && !this.isCustomFiltering && !args.preventDefaultAction) {\n                this.dataUpdater(this.jsonData, new Query(), this.fields);\n              }\n            });\n          }\n\n      }\n    }\n  }\n  /**\n   * To filter the data from given data source by using query.\n   *\n   * @param  {Object[] | DataManager } dataSource - Set the data source to filter.\n   * @param  {Query} query - Specify the query to filter the data.\n   * @param  {FieldSettingsModel} fields - Specify the fields to map the column in the data table.\n   * @returns {void}.\n   */\n\n\n  filter(dataSource, query, fields) {\n    this.isCustomFiltering = true;\n    this.filteringAction(dataSource, query, fields);\n  }\n\n  filteringAction(dataSource, query, fields) {\n    this.resetList(dataSource, fields, query);\n  }\n\n  targetElement() {\n    this.targetInputElement = this.list.getElementsByClassName('e-input-filter')[0];\n    return this.targetInputElement.value;\n  }\n\n  dataUpdater(dataSource, query, fields) {\n    this.isDataFetched = false;\n    const backCommand = true;\n\n    if (this.targetElement().trim() === '') {\n      const list = this.mainList.cloneNode ? this.mainList.cloneNode(true) : this.mainList;\n\n      if (backCommand) {\n        this.remoteCustomValue = false;\n        this.onActionComplete(list, this.jsonData);\n        this.notify('reOrder', {\n          module: 'CheckBoxSelection',\n          enable: this.selectionSettings.showCheckbox,\n          e: this\n        });\n      }\n    } else {\n      this.resetList(dataSource, fields, query);\n    }\n  }\n\n  focusOutHandler() {\n    const ele = this.list.getElementsByClassName('e-focused')[0];\n\n    if (ele) {\n      ele.classList.remove('e-focused');\n    }\n\n    if (this.allowFiltering) {\n      this.refreshClearIcon();\n    }\n  }\n\n  getValidIndex(cli, index, keyCode) {\n    const cul = this.ulElement;\n\n    if (cli.classList.contains('e-disabled') || cli.classList.contains(cssClass.group)) {\n      if (keyCode === 40 || keyCode === 36) {\n        index++;\n      } else {\n        index--;\n      }\n    }\n\n    if (index < 0 || index === cul.childElementCount) {\n      return -1;\n    }\n\n    cli = cul.querySelectorAll('.e-list-item')[index];\n\n    if (cli.classList.contains('e-disabled') || cli.classList.contains(cssClass.group)) {\n      index = this.getValidIndex(cli, index, keyCode);\n    }\n\n    return index;\n  }\n\n  updateSelectedOptions() {\n    const selectedOptions = [];\n    const values = [];\n    extend(values, this.value);\n    this.getSelectedItems().forEach(ele => {\n      if (!ele.classList.contains('e-grabbed')) {\n        selectedOptions.push(this.getFormattedValue(ele.getAttribute('data-value')));\n      }\n    });\n\n    if (this.mainList.childElementCount === this.ulElement.childElementCount) {\n      if (this.allowFiltering && this.selectionSettings.showCheckbox) {\n        for (let i = 0; i < selectedOptions.length; i++) {\n          if (values.indexOf(selectedOptions[i]) > -1) {\n            continue;\n          } else {\n            values.push(selectedOptions[i]);\n          }\n        }\n\n        this.setProperties({\n          value: values\n        }, true);\n      } else {\n        this.setProperties({\n          value: selectedOptions\n        }, true);\n      }\n    }\n\n    this.updateSelectTag();\n    this.updateToolBarState();\n\n    if (this.tBListBox) {\n      this.tBListBox.updateToolBarState();\n    }\n  }\n\n  clearSelection(values = this.value) {\n    if (this.selectionSettings.showCheckbox) {\n      let dvalue;\n      this.getSelectedItems().forEach(li => {\n        dvalue = this.getFormattedValue(li.getAttribute('data-value'));\n\n        if (values.indexOf(dvalue) < 0) {\n          li.getElementsByClassName('e-check')[0].classList.remove('e-check');\n          li.getElementsByClassName('e-checkbox-wrapper')[0].removeAttribute('aria-checked');\n          li.removeAttribute('aria-selected');\n        }\n      });\n    }\n  }\n\n  setSelection(values = this.value, isSelect = true, isText = false) {\n    let li;\n    let liselect;\n\n    if (values) {\n      values.forEach(value => {\n        let text;\n\n        if (isText) {\n          text = this.getValueByText(value);\n        } else {\n          text = value;\n        }\n\n        li = this.list.querySelector('[data-value=\"' + text + '\"]');\n\n        if (li) {\n          if (this.selectionSettings.showCheckbox) {\n            liselect = li.getElementsByClassName('e-frame')[0].classList.contains('e-check');\n          } else {\n            liselect = li.classList.contains('e-selected');\n          }\n\n          if (!isSelect && liselect || isSelect && !liselect && li) {\n            if (this.selectionSettings.showCheckbox) {\n              this.notify('updatelist', {\n                li: li,\n                module: 'listbox'\n              });\n            } else {\n              if (isSelect) {\n                li.classList.add(cssClass.selected);\n                li.setAttribute('aria-selected', 'true');\n              } else {\n                li.classList.remove(cssClass.selected);\n                li.removeAttribute('aria-selected');\n              }\n            }\n          }\n        }\n      });\n    }\n\n    this.updateSelectTag();\n  }\n\n  updateSelectTag() {\n    const ele = this.getSelectTag();\n    let innerHTML = '';\n    ele.innerHTML = '';\n\n    if (this.value) {\n      for (let i = 0, len = this.value.length; i < len; i++) {\n        innerHTML += '<option selected value=\"' + this.value[i] + '\"></option>';\n      }\n\n      ele.innerHTML += innerHTML;\n    }\n\n    this.checkSelectAll();\n  }\n\n  checkDisabledState(inst) {\n    return inst.ulElement.querySelectorAll('.' + cssClass.li).length === 0;\n  }\n\n  updateToolBarState() {\n    if (this.toolbarSettings.items.length) {\n      const listObj = this.getScopedListBox();\n      const wrap = this.list.parentElement.getElementsByClassName('e-listbox-tool')[0];\n      this.toolbarSettings.items.forEach(value => {\n        const btn = wrap.querySelector('[data-value=\"' + value + '\"]');\n\n        switch (value) {\n          case 'moveAllTo':\n            btn.disabled = this.checkDisabledState(this);\n            break;\n\n          case 'moveAllFrom':\n            btn.disabled = this.checkDisabledState(listObj);\n            break;\n\n          case 'moveFrom':\n            btn.disabled = listObj.value && listObj.value.length ? false : true;\n            break;\n\n          case 'moveUp':\n            btn.disabled = this.value && this.value.length && !this.isSelected(this.ulElement.children[0]) ? false : true;\n            break;\n\n          case 'moveDown':\n            btn.disabled = this.value && this.value.length && !this.isSelected(this.ulElement.children[this.ulElement.childElementCount - 1]) ? false : true;\n            break;\n\n          default:\n            btn.disabled = this.value && this.value.length ? false : true;\n            break;\n        }\n      });\n    }\n  }\n\n  setCheckboxPosition() {\n    const listWrap = this.list;\n\n    if (!this.initLoad && this.selectionSettings.checkboxPosition === 'Left') {\n      listWrap.classList.remove('e-right');\n    }\n\n    if (this.selectionSettings.checkboxPosition === 'Right') {\n      listWrap.classList.add('e-right');\n    }\n  }\n\n  showCheckbox(showCheckbox) {\n    let index = 0;\n    const liColl = this.list.lastElementChild.querySelectorAll('li');\n    const liCollLen = this.list.lastElementChild.getElementsByClassName('e-list-item').length;\n\n    if (showCheckbox) {\n      this.ulElement = this.renderItems(this.listData, this.fields);\n      this.mainList = this.ulElement;\n      this.list.removeChild(this.list.getElementsByTagName('ul')[0]);\n      this.list.appendChild(this.ulElement);\n\n      if (this.selectionSettings.showSelectAll && !this.list.getElementsByClassName('e-selectall-parent')[0]) {\n        const l10nShow = new L10n(this.getModuleName(), {\n          selectAllText: 'Select All',\n          unSelectAllText: 'Unselect All'\n        }, this.locale);\n        this.showSelectAll = true;\n        this.selectAllText = l10nShow.getConstant('selectAllText');\n        this.unSelectAllText = l10nShow.getConstant('unSelectAllText');\n        this.popupWrapper = this.list;\n        this.checkBoxSelectionModule.checkAllParent = null;\n        this.notify('selectAll', {});\n        this.checkSelectAll();\n      }\n    } else {\n      if (this.list.getElementsByClassName('e-selectall-parent')[0]) {\n        this.list.removeChild(this.list.getElementsByClassName('e-selectall-parent')[0]);\n      }\n\n      for (index; index < liCollLen; index++) {\n        if (liColl[index].classList.contains('e-list-item')) {\n          liColl[index].removeChild(liColl[index].getElementsByClassName('e-checkbox-wrapper')[0]);\n        }\n\n        if (liColl[index].hasAttribute('aria-selected')) {\n          liColl[index].removeAttribute('aria-selected');\n        }\n      }\n\n      this.mainList = this.ulElement;\n    }\n\n    this.value = [];\n  }\n\n  isSelected(ele) {\n    if (!isNullOrUndefined(ele)) {\n      return ele.classList.contains(cssClass.selected) || ele.querySelector('.e-check') !== null;\n    } else {\n      return false;\n    }\n  }\n\n  getSelectTag() {\n    return this.list.getElementsByClassName('e-hidden-select')[0];\n  }\n\n  getToolElem() {\n    return this.list.parentElement.getElementsByClassName('e-listbox-tool')[0];\n  }\n\n  formResetHandler() {\n    this.value = this.initialSelectedOptions;\n  }\n  /**\n   * Return the module name.\n   *\n   * @private\n   * @returns {string} - Module name\n   */\n\n\n  getModuleName() {\n    return 'listbox';\n  }\n  /**\n   * Get the properties to be maintained in the persisted state.\n   *\n   * @returns {string} - Persist data\n   */\n\n\n  getPersistData() {\n    return this.addOnPersist(['value']);\n  }\n\n  getLocaleName() {\n    return 'listbox';\n  }\n\n  destroy() {\n    this.unwireEvents();\n\n    if (this.element.tagName === 'EJS-LISTBOX') {\n      this.element.innerHTML = '';\n    } else {\n      this.element.style.display = 'inline-block';\n\n      if (this.toolbarSettings.items.length) {\n        this.list.parentElement.parentElement.insertBefore(this.list, this.list.parentElement);\n        detach(this.list.nextElementSibling);\n      }\n\n      this.list.parentElement.insertBefore(this.element, this.list);\n    }\n\n    super.destroy();\n    this.enableRtlElements = [];\n    this.liCollections = null;\n    this.list = null;\n    this.ulElement = null;\n    this.mainList = null;\n    this.spinner = null;\n    this.rippleFun = null;\n\n    if (this.itemTemplate) {\n      this.clearTemplate();\n    }\n  }\n  /**\n   * Called internally if any of the property value changed.\n   *\n   * @param {ListBoxModel} newProp - Specifies the new properties.\n   * @param {ListBoxModel} oldProp - Specifies the old properties.\n   * @returns {void}\n   * @private\n   */\n\n\n  onPropertyChanged(newProp, oldProp) {\n    const wrap = this.toolbarSettings.items.length ? this.list.parentElement : this.list;\n    super.onPropertyChanged(newProp, oldProp);\n    this.setUpdateInitial(['fields', 'query', 'dataSource'], newProp);\n\n    for (const prop of Object.keys(newProp)) {\n      switch (prop) {\n        case 'cssClass':\n          if (oldProp.cssClass) {\n            removeClass([wrap], oldProp.cssClass.split(' '));\n          }\n\n          if (newProp.cssClass) {\n            addClass([wrap], newProp.cssClass.split(' '));\n          }\n\n          break;\n\n        case 'enableRtl':\n          if (newProp.enableRtl) {\n            this.list.classList.add('e-rtl');\n          } else {\n            this.list.classList.remove('e-rtl');\n          }\n\n          break;\n\n        case 'value':\n          removeClass(this.list.querySelectorAll('.' + cssClass.selected), cssClass.selected);\n          this.clearSelection(this.value);\n          this.setSelection();\n          break;\n\n        case 'height':\n          this.setHeight();\n          break;\n\n        case 'enabled':\n          this.setEnable();\n          break;\n\n        case 'allowDragAndDrop':\n          if (newProp.allowDragAndDrop) {\n            this.initDraggable();\n          } else {\n            getComponent(this.ulElement, 'sortable').destroy();\n          }\n\n          break;\n\n        case 'allowFiltering':\n          if (this.allowFiltering) {\n            this.setFiltering();\n          } else {\n            this.list.removeChild(this.list.getElementsByClassName('e-filter-parent')[0]);\n            this.filterParent = null;\n            removeClass([this.list], 'e-filter-list');\n          }\n\n          break;\n\n        case 'filterBarPlaceholder':\n          if (this.allowFiltering) {\n            if (this.filterInput) {\n              Input.setPlaceholder(newProp.filterBarPlaceholder, this.filterInput);\n            }\n          }\n\n          break;\n\n        case 'scope':\n          if (this.allowDragAndDrop) {\n            getComponent(this.ulElement, 'sortable').scope = newProp.scope;\n          }\n\n          if (this.toolbarSettings.items.length) {\n            if (oldProp.scope) {\n              getComponent(document.querySelector(oldProp.scope), this.getModuleName()).tBListBox = null;\n            }\n\n            if (newProp.scope) {\n              getComponent(document.querySelector(newProp.scope), this.getModuleName()).tBListBox = this;\n            }\n          }\n\n          break;\n\n        case 'toolbarSettings':\n          {\n            let ele;\n            const pos = newProp.toolbarSettings.position;\n            const toolElem = this.getToolElem();\n\n            if (pos) {\n              removeClass([wrap], ['e-right', 'e-left']);\n              wrap.classList.add('e-' + pos.toLowerCase());\n\n              if (pos === 'Left') {\n                wrap.insertBefore(toolElem, this.list);\n              } else {\n                wrap.appendChild(toolElem);\n              }\n            }\n\n            if (newProp.toolbarSettings.items) {\n              if (oldProp.toolbarSettings && oldProp.toolbarSettings.items.length) {\n                ele = this.list.parentElement;\n                ele.parentElement.insertBefore(this.list, ele);\n                detach(ele);\n              }\n\n              this.initToolbarAndStyles();\n              this.wireToolbarEvent();\n            }\n\n            break;\n          }\n\n        case 'selectionSettings':\n          {\n            const showSelectAll = newProp.selectionSettings.showSelectAll;\n            const showCheckbox = newProp.selectionSettings.showCheckbox;\n\n            if (!isNullOrUndefined(showSelectAll)) {\n              this.showSelectAll = showSelectAll;\n\n              if (this.showSelectAll) {\n                const l10nSel = new L10n(this.getModuleName(), {\n                  selectAllText: 'Select All',\n                  unSelectAllText: 'Unselect All'\n                }, this.locale);\n                this.checkBoxSelectionModule.checkAllParent = null;\n                this.showSelectAll = true;\n                this.selectAllText = l10nSel.getConstant('selectAllText');\n                this.unSelectAllText = l10nSel.getConstant('selectAllText');\n                this.popupWrapper = this.list;\n              }\n\n              this.notify('selectAll', {});\n              this.checkSelectAll();\n            }\n\n            if (!isNullOrUndefined(showCheckbox)) {\n              this.showCheckbox(showCheckbox);\n            }\n\n            if (this.selectionSettings.showCheckbox) {\n              this.setCheckboxPosition();\n            }\n\n            break;\n          }\n\n        case 'dataSource':\n          this.isDataSourceUpdate = true;\n          this.jsonData = [].slice.call(this.dataSource);\n          break;\n      }\n    }\n  }\n\n};\n\n__decorate$6([Property('')], ListBox.prototype, \"cssClass\", void 0);\n\n__decorate$6([Property([])], ListBox.prototype, \"value\", void 0);\n\n__decorate$6([Property('')], ListBox.prototype, \"height\", void 0);\n\n__decorate$6([Property(false)], ListBox.prototype, \"allowDragAndDrop\", void 0);\n\n__decorate$6([Property(1000)], ListBox.prototype, \"maximumSelectionLength\", void 0);\n\n__decorate$6([Property(false)], ListBox.prototype, \"allowFiltering\", void 0);\n\n__decorate$6([Property('')], ListBox.prototype, \"scope\", void 0);\n\n__decorate$6([Property(true)], ListBox.prototype, \"ignoreCase\", void 0);\n\n__decorate$6([Property(null)], ListBox.prototype, \"filterBarPlaceholder\", void 0);\n\n__decorate$6([Event()], ListBox.prototype, \"beforeItemRender\", void 0);\n\n__decorate$6([Event()], ListBox.prototype, \"filtering\", void 0);\n\n__decorate$6([Event()], ListBox.prototype, \"select\", void 0);\n\n__decorate$6([Event()], ListBox.prototype, \"change\", void 0);\n\n__decorate$6([Event()], ListBox.prototype, \"beforeDrop\", void 0);\n\n__decorate$6([Event()], ListBox.prototype, \"dragStart\", void 0);\n\n__decorate$6([Event()], ListBox.prototype, \"drag\", void 0);\n\n__decorate$6([Event()], ListBox.prototype, \"drop\", void 0);\n\n__decorate$6([Event()], ListBox.prototype, \"dataBound\", void 0);\n\n__decorate$6([Property(null)], ListBox.prototype, \"groupTemplate\", void 0);\n\n__decorate$6([Property('Request failed')], ListBox.prototype, \"actionFailureTemplate\", void 0);\n\n__decorate$6([Property(1000)], ListBox.prototype, \"zIndex\", void 0);\n\n__decorate$6([Property(false)], ListBox.prototype, \"ignoreAccent\", void 0);\n\n__decorate$6([Complex({}, ToolbarSettings)], ListBox.prototype, \"toolbarSettings\", void 0);\n\n__decorate$6([Complex({}, SelectionSettings)], ListBox.prototype, \"selectionSettings\", void 0);\n\nListBox = ListBox_1 = __decorate$6([NotifyPropertyChanges], ListBox);\nconst listBoxClasses = {\n  backIcon: 'e-input-group-icon e-back-icon e-icons',\n  filterBarClearIcon: 'e-input-group-icon e-clear-icon e-icons',\n  filterInput: 'e-input-filter',\n  filterParent: 'e-filter-parent',\n  clearIcon: 'e-clear-icon'\n};\n/**\n * export all modules from current location\n */\n\n/**\n * export all modules from current location\n */\n\nexport { incrementalSearch, Search, escapeCharRegExp, resetIncrementalSearchValues, highlightSearch, revertHighlightSearch, FieldSettings, dropDownBaseClasses, DropDownBase, dropDownListClasses, DropDownList, Fields, TreeSettings, DropDownTree, ComboBox, AutoComplete, MultiSelect, CheckBoxSelection, createFloatLabel, updateFloatLabelState, removeFloating, setPlaceHolder, floatLabelFocus, floatLabelBlur, encodePlaceholder, SelectionSettings, ToolbarSettings, ListBox };","map":{"version":3,"names":["Animation","Browser","ChildProperty","Complex","Component","Event","EventHandler","KeyboardEvents","L10n","NotifyPropertyChanges","Property","SanitizeHtmlHelper","addClass","append","attributes","classList","closest","compile","createElement","detach","extend","formatUnit","getComponent","getUniqueID","getValue","isNullOrUndefined","isUndefined","matches","prepend","remove","removeClass","rippleEffect","select","selectAll","setStyleAttribute","setValue","DataManager","DataUtil","Predicate","Query","ListBase","Sortable","cssClass","moveTo","Popup","createSpinner","getZindexPartial","hideSpinner","isCollide","showSpinner","Input","TextBox","Button","createCheckBox","TreeView","queryString","prevString","matches$1","activeClass","prevElementId","incrementalSearch","keyCode","items","selectedIndex","ignoreCase","elementId","String","fromCharCode","setTimeout","index","toLowerCase","i","length","contains","listItems","strLength","text","item","innerText","substr","push","Search","inputVal","searchType","undefined","itemData","queryStr","toLocaleLowerCase","escapeCharRegExp","itemsData","textContent","replace","RegExp","test","value","resetIncrementalSearchValues","highlightSearch","element","query","type","ignoreRegex","replaceQuery","findTextNode","pattern","childNodes","nodeType","trim","nodeValue","innerHTML","revertHighlightSearch","content","contentElement","querySelectorAll","parent","parentNode","document","createTextNode","replaceChild","__decorate","decorators","target","key","desc","c","arguments","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","defineProperty","FieldSettings","prototype","dropDownBaseClasses","root","rtl","selected","hover","noData","fixedHead","focus","li","group","disabled","grouping","ITEMTEMPLATE_PROPERTY","VALUETEMPLATE_PROPERTY","GROUPTEMPLATE_PROPERTY","HEADERTEMPLATE_PROPERTY","FOOTERTEMPLATE_PROPERTY","NORECORDSTEMPLATE_PROPERTY","ACTIONFAILURETEMPLATE_PROPERTY","HIDE_GROUPLIST","DropDownBase","constructor","options","preventChange","isAngular","isPreventChange","isDynamicDataChange","getPropObject","prop","newProp","oldProp","newProperty","oldProperty","propName","data","getValueByText","ignoreAccent","listData","checkValueCase","isTextByValue","dataSource","fields","typeOfData","typeof","checkingAccent","checkIgnoreCase","getItemValue","checkNonIgnoreCase","filter","itemValue","toString","compareValue","dataItem","ignoreDiacritics","textItem","typedText","getFormattedValue","templateCompiler","baseTemplate","checkTemplate","exception","l10nUpdate","actionFailure","ele","getModuleName","ulElement","list","noRecordsTemplate","actionFailureTemplate","template","compiledString","templateId","actionFailureTemplateId","noRecordsTemplateId","tempaltecheck","templateName","noDataCompTemp","isStringTemplate","appendChild","renderReactTemplates","l10nLocale","componentLocale","getLocaleName","locale","getConstant","l10n","liElem","add","getTextByValue","parseFloat","setEnableRtl","enableRtlElements","enableRtl","initialize","bindEvent","id","tagName","jsonElement","createJsonFromElement","setProperties","resetList","Array","renderItemsBySelect","setListData","getPersistData","addOnPersist","setEnabled","setAttribute","enabled","updateDataAttribute","invalidAttr","attr","a","indexOf","name","getAttribute","htmlAttributes","option","getJSONfromOption","optionGroup","label","isHeader","child","updateFields","groupBy","iconCss","field","json","preRender","scrollTimer","isRequested","isDataFetched","itemTemplateId","valueTemplateId","groupTemplateId","headerTemplateId","footerTemplateId","isActive","eventArgs","cancel","trigger","emptyDataRequest","executeQuery","getQuery","then","e","result","renderItems","groupTemplate","renderGroupTemplate","onActionComplete","bindChildItems","catch","onActionFailure","dataManager","executeLocal","localDataArgs","itemTemplate","childElementCount","children","updateDataList","childNode","remainingItems","sortedData","liCollections","updateListValues","raiseDataBound","findListElement","findNode","attribute","liElement","listArr","slice","call","dataBoundEventArgs","spliceData","skip","listElements","templateListItem","createListItemFromArray","listOption","createListItemFromJson","isReact","clearTemplate","fixedHeaderElement","properties","allowCustomValue","querySelector","postRender","listElement","focusItem","selectedItem","listEle","groupTemplateID","headerItems","groupcheck","groupValue","tempHeaders","isGroupChecking","notify","module","createListItems","sortOrder","getSortedDataSource","groupDataSource","take","createList","fieldValues","showIcon","ariaAttributes","groupItemRole","setFloatingHeader","className","style","display","setFixedHeader","zIndex","scrollStop","liHeight","parseInt","getComputedStyle","getValidLi","getPropertyValue","topIndex","Math","round","scrollTop","currentLi","top","templateID","itemcheck","renderContentTemplate","listDataType","isNullData","parentElement","borderWidth","defaultView","isNaN","borderTopWidth","borderBottomWidth","borderLeftWidth","borderRightWidth","liWidth","offsetWidth","width","firstLi","textField","getDataSource","addSorting","getIndexByValue","getItems","dispatchEvent","evt","createEvent","initEvent","setFields","selectData","updateSelectElementData","isFiltering","updateSelection","renderList","render","updateDataSource","props","setUpdateInitial","updateData","j","keys","onPropertyChanged","setZIndex","isEmptyData","attrs","rippleModel","duration","selector","rippleFun","wrapperElement","insertBefore","addItem","itemIndex","newList","itemsCount","selectedItemValue","itemText","itemCheck","addItemTemplate","updateActionCompleteData","updateAddItemList","listGroupItem","tempLi","splice","validationAttribute","hidden","removeAttribute","attributes$$1","itemCount","getDataByValue","destroy","body","__decorate$1","dropDownListClasses","disable","base","input","inputFocus","icon","iconAnimation","device","backIcon","filterBarClearIcon","filterInput","filterParent","mobileFilter","footer","header","clearIcon","clearIconHide","popupFullScreen","disableIcon","hiddenElement","inputObject","container","buttons","DropDownList","isListSearched","valueTempElement","opacity","initializeData","activeIndex","isPopupOpen","isDocumentClick","isInteracted","isFilterFocus","beforePopupOpen","initial","initRemoteRender","isNotSearchList","isTyped","isSelected","preventFocus","preventAutoFill","isValidKey","typedString","isEscapeKey","isPreventBlur","isTabKey","actionCompleteData","isUpdated","actionData","prevSelectPoints","isSelectCustom","isDropDownClick","preventAltUp","isCustomFilter","isSecondClick","previousValue","keyConfigure","tab","enter","escape","end","home","down","up","pageUp","pageDown","open","close","hide","space","popupObj","unWireListEvents","wireListEvents","floatLabelChange","floatLabelType","floatElement","inputWrapper","inputElement","resetHandler","preventDefault","clearAll","resetFocusElement","removeHover","removeSelection","removeFocus","resetSelection","getItemData","onChangeEvent","selectedLI","allowFiltering","cloneNode","setSelection","updateIconState","cloneElements","setHTMLAttributes","htmlAttr","updatedClassValue","split","setEnable","readonly","dataBind","defaultAttr","validateAttr","setPlaceholder","getAriaAttributes","targetElement","tabIndex","hidePopup","preventTabIndex","getNgDirective","getElementByText","getElementByValue","liItem","initValue","updateValues","setHiddenValue","showClearButton","onBlurHandler","relatedTarget","currentTarget","isFilterLayout","activeElement","focusOutAction","focusOut","onFocusOut","clearButton","onFocus","args","event","resetValueHandler","formElement","val","wireEvent","dropDownClick","focusIn","onSearch","bindCommonEvent","isDevice","keyboardModule","keyAction","keyActionHandler","bind","keyConfigs","eventName","mobileKeyActionHandler","bindClearEvent","unBindCommonEvent","onMouseClick","onMouseOver","onMouseLeave","charCode","searchKeyEvent","onServerIncrementalSearch","isValidLI","history","back","delay","closePopup","setHover","hoveredItem","hasAttribute","setScrollPosition","spinnerElement","filterInputObj","preventAction","action","preventHomeEnd","isNavAction","isNavigation","isEditTextBox","isTabAction","updateUpDownAction","pageUpSelection","getPageCount","pageDownSelection","updateHomeEndAction","showPopup","focusDropDown","selectCurrentItem","selectCurrentValueOnTab","focusEle","isSelectFocusItem","startIndex","nextItem","findLi","getBoundingClientRect","height","steps","previousItem","unWireEvent","checkSelector","onDocumentClick","isIE","info","activeStateChange","which","button","proxy","updateSelectedItem","preventSelect","isSelection","selectedData","detachChanges","selectEventCallback","setSelectOptions","previousItemData","focusedItem","activeItem","valueTemplate","setValueTemplate","previousSibling","isFilterElement","clearElement","removeProperty","previousSelectedLI","dropdownCompiler","dropdownTemplate","valuecheck","valueCompTemp","selectedItems","dataValue","dataText","eve","detachChangeEvent","defineProperties","enumerable","preItems","selectedElement","onFilterUp","ctrlKey","searchLists","onFilterDown","getSelectionPoints","removeFillSelection","selection","setSelectionRange","filterQuery","clone","filterType","dataType","where","start","abs","selectionStart","selectionEnd","visibility","preventDefaultAction","filteringAction","baseEventArgs","focusIndexItem","setSearchBox","popupElement","createInput","placeholder","filterBarPlaceholder","clearIconElement","clearText","searchKeyModule","onInput","pasteHandler","renderPopup","checkField","checkVal","some","x","updateActionCompleteDataValues","addNewItem","newElement","isExist","actionCompleteDataUpdate","highlightedItem","refreshPopup","popupEle","searchBox","listHeight","popupHeight","headerTemplate","setHeaderTemplate","footerTemplate","setFooterTemplate","searchBoxHeight","maxHeight","offsetValue","left","getOffsetValue","firstItem","isEmptyList","textIndent","paddingLeft","getFocusElement","createPopup","checkCollision","collision","X","Y","position","setSearchBoxPosition","backIconElement","clickOnBackIcon","scrollParentElements","getScrollableParent","scrollHandler","listScroll","inputParent","animModel","popupInstance","popup","animation","show","destroyPopup","marginTop","resolveCollision","popupStyles","borderTop","borderBottom","setPopupPosition","setWidth","targetType","relateTo","offsetY","offsetX","isResetItem","actionList","targetExitViewport","window","innerHeight","border","popupOffset","lastItem","offsetHeight","offsetTop","lastItemOffsetValue","count","paddingBottom","inputHeight","popupWidth","inputWidth","scrollBottom","isInitial","currentOffset","nextBottom","nextOffset","paddingTop","boxRange","isPopupButton","blur","setEleWidth","match","scrollableParentElements","fixedHeader","removeChild","role","updatedCssClassValues","setReadOnly","selectElement","onselect","stopImmediatePropagation","onchange","renderComplete","footercheck","footerCompTemp","headercheck","headerCompTemp","contentEle","setOldText","setOldValue","refreshPosition","checkData","isChangeValue","isChangeText","checkCustomValue","updateInputFields","setReadonly","setCssClass","checkValidLi","setSelectionData","listLength","removeFloating","addFloating","setClearButton","ddlProps","newClass","oldClass","invokeRenderPopup","onpopstate","pushState","renderHightSearch","isSelectVal","isFocused","attrArray","clear","__decorate$2","RTL","DROPDOWNTREE","HIDDENELEMENT","DROPDOWNICON","SHOW_CHIP","SHOW_CLEAR","SHOW_DD_ICON","CHIP_INPUT","INPUTFOCUS","INPUTGROUP","ICONANIMATION","CLOSEICON_CLASS","CHIP_WRAPPER","CHIP_COLLECTION","CHIP","CHIP_CONTENT","CHIP_CLOSE","HIDEICON","DDTHIDEICON","POPUP_CLASS","PARENTITEM","CONTENT","DROPDOWN","DISABLED","ICONS","CHECKALLPARENT","CHECKALLHIDE","BIGGER","SMALL","ALLTEXT","CHECKBOXFRAME","CHECK","CHECKBOXWRAP","FILTERWRAP","DDTICON","FOOTER","HEADER","NODATACONTAINER","NODATA","HEADERTEMPLATE","FOOTERTEMPLATE","NORECORDSTEMPLATE","ACTIONFAILURETEMPLATE","CUSTOMTEMPLATE","REMAIN_WRAPPER","OVERFLOW_VIEW","SHOW_TEXT","TOTAL_COUNT_WRAPPER","REMAIN_COUNT","Fields","TreeSettings","DropDownTree","filterTimer","isFilteredData","isFilterRestore","filterDelayTime","isClicked","keyEntity","isFirstRender","isInitialized","currentText","currentValue","oldValue","removeValue","selectedText","treeItems","isNodeSelected","isDynamicChange","clearIconWidth","customTemplateId","altUp","altDown","shiftTab","moveDown","moveLeft","moveRight","moveUp","ctrlDown","ctrlUp","ctrlEnter","ctrlHome","ctrlEnd","shiftDown","shiftUp","shiftEnter","shiftHome","shiftEnd","csDown","csUp","csEnter","csHome","csEnd","ctrlA","isTree","popupDiv","ensureAutoCheck","inputEle","inputObj","showDropDownIcon","getDirective","createHiddenElement","createClearIcon","setElementWidth","setAttributes","tree","wireTreeEvents","renderTree","isRemoteData","allowMultiSelection","showCheckBox","mode","createChip","wrapText","overFlowWrapper","setTreeValue","setTreeText","updateHiddenValue","setSelectedValue","updateView","wireEvents","firstUl","treeObj","hasTemplate","customTemplate","treeSettings","autoCheck","hideCheckAll","flag","checkAllEle","renderFilter","filterContainer","autocomplete","filterObj","filterChangeHandler","appendTo","clearTimeout","filterHandler","treeData","getTreeData","filterFields","cloneFields","treeDataType","selfReferencefilter","nestedFilter","getTreeFields","filteredFields","matchedDataSource","filteredChild","nestedChildFilter","node","isMatchedNode","matchedChildren","filteredItems","assign","matchedData","parentId","parentValue","checkValue","mouseIn","overAllClear","windowResize","treeAction","wireCheckAllWrapperEvents","checkAllParent","checkAllAction","unWireEvents","isClearButtonClick","showOverAllClear","isValue","chipWrapper","changeOnBlur","triggerChangeEvent","updateOverFlowView","ensurePlaceHolder","isEqual","ddtCompareValues","isChipDelete","newValue","isValid","observedArgs","isValueChange","keyEventArgs","showSelectAll","clickHandler","resetValue","overAllContainer","temp","tempData","tempIndex","wrapperleng","remaining","downIconWidth","overflowCountTemplate","totalCountTemplate","remainContent","totalContent","remainElement","remainSize","delimiterChar","getOverflowVal","textArr","pop","join","chips","lastChild","updateRemainTemplate","updateDelimMode","firstChild","getSelectedData","loadOnDemand","chipCollection","getValidMode","createSelectAllWrapper","selectAllSpan","touchClass","checkBoxElement","setLocale","firstElementChild","lastElementChild","checkWrapper","checkElement","changeState","wrapper","state","ariaState","frameSpan","getElementsByClassName","isReverseUpdate","checkAll","uncheckAll","setMultiSelect","unSelect","selectAllText","unSelectAllText","setValidValue","valArr","selectedNodes","updateMode","checkedNodes","updateSelectedValues","difference","givenText","getNestedItems","newData","objlen","dataId","childData","getChildType","mapper","nodeSelected","onNodeSelected","nodeChecked","onNodeChecked","nodeChecking","beforeCheck","nodeClicked","onNodeClicked","dataBound","OnDataBound","expandOn","nodeSelecting","onBeforeSelect","nodeTemplate","isCancelled","portals","concat","updatePopupHeight","checkSelectAll","wrap","getHeight","ddElement","documentElement","clientHeight","isFilter","isFooter","isScroller","getTreeDataType","expandAll","restoreFilterSelection","elements","setEnableRTL","clonedField","cloneChildField","hasChildren","expanded","imageUrl","tableName","tooltip","treeFields","parentID","getTreeChildren","isChecked","getActualProperties","childFields","ds","len","updateTemplate","getEventArgs","nodeData","getNode","getNodeDetails","removeSelectedData","nodes","updateClearButton","nextSibling","chipClose","updateDropDownIconState","spinIcon","appendSpan","ensureClearIconPosition","setMultiSelectValue","newValues","selectedValues","ddtValue","checkSelection","getNodeData","childItems","getChildNodeData","obj","newChildItems","childNodeData","getChildMapperFields","muteOnChange","textValue","hiddenInputValue","setChipValues","setTagValues","chip","chipContent","removeChip","templatestring","templateComplier","tempArr","setSelectAllWrapper","updateOverflowWrapper","clearCheckAll","selectAllItems","arr","updateTreeSettings","updateValue","updateCheckBoxState","checkBox","noRecord","updateRecordTemplate","updateMultiSelection","updateOption","updateAllowFiltering","destroyFilter","updateFilterPlaceHolder","updateText","updateModelMode","validMode","overFlow","ensureVisible","getData","__decorate$3","SPINNER_CLASS","inputObject$1","ComboBox","preventBlur","targetFocus","inputValue","customValue","allowCustom","valueMuteChange","setHoverList","inlineSearch","autofill","setAutoFill","isHover","currentFillValue","isAndroidAutoFill","setAutoFillSelection","isAndroid","currentPoints","prevEnd","curEnd","prevStart","curStart","property","isKeyNavigate","updateCustomValueCallback","changeData","comboProps","isEscape","searchItem","__decorate$4","AutoComplete","isFiltered","searchList","mapping","suggestionCount","queryElements","queries","fn","filterAction","minLength","postBackAction","fieldsSettings","itemCreated","highlight","apply","showPopupButton","atcProps","isHighlight","FLOATLINE","FLOATTEXT","LABELTOP","LABELBOTTOM","createFloatLabel","overAllWrapper","searchWrapper","floatLinelement","floatLabelElement","encodePlaceholder","updateFloatLabelState","componentWrapper","placeholderElement","floatLine","placeholderText","setPlaceHolder","floatLabelFocus","floatLabelBlur","spanElement","hiddenInput","__decorate$5","FOCUS","DISABLED$1","OVER_ALL_WRAPPER","ELEMENT_WRAPPER","ELEMENT_MOBILE_WRAPPER","HIDE_LIST","DELIMITER_VIEW","CHIP_WRAPPER$1","CHIP$1","CHIP_CONTENT$1","CHIP_CLOSE$1","CHIP_SELECTED","SEARCHBOX_WRAPPER","DELIMITER_VIEW_WRAPPER","ZERO_SIZE","REMAIN_WRAPPER$1","CLOSEICON_CLASS$1","DELIMITER_WRAPPER","POPUP_WRAPPER","INPUT_ELEMENT","RTL_CLASS","CLOSE_ICON_HIDE","MOBILE_CHIP","FOOTER$1","HEADER$1","DISABLE_ICON","SPINNER_CLASS$1","HIDDEN_ELEMENT","dropdownIcon","TOTAL_COUNT_WRAPPER$1","BOX_ELEMENT","FILTERPARENT","CUSTOM_WIDTH","FILTERINPUT","MultiSelect","previousFilterText","selectAllEventData","selectAllEventEle","scrollFocusStatus","keyDownStatus","enableRTL","requiredModules","modules","enableGroupCheckBox","prevOnChange","isProtectedOnChange","enableSelectionOrder","hideSelectedItem","closePopupOnSelect","member","updateHTMLAttribute","popupWrapper","enable","refreshPlaceHolder","containerAttr","updateReadonly","updateCssClass","updateOldPropCssClass","onPopupShown","focusAtFirstListItem","updateListItems","mainList","isFirstClick","loadTemplate","mainListItems","findGroupStart","deselectHeader","refreshListItems","valueEle","addListFocus","focusAtLastListItem","updateListARIA","disableStatus","ensureAriaDisabled","status","removelastSelection","chipCollectionWrapper","tempValues","removeChipSelection","updateDelimeter","makeTextBoxEmpty","refreshSelection","checkPlaceholderSize","targetInputElement","getForQuery","predicate","or","checkEle","updateActionList","mainData","mainListCollection","remoteCustomValue","checkForCustomValue","tempQuery","unwireListEvents","setInitialValue","selectAllAction","setDynValue","initialTextUpdate","initialValueUpdate","initialUpdate","updateValueState","previousElementSibling","nextElementSibling","hideGroupItem","ariaValue","checkMaxSelection","element1","temp1","groupItemLength","listItem","searchCount","searchActiveCount","maximumSelectionLength","openClick","openOnClick","keyUp","char","isWordCharacter","expandTextbox","search","remoteFilterAction","dataUpdater","backCommand","dataChecks","customData","random","JSON","parse","stringify","wrapperClick","isDocClickFromCheck","addTagOnBlur","listLiElement","allowChipAddition","updateListSelection","updateDelimView","focused","removeChipFocus","refreshInputHight","dropIcon","marginRight","setPlaceholderSize","validateValues","sort","newVal","oldVal","initStatus","updateTempValue","getPagingCount","collection","focusInHandler","showDelimWrapper","viewWrapper","delimiterWrapper","hideDelimWrapper","size","mobFilter","calcPopupWidth","checkTextLength","popupKeyActions","updateAriaAttribute","homeNavigation","isHome","scrollEle","onKeyDown","altKey","arrowUp","arrowDown","selectByKey","spaceKeySelection","escapeAction","keyNavigation","checkBackCommand","moveByList","focuseElem","moveBy","removeSelectedChip","selectListByKey","hideOverAllClear","limit","selectAllItem","selectedElem","addChipSelection","moveByTop","updateCheck","chipClick","elem","onChipRemove","customVal","setFloatLabelType","removeAllItems","isClearAll","mainElement","removeVal","invokeCheckboxSelection","updateMainList","updateChipStatus","isSelectAll","targetEle","removeIndex","hideElement","clearAllCallback","element2","addValue","addListSelection","addChip","dispatchSelect","isNotTrigger","isServerRendered","updateListSelectEventCallback","getChip","closeElements","onMobileChipInteraction","chipElem","multiCompiler","multiselectTemplate","enableHtmlSanitizer","setClass","classes","mouseOut","fieldProperty","listCurrentOptions","checkboxFilter","overAllHeight","selectAllHeight","unwireScrollEvents","checkboxFilterInput","wireScrollEvents","onListMouseDown","textVal","delim","listValue","updateWrapperText","addValidInputClass","removeListSelection","indexItem","noDataEle","isDynamicGroupItemUpdate","isReactTemplateUpdate","isAngularTemplateUpdate","fieldValue","selectItems","mainlist","addListHover","ariaCheck","delimChar","headerLi","liChecked","liUnchecked","groupValues","findGroupAttrtibutes","updateCheckBox","checked","unChecked","groupHeader","filterClear","wrapperType","wrapperData","sanitize","raminElement","remainCompildTemp","checkClearIconWidth","paddingRight","totalWidth","updateRemainWidth","updateRemainingText","remainTemp","totalTemp","newTemp","selectionLimit","focusedElement","textboxValueUpdate","beforeSelectArgs","preventSelectEvent","updatedataValueItems","updateHiddenElement","hiddenValue","wrapperText","map","isRemoveAll","onLoadSelect","updateVal","dropDownIcon","reInitializePoup","msProps","presentItemValue","addNonPresentItems","mainLiLength","liLength","styles","spellcheck","tabindex","checkInitialValue","isData","optionsElement","valueCol","textCol","optionsLen","opt","checkAutoFocus","ICON","CHECKBOXFRAME$1","CHECK$1","CHECKBOXWRAP$1","INDETERMINATE","searchBackIcon","FOCUS$1","CheckBoxSelection","activeLi","activeEle","removeEventListener","addEventListener","isDestroyed","on","listSelection","setSelectAll","setDeviceSearchBox","getFocus","setReorder","getActiveList","checboxCreate","setPopupFullScreen","off","checkboxEle","frameElm","checkboxWrapper","selectAll$$1","validateCheckNode","checkWrap","isCheck","isPrevent","activeLiCount","remLi","ulEle","__decorate$6","ListBox_1","SelectionSettings","ToolbarSettings","ListBox","isDataSourceUpdate","inputString","initLoad","isCustomFiltering","initialSelectedOptions","initWrapper","hiddenSelect","selectionSettings","updateSelectionSettings","showCheckbox","l10nSelect","checkBoxSelectionModule","initDraggable","allowDragAndDrop","scope","itemClass","dragStart","triggerDragStart","drag","triggerDrag","beforeDrop","beforeDragEnd","drop","dragEnd","placeHolder","helper","sender","refEle","jsonData","initToolbar","pos","toolbarSettings","prevScope","toolElem","createButtons","updateToolBarState","tBListBox","getElementById","btn","title","moveFrom","moveAllTo","moveAllFrom","forEach","required","setHeight","spinner","refreshClearIcon","KeyUp","listBoxClasses","searchEle","noRecElem","filterWireEvents","initToolbarAndStyles","setCheckboxPosition","setFiltering","filterElem","txtLength","scopedLB","badge","getDragArgs","dragSelected","isIos","overflow","dragEventArgs","allowDragAll","scrollParent","boundRect","scrollMoved","y","pageY","listObj","dragValue","droppedElement","getDataByValues","liColl","droppedData","selectedOptions","dropValue","getArgs","sourceArgs","previousData","destArgs","dragArgs","source","previousIndex","currentIndex","sourceArgs1","currentData","destination","ul","toSortIdx","toIdx","getCurIdx","rIdx","jsonIdx","sIdx","idx","fLiColl","currIdx","fListData","fSortData","srcIdx","jsonSrcIdx","sortIdx","destIdx","liCollElem","removeSelected","sourceElem","sortable","placeHolderElement","dragArgs1","destElem","elems","triggerBeforeItemRender","curData","enableItems","updateSelectedOptions","addItems","removeItems","removeItem","objValue","dupData","itemIdx","removeIdxes","removeLiIdxes","k","updateLiCollection","getElemByValue","getSelectedItems","moveUpDown","targetId","tlistbox","getScopedListBox","moveData","moveAllData","getDataList","getSortedList","sortData","liEle","getElementsByTagName","dataValue1","dataValue2","triggerChange","ulList","mainCount","ulEleCount","listindex","valueindex","form","keyDownHandler","focusOutHandler","wireToolbarEvent","formResetHandler","getToolElem","toolbarClickHandler","unwireEvents","clearFilterIconElem","selectHandler","liItems","isKey","isSelect","currSelIdx","selectedLi","shiftKey","min","prevSelIdx","max","liDataValue","value1","values","selectedLis","getDataByElements","getDataByElems","toolbarAction","moveItemTo","moveItemFrom","moveAllItemTo","moveAllItemFrom","isUp","tempItems","reverse","jsonToIdx","fListBox","tListBox","dataIdx","tListData","tSortData","fliCollections","dataLiIdx","tliCollections","isRefresh","rLiCollection","n1","n2","toColl","tJsonData","selectNextList","inst","childCnt","liIdx","validIdx","getValidIndex","Number","fromIdx","cbox","getGrabbedItems","isDragEnd","stopPropagation","code","upDownKeyHandler","defaultIdx","fliIdx","fli","cli","selectedidx","sidx","eidx","eventArgsData","cul","updateSelectTag","clearSelection","dvalue","isText","liselect","getSelectTag","checkDisabledState","listWrap","checkboxPosition","liCollLen","l10nShow","l10nSel"],"sources":["D:/StageCap2022/e-learningProject__frontend/frontend/node_modules/@syncfusion/ej2-dropdowns/dist/es6/ej2-dropdowns.es2015.js"],"sourcesContent":["import { Animation, Browser, ChildProperty, Complex, Component, Event, EventHandler, KeyboardEvents, L10n, NotifyPropertyChanges, Property, SanitizeHtmlHelper, addClass, append, attributes, classList, closest, compile, createElement, detach, extend, formatUnit, getComponent, getUniqueID, getValue, isNullOrUndefined, isUndefined, matches, prepend, remove, removeClass, rippleEffect, select, selectAll, setStyleAttribute, setValue } from '@syncfusion/ej2-base';\nimport { DataManager, DataUtil, Predicate, Query } from '@syncfusion/ej2-data';\nimport { ListBase, Sortable, cssClass, moveTo } from '@syncfusion/ej2-lists';\nimport { Popup, createSpinner, getZindexPartial, hideSpinner, isCollide, showSpinner } from '@syncfusion/ej2-popups';\nimport { Input, TextBox } from '@syncfusion/ej2-inputs';\nimport { Button, createCheckBox } from '@syncfusion/ej2-buttons';\nimport { TreeView } from '@syncfusion/ej2-navigations';\n\n/**\n * IncrementalSearch module file\n */\nlet queryString = '';\nlet prevString = '';\nlet matches$1 = [];\nconst activeClass = 'e-active';\nlet prevElementId = '';\n/**\n * Search and focus the list item based on key code matches with list text content\n *\n * @param  { number } keyCode - Specifies the key code which pressed on keyboard events.\n * @param  { HTMLElement[]} items - Specifies an array of HTMLElement, from which matches find has done.\n * @param { number } selectedIndex - Specifies the selected item in list item, so that search will happen\n * after selected item otherwise it will do from initial.\n * @param  { boolean } ignoreCase - Specifies the case consideration when search has done.\n * @param {string} elementId - Specifies the list element ID.\n * @returns {Element} Returns list item based on key code matches with list text content.\n */\nfunction incrementalSearch(keyCode, items, selectedIndex, ignoreCase, elementId) {\n    queryString += String.fromCharCode(keyCode);\n    setTimeout(() => {\n        queryString = '';\n    }, 1000);\n    let index;\n    queryString = ignoreCase ? queryString.toLowerCase() : queryString;\n    if (prevElementId === elementId && prevString === queryString) {\n        for (let i = 0; i < matches$1.length; i++) {\n            if (matches$1[i].classList.contains(activeClass)) {\n                index = i;\n                break;\n            }\n        }\n        index = index + 1;\n        return matches$1[index] ? matches$1[index] : matches$1[0];\n    }\n    else {\n        const listItems = items;\n        const strLength = queryString.length;\n        let text;\n        let item;\n        selectedIndex = selectedIndex ? selectedIndex + 1 : 0;\n        let i = selectedIndex;\n        matches$1 = [];\n        do {\n            if (i === listItems.length) {\n                i = -1;\n            }\n            if (i === -1) {\n                index = 0;\n            }\n            else {\n                index = i;\n            }\n            item = listItems[index];\n            text = ignoreCase ? item.innerText.toLowerCase() : item.innerText;\n            if (text.substr(0, strLength) === queryString) {\n                matches$1.push(listItems[index]);\n            }\n            i++;\n        } while (i !== selectedIndex);\n        prevString = queryString;\n        prevElementId = elementId;\n        return matches$1[0];\n    }\n}\n/**\n * Search the list item based on given input value matches with search type.\n *\n * @param {string} inputVal - Specifies the given input value.\n * @param {HTMLElement[]} items - Specifies the list items.\n * @param {SearchType} searchType - Specifies the filter type.\n * @param {boolean} ignoreCase - Specifies the case sensitive option for search operation.\n * @returns {Element | number} Returns the search matched items.\n */\nfunction Search(inputVal, items, searchType, ignoreCase) {\n    const listItems = items;\n    ignoreCase = ignoreCase !== undefined && ignoreCase !== null ? ignoreCase : true;\n    const itemData = { item: null, index: null };\n    if (inputVal && inputVal.length) {\n        const strLength = inputVal.length;\n        let queryStr = ignoreCase ? inputVal.toLocaleLowerCase() : inputVal;\n        queryStr = escapeCharRegExp(queryStr);\n        for (let i = 0, itemsData = listItems; i < itemsData.length; i++) {\n            const item = itemsData[i];\n            const text = (ignoreCase ? item.textContent.toLocaleLowerCase() : item.textContent).replace(/^\\s+|\\s+$/g, '');\n            if ((searchType === 'Equal' && text === queryStr) || (searchType === 'StartsWith' && text.substr(0, strLength) === queryStr) || (searchType === 'EndsWith' && text.substr(text.length - queryStr.length) === queryStr) || (searchType === 'Contains' && new RegExp(queryStr, \"g\").test(text))) {\n                itemData.item = item;\n                itemData.index = i;\n                return { item: item, index: i };\n            }\n        }\n        return itemData;\n    }\n    return itemData;\n}\nfunction escapeCharRegExp(value) {\n    return value.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\nfunction resetIncrementalSearchValues(elementId) {\n    if (prevElementId === elementId) {\n        prevElementId = '';\n        prevString = '';\n        queryString = '';\n        matches$1 = [];\n    }\n}\n\n/* eslint-disable jsdoc/require-param, valid-jsdoc */\n/**\n * Function helps to find which highlightSearch is to call based on your data.\n *\n * @param  {HTMLElement} element - Specifies an li element.\n * @param  {string} query - Specifies the string to be highlighted.\n * @param  {boolean} ignoreCase - Specifies the ignoreCase option.\n * @param  {HightLightType} type - Specifies the type of highlight.\n * @returns {void}\n */\nfunction highlightSearch(element, query, ignoreCase, type) {\n    if (query === '') {\n        return;\n    }\n    else {\n        const ignoreRegex = ignoreCase ? 'gim' : 'gm';\n        // eslint-disable-next-line\n        query = /^[a-zA-Z0-9- ]*$/.test(query) ? query : query.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\n        const replaceQuery = type === 'StartsWith' ? '^(' + query + ')' : type === 'EndsWith' ?\n            '(' + query + ')$' : '(' + query + ')';\n        findTextNode(element, new RegExp(replaceQuery, ignoreRegex));\n    }\n}\n/* eslint-enable jsdoc/require-param, valid-jsdoc */\n/**\n *\n * @param {HTMLElement} element - Specifies the element.\n * @param {RegExp} pattern - Specifies the regex to match the searched text.\n * @returns {void}\n */\nfunction findTextNode(element, pattern) {\n    for (let index = 0; element.childNodes && (index < element.childNodes.length); index++) {\n        if (element.childNodes[index].nodeType === 3 && element.childNodes[index].textContent.trim() !== '') {\n            const value = element.childNodes[index].nodeValue.trim().replace(pattern, '<span class=\"e-highlight\">$1</span>');\n            element.childNodes[index].nodeValue = '';\n            element.innerHTML = element.innerHTML.trim() + value;\n            break;\n        }\n        else {\n            findTextNode(element.childNodes[index], pattern);\n        }\n    }\n}\n/**\n * Function helps to remove highlighted element based on your data.\n *\n * @param  {HTMLElement} content - Specifies an content element.\n * @returns {void}\n */\nfunction revertHighlightSearch(content) {\n    const contentElement = content.querySelectorAll('.e-highlight');\n    for (let i = contentElement.length - 1; i >= 0; i--) {\n        const parent = contentElement[i].parentNode;\n        const text = document.createTextNode(contentElement[i].textContent);\n        parent.replaceChild(text, contentElement[i]);\n    }\n}\n\n/**\n * Common source\n */\n\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nclass FieldSettings extends ChildProperty {\n}\n__decorate([\n    Property()\n], FieldSettings.prototype, \"text\", void 0);\n__decorate([\n    Property()\n], FieldSettings.prototype, \"value\", void 0);\n__decorate([\n    Property()\n], FieldSettings.prototype, \"iconCss\", void 0);\n__decorate([\n    Property()\n], FieldSettings.prototype, \"groupBy\", void 0);\n__decorate([\n    Property()\n], FieldSettings.prototype, \"htmlAttributes\", void 0);\nconst dropDownBaseClasses = {\n    root: 'e-dropdownbase',\n    rtl: 'e-rtl',\n    content: 'e-content',\n    selected: 'e-active',\n    hover: 'e-hover',\n    noData: 'e-nodata',\n    fixedHead: 'e-fixed-head',\n    focus: 'e-item-focus',\n    li: 'e-list-item',\n    group: 'e-list-group-item',\n    disabled: 'e-disabled',\n    grouping: 'e-dd-group'\n};\nconst ITEMTEMPLATE_PROPERTY = 'ItemTemplate';\nconst VALUETEMPLATE_PROPERTY = 'ValueTemplate';\nconst GROUPTEMPLATE_PROPERTY = 'GroupTemplate';\nconst HEADERTEMPLATE_PROPERTY = 'HeaderTemplate';\nconst FOOTERTEMPLATE_PROPERTY = 'FooterTemplate';\nconst NORECORDSTEMPLATE_PROPERTY = 'NoRecordsTemplate';\nconst ACTIONFAILURETEMPLATE_PROPERTY = 'ActionFailureTemplate';\nconst HIDE_GROUPLIST = 'e-hide-group-header';\n/**\n * DropDownBase component will generate the list items based on given data and act as base class to drop-down related components\n */\nlet DropDownBase = class DropDownBase extends Component {\n    /**\n     * * Constructor for DropDownBase class\n     *\n     * @param {DropDownBaseModel} options - Specifies the DropDownBase model.\n     * @param {string | HTMLElement} element - Specifies the element to render as component.\n     * @private\n     */\n    constructor(options, element) {\n        super(options, element);\n        this.preventChange = false;\n        this.isAngular = false;\n        this.isPreventChange = false;\n        this.isDynamicDataChange = false;\n    }\n    getPropObject(prop, newProp, oldProp) {\n        const newProperty = new Object();\n        const oldProperty = new Object();\n        const propName = (prop) => {\n            return prop;\n        };\n        newProperty[propName(prop)] = newProp[propName(prop)];\n        oldProperty[propName(prop)] = oldProp[propName(prop)];\n        const data = new Object();\n        data.newProperty = newProperty;\n        data.oldProperty = oldProperty;\n        return data;\n    }\n    getValueByText(text, ignoreCase, ignoreAccent) {\n        let value = null;\n        if (!isNullOrUndefined(this.listData)) {\n            if (ignoreCase) {\n                value = this.checkValueCase(text, true, ignoreAccent);\n            }\n            else {\n                value = this.checkValueCase(text, false, ignoreAccent);\n            }\n        }\n        return value;\n    }\n    checkValueCase(text, ignoreCase, ignoreAccent, isTextByValue) {\n        let value = null;\n        if (isTextByValue) {\n            value = text;\n        }\n        const dataSource = this.listData;\n        const fields = this.fields;\n        const type = this.typeOfData(dataSource).typeof;\n        if (type === 'string' || type === 'number' || type === 'boolean') {\n            for (const item of dataSource) {\n                if (!isNullOrUndefined(item)) {\n                    if (ignoreAccent) {\n                        value = this.checkingAccent(String(item), text, ignoreCase);\n                    }\n                    else {\n                        if (ignoreCase) {\n                            if (this.checkIgnoreCase(String(item), text)) {\n                                value = this.getItemValue(String(item), text, ignoreCase);\n                            }\n                        }\n                        else {\n                            if (this.checkNonIgnoreCase(String(item), text)) {\n                                value = this.getItemValue(String(item), text, ignoreCase, isTextByValue);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            if (ignoreCase) {\n                dataSource.filter((item) => {\n                    const itemValue = getValue(fields.value, item);\n                    if (!isNullOrUndefined(itemValue) && this.checkIgnoreCase(getValue(fields.text, item).toString(), text)) {\n                        value = getValue(fields.value, item);\n                    }\n                });\n            }\n            else {\n                if (isTextByValue) {\n                    let compareValue = null;\n                    compareValue = value;\n                    dataSource.filter((item) => {\n                        const itemValue = getValue(fields.value, item);\n                        if (!isNullOrUndefined(itemValue) && !isNullOrUndefined(value) && itemValue.toString() === compareValue.toString()) {\n                            value = getValue(fields.text, item);\n                        }\n                    });\n                }\n                else {\n                    dataSource.filter((item) => {\n                        if (this.checkNonIgnoreCase(getValue(fields.text, item), text)) {\n                            value = getValue(fields.value, item);\n                        }\n                    });\n                }\n            }\n        }\n        return value;\n    }\n    checkingAccent(item, text, ignoreCase) {\n        const dataItem = DataUtil.ignoreDiacritics(String(item));\n        const textItem = DataUtil.ignoreDiacritics(text.toString());\n        let value = null;\n        if (ignoreCase) {\n            if (this.checkIgnoreCase(dataItem, textItem)) {\n                value = this.getItemValue(String(item), text, ignoreCase);\n            }\n        }\n        else {\n            if (this.checkNonIgnoreCase(String(item), text)) {\n                value = this.getItemValue(String(item), text, ignoreCase);\n            }\n        }\n        return value;\n    }\n    checkIgnoreCase(item, text) {\n        return String(item).toLowerCase() === text.toString().toLowerCase() ? true : false;\n    }\n    checkNonIgnoreCase(item, text) {\n        return String(item) === text.toString() ? true : false;\n    }\n    getItemValue(dataItem, typedText, ignoreCase, isTextByValue) {\n        let value = null;\n        const dataSource = this.listData;\n        const type = this.typeOfData(dataSource).typeof;\n        if (isTextByValue) {\n            value = dataItem.toString();\n        }\n        else {\n            if (ignoreCase) {\n                value = type === 'string' ? String(dataItem) : this.getFormattedValue(String(dataItem));\n            }\n            else {\n                value = type === 'string' ? typedText : this.getFormattedValue(typedText);\n            }\n        }\n        return value;\n    }\n    templateCompiler(baseTemplate) {\n        let checkTemplate = false;\n        if (baseTemplate) {\n            try {\n                checkTemplate = (selectAll(baseTemplate, document).length) ? true : false;\n            }\n            catch (exception) {\n                checkTemplate = false;\n            }\n        }\n        return checkTemplate;\n    }\n    l10nUpdate(actionFailure) {\n        const ele = this.getModuleName() === 'listbox' ? this.ulElement : this.list;\n        if (this.noRecordsTemplate !== 'No records found' || this.actionFailureTemplate !== 'Request failed') {\n            const template = actionFailure ? this.actionFailureTemplate : this.noRecordsTemplate;\n            let compiledString;\n            const templateId = actionFailure ? this.actionFailureTemplateId : this.noRecordsTemplateId;\n            ele.innerHTML = '';\n            const tempaltecheck = this.templateCompiler(template);\n            if (tempaltecheck) {\n                compiledString = compile(select(template, document).innerHTML.trim());\n            }\n            else {\n                compiledString = compile(template);\n            }\n            const templateName = actionFailure ? 'actionFailureTemplate' : 'noRecordsTemplate';\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            const noDataCompTemp = compiledString({}, this, templateName, templateId, this.isStringTemplate, null, ele);\n            if (noDataCompTemp && noDataCompTemp.length > 0) {\n                for (let i = 0; i < noDataCompTemp.length; i++) {\n                    ele.appendChild(noDataCompTemp[i]);\n                }\n            }\n            this.renderReactTemplates();\n        }\n        else {\n            const l10nLocale = { noRecordsTemplate: 'No records found', actionFailureTemplate: 'Request failed' };\n            const componentLocale = new L10n(this.getLocaleName(), {}, this.locale);\n            if (componentLocale.getConstant('actionFailureTemplate') !== '') {\n                this.l10n = componentLocale;\n            }\n            else {\n                this.l10n = new L10n(this.getModuleName() === 'listbox' ? 'listbox' : 'dropdowns', l10nLocale, this.locale);\n            }\n            const content = actionFailure ?\n                this.l10n.getConstant('actionFailureTemplate') : this.l10n.getConstant('noRecordsTemplate');\n            if (this.getModuleName() === 'listbox') {\n                const liElem = this.createElement('li');\n                liElem.textContent = content;\n                ele.appendChild(liElem);\n                liElem.classList.add('e-list-nrt');\n            }\n            else {\n                ele.innerHTML = content;\n            }\n        }\n    }\n    getLocaleName() {\n        return 'drop-down-base';\n    }\n    getTextByValue(value) {\n        const text = this.checkValueCase(value, false, false, true);\n        return text;\n    }\n    getFormattedValue(value) {\n        if (this.listData && this.listData.length) {\n            const item = this.typeOfData(this.listData);\n            if (typeof getValue((this.fields.value ? this.fields.value : 'value'), item.item) === 'number'\n                || item.typeof === 'number') {\n                return parseFloat(value);\n            }\n            if (typeof getValue((this.fields.value ? this.fields.value : 'value'), item.item) === 'boolean'\n                || item.typeof === 'boolean') {\n                return ((value === 'true') || ('' + value === 'true'));\n            }\n        }\n        return value;\n    }\n    /**\n     * Sets RTL to dropdownbase wrapper\n     *\n     * @returns {void}\n     */\n    setEnableRtl() {\n        if (this.list) {\n            this.enableRtlElements.push(this.list);\n        }\n        if (this.enableRtl) {\n            addClass(this.enableRtlElements, dropDownBaseClasses.rtl);\n        }\n        else {\n            removeClass(this.enableRtlElements, dropDownBaseClasses.rtl);\n        }\n    }\n    /**\n     * Initialize the Component.\n     *\n     * @returns {void}\n     */\n    initialize() {\n        this.bindEvent = true;\n        this.actionFailureTemplateId = `${this.element.id}${ACTIONFAILURETEMPLATE_PROPERTY}`;\n        if (this.element.tagName === 'UL') {\n            const jsonElement = ListBase.createJsonFromElement(this.element);\n            this.setProperties({ fields: { text: 'text', value: 'text' } }, true);\n            this.resetList(jsonElement, this.fields);\n        }\n        else if (this.element.tagName === 'SELECT') {\n            const dataSource = this.dataSource instanceof Array ? (this.dataSource.length > 0 ? true : false)\n                : !isNullOrUndefined(this.dataSource) ? true : false;\n            if (!dataSource) {\n                this.renderItemsBySelect();\n            }\n            else if (this.isDynamicDataChange) {\n                this.setListData(this.dataSource, this.fields, this.query);\n            }\n        }\n        else {\n            this.setListData(this.dataSource, this.fields, this.query);\n        }\n    }\n    /**\n     * Get the properties to be maintained in persisted state.\n     *\n     * @returns {string} Returns the persisted data of the component.\n     */\n    getPersistData() {\n        return this.addOnPersist([]);\n    }\n    /**\n     * Sets the enabled state to DropDownBase.\n     *\n     * @returns {void}\n     */\n    setEnabled() {\n        this.element.setAttribute('aria-disabled', (this.enabled) ? 'false' : 'true');\n    }\n    /**\n     * Sets the enabled state to DropDownBase.\n     *\n     * @param {string} value - Specifies the attribute values to add on the input element.\n     * @returns {void}\n     */\n    updateDataAttribute(value) {\n        const invalidAttr = ['class', 'style', 'id', 'type'];\n        const attr = {};\n        for (let a = 0; a < this.element.attributes.length; a++) {\n            if (invalidAttr.indexOf(this.element.attributes[a].name) === -1 &&\n                !(this.getModuleName() === 'dropdownlist' && this.element.attributes[a].name === 'readonly')) {\n                attr[this.element.attributes[a].name] = this.element.getAttribute(this.element.attributes[a].name);\n            }\n        }\n        extend(attr, value, attr);\n        this.setProperties({ htmlAttributes: attr }, true);\n    }\n    renderItemsBySelect() {\n        const element = this.element;\n        const fields = { value: 'value', text: 'text' };\n        const jsonElement = [];\n        const group = element.querySelectorAll('select>optgroup');\n        const option = element.querySelectorAll('select>option');\n        this.getJSONfromOption(jsonElement, option, fields);\n        if (group.length) {\n            for (let i = 0; i < group.length; i++) {\n                const item = group[i];\n                const optionGroup = {};\n                optionGroup[fields.text] = item.label;\n                optionGroup.isHeader = true;\n                const child = item.querySelectorAll('option');\n                jsonElement.push(optionGroup);\n                this.getJSONfromOption(jsonElement, child, fields);\n            }\n            element.querySelectorAll('select>option');\n        }\n        this.updateFields(fields.text, fields.value, this.fields.groupBy, this.fields.htmlAttributes, this.fields.iconCss);\n        this.resetList(jsonElement, fields);\n    }\n    updateFields(text, value, groupBy, htmlAttributes, iconCss) {\n        const field = {\n            'fields': {\n                text: text,\n                value: value,\n                groupBy: !isNullOrUndefined(groupBy) ? groupBy : this.fields && this.fields.groupBy,\n                htmlAttributes: !isNullOrUndefined(htmlAttributes) ? htmlAttributes : this.fields && this.fields.htmlAttributes,\n                iconCss: !isNullOrUndefined(iconCss) ? iconCss : this.fields && this.fields.iconCss\n            }\n        };\n        this.setProperties(field, true);\n    }\n    getJSONfromOption(items, options, fields) {\n        for (const option of options) {\n            const json = {};\n            json[fields.text] = option.innerText;\n            json[fields.value] = !isNullOrUndefined(option.getAttribute(fields.value)) ?\n                option.getAttribute(fields.value) : option.innerText;\n            items.push(json);\n        }\n    }\n    /**\n     * Execute before render the list items\n     *\n     * @private\n     * @returns {void}\n     */\n    preRender() {\n        // there is no event handler\n        this.scrollTimer = -1;\n        this.enableRtlElements = [];\n        this.isRequested = false;\n        this.isDataFetched = false;\n        this.itemTemplateId = `${this.element.id}${ITEMTEMPLATE_PROPERTY}`;\n        this.valueTemplateId = `${this.element.id}${VALUETEMPLATE_PROPERTY}`;\n        this.groupTemplateId = `${this.element.id}${GROUPTEMPLATE_PROPERTY}`;\n        this.headerTemplateId = `${this.element.id}${HEADERTEMPLATE_PROPERTY}`;\n        this.footerTemplateId = `${this.element.id}${FOOTERTEMPLATE_PROPERTY}`;\n        this.noRecordsTemplateId = `${this.element.id}${NORECORDSTEMPLATE_PROPERTY}`;\n    }\n    /**\n     * Creates the list items of DropDownBase component.\n     *\n     * @param {Object[] | string[] | number[] | DataManager | boolean[]} dataSource - Specifies the data to generate the list.\n     * @param {FieldSettingsModel} fields - Maps the columns of the data table and binds the data to the component.\n     * @param {Query} query - Accepts the external Query that execute along with data processing.\n     * @returns {void}\n     */\n    setListData(dataSource, fields, query) {\n        fields = fields ? fields : this.fields;\n        let ulElement;\n        this.isActive = true;\n        const eventArgs = { cancel: false, data: dataSource, query: query };\n        this.isPreventChange = this.isAngular && this.preventChange ? true : this.isPreventChange;\n        this.trigger('actionBegin', eventArgs, (eventArgs) => {\n            if (!eventArgs.cancel) {\n                this.showSpinner();\n                if (dataSource instanceof DataManager) {\n                    this.isRequested = true;\n                    if (this.isDataFetched) {\n                        this.emptyDataRequest(fields);\n                        return;\n                    }\n                    eventArgs.data.executeQuery(this.getQuery(eventArgs.query)).then((e) => {\n                        this.isPreventChange = this.isAngular && this.preventChange ? true : this.isPreventChange;\n                        this.trigger('actionComplete', e, (e) => {\n                            if (!e.cancel) {\n                                const listItems = e.result;\n                                if (listItems.length === 0) {\n                                    this.isDataFetched = true;\n                                }\n                                ulElement = this.renderItems(listItems, fields);\n                                if (this.groupTemplate) {\n                                    this.renderGroupTemplate(ulElement);\n                                }\n                                this.onActionComplete(ulElement, listItems, e);\n                                this.isRequested = false;\n                                this.bindChildItems(listItems, ulElement, fields, e);\n                            }\n                        });\n                    }).catch((e) => {\n                        this.isRequested = false;\n                        this.onActionFailure(e);\n                        this.hideSpinner();\n                    });\n                }\n                else {\n                    const dataManager = new DataManager(eventArgs.data);\n                    const listItems = (this.getQuery(eventArgs.query)).executeLocal(dataManager);\n                    const localDataArgs = { cancel: false, result: listItems };\n                    this.isPreventChange = this.isAngular && this.preventChange ? true : this.isPreventChange;\n                    this.trigger('actionComplete', localDataArgs, (localDataArgs) => {\n                        if (!localDataArgs.cancel) {\n                            ulElement = this.renderItems(localDataArgs.result, fields);\n                            this.onActionComplete(ulElement, localDataArgs.result);\n                            if (this.groupTemplate) {\n                                this.renderGroupTemplate(ulElement);\n                            }\n                            this.bindChildItems(localDataArgs.result, ulElement, fields);\n                            setTimeout(() => {\n                                if (this.getModuleName() === 'multiselect' && this.itemTemplate != null && (ulElement.childElementCount > 0 && (ulElement.children[0].childElementCount > 0 || (this.fields.groupBy && ulElement.children[1] && ulElement.children[1].childElementCount > 0)))) {\n                                    this.updateDataList();\n                                }\n                            });\n                        }\n                    });\n                }\n            }\n        });\n    }\n    bindChildItems(listItems, ulElement, fields, e) {\n        if (listItems.length >= 100 && this.getModuleName() === 'autocomplete') {\n            setTimeout(() => {\n                const childNode = this.remainingItems(this.sortedData, fields);\n                append(childNode, ulElement);\n                this.liCollections = this.list.querySelectorAll('.' + dropDownBaseClasses.li);\n                this.updateListValues();\n                this.raiseDataBound(listItems, e);\n            }, 0);\n        }\n        else {\n            this.raiseDataBound(listItems, e);\n        }\n    }\n    updateListValues() {\n        // Used this method in component side.\n    }\n    findListElement(list, findNode, attribute, value) {\n        let liElement = null;\n        if (list) {\n            const listArr = [].slice.call(list.querySelectorAll(findNode));\n            for (let index = 0; index < listArr.length; index++) {\n                if (listArr[index].getAttribute(attribute) === (value + '')) {\n                    liElement = listArr[index];\n                    break;\n                }\n            }\n        }\n        return liElement;\n    }\n    raiseDataBound(listItems, e) {\n        this.hideSpinner();\n        const dataBoundEventArgs = {\n            items: listItems,\n            e: e\n        };\n        this.trigger('dataBound', dataBoundEventArgs);\n    }\n    remainingItems(dataSource, fields) {\n        const spliceData = new DataManager(dataSource).executeLocal(new Query().skip(100));\n        if (this.itemTemplate) {\n            const listElements = this.templateListItem(spliceData, fields);\n            return [].slice.call(listElements.childNodes);\n        }\n        const type = this.typeOfData(spliceData).typeof;\n        if (type === 'string' || type === 'number' || type === 'boolean') {\n            return ListBase.createListItemFromArray(this.createElement, spliceData, true, this.listOption(spliceData, fields), this);\n        }\n        return ListBase.createListItemFromJson(this.createElement, spliceData, this.listOption(spliceData, fields), 1, true, this);\n    }\n    emptyDataRequest(fields) {\n        const listItems = [];\n        this.onActionComplete(this.renderItems(listItems, fields), listItems);\n        this.isRequested = false;\n        this.hideSpinner();\n    }\n    showSpinner() {\n        // Used this method in component side.\n    }\n    hideSpinner() {\n        // Used this method in component side.\n    }\n    onActionFailure(e) {\n        this.liCollections = [];\n        this.trigger('actionFailure', e);\n        this.l10nUpdate(true);\n        addClass([this.list], dropDownBaseClasses.noData);\n    }\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    onActionComplete(ulElement, list, e) {\n        /* eslint-enable @typescript-eslint/no-unused-vars */\n        this.listData = list;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        if (this.isReact) {\n            this.clearTemplate(['itemTemplate', 'groupTemplate', 'actionFailureTemplate', 'noRecordsTemplate']);\n        }\n        this.fixedHeaderElement = isNullOrUndefined(this.fixedHeaderElement) ? this.fixedHeaderElement : null;\n        if (this.getModuleName() === 'multiselect' && this.properties.allowCustomValue && this.fields.groupBy) {\n            for (let i = 0; i < ulElement.childElementCount; i++) {\n                if (ulElement.children[i].classList.contains('e-list-group-item')) {\n                    if (isNullOrUndefined(ulElement.children[i].innerHTML) || ulElement.children[i].innerHTML == \"\") {\n                        addClass([ulElement.children[i]], HIDE_GROUPLIST);\n                    }\n                }\n            }\n        }\n        if (!isNullOrUndefined(this.list)) {\n            this.list.innerHTML = '';\n            this.list.appendChild(ulElement);\n            this.liCollections = this.list.querySelectorAll('.' + dropDownBaseClasses.li);\n            this.ulElement = this.list.querySelector('ul');\n            this.postRender(this.list, list, this.bindEvent);\n        }\n    }\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    postRender(listElement, list, bindEvent) {\n        /* eslint-enable @typescript-eslint/no-unused-vars */\n        const focusItem = listElement.querySelector('.' + dropDownBaseClasses.li);\n        const selectedItem = listElement.querySelector('.' + dropDownBaseClasses.selected);\n        if (focusItem && !selectedItem) {\n            focusItem.classList.add(dropDownBaseClasses.focus);\n        }\n        if (list.length <= 0) {\n            this.l10nUpdate();\n            addClass([listElement], dropDownBaseClasses.noData);\n        }\n        else {\n            listElement.classList.remove(dropDownBaseClasses.noData);\n        }\n    }\n    /**\n     * Get the query to do the data operation before list item generation.\n     *\n     * @param {Query} query - Accepts the external Query that execute along with data processing.\n     * @returns {Query} Returns the query to do the data query operation.\n     */\n    getQuery(query) {\n        return query ? query : this.query ? this.query : new Query();\n    }\n    /**\n     * To render the template content for group header element.\n     *\n     * @param {HTMLElement} listEle - Specifies the group list elements.\n     * @returns {void}\n     */\n    renderGroupTemplate(listEle) {\n        if (this.fields.groupBy !== null && this.dataSource || this.element.querySelector('.' + dropDownBaseClasses.group)) {\n            const dataSource = this.dataSource;\n            const option = { groupTemplateID: this.groupTemplateId, isStringTemplate: this.isStringTemplate };\n            const headerItems = listEle.querySelectorAll('.' + dropDownBaseClasses.group);\n            const groupcheck = this.templateCompiler(this.groupTemplate);\n            if (groupcheck) {\n                const groupValue = select(this.groupTemplate, document).innerHTML.trim();\n                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                const tempHeaders = ListBase.renderGroupTemplate(groupValue, dataSource, this.fields.properties, headerItems, option, this);\n                //EJ2-55168- Group checkbox is not working with group template\n                if (this.isGroupChecking) {\n                    for (let i = 0; i < tempHeaders.length; i++) {\n                        this.notify('addItem', { module: 'CheckBoxSelection', item: tempHeaders[i] });\n                    }\n                }\n            }\n            else {\n                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                const tempHeaders = ListBase.renderGroupTemplate(this.groupTemplate, dataSource, this.fields.properties, headerItems, option, this);\n                //EJ2-55168- Group checkbox is not working with group template\n                if (this.isGroupChecking) {\n                    for (let i = 0; i < tempHeaders.length; i++) {\n                        this.notify('addItem', { module: 'CheckBoxSelection', item: tempHeaders[i] });\n                    }\n                }\n            }\n            this.renderReactTemplates();\n        }\n    }\n    /**\n     * To create the ul li list items\n     *\n     * @param {object []} dataSource - Specifies the data to generate the list.\n     * @param {FieldSettingsModel} fields - Maps the columns of the data table and binds the data to the component.\n     * @returns {HTMLElement} Return the ul li list items.\n     */\n    createListItems(dataSource, fields) {\n        if (dataSource && fields.groupBy || this.element.querySelector('optgroup')) {\n            if (fields.groupBy) {\n                if (this.sortOrder !== 'None') {\n                    dataSource = this.getSortedDataSource(dataSource);\n                }\n                dataSource = ListBase.groupDataSource(dataSource, fields.properties, this.sortOrder);\n            }\n            addClass([this.list], dropDownBaseClasses.grouping);\n        }\n        else {\n            dataSource = this.getSortedDataSource(dataSource);\n        }\n        const options = this.listOption(dataSource, fields);\n        const spliceData = (dataSource.length > 100) ?\n            new DataManager(dataSource).executeLocal(new Query().take(100))\n            : dataSource;\n        this.sortedData = dataSource;\n        return ListBase.createList(this.createElement, (this.getModuleName() === 'autocomplete') ? spliceData : dataSource, options, true, this);\n    }\n    listOption(dataSource, fields) {\n        const iconCss = isNullOrUndefined(fields.iconCss) ? false : true;\n        const fieldValues = !isNullOrUndefined(fields.properties) ?\n            fields.properties : fields;\n        const options = (fields.text !== null || fields.value !== null) ? {\n            fields: fieldValues,\n            showIcon: iconCss, ariaAttributes: { groupItemRole: 'presentation' }\n        } : { fields: { value: 'text' } };\n        return extend({}, options, fields, true);\n    }\n    setFloatingHeader(e) {\n        if (isNullOrUndefined(this.fixedHeaderElement)) {\n            this.fixedHeaderElement = this.createElement('div', { className: dropDownBaseClasses.fixedHead });\n            if (!this.list.querySelector('li').classList.contains(dropDownBaseClasses.group)) {\n                this.fixedHeaderElement.style.display = 'none';\n            }\n            prepend([this.fixedHeaderElement], this.list);\n            this.setFixedHeader();\n        }\n        if (!isNullOrUndefined(this.fixedHeaderElement) && this.fixedHeaderElement.style.zIndex === '0') {\n            this.setFixedHeader();\n        }\n        this.scrollStop(e);\n    }\n    scrollStop(e) {\n        let target = !isNullOrUndefined(e) ? e.target : this.list;\n        let liHeight = parseInt(getComputedStyle(this.getValidLi(), null).getPropertyValue('height'), 10);\n        const topIndex = Math.round(target.scrollTop / liHeight);\n        const liCollections = this.list.querySelectorAll('li' + ':not(.e-hide-listitem)');\n        for (let i = topIndex; i > -1; i--) {\n            if (!isNullOrUndefined(liCollections[i]) && liCollections[i].classList.contains(dropDownBaseClasses.group)) {\n                const currentLi = liCollections[i];\n                this.fixedHeaderElement.innerHTML = currentLi.innerHTML;\n                this.fixedHeaderElement.style.top = target.scrollTop + 'px';\n                this.fixedHeaderElement.style.display = 'block';\n                break;\n            }\n            else {\n                this.fixedHeaderElement.style.display = 'none';\n                this.fixedHeaderElement.style.top = 'none';\n            }\n        }\n    }\n    getValidLi() {\n        return this.liCollections[0];\n    }\n    /**\n     * To render the list items\n     *\n     * @param {object[]} listData - Specifies the list of array of data.\n     * @param {FieldSettingsModel} fields - Maps the columns of the data table and binds the data to the component.\n     * @returns {HTMLElement} Return the list items.\n     */\n    renderItems(listData, fields) {\n        let ulElement;\n        if (this.itemTemplate && listData) {\n            let dataSource = listData;\n            if (dataSource && fields.groupBy) {\n                if (this.sortOrder !== 'None') {\n                    dataSource = this.getSortedDataSource(dataSource);\n                }\n                dataSource = ListBase.groupDataSource(dataSource, fields.properties, this.sortOrder);\n            }\n            else {\n                dataSource = this.getSortedDataSource(dataSource);\n            }\n            this.sortedData = dataSource;\n            const spliceData = (dataSource.length > 100) ?\n                new DataManager(dataSource).executeLocal(new Query().take(100))\n                : dataSource;\n            ulElement = this.templateListItem((this.getModuleName() === 'autocomplete') ? spliceData : dataSource, fields);\n        }\n        else {\n            ulElement = this.createListItems(listData, fields);\n        }\n        return ulElement;\n    }\n    templateListItem(dataSource, fields) {\n        const option = this.listOption(dataSource, fields);\n        option.templateID = this.itemTemplateId;\n        option.isStringTemplate = this.isStringTemplate;\n        const itemcheck = this.templateCompiler(this.itemTemplate);\n        if (itemcheck) {\n            const itemValue = select(this.itemTemplate, document).innerHTML.trim();\n            return ListBase.renderContentTemplate(this.createElement, itemValue, dataSource, fields.properties, option, this);\n        }\n        else {\n            return ListBase.renderContentTemplate(this.createElement, this.itemTemplate, dataSource, fields.properties, option, this);\n        }\n    }\n    typeOfData(items) {\n        let item = { typeof: null, item: null };\n        for (let i = 0; (!isNullOrUndefined(items) && i < items.length); i++) {\n            if (!isNullOrUndefined(items[i])) {\n                const listDataType = typeof (items[i]) === 'string' ||\n                    typeof (items[i]) === 'number' || typeof (items[i]) === 'boolean';\n                const isNullData = listDataType ? isNullOrUndefined(items[i]) :\n                    isNullOrUndefined(getValue((this.fields.value ? this.fields.value : 'value'), items[i]));\n                if (!isNullData) {\n                    return item = { typeof: typeof items[i], item: items[i] };\n                }\n            }\n        }\n        return item;\n    }\n    setFixedHeader() {\n        this.list.parentElement.style.display = 'block';\n        let borderWidth = 0;\n        if (this.list && this.list.parentElement) {\n            borderWidth = parseInt(document.defaultView.getComputedStyle(this.list.parentElement, null).getPropertyValue('border-width'), 10);\n            /*Shorthand property not working in Firefox for getComputedStyle method.\n            Refer bug report https://bugzilla.mozilla.org/show_bug.cgi?id=137688\n            Refer alternate solution https://stackoverflow.com/a/41696234/9133493*/\n            if (isNaN(borderWidth)) {\n                let borderTopWidth = parseInt(document.defaultView.getComputedStyle(this.list.parentElement, null).getPropertyValue('border-top-width'), 10);\n                let borderBottomWidth = parseInt(document.defaultView.getComputedStyle(this.list.parentElement, null).getPropertyValue('border-bottom-width'), 10);\n                let borderLeftWidth = parseInt(document.defaultView.getComputedStyle(this.list.parentElement, null).getPropertyValue('border-left-width'), 10);\n                let borderRightWidth = parseInt(document.defaultView.getComputedStyle(this.list.parentElement, null).getPropertyValue('border-right-width'), 10);\n                borderWidth = (borderTopWidth + borderBottomWidth + borderLeftWidth + borderRightWidth);\n            }\n        }\n        const liWidth = this.getValidLi().offsetWidth - borderWidth;\n        this.fixedHeaderElement.style.width = liWidth.toString() + 'px';\n        setStyleAttribute(this.fixedHeaderElement, { zIndex: 10 });\n        const firstLi = this.ulElement.querySelector('.' + dropDownBaseClasses.group + ':not(.e-hide-listitem)');\n        this.fixedHeaderElement.innerHTML = firstLi.innerHTML;\n    }\n    getSortedDataSource(dataSource) {\n        if (dataSource && this.sortOrder !== 'None') {\n            let textField = this.fields.text ? this.fields.text : 'text';\n            if (this.typeOfData(dataSource).typeof === 'string' || this.typeOfData(dataSource).typeof === 'number'\n                || this.typeOfData(dataSource).typeof === 'boolean') {\n                textField = '';\n            }\n            dataSource = ListBase.getDataSource(dataSource, ListBase.addSorting(this.sortOrder, textField));\n        }\n        return dataSource;\n    }\n    /**\n     * Return the index of item which matched with given value in data source\n     *\n     * @param {string | number | boolean} value - Specifies given value.\n     * @returns {number} Returns the index of the item.\n     */\n    getIndexByValue(value) {\n        let index;\n        const listItems = this.getItems();\n        for (let i = 0; i < listItems.length; i++) {\n            if (!isNullOrUndefined(value) && listItems[i].getAttribute('data-value') === value.toString()) {\n                index = i;\n                break;\n            }\n        }\n        return index;\n    }\n    /**\n     * To dispatch the event manually\n     *\n     * @param {HTMLElement} element - Specifies the element to dispatch the event.\n     * @param {string} type - Specifies the name of the event.\n     * @returns {void}\n     */\n    dispatchEvent(element, type) {\n        const evt = document.createEvent('HTMLEvents');\n        evt.initEvent(type, false, true);\n        element.dispatchEvent(evt);\n    }\n    /**\n     * To set the current fields\n     *\n     * @returns {void}\n     */\n    setFields() {\n        if (this.fields.value && !this.fields.text) {\n            this.updateFields(this.fields.value, this.fields.value);\n        }\n        else if (!this.fields.value && this.fields.text) {\n            this.updateFields(this.fields.text, this.fields.text);\n        }\n        else if (!this.fields.value && !this.fields.text) {\n            this.updateFields('text', 'text');\n        }\n    }\n    /**\n     * reset the items list.\n     *\n     * @param {Object[] | string[] | number[] | DataManager | boolean[]} dataSource - Specifies the data to generate the list.\n     * @param {FieldSettingsModel} fields - Maps the columns of the data table and binds the data to the component.\n     * @param {Query} query - Accepts the external Query that execute along with data processing.\n     * @returns {void}\n     */\n    resetList(dataSource, fields, query) {\n        if (this.list) {\n            if ((this.element.tagName === 'SELECT' && this.element.options.length > 0)\n                || (this.element.tagName === 'UL' && this.element.childNodes.length > 0)) {\n                const data = dataSource instanceof Array ? (dataSource.length > 0)\n                    : !isNullOrUndefined(dataSource);\n                if (!data && this.selectData && this.selectData.length > 0) {\n                    dataSource = this.selectData;\n                }\n            }\n            dataSource = this.getModuleName() === 'combobox' && this.selectData && dataSource instanceof Array && dataSource.length < this.selectData.length ? this.selectData : dataSource;\n            this.setListData(dataSource, fields, query);\n        }\n    }\n    updateSelectElementData(isFiltering) {\n        if (isFiltering && isNullOrUndefined(this.selectData) && this.listData && this.listData.length > 0) {\n            this.selectData = this.listData;\n        }\n    }\n    updateSelection() {\n        // This is for after added the item, need to update the selected index values.\n    }\n    renderList() {\n        // This is for render the list items.\n        this.render();\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    updateDataSource(props) {\n        this.resetList(this.dataSource);\n    }\n    setUpdateInitial(props, newProp) {\n        this.isDataFetched = false;\n        const updateData = {};\n        for (let j = 0; props.length > j; j++) {\n            if (newProp[props[j]] && props[j] === 'fields') {\n                this.setFields();\n                updateData[props[j]] = newProp[props[j]];\n            }\n            else if (newProp[props[j]]) {\n                updateData[props[j]] = newProp[props[j]];\n            }\n        }\n        if (Object.keys(updateData).length > 0) {\n            if (Object.keys(updateData).indexOf('dataSource') === -1) {\n                updateData.dataSource = this.dataSource;\n            }\n            this.updateDataSource(updateData);\n        }\n    }\n    /**\n     * When property value changes happened, then onPropertyChanged method will execute the respective changes in this component.\n     *\n     * @param {DropDownBaseModel} newProp - Returns the dynamic property value of the component.\n     * @param {DropDownBaseModel} oldProp - Returns the previous property value of the component.\n     * @private\n     * @returns {void}\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    onPropertyChanged(newProp, oldProp) {\n        if (this.getModuleName() === 'dropdownbase') {\n            this.setUpdateInitial(['fields', 'query', 'dataSource'], newProp);\n        }\n        this.setUpdateInitial(['sortOrder', 'itemTemplate'], newProp);\n        for (const prop of Object.keys(newProp)) {\n            switch (prop) {\n                case 'query':\n                case 'sortOrder':\n                case 'dataSource':\n                case 'itemTemplate':\n                    break;\n                case 'enableRtl':\n                    this.setEnableRtl();\n                    break;\n                case 'enabled':\n                    this.setEnabled();\n                    break;\n                case 'groupTemplate':\n                    this.renderGroupTemplate(this.list);\n                    if (this.ulElement && this.fixedHeaderElement) {\n                        const firstLi = this.ulElement.querySelector('.' + dropDownBaseClasses.group);\n                        this.fixedHeaderElement.innerHTML = firstLi.innerHTML;\n                    }\n                    break;\n                case 'locale':\n                    if (this.list && (!isNullOrUndefined(this.liCollections) && this.liCollections.length === 0)) {\n                        this.l10nUpdate();\n                    }\n                    break;\n                case 'zIndex':\n                    this.setProperties({ zIndex: newProp.zIndex }, true);\n                    this.setZIndex();\n                    break;\n            }\n        }\n    }\n    /**\n     * Build and render the component\n     *\n     * @param {boolean} isEmptyData - Specifies the component to initialize with list data or not.\n     * @private\n     * @returns {void}\n     */\n    render(isEmptyData) {\n        this.list = this.createElement('div', { className: dropDownBaseClasses.content, attrs: { 'tabindex': '0' } });\n        this.list.classList.add(dropDownBaseClasses.root);\n        this.setFields();\n        const rippleModel = { duration: 300, selector: '.' + dropDownBaseClasses.li };\n        this.rippleFun = rippleEffect(this.list, rippleModel);\n        const group = this.element.querySelector('select>optgroup');\n        if ((this.fields.groupBy || !isNullOrUndefined(group)) && !this.isGroupChecking) {\n            EventHandler.add(this.list, 'scroll', this.setFloatingHeader, this);\n        }\n        if (this.getModuleName() === 'dropdownbase') {\n            if (this.element.getAttribute('tabindex')) {\n                this.list.setAttribute('tabindex', this.element.getAttribute('tabindex'));\n            }\n            removeClass([this.element], dropDownBaseClasses.root);\n            this.element.style.display = 'none';\n            const wrapperElement = this.createElement('div');\n            this.element.parentElement.insertBefore(wrapperElement, this.element);\n            wrapperElement.appendChild(this.element);\n            wrapperElement.appendChild(this.list);\n        }\n        this.setEnableRtl();\n        this.setEnabled();\n        if (!isEmptyData) {\n            this.initialize();\n        }\n    }\n    /**\n     * Return the module name of this component.\n     *\n     * @private\n     * @returns {string} Return the module name of this component.\n     */\n    getModuleName() {\n        return 'dropdownbase';\n    }\n    /* eslint-disable valid-jsdoc, jsdoc/require-returns-description */\n    /**\n     * Gets all the list items bound on this component.\n     *\n     * @returns {Element[]}\n     */\n    getItems() {\n        return this.ulElement.querySelectorAll('.' + dropDownBaseClasses.li);\n    }\n    /* eslint-enable valid-jsdoc, jsdoc/require-returns-description */\n    /**\n     * Adds a new item to the popup list. By default, new item appends to the list as the last item,\n     * but you can insert based on the index parameter.\n     *\n     * @param  { Object[] } items - Specifies an array of JSON data or a JSON data.\n     * @param { number } itemIndex - Specifies the index to place the newly added item in the popup list.\n     * @returns {void}\n     * @deprecated\n     */\n    addItem(items, itemIndex) {\n        if (!this.list || (this.list.textContent === this.noRecordsTemplate && this.getModuleName() !== 'listbox')) {\n            this.renderList();\n        }\n        if (this.sortOrder !== 'None' && isNullOrUndefined(itemIndex)) {\n            let newList = [].slice.call(this.listData);\n            newList.push(items);\n            newList = this.getSortedDataSource(newList);\n            if (this.fields.groupBy) {\n                newList = ListBase.groupDataSource(newList, this.fields.properties, this.sortOrder);\n                itemIndex = newList.indexOf(items);\n            }\n            else {\n                itemIndex = newList.indexOf(items);\n            }\n        }\n        const itemsCount = this.getItems().length;\n        const selectedItemValue = this.list.querySelector('.' + dropDownBaseClasses.selected);\n        items = (items instanceof Array ? items : [items]);\n        let index;\n        index = (isNullOrUndefined(itemIndex) || itemIndex < 0 || itemIndex > itemsCount - 1) ? itemsCount : itemIndex;\n        const fields = this.fields;\n        if (items && fields.groupBy) {\n            items = ListBase.groupDataSource(items, fields.properties);\n        }\n        const liCollections = [];\n        for (let i = 0; i < items.length; i++) {\n            const item = items[i];\n            const isHeader = item.isHeader;\n            const li = this.createElement('li', { className: isHeader ? dropDownBaseClasses.group : dropDownBaseClasses.li, id: 'option-add-' + i });\n            const itemText = item instanceof Object ? getValue(fields.text, item) : item;\n            if (isHeader) {\n                li.innerText = itemText;\n            }\n            if (this.itemTemplate && !isHeader) {\n                const itemCheck = this.templateCompiler(this.itemTemplate);\n                const compiledString = itemCheck ? compile(select(this.itemTemplate, document).innerHTML.trim()) : compile(this.itemTemplate);\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                const addItemTemplate = compiledString(item, this, 'itemTemplate', this.itemTemplateId, this.isStringTemplate, null, li);\n                if (addItemTemplate) {\n                    append(addItemTemplate, li);\n                }\n            }\n            else if (!isHeader) {\n                li.appendChild(document.createTextNode(itemText));\n            }\n            li.setAttribute('data-value', item instanceof Object ? getValue(fields.value, item) : item);\n            li.setAttribute('role', 'option');\n            this.notify('addItem', { module: 'CheckBoxSelection', item: li });\n            liCollections.push(li);\n            this.listData.push(item);\n            if (this.sortOrder === 'None' && isNullOrUndefined(itemIndex) && index === 0) {\n                index = null;\n            }\n            this.updateActionCompleteData(li, item, index);\n            //Listbox event\n            this.trigger('beforeItemRender', { element: li, item: item });\n        }\n        if (itemsCount === 0 && isNullOrUndefined(this.list.querySelector('ul'))) {\n            this.list.innerHTML = '';\n            this.list.classList.remove(dropDownBaseClasses.noData);\n            this.list.appendChild(this.ulElement);\n            this.liCollections = liCollections;\n            append(liCollections, this.ulElement);\n            this.updateAddItemList(this.list, itemsCount);\n        }\n        else {\n            if (this.getModuleName() === 'listbox' && itemsCount === 0) {\n                this.ulElement.innerHTML = '';\n            }\n            const attr = [];\n            for (let i = 0; i < items.length; i++) {\n                const listGroupItem = this.ulElement.querySelectorAll('.e-list-group-item');\n                for (let j = 0; j < listGroupItem.length; j++) {\n                    attr[j] = listGroupItem[j].innerText;\n                }\n                if (attr.indexOf(liCollections[i].innerText) > -1 && fields.groupBy) {\n                    for (let j = 0; j < listGroupItem.length; j++) {\n                        if (attr[j] === liCollections[i].innerText) {\n                            if (this.sortOrder === 'None') {\n                                this.ulElement.insertBefore(liCollections[i + 1], listGroupItem[j + 1]);\n                            }\n                            else {\n                                this.ulElement.insertBefore(liCollections[i + 1], this.ulElement.childNodes[itemIndex]);\n                            }\n                            i = i + 1;\n                            break;\n                        }\n                    }\n                }\n                else {\n                    if (this.liCollections[index]) {\n                        this.liCollections[index].parentNode.insertBefore(liCollections[i], this.liCollections[index]);\n                    }\n                    else {\n                        this.ulElement.appendChild(liCollections[i]);\n                    }\n                }\n                const tempLi = [].slice.call(this.liCollections);\n                tempLi.splice(index, 0, liCollections[i]);\n                this.liCollections = tempLi;\n                index += 1;\n                if (this.getModuleName() === 'multiselect') {\n                    this.updateDataList();\n                }\n            }\n        }\n        if (selectedItemValue || itemIndex === 0) {\n            this.updateSelection();\n        }\n    }\n    validationAttribute(target, hidden) {\n        const name = target.getAttribute('name') ? target.getAttribute('name') : target.getAttribute('id');\n        hidden.setAttribute('name', name);\n        target.removeAttribute('name');\n        const attributes$$1 = ['required', 'aria-required', 'form'];\n        for (let i = 0; i < attributes$$1.length; i++) {\n            if (!target.getAttribute(attributes$$1[i])) {\n                continue;\n            }\n            const attr = target.getAttribute(attributes$$1[i]);\n            hidden.setAttribute(attributes$$1[i], attr);\n            target.removeAttribute(attributes$$1[i]);\n        }\n    }\n    setZIndex() {\n        // this is for component wise\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    updateActionCompleteData(li, item, index) {\n        // this is for ComboBox custom value\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    updateAddItemList(list, itemCount) {\n        // this is for multiselect add item\n    }\n    updateDataList() {\n        // this is for multiselect update list items\n    }\n    /* eslint-disable valid-jsdoc, jsdoc/require-returns-description */\n    /**\n     * Gets the data Object that matches the given value.\n     *\n     * @param { string | number } value - Specifies the value of the list item.\n     * @returns {Object}\n     */\n    getDataByValue(value) {\n        if (!isNullOrUndefined(this.listData)) {\n            const type = this.typeOfData(this.listData).typeof;\n            if (type === 'string' || type === 'number' || type === 'boolean') {\n                for (const item of this.listData) {\n                    if (!isNullOrUndefined(item) && item === value) {\n                        return item;\n                    }\n                }\n            }\n            else {\n                for (const item of this.listData) {\n                    if (!isNullOrUndefined(item) && getValue((this.fields.value ? this.fields.value : 'value'), item) === value) {\n                        return item;\n                    }\n                }\n            }\n        }\n        return null;\n    }\n    /* eslint-enable valid-jsdoc, jsdoc/require-returns-description */\n    /**\n     * Removes the component from the DOM and detaches all its related event handlers. It also removes the attributes and classes.\n     *\n     * @method destroy\n     * @returns {void}\n     */\n    destroy() {\n        if (document.body.contains(this.list)) {\n            EventHandler.remove(this.list, 'scroll', this.setFloatingHeader);\n            if (!isNullOrUndefined(this.rippleFun)) {\n                this.rippleFun();\n            }\n            detach(this.list);\n        }\n        super.destroy();\n    }\n};\n__decorate([\n    Complex({ text: null, value: null, iconCss: null, groupBy: null }, FieldSettings)\n], DropDownBase.prototype, \"fields\", void 0);\n__decorate([\n    Property(false)\n], DropDownBase.prototype, \"enablePersistence\", void 0);\n__decorate([\n    Property(null)\n], DropDownBase.prototype, \"itemTemplate\", void 0);\n__decorate([\n    Property(null)\n], DropDownBase.prototype, \"groupTemplate\", void 0);\n__decorate([\n    Property('No records found')\n], DropDownBase.prototype, \"noRecordsTemplate\", void 0);\n__decorate([\n    Property('Request failed')\n], DropDownBase.prototype, \"actionFailureTemplate\", void 0);\n__decorate([\n    Property('None')\n], DropDownBase.prototype, \"sortOrder\", void 0);\n__decorate([\n    Property(true)\n], DropDownBase.prototype, \"enabled\", void 0);\n__decorate([\n    Property([])\n], DropDownBase.prototype, \"dataSource\", void 0);\n__decorate([\n    Property(null)\n], DropDownBase.prototype, \"query\", void 0);\n__decorate([\n    Property('StartsWith')\n], DropDownBase.prototype, \"filterType\", void 0);\n__decorate([\n    Property(true)\n], DropDownBase.prototype, \"ignoreCase\", void 0);\n__decorate([\n    Property(1000)\n], DropDownBase.prototype, \"zIndex\", void 0);\n__decorate([\n    Property(false)\n], DropDownBase.prototype, \"ignoreAccent\", void 0);\n__decorate([\n    Property()\n], DropDownBase.prototype, \"locale\", void 0);\n__decorate([\n    Event()\n], DropDownBase.prototype, \"actionBegin\", void 0);\n__decorate([\n    Event()\n], DropDownBase.prototype, \"actionComplete\", void 0);\n__decorate([\n    Event()\n], DropDownBase.prototype, \"actionFailure\", void 0);\n__decorate([\n    Event()\n], DropDownBase.prototype, \"select\", void 0);\n__decorate([\n    Event()\n], DropDownBase.prototype, \"dataBound\", void 0);\n__decorate([\n    Event()\n], DropDownBase.prototype, \"created\", void 0);\n__decorate([\n    Event()\n], DropDownBase.prototype, \"destroyed\", void 0);\nDropDownBase = __decorate([\n    NotifyPropertyChanges\n], DropDownBase);\n\n/**\n * export all modules from current location\n */\n\nvar __decorate$1 = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n// eslint-disable-next-line @typescript-eslint/triple-slash-reference\n/// <reference path='../drop-down-base/drop-down-base-model.d.ts'/>\n// don't use space in classnames\nconst dropDownListClasses = {\n    root: 'e-dropdownlist',\n    hover: dropDownBaseClasses.hover,\n    selected: dropDownBaseClasses.selected,\n    rtl: dropDownBaseClasses.rtl,\n    li: dropDownBaseClasses.li,\n    disable: dropDownBaseClasses.disabled,\n    base: dropDownBaseClasses.root,\n    focus: dropDownBaseClasses.focus,\n    input: 'e-input-group',\n    inputFocus: 'e-input-focus',\n    icon: 'e-input-group-icon e-ddl-icon',\n    iconAnimation: 'e-icon-anim',\n    value: 'e-input-value',\n    device: 'e-ddl-device',\n    backIcon: 'e-input-group-icon e-back-icon e-icons',\n    filterBarClearIcon: 'e-input-group-icon e-clear-icon e-icons',\n    filterInput: 'e-input-filter',\n    filterParent: 'e-filter-parent',\n    mobileFilter: 'e-ddl-device-filter',\n    footer: 'e-ddl-footer',\n    header: 'e-ddl-header',\n    clearIcon: 'e-clear-icon',\n    clearIconHide: 'e-clear-icon-hide',\n    popupFullScreen: 'e-popup-full-page',\n    disableIcon: 'e-ddl-disable-icon',\n    hiddenElement: 'e-ddl-hidden'\n};\nconst inputObject = {\n    container: null,\n    buttons: []\n};\n/**\n * The DropDownList component contains a list of predefined values from which you can\n * choose a single value.\n * ```html\n * <input type=\"text\" tabindex=\"1\" id=\"list\"> </input>\n * ```\n * ```typescript\n *   let dropDownListObj:DropDownList = new DropDownList();\n *   dropDownListObj.appendTo(\"#list\");\n * ```\n */\nlet DropDownList = class DropDownList extends DropDownBase {\n    /**\n     * * Constructor for creating the DropDownList component.\n     *\n     * @param {DropDownListModel} options - Specifies the DropDownList model.\n     * @param {string | HTMLElement} element - Specifies the element to render as component.\n     * @private\n     */\n    constructor(options, element) {\n        super(options, element);\n        this.isListSearched = false;\n        this.preventChange = false;\n        this.isAngular = false;\n    }\n    /**\n     * Initialize the event handler.\n     *\n     * @private\n     * @returns {void}\n     */\n    preRender() {\n        this.valueTempElement = null;\n        this.element.style.opacity = '0';\n        this.initializeData();\n        super.preRender();\n        this.activeIndex = this.index;\n        this.queryString = '';\n    }\n    initializeData() {\n        this.isPopupOpen = false;\n        this.isDocumentClick = false;\n        this.isInteracted = false;\n        this.isFilterFocus = false;\n        this.beforePopupOpen = false;\n        this.initial = true;\n        this.initRemoteRender = false;\n        this.isNotSearchList = false;\n        this.isTyped = false;\n        this.isSelected = false;\n        this.preventFocus = false;\n        this.preventAutoFill = false;\n        this.isValidKey = false;\n        this.typedString = '';\n        this.isEscapeKey = false;\n        this.isPreventBlur = false;\n        this.isTabKey = false;\n        this.actionCompleteData = { isUpdated: false };\n        this.actionData = { isUpdated: false };\n        this.prevSelectPoints = {};\n        this.isSelectCustom = false;\n        this.isDropDownClick = false;\n        this.preventAltUp = false;\n        this.isCustomFilter = false;\n        this.isSecondClick = false;\n        this.previousValue = null;\n        this.keyConfigure = {\n            tab: 'tab',\n            enter: '13',\n            escape: '27',\n            end: '35',\n            home: '36',\n            down: '40',\n            up: '38',\n            pageUp: '33',\n            pageDown: '34',\n            open: 'alt+40',\n            close: 'shift+tab',\n            hide: 'alt+38',\n            space: '32'\n        };\n    }\n    setZIndex() {\n        if (this.popupObj) {\n            this.popupObj.setProperties({ 'zIndex': this.zIndex });\n        }\n    }\n    renderList(isEmptyData) {\n        super.render(isEmptyData);\n        this.unWireListEvents();\n        this.wireListEvents();\n    }\n    floatLabelChange() {\n        if (this.getModuleName() === 'dropdownlist' && this.floatLabelType === 'Auto') {\n            const floatElement = this.inputWrapper.container.querySelector('.e-float-text');\n            if (this.inputElement.value !== '' || this.isInteracted) {\n                classList(floatElement, ['e-label-top'], ['e-label-bottom']);\n            }\n            else {\n                classList(floatElement, ['e-label-bottom'], ['e-label-top']);\n            }\n        }\n    }\n    resetHandler(e) {\n        e.preventDefault();\n        this.clearAll(e);\n    }\n    resetFocusElement() {\n        this.removeHover();\n        this.removeSelection();\n        this.removeFocus();\n        this.list.scrollTop = 0;\n        if (this.getModuleName() !== 'autocomplete' && !isNullOrUndefined(this.ulElement)) {\n            const li = this.ulElement.querySelector('.' + dropDownListClasses.li);\n            if (li) {\n                li.classList.add(dropDownListClasses.focus);\n            }\n        }\n    }\n    clearAll(e, properties) {\n        if (isNullOrUndefined(properties) || (!isNullOrUndefined(properties) &&\n            (isNullOrUndefined(properties.dataSource) ||\n                (!(properties.dataSource instanceof DataManager) && properties.dataSource.length === 0)))) {\n            this.isActive = true;\n            this.resetSelection(properties);\n        }\n        const dataItem = this.getItemData();\n        if (this.previousValue === dataItem.value) {\n            return;\n        }\n        this.onChangeEvent(e);\n    }\n    resetSelection(properties) {\n        if (this.list) {\n            if ((!isNullOrUndefined(properties) &&\n                (isNullOrUndefined(properties.dataSource) ||\n                    (!(properties.dataSource instanceof DataManager) && properties.dataSource.length === 0)))) {\n                this.selectedLI = null;\n                this.actionCompleteData.isUpdated = false;\n                this.actionCompleteData.ulElement = null;\n                this.actionCompleteData.list = null;\n                this.resetList(properties.dataSource);\n            }\n            else {\n                if (this.allowFiltering && this.getModuleName() !== 'autocomplete'\n                    && !isNullOrUndefined(this.actionCompleteData.ulElement) && !isNullOrUndefined(this.actionCompleteData.list)) {\n                    this.onActionComplete(this.actionCompleteData.ulElement.cloneNode(true), this.actionCompleteData.list);\n                }\n                this.resetFocusElement();\n            }\n        }\n        this.hiddenElement.innerHTML = '';\n        this.inputElement.value = '';\n        this.value = null;\n        this.itemData = null;\n        this.text = null;\n        this.index = null;\n        this.activeIndex = null;\n        this.item = null;\n        this.queryString = '';\n        if (this.valueTempElement) {\n            detach(this.valueTempElement);\n            this.inputElement.style.display = 'block';\n            this.valueTempElement = null;\n        }\n        this.setSelection(null, null);\n        this.isSelectCustom = false;\n        this.updateIconState();\n        this.cloneElements();\n    }\n    setHTMLAttributes() {\n        if (Object.keys(this.htmlAttributes).length) {\n            for (const htmlAttr of Object.keys(this.htmlAttributes)) {\n                if (htmlAttr === 'class') {\n                    const updatedClassValue = (this.htmlAttributes[htmlAttr].replace(/\\s+/g, ' ')).trim();\n                    if (updatedClassValue !== '') {\n                        addClass([this.inputWrapper.container], updatedClassValue.split(' '));\n                    }\n                }\n                else if (htmlAttr === 'disabled' && this.htmlAttributes[htmlAttr] === 'disabled') {\n                    this.enabled = false;\n                    this.setEnable();\n                }\n                else if (htmlAttr === 'readonly' && !isNullOrUndefined(this.htmlAttributes[htmlAttr])) {\n                    this.readonly = true;\n                    this.dataBind();\n                }\n                else if (htmlAttr === 'style') {\n                    this.inputWrapper.container.setAttribute('style', this.htmlAttributes[htmlAttr]);\n                }\n                else {\n                    const defaultAttr = ['title', 'id', 'placeholder', 'aria-placeholder',\n                        'role', 'autocorrect', 'autocomplete', 'autocapitalize', 'spellcheck', 'minlength', 'maxlength'];\n                    const validateAttr = ['name', 'required'];\n                    if (this.getModuleName() === 'autocomplete' || this.getModuleName() === 'combobox') {\n                        defaultAttr.push('tabindex');\n                    }\n                    if (validateAttr.indexOf(htmlAttr) > -1 || htmlAttr.indexOf('data') === 0) {\n                        this.hiddenElement.setAttribute(htmlAttr, this.htmlAttributes[htmlAttr]);\n                    }\n                    else if (defaultAttr.indexOf(htmlAttr) > -1) {\n                        if (htmlAttr === 'placeholder') {\n                            Input.setPlaceholder(this.htmlAttributes[htmlAttr], this.inputElement);\n                        }\n                        else {\n                            this.inputElement.setAttribute(htmlAttr, this.htmlAttributes[htmlAttr]);\n                        }\n                    }\n                    else {\n                        this.inputWrapper.container.setAttribute(htmlAttr, this.htmlAttributes[htmlAttr]);\n                    }\n                }\n            }\n        }\n        if (this.getModuleName() === 'autocomplete' || this.getModuleName() === 'combobox') {\n            this.inputWrapper.container.removeAttribute('tabindex');\n        }\n    }\n    getAriaAttributes() {\n        return {\n            'aria-disabled': 'false',\n            'aria-owns': this.element.id + '_options',\n            'role': 'combobox',\n            'aria-haspopup': 'true',\n            'aria-expanded': 'false',\n            'aria-activedescendant': 'null',\n            'aria-live': 'polite',\n            'aria-labelledby': this.hiddenElement.id\n        };\n    }\n    setEnableRtl() {\n        Input.setEnableRtl(this.enableRtl, [this.inputElement.parentElement]);\n        if (this.popupObj) {\n            this.popupObj.enableRtl = this.enableRtl;\n            this.popupObj.dataBind();\n        }\n    }\n    setEnable() {\n        Input.setEnabled(this.enabled, this.inputElement);\n        if (this.enabled) {\n            removeClass([this.inputWrapper.container], dropDownListClasses.disable);\n            this.inputElement.setAttribute('aria-disabled', 'false');\n            this.targetElement().setAttribute('tabindex', this.tabIndex);\n        }\n        else {\n            this.hidePopup();\n            addClass([this.inputWrapper.container], dropDownListClasses.disable);\n            this.inputElement.setAttribute('aria-disabled', 'true');\n            this.targetElement().tabIndex = -1;\n        }\n    }\n    /**\n     * Get the properties to be maintained in the persisted state.\n     *\n     * @returns {string} Returns the persisted data of the component.\n     */\n    getPersistData() {\n        return this.addOnPersist(['value']);\n    }\n    getLocaleName() {\n        return 'drop-down-list';\n    }\n    preventTabIndex(element) {\n        if (this.getModuleName() === 'dropdownlist') {\n            element.tabIndex = -1;\n        }\n    }\n    targetElement() {\n        return this.inputWrapper.container;\n    }\n    getNgDirective() {\n        return 'EJS-DROPDOWNLIST';\n    }\n    getElementByText(text) {\n        return this.getElementByValue(this.getValueByText(text));\n    }\n    getElementByValue(value) {\n        let item;\n        const listItems = this.getItems();\n        for (const liItem of listItems) {\n            if (this.getFormattedValue(liItem.getAttribute('data-value')) === value) {\n                item = liItem;\n                break;\n            }\n        }\n        return item;\n    }\n    initValue() {\n        this.renderList();\n        if (this.dataSource instanceof DataManager) {\n            this.initRemoteRender = true;\n        }\n        else {\n            this.updateValues();\n        }\n    }\n    updateValues() {\n        if (!isNullOrUndefined(this.value)) {\n            this.setSelection(this.getElementByValue(this.value), null);\n        }\n        else if (this.text && isNullOrUndefined(this.value)) {\n            const element = this.getElementByText(this.text);\n            if (isNullOrUndefined(element)) {\n                this.setProperties({ text: null });\n                return;\n            }\n            else {\n                this.setSelection(element, null);\n            }\n        }\n        else {\n            this.setSelection(this.liCollections[this.activeIndex], null);\n        }\n        this.setHiddenValue();\n        Input.setValue(this.text, this.inputElement, this.floatLabelType, this.showClearButton);\n    }\n    onBlurHandler(e) {\n        if (!this.enabled) {\n            return;\n        }\n        const target = e.relatedTarget;\n        const currentTarget = e.target;\n        const isPreventBlur = this.isPreventBlur;\n        this.isPreventBlur = false;\n        //IE 11 - issue\n        if (isPreventBlur && !this.isDocumentClick && this.isPopupOpen && (!isNullOrUndefined(currentTarget) ||\n            !this.isFilterLayout() && isNullOrUndefined(target))) {\n            if (this.getModuleName() === 'dropdownlist' && this.allowFiltering && this.isPopupOpen) {\n                this.filterInput.focus();\n            }\n            else {\n                this.targetElement().focus();\n            }\n            return;\n        }\n        if (this.isDocumentClick || (!isNullOrUndefined(this.popupObj)\n            && document.body.contains(this.popupObj.element) &&\n            this.popupObj.element.classList.contains(dropDownListClasses.mobileFilter))) {\n            if (!this.beforePopupOpen) {\n                this.isDocumentClick = false;\n            }\n            return;\n        }\n        if (((this.getModuleName() === 'dropdownlist' && !this.isFilterFocus && target !== this.inputElement)\n            && (document.activeElement !== target || (document.activeElement === target &&\n                currentTarget.classList.contains(dropDownListClasses.inputFocus)))) ||\n            (isNullOrUndefined(target) && this.getModuleName() === 'dropdownlist' && this.allowFiltering &&\n                currentTarget !== this.inputWrapper.container) || this.getModuleName() !== 'dropdownlist' &&\n            !this.inputWrapper.container.contains(target) || this.isTabKey) {\n            this.isDocumentClick = this.isPopupOpen ? true : false;\n            this.focusOutAction(e);\n            this.isTabKey = false;\n        }\n        if (this.isRequested && !this.isPopupOpen && !this.isPreventBlur) {\n            this.isActive = false;\n            this.beforePopupOpen = false;\n        }\n    }\n    focusOutAction(e) {\n        this.isInteracted = false;\n        this.focusOut(e);\n        this.onFocusOut();\n    }\n    onFocusOut() {\n        if (!this.enabled) {\n            return;\n        }\n        if (this.isSelected) {\n            this.isSelectCustom = false;\n            this.onChangeEvent(null);\n        }\n        this.floatLabelChange();\n        this.dispatchEvent(this.hiddenElement, 'change');\n        if (this.getModuleName() === 'dropdownlist' && this.element.tagName !== 'INPUT') {\n            this.dispatchEvent(this.inputElement, 'blur');\n        }\n        if (this.inputWrapper.clearButton) {\n            addClass([this.inputWrapper.clearButton], dropDownListClasses.clearIconHide);\n        }\n        this.trigger('blur');\n    }\n    onFocus(e) {\n        if (!this.isInteracted) {\n            this.isInteracted = true;\n            const args = { isInteracted: e ? true : false, event: e };\n            this.trigger('focus', args);\n        }\n        this.updateIconState();\n    }\n    resetValueHandler(e) {\n        const formElement = closest(this.inputElement, 'form');\n        if (formElement && e.target === formElement) {\n            const val = (this.element.tagName === this.getNgDirective()) ? null : this.inputElement.getAttribute('value');\n            this.text = val;\n        }\n    }\n    wireEvent() {\n        EventHandler.add(this.inputWrapper.container, 'mousedown', this.dropDownClick, this);\n        EventHandler.add(this.inputWrapper.container, 'focus', this.focusIn, this);\n        EventHandler.add(this.inputWrapper.container, 'keypress', this.onSearch, this);\n        this.bindCommonEvent();\n    }\n    bindCommonEvent() {\n        EventHandler.add(this.targetElement(), 'blur', this.onBlurHandler, this);\n        const formElement = closest(this.inputElement, 'form');\n        if (formElement) {\n            EventHandler.add(formElement, 'reset', this.resetValueHandler, this);\n        }\n        if (!Browser.isDevice) {\n            this.keyboardModule = new KeyboardEvents(this.targetElement(), {\n                keyAction: this.keyActionHandler.bind(this), keyConfigs: this.keyConfigure, eventName: 'keydown'\n            });\n        }\n        else {\n            this.keyboardModule = new KeyboardEvents(this.targetElement(), {\n                keyAction: this.mobileKeyActionHandler.bind(this), keyConfigs: this.keyConfigure, eventName: 'keydown'\n            });\n        }\n        this.bindClearEvent();\n    }\n    bindClearEvent() {\n        if (this.showClearButton) {\n            EventHandler.add(this.inputWrapper.clearButton, 'mousedown', this.resetHandler, this);\n        }\n    }\n    unBindCommonEvent() {\n        if (this.targetElement()) {\n            EventHandler.remove(this.targetElement(), 'blur', this.onBlurHandler);\n        }\n        const formElement = this.inputElement && closest(this.inputElement, 'form');\n        if (formElement) {\n            EventHandler.remove(formElement, 'reset', this.resetValueHandler);\n        }\n        if (!Browser.isDevice) {\n            this.keyboardModule.destroy();\n        }\n        if (this.showClearButton) {\n            EventHandler.remove(this.inputWrapper.clearButton, 'mousedown', this.resetHandler);\n        }\n    }\n    updateIconState() {\n        if (this.showClearButton) {\n            if (this.inputElement.value !== '' && !this.readonly) {\n                removeClass([this.inputWrapper.clearButton], dropDownListClasses.clearIconHide);\n            }\n            else {\n                addClass([this.inputWrapper.clearButton], dropDownListClasses.clearIconHide);\n            }\n        }\n    }\n    /**\n     * Event binding for list\n     *\n     * @returns {void}\n     */\n    wireListEvents() {\n        EventHandler.add(this.list, 'click', this.onMouseClick, this);\n        EventHandler.add(this.list, 'mouseover', this.onMouseOver, this);\n        EventHandler.add(this.list, 'mouseout', this.onMouseLeave, this);\n    }\n    onSearch(e) {\n        if (e.charCode !== 32 && e.charCode !== 13) {\n            if (this.list === undefined) {\n                this.renderList();\n            }\n            this.searchKeyEvent = e;\n            this.onServerIncrementalSearch(e);\n        }\n    }\n    onServerIncrementalSearch(e) {\n        if (!this.isRequested && !isNullOrUndefined(this.list) &&\n            !isNullOrUndefined(this.list.querySelector('li')) && this.enabled && !this.readonly) {\n            this.incrementalSearch(e);\n        }\n    }\n    onMouseClick(e) {\n        const target = e.target;\n        const li = closest(target, '.' + dropDownBaseClasses.li);\n        if (!this.isValidLI(li)) {\n            return;\n        }\n        this.setSelection(li, e);\n        if (Browser.isDevice && this.isFilterLayout()) {\n            history.back();\n        }\n        else {\n            const delay = 100;\n            this.closePopup(delay, e);\n        }\n    }\n    onMouseOver(e) {\n        const currentLi = closest(e.target, '.' + dropDownBaseClasses.li);\n        this.setHover(currentLi);\n    }\n    setHover(li) {\n        if (this.enabled && this.isValidLI(li) && !li.classList.contains(dropDownBaseClasses.hover)) {\n            this.removeHover();\n            addClass([li], dropDownBaseClasses.hover);\n        }\n    }\n    onMouseLeave() {\n        this.removeHover();\n    }\n    removeHover() {\n        if (this.list) {\n            const hoveredItem = this.list.querySelectorAll('.' + dropDownBaseClasses.hover);\n            if (hoveredItem && hoveredItem.length) {\n                removeClass(hoveredItem, dropDownBaseClasses.hover);\n            }\n        }\n    }\n    isValidLI(li) {\n        return (li && li.hasAttribute('role') && li.getAttribute('role') === 'option');\n    }\n    incrementalSearch(e) {\n        if (this.liCollections.length > 0) {\n            const li = incrementalSearch(e.charCode, this.liCollections, this.activeIndex, true, this.element.id);\n            if (!isNullOrUndefined(li)) {\n                this.setSelection(li, e);\n                this.setScrollPosition();\n            }\n        }\n    }\n    /**\n     * Hides the spinner loader.\n     *\n     * @returns {void}\n     */\n    hideSpinner() {\n        if (!isNullOrUndefined(this.spinnerElement)) {\n            hideSpinner(this.spinnerElement);\n            removeClass([this.spinnerElement], dropDownListClasses.disableIcon);\n            this.spinnerElement.innerHTML = '';\n            this.spinnerElement = null;\n        }\n    }\n    /**\n     * Shows the spinner loader.\n     *\n     * @returns {void}\n     */\n    showSpinner() {\n        if (isNullOrUndefined(this.spinnerElement)) {\n            this.spinnerElement = Browser.isDevice && !isNullOrUndefined(this.filterInputObj) && this.filterInputObj.buttons[1] ||\n                !isNullOrUndefined(this.filterInputObj) && this.filterInputObj.buttons[0] || this.inputWrapper.buttons[0];\n            addClass([this.spinnerElement], dropDownListClasses.disableIcon);\n            createSpinner({\n                target: this.spinnerElement,\n                width: Browser.isDevice ? '16px' : '14px'\n            }, this.createElement);\n            showSpinner(this.spinnerElement);\n        }\n    }\n    keyActionHandler(e) {\n        if (!this.enabled) {\n            return;\n        }\n        const preventAction = e.action === 'pageUp' || e.action === 'pageDown';\n        const preventHomeEnd = this.getModuleName() !== 'dropdownlist' && (e.action === 'home' || e.action === 'end');\n        this.isEscapeKey = e.action === 'escape';\n        this.isTabKey = !this.isPopupOpen && e.action === 'tab';\n        const isNavAction = e.action === 'down' || e.action === 'up' || e.action === 'home' || e.action === 'end';\n        const isNavigation = (e.action === 'down' || e.action === 'up' || e.action === 'pageUp' || e.action === 'pageDown'\n            || e.action === 'home' || e.action === 'end');\n        if ((this.isEditTextBox() || preventAction || preventHomeEnd) && !this.isPopupOpen) {\n            return;\n        }\n        if (!this.readonly) {\n            const isTabAction = e.action === 'tab' || e.action === 'close';\n            if (this.list === undefined && !this.isRequested && !isTabAction && e.action !== 'escape') {\n                this.searchKeyEvent = e;\n                this.renderList();\n            }\n            if (isNullOrUndefined(this.list) || (!isNullOrUndefined(this.liCollections) &&\n                isNavigation && this.liCollections.length === 0) || this.isRequested) {\n                return;\n            }\n            if ((isTabAction && this.getModuleName() !== 'autocomplete') && this.isPopupOpen\n                || e.action === 'escape') {\n                e.preventDefault();\n            }\n            this.isSelected = e.action === 'escape' ? false : this.isSelected;\n            this.isTyped = (isNavigation || e.action === 'escape') ? false : this.isTyped;\n            switch (e.action) {\n                case 'down':\n                case 'up':\n                    this.updateUpDownAction(e);\n                    break;\n                case 'pageUp':\n                    this.pageUpSelection(this.activeIndex - this.getPageCount(), e);\n                    e.preventDefault();\n                    break;\n                case 'pageDown':\n                    this.pageDownSelection(this.activeIndex + this.getPageCount(), e);\n                    e.preventDefault();\n                    break;\n                case 'home':\n                    this.updateHomeEndAction(e);\n                    break;\n                case 'end':\n                    this.updateHomeEndAction(e);\n                    break;\n                case 'space':\n                    if (this.getModuleName() === 'dropdownlist') {\n                        if (!this.beforePopupOpen) {\n                            this.showPopup();\n                        }\n                    }\n                    break;\n                case 'open':\n                    this.showPopup();\n                    break;\n                case 'hide':\n                    this.preventAltUp = this.isPopupOpen;\n                    this.hidePopup(e);\n                    this.focusDropDown(e);\n                    break;\n                case 'enter':\n                    this.selectCurrentItem(e);\n                    break;\n                case 'tab':\n                    this.selectCurrentValueOnTab(e);\n                    break;\n                case 'escape':\n                case 'close':\n                    if (this.isPopupOpen) {\n                        this.hidePopup(e);\n                        this.focusDropDown(e);\n                    }\n                    break;\n            }\n        }\n    }\n    updateUpDownAction(e) {\n        const focusEle = this.list.querySelector('.' + dropDownListClasses.focus);\n        if (this.isSelectFocusItem(focusEle)) {\n            this.setSelection(focusEle, e);\n        }\n        else if (!isNullOrUndefined(this.liCollections)) {\n            let index = e.action === 'down' ? this.activeIndex + 1 : this.activeIndex - 1;\n            let startIndex = 0;\n            if (this.getModuleName() === 'autocomplete') {\n                startIndex = e.action === 'down' && isNullOrUndefined(this.activeIndex) ? 0 : this.liCollections.length - 1;\n                index = index < 0 ? this.liCollections.length - 1 : index === this.liCollections.length ? 0 : index;\n            }\n            const nextItem = isNullOrUndefined(this.activeIndex) ? this.liCollections[startIndex] : this.liCollections[index];\n            if (!isNullOrUndefined(nextItem)) {\n                this.setSelection(nextItem, e);\n            }\n        }\n        e.preventDefault();\n    }\n    updateHomeEndAction(e) {\n        if (this.getModuleName() === 'dropdownlist') {\n            let findLi = 0;\n            if (e.action === 'home') {\n                findLi = 0;\n            }\n            else {\n                findLi = this.getItems().length - 1;\n            }\n            e.preventDefault();\n            if (this.activeIndex === findLi) {\n                return;\n            }\n            this.setSelection(this.liCollections[findLi], e);\n        }\n    }\n    selectCurrentValueOnTab(e) {\n        if (this.getModuleName() === 'autocomplete') {\n            this.selectCurrentItem(e);\n        }\n        else {\n            if (this.isPopupOpen) {\n                this.hidePopup(e);\n                this.focusDropDown(e);\n            }\n        }\n    }\n    mobileKeyActionHandler(e) {\n        if (!this.enabled) {\n            return;\n        }\n        if ((this.isEditTextBox()) && !this.isPopupOpen) {\n            return;\n        }\n        if (!this.readonly) {\n            if (this.list === undefined && !this.isRequested) {\n                this.searchKeyEvent = e;\n                this.renderList();\n            }\n            if (isNullOrUndefined(this.list) || (!isNullOrUndefined(this.liCollections) &&\n                this.liCollections.length === 0) || this.isRequested) {\n                return;\n            }\n            if (e.action === 'enter') {\n                this.selectCurrentItem(e);\n            }\n        }\n    }\n    selectCurrentItem(e) {\n        if (this.isPopupOpen) {\n            const li = this.list.querySelector('.' + dropDownListClasses.focus);\n            if (li) {\n                this.setSelection(li, e);\n                this.isTyped = false;\n            }\n            if (this.isSelected) {\n                this.isSelectCustom = false;\n                this.onChangeEvent(e);\n            }\n            this.hidePopup(e);\n            this.focusDropDown(e);\n        }\n        else {\n            this.showPopup();\n        }\n    }\n    isSelectFocusItem(element) {\n        return !isNullOrUndefined(element);\n    }\n    getPageCount() {\n        const liHeight = this.list.classList.contains(dropDownBaseClasses.noData) ? null :\n            getComputedStyle(this.getItems()[0], null).getPropertyValue('height');\n        return Math.round(this.list.getBoundingClientRect().height / parseInt(liHeight, 10));\n    }\n    pageUpSelection(steps, event) {\n        const previousItem = steps >= 0 ? this.liCollections[steps + 1] : this.liCollections[0];\n        this.setSelection(previousItem, event);\n    }\n    pageDownSelection(steps, event) {\n        const list = this.getItems();\n        const previousItem = steps <= list.length ? this.liCollections[steps - 1] : this.liCollections[list.length - 1];\n        this.setSelection(previousItem, event);\n    }\n    unWireEvent() {\n        EventHandler.remove(this.inputWrapper.container, 'mousedown', this.dropDownClick);\n        EventHandler.remove(this.inputWrapper.container, 'keypress', this.onSearch);\n        EventHandler.remove(this.inputWrapper.container, 'focus', this.focusIn);\n        this.unBindCommonEvent();\n    }\n    /**\n     * Event un binding for list items.\n     *\n     * @returns {void}\n     */\n    unWireListEvents() {\n        EventHandler.remove(this.list, 'click', this.onMouseClick);\n        EventHandler.remove(this.list, 'mouseover', this.onMouseOver);\n        EventHandler.remove(this.list, 'mouseout', this.onMouseLeave);\n    }\n    checkSelector(id) {\n        return '[id=\"' + id.replace(/(:|\\.|\\[|\\]|,|=|@|\\\\|\\/|#)/g, '\\\\$1') + '\"]';\n    }\n    onDocumentClick(e) {\n        const target = e.target;\n        if (!(!isNullOrUndefined(this.popupObj) && closest(target, this.checkSelector(this.popupObj.element.id))) &&\n            !this.inputWrapper.container.contains(e.target)) {\n            if (this.inputWrapper.container.classList.contains(dropDownListClasses.inputFocus) || this.isPopupOpen) {\n                this.isDocumentClick = true;\n                const isActive = this.isRequested;\n                this.isInteracted = false;\n                this.hidePopup(e);\n                if (!isActive) {\n                    this.onFocusOut();\n                    this.inputWrapper.container.classList.remove(dropDownListClasses.inputFocus);\n                }\n            }\n        }\n        else if (target !== this.inputElement && !(this.allowFiltering && target === this.filterInput)\n            && !(this.getModuleName() === 'combobox' &&\n                !this.allowFiltering && Browser.isDevice && target === this.inputWrapper.buttons[0])) {\n            this.isPreventBlur = (Browser.isIE || Browser.info.name === 'edge') && (document.activeElement === this.targetElement() ||\n                document.activeElement === this.filterInput);\n            e.preventDefault();\n        }\n    }\n    activeStateChange() {\n        if (this.isDocumentClick) {\n            this.hidePopup();\n            this.onFocusOut();\n            this.inputWrapper.container.classList.remove(dropDownListClasses.inputFocus);\n        }\n    }\n    focusDropDown(e) {\n        if (!this.initial && this.isFilterLayout()) {\n            this.focusIn(e);\n        }\n    }\n    dropDownClick(e) {\n        if (e.which === 3 || e.button === 2) {\n            return;\n        }\n        if (this.targetElement().classList.contains(dropDownListClasses.disable) || this.inputWrapper.clearButton === e.target) {\n            return;\n        }\n        const target = e.target;\n        if (target !== this.inputElement && !(this.allowFiltering && target === this.filterInput) && this.getModuleName() !== 'combobox') {\n            e.preventDefault();\n        }\n        if (!this.readonly) {\n            if (this.isPopupOpen) {\n                this.hidePopup();\n                if (this.isFilterLayout()) {\n                    this.focusDropDown(e);\n                }\n            }\n            else {\n                this.focusIn(e);\n                this.floatLabelChange();\n                this.queryString = this.inputElement.value.trim() === '' ? null : this.inputElement.value;\n                this.isDropDownClick = true;\n                this.showPopup();\n            }\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const proxy = this;\n            // eslint-disable-next-line max-len\n            const duration = (this.element.tagName === this.getNgDirective() && this.itemTemplate) ? 500 : 100;\n            if (!this.isSecondClick) {\n                setTimeout(() => {\n                    proxy.cloneElements();\n                    proxy.isSecondClick = true;\n                }, duration);\n            }\n        }\n        else {\n            this.focusIn(e);\n        }\n    }\n    cloneElements() {\n        if (this.list) {\n            let ulElement = this.list.querySelector('ul');\n            if (ulElement) {\n                ulElement = ulElement.cloneNode ? ulElement.cloneNode(true) : ulElement;\n                this.actionCompleteData.ulElement = ulElement;\n            }\n        }\n    }\n    updateSelectedItem(li, e, preventSelect, isSelection) {\n        this.removeSelection();\n        li.classList.add(dropDownBaseClasses.selected);\n        this.removeHover();\n        const value = this.getFormattedValue(li.getAttribute('data-value'));\n        const selectedData = this.getDataByValue(value);\n        if (!this.initial && !preventSelect && !isNullOrUndefined(e)) {\n            const items = this.detachChanges(selectedData);\n            this.isSelected = true;\n            const eventArgs = {\n                e: e,\n                item: li,\n                itemData: items,\n                isInteracted: e ? true : false,\n                cancel: false\n            };\n            this.trigger('select', eventArgs, (eventArgs) => {\n                if (eventArgs.cancel) {\n                    li.classList.remove(dropDownBaseClasses.selected);\n                }\n                else {\n                    this.selectEventCallback(li, e, preventSelect, selectedData, value);\n                    if (isSelection) {\n                        this.setSelectOptions(li, e);\n                    }\n                }\n            });\n        }\n        else {\n            this.selectEventCallback(li, e, preventSelect, selectedData, value);\n            if (isSelection) {\n                this.setSelectOptions(li, e);\n            }\n        }\n    }\n    selectEventCallback(li, e, preventSelect, selectedData, value) {\n        this.previousItemData = (!isNullOrUndefined(this.itemData)) ? this.itemData : null;\n        this.item = li;\n        this.itemData = selectedData;\n        const focusedItem = this.list.querySelector('.' + dropDownBaseClasses.focus);\n        if (focusedItem) {\n            removeClass([focusedItem], dropDownBaseClasses.focus);\n        }\n        li.setAttribute('aria-selected', 'true');\n        this.activeIndex = this.getIndexByValue(value);\n    }\n    activeItem(li) {\n        if (this.isValidLI(li) && !li.classList.contains(dropDownBaseClasses.selected)) {\n            this.removeSelection();\n            li.classList.add(dropDownBaseClasses.selected);\n            this.removeHover();\n            li.setAttribute('aria-selected', 'true');\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    setValue(e) {\n        const dataItem = this.getItemData();\n        if (dataItem.value === null) {\n            Input.setValue(null, this.inputElement, this.floatLabelType, this.showClearButton);\n        }\n        else {\n            Input.setValue(dataItem.text, this.inputElement, this.floatLabelType, this.showClearButton);\n        }\n        if (this.valueTemplate && this.itemData !== null) {\n            this.setValueTemplate();\n        }\n        else if (!isNullOrUndefined(this.valueTempElement) && this.inputElement.previousSibling === this.valueTempElement) {\n            detach(this.valueTempElement);\n            this.inputElement.style.display = 'block';\n        }\n        let clearIcon = dropDownListClasses.clearIcon;\n        let isFilterElement = this.isFiltering() && this.filterInput && (this.getModuleName() === 'combobox');\n        let clearElement = isFilterElement && this.filterInput.parentElement.querySelector('.' + clearIcon);\n        if (this.isFiltering() && clearElement) {\n            clearElement.style.removeProperty('visibility');\n        }\n        if (this.previousValue === dataItem.value) {\n            this.isSelected = false;\n            return true;\n        }\n        else {\n            this.isSelected = !this.initial ? true : false;\n            this.isSelectCustom = false;\n            if (this.getModuleName() === 'dropdownlist') {\n                this.updateIconState();\n            }\n            return false;\n        }\n    }\n    setSelection(li, e) {\n        if (this.isValidLI(li) && (!li.classList.contains(dropDownBaseClasses.selected) || (this.isPopupOpen && this.isSelected\n            && li.classList.contains(dropDownBaseClasses.selected)))) {\n            this.updateSelectedItem(li, e, false, true);\n        }\n        else {\n            this.setSelectOptions(li, e);\n        }\n    }\n    setSelectOptions(li, e) {\n        if (this.list) {\n            this.removeHover();\n        }\n        this.previousSelectedLI = (!isNullOrUndefined(this.selectedLI)) ? this.selectedLI : null;\n        this.selectedLI = li;\n        if (this.setValue(e)) {\n            return;\n        }\n        attributes(this.targetElement(), { 'aria-activedescendant': this.selectedLI ? this.selectedLI.id : null });\n        if (this.isFilterLayout() && this.filterInput) {\n            attributes(this.filterInput, { 'aria-activedescendant': this.selectedLI ? this.selectedLI.id : null });\n        }\n        if ((!this.isPopupOpen && !isNullOrUndefined(li)) || (this.isPopupOpen && !isNullOrUndefined(e) &&\n            (e.type !== 'keydown' || e.type === 'keydown' && e.action === 'enter'))) {\n            this.isSelectCustom = false;\n            this.onChangeEvent(e);\n        }\n        if (this.isPopupOpen && !isNullOrUndefined(this.selectedLI) && this.itemData !== null && (!e || e.type !== 'click')) {\n            this.setScrollPosition(e);\n        }\n        if (Browser.info.name !== 'mozilla') {\n            attributes(this.inputElement, { 'aria-label': this.inputElement.value });\n            attributes(this.targetElement(), { 'aria-describedby': this.inputElement.id });\n            this.targetElement().removeAttribute('aria-live');\n        }\n    }\n    dropdownCompiler(dropdownTemplate) {\n        let checkTemplate = false;\n        if (dropdownTemplate) {\n            try {\n                checkTemplate = (document.querySelectorAll(dropdownTemplate).length) ? true : false;\n            }\n            catch (exception) {\n                checkTemplate = false;\n            }\n        }\n        return checkTemplate;\n    }\n    setValueTemplate() {\n        let compiledString;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        if (this.isReact) {\n            this.clearTemplate(['valueTemplate']);\n            if (this.valueTempElement) {\n                detach(this.valueTempElement);\n                this.inputElement.style.display = 'block';\n                this.valueTempElement = null;\n            }\n        }\n        if (!this.valueTempElement) {\n            this.valueTempElement = this.createElement('span', { className: dropDownListClasses.value });\n            this.inputElement.parentElement.insertBefore(this.valueTempElement, this.inputElement);\n            this.inputElement.style.display = 'none';\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        if (!this.isReact) {\n            this.valueTempElement.innerHTML = '';\n        }\n        const valuecheck = this.dropdownCompiler(this.valueTemplate);\n        if (valuecheck) {\n            compiledString = compile(document.querySelector(this.valueTemplate).innerHTML.trim());\n        }\n        else {\n            compiledString = compile(this.valueTemplate);\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const valueCompTemp = compiledString(this.itemData, this, 'valueTemplate', this.valueTemplateId, this.isStringTemplate, null, this.valueTempElement);\n        if (valueCompTemp && valueCompTemp.length > 0) {\n            for (let i = 0; i < valueCompTemp.length; i++) {\n                this.valueTempElement.appendChild(valueCompTemp[i]);\n            }\n        }\n        this.renderReactTemplates();\n    }\n    removeSelection() {\n        if (this.list) {\n            const selectedItems = this.list.querySelectorAll('.' + dropDownBaseClasses.selected);\n            if (selectedItems.length) {\n                removeClass(selectedItems, dropDownBaseClasses.selected);\n                selectedItems[0].removeAttribute('aria-selected');\n            }\n        }\n    }\n    getItemData() {\n        const fields = this.fields;\n        let dataItem = null;\n        dataItem = this.itemData;\n        let dataValue;\n        let dataText;\n        if (!isNullOrUndefined(dataItem)) {\n            dataValue = getValue(fields.value, dataItem);\n            dataText = getValue(fields.text, dataItem);\n        }\n        const value = (!isNullOrUndefined(dataItem) &&\n            !isUndefined(dataValue) ? dataValue : dataItem);\n        const text = (!isNullOrUndefined(dataItem) &&\n            !isUndefined(dataValue) ? dataText : dataItem);\n        return { value: value, text: text };\n    }\n    /**\n     * To trigger the change event for list.\n     *\n     * @param {MouseEvent | KeyboardEvent | TouchEvent} eve - Specifies the event arguments.\n     * @returns {void}\n     */\n    onChangeEvent(eve) {\n        const dataItem = this.getItemData();\n        const index = this.isSelectCustom ? null : this.activeIndex;\n        this.setProperties({ 'index': index, 'text': dataItem.text, 'value': dataItem.value }, true);\n        this.detachChangeEvent(eve);\n    }\n    detachChanges(value) {\n        let items;\n        if (typeof value === 'string' ||\n            typeof value === 'boolean' ||\n            typeof value === 'number') {\n            items = Object.defineProperties({}, {\n                value: {\n                    value: value,\n                    enumerable: true\n                },\n                text: {\n                    value: value,\n                    enumerable: true\n                }\n            });\n        }\n        else {\n            items = value;\n        }\n        return items;\n    }\n    detachChangeEvent(eve) {\n        this.isSelected = false;\n        this.previousValue = this.value;\n        this.activeIndex = this.index;\n        this.typedString = !isNullOrUndefined(this.text) ? this.text : '';\n        if (!this.initial) {\n            const items = this.detachChanges(this.itemData);\n            let preItems;\n            if (typeof this.previousItemData === 'string' ||\n                typeof this.previousItemData === 'boolean' ||\n                typeof this.previousItemData === 'number') {\n                preItems = Object.defineProperties({}, {\n                    value: {\n                        value: this.previousItemData,\n                        enumerable: true\n                    },\n                    text: {\n                        value: this.previousItemData,\n                        enumerable: true\n                    }\n                });\n            }\n            else {\n                preItems = this.previousItemData;\n            }\n            this.setHiddenValue();\n            const eventArgs = {\n                e: eve,\n                item: this.item,\n                itemData: items,\n                previousItem: this.previousSelectedLI,\n                previousItemData: preItems,\n                isInteracted: eve ? true : false,\n                value: this.value,\n                element: this.element,\n                event: eve\n            };\n            if (this.isAngular && this.preventChange) {\n                this.preventChange = false;\n            }\n            else {\n                this.trigger('change', eventArgs);\n            }\n        }\n        if ((isNullOrUndefined(this.value) || this.value === '') && this.floatLabelType !== 'Always') {\n            removeClass([this.inputWrapper.container], 'e-valid-input');\n        }\n    }\n    setHiddenValue() {\n        if (!isNullOrUndefined(this.value)) {\n            if (this.hiddenElement.querySelector('option')) {\n                const selectedElement = this.hiddenElement.querySelector('option');\n                selectedElement.textContent = this.text;\n                selectedElement.setAttribute('value', this.value.toString());\n            }\n            else {\n                this.hiddenElement.innerHTML = '<option selected>' + this.text + '</option>';\n                const selectedElement = this.hiddenElement.querySelector('option');\n                selectedElement.setAttribute('value', this.value.toString());\n            }\n        }\n        else {\n            this.hiddenElement.innerHTML = '';\n        }\n    }\n    /**\n     * Filter bar implementation\n     *\n     * @param {KeyboardEventArgs} e - Specifies the event arguments.\n     * @returns {void}\n     */\n    onFilterUp(e) {\n        if (!(e.ctrlKey && e.keyCode === 86) && (this.isValidKey || e.keyCode === 40 || e.keyCode === 38)) {\n            this.isValidKey = false;\n            switch (e.keyCode) {\n                case 38: //up arrow\n                case 40: //down arrow\n                    if (this.getModuleName() === 'autocomplete' && !this.isPopupOpen && !this.preventAltUp && !this.isRequested) {\n                        this.preventAutoFill = true;\n                        this.searchLists(e);\n                    }\n                    else {\n                        this.preventAutoFill = false;\n                    }\n                    this.preventAltUp = false;\n                    e.preventDefault();\n                    break;\n                case 46: //delete\n                case 8: //backspace\n                    this.typedString = this.filterInput.value;\n                    if (!this.isPopupOpen && this.typedString !== '' || this.isPopupOpen && this.queryString.length > 0) {\n                        this.preventAutoFill = true;\n                        this.searchLists(e);\n                    }\n                    else if (this.typedString === '' && this.queryString === '' && this.getModuleName() !== 'autocomplete') {\n                        this.preventAutoFill = true;\n                        this.searchLists(e);\n                    }\n                    else if (this.typedString === '') {\n                        if (this.list) {\n                            this.resetFocusElement();\n                        }\n                        this.activeIndex = null;\n                        if (this.getModuleName() !== 'dropdownlist') {\n                            this.preventAutoFill = true;\n                            this.searchLists(e);\n                            if (this.getModuleName() === 'autocomplete') {\n                                this.hidePopup();\n                            }\n                        }\n                    }\n                    e.preventDefault();\n                    break;\n                default:\n                    this.typedString = this.filterInput.value;\n                    this.preventAutoFill = false;\n                    this.searchLists(e);\n                    break;\n            }\n        }\n        else {\n            this.isValidKey = false;\n        }\n    }\n    onFilterDown(e) {\n        switch (e.keyCode) {\n            case 13: //enter\n                break;\n            case 40: //down arrow\n            case 38: //up arrow\n                this.queryString = this.filterInput.value;\n                e.preventDefault();\n                break;\n            case 9: //tab\n                if (this.isPopupOpen && this.getModuleName() !== 'autocomplete') {\n                    e.preventDefault();\n                }\n                break;\n            default:\n                this.prevSelectPoints = this.getSelectionPoints();\n                this.queryString = this.filterInput.value;\n                break;\n        }\n    }\n    removeFillSelection() {\n        if (this.isInteracted) {\n            const selection = this.getSelectionPoints();\n            this.inputElement.setSelectionRange(selection.end, selection.end);\n        }\n    }\n    getQuery(query) {\n        let filterQuery;\n        if (!this.isCustomFilter && this.allowFiltering && this.filterInput) {\n            filterQuery = query ? query.clone() : this.query ? this.query.clone() : new Query();\n            const filterType = this.typedString === '' ? 'contains' : this.filterType;\n            const dataType = this.typeOfData(this.dataSource).typeof;\n            if (!(this.dataSource instanceof DataManager) && dataType === 'string' || dataType === 'number') {\n                filterQuery.where('', filterType, this.typedString, this.ignoreCase, this.ignoreAccent);\n            }\n            else {\n                const fields = (this.fields.text) ? this.fields.text : '';\n                filterQuery.where(fields, filterType, this.typedString, this.ignoreCase, this.ignoreAccent);\n            }\n        }\n        else {\n            filterQuery = query ? query.clone() : this.query ? this.query.clone() : new Query();\n        }\n        return filterQuery;\n    }\n    getSelectionPoints() {\n        const input = this.inputElement;\n        return { start: Math.abs(input.selectionStart), end: Math.abs(input.selectionEnd) };\n    }\n    searchLists(e) {\n        this.isTyped = true;\n        this.activeIndex = null;\n        this.isListSearched = true;\n        if (this.filterInput.parentElement.querySelector('.' + dropDownListClasses.clearIcon)) {\n            const clearElement = this.filterInput.parentElement.querySelector('.' + dropDownListClasses.clearIcon);\n            clearElement.style.visibility = this.filterInput.value === '' ? 'hidden' : 'visible';\n        }\n        this.isDataFetched = false;\n        if (this.isFiltering()) {\n            const eventArgs = {\n                preventDefaultAction: false,\n                text: this.filterInput.value,\n                updateData: (dataSource, query, fields) => {\n                    if (eventArgs.cancel) {\n                        return;\n                    }\n                    this.isCustomFilter = true;\n                    this.filteringAction(dataSource, query, fields);\n                },\n                baseEventArgs: e,\n                cancel: false\n            };\n            this.trigger('filtering', eventArgs, (eventArgs) => {\n                if (!eventArgs.cancel && !this.isCustomFilter && !eventArgs.preventDefaultAction) {\n                    this.filteringAction(this.dataSource, null, this.fields);\n                }\n            });\n        }\n    }\n    /**\n     * To filter the data from given data source by using query\n     *\n     * @param  {Object[] | DataManager } dataSource - Set the data source to filter.\n     * @param  {Query} query - Specify the query to filter the data.\n     * @param  {FieldSettingsModel} fields - Specify the fields to map the column in the data table.\n     * @returns {void}\n     * @deprecated\n     */\n    filter(dataSource, query, fields) {\n        this.isCustomFilter = true;\n        this.filteringAction(dataSource, query, fields);\n    }\n    filteringAction(dataSource, query, fields) {\n        if (!isNullOrUndefined(this.filterInput)) {\n            this.beforePopupOpen = (!this.isPopupOpen && this.getModuleName() === 'combobox' && this.filterInput.value === '') ?\n                false : true;\n            if (this.filterInput.value.trim() === '' && !this.itemTemplate) {\n                this.actionCompleteData.isUpdated = false;\n                this.isTyped = false;\n                if (!isNullOrUndefined(this.actionCompleteData.ulElement) && !isNullOrUndefined(this.actionCompleteData.list)) {\n                    this.onActionComplete(this.actionCompleteData.ulElement, this.actionCompleteData.list);\n                }\n                this.isTyped = true;\n                if (!isNullOrUndefined(this.itemData) && this.getModuleName() === 'dropdownlist') {\n                    this.focusIndexItem();\n                    this.setScrollPosition();\n                }\n                this.isNotSearchList = true;\n            }\n            else {\n                this.isNotSearchList = false;\n                query = (this.filterInput.value.trim() === '') ? null : query;\n                this.resetList(dataSource, fields, query);\n            }\n            this.renderReactTemplates();\n        }\n    }\n    setSearchBox(popupElement) {\n        if (this.isFiltering()) {\n            const parentElement = popupElement.querySelector('.' + dropDownListClasses.filterParent) ?\n                popupElement.querySelector('.' + dropDownListClasses.filterParent) : this.createElement('span', {\n                className: dropDownListClasses.filterParent\n            });\n            this.filterInput = this.createElement('input', {\n                attrs: { type: 'text' },\n                className: dropDownListClasses.filterInput\n            });\n            this.element.parentNode.insertBefore(this.filterInput, this.element);\n            let backIcon = false;\n            if (Browser.isDevice) {\n                backIcon = true;\n            }\n            this.filterInputObj = Input.createInput({\n                element: this.filterInput,\n                buttons: backIcon ?\n                    [dropDownListClasses.backIcon, dropDownListClasses.filterBarClearIcon] : [dropDownListClasses.filterBarClearIcon],\n                properties: { placeholder: this.filterBarPlaceholder }\n            }, this.createElement);\n            if (!isNullOrUndefined(this.cssClass)) {\n                if (this.cssClass.split(' ').indexOf('e-outline') !== -1) {\n                    addClass([this.filterInputObj.container], 'e-outline');\n                }\n                else if (this.cssClass.split(' ').indexOf('e-filled') !== -1) {\n                    addClass([this.filterInputObj.container], 'e-filled');\n                }\n            }\n            append([this.filterInputObj.container], parentElement);\n            prepend([parentElement], popupElement);\n            attributes(this.filterInput, {\n                'aria-disabled': 'false',\n                'aria-owns': this.element.id + '_options',\n                'role': 'listbox',\n                'aria-activedescendant': this.selectedLI ? this.selectedLI.id : null,\n                'autocomplete': 'off',\n                'autocorrect': 'off',\n                'autocapitalize': 'off',\n                'spellcheck': 'false'\n            });\n            this.clearIconElement = this.filterInput.parentElement.querySelector('.' + dropDownListClasses.clearIcon);\n            if (!Browser.isDevice && this.clearIconElement) {\n                EventHandler.add(this.clearIconElement, 'click', this.clearText, this);\n                this.clearIconElement.style.visibility = 'hidden';\n            }\n            if (!Browser.isDevice) {\n                this.searchKeyModule = new KeyboardEvents(this.filterInput, {\n                    keyAction: this.keyActionHandler.bind(this),\n                    keyConfigs: this.keyConfigure,\n                    eventName: 'keydown'\n                });\n            }\n            else {\n                this.searchKeyModule = new KeyboardEvents(this.filterInput, {\n                    keyAction: this.mobileKeyActionHandler.bind(this),\n                    keyConfigs: this.keyConfigure,\n                    eventName: 'keydown'\n                });\n            }\n            EventHandler.add(this.filterInput, 'input', this.onInput, this);\n            EventHandler.add(this.filterInput, 'keyup', this.onFilterUp, this);\n            EventHandler.add(this.filterInput, 'keydown', this.onFilterDown, this);\n            EventHandler.add(this.filterInput, 'blur', this.onBlurHandler, this);\n            EventHandler.add(this.filterInput, 'paste', this.pasteHandler, this);\n            return this.filterInputObj;\n        }\n        else {\n            return inputObject;\n        }\n    }\n    onInput(e) {\n        this.isValidKey = true;\n        // For filtering works in mobile firefox.\n        if (Browser.isDevice && Browser.info.name === 'mozilla') {\n            this.typedString = this.filterInput.value;\n            this.preventAutoFill = true;\n            this.searchLists(e);\n        }\n    }\n    pasteHandler(e) {\n        setTimeout(() => {\n            this.typedString = this.filterInput.value;\n            this.searchLists(e);\n        });\n    }\n    onActionFailure(e) {\n        super.onActionFailure(e);\n        if (this.beforePopupOpen) {\n            this.renderPopup();\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    onActionComplete(ulElement, list, e, isUpdated) {\n        if (this.isNotSearchList) {\n            this.isNotSearchList = false;\n            return;\n        }\n        if (this.isActive) {\n            const selectedItem = this.selectedLI ? this.selectedLI.cloneNode(true) : null;\n            super.onActionComplete(ulElement, list, e);\n            this.updateSelectElementData(this.allowFiltering);\n            if (this.isRequested && !isNullOrUndefined(this.searchKeyEvent) && this.searchKeyEvent.type === 'keydown') {\n                this.isRequested = false;\n                this.keyActionHandler(this.searchKeyEvent);\n                this.searchKeyEvent = null;\n            }\n            if (this.isRequested && !isNullOrUndefined(this.searchKeyEvent)) {\n                this.incrementalSearch(this.searchKeyEvent);\n                this.searchKeyEvent = null;\n            }\n            this.list.scrollTop = 0;\n            if (!isNullOrUndefined(ulElement)) {\n                attributes(ulElement, { 'id': this.element.id + '_options', 'role': 'listbox', 'aria-hidden': 'false' });\n            }\n            if (this.initRemoteRender) {\n                this.initial = true;\n                this.activeIndex = this.index;\n                this.initRemoteRender = false;\n                if (this.value && this.dataSource instanceof DataManager) {\n                    const checkField = isNullOrUndefined(this.fields.value) ? this.fields.text : this.fields.value;\n                    const checkVal = list.some((x) => x[checkField] === this.value);\n                    if (!checkVal) {\n                        this.dataSource.executeQuery(this.getQuery(this.query).where(new Predicate(checkField, 'equal', this.value)))\n                            .then((e) => {\n                            if (e.result.length > 0) {\n                                this.addItem(e.result, list.length);\n                                this.updateValues();\n                            }\n                            else {\n                                this.updateValues();\n                            }\n                        });\n                    }\n                    else {\n                        this.updateValues();\n                    }\n                }\n                else {\n                    this.updateValues();\n                }\n                this.initial = false;\n            }\n            if (this.getModuleName() !== 'autocomplete' && this.isFiltering() && !this.isTyped) {\n                if (!this.actionCompleteData.isUpdated || ((!this.isCustomFilter\n                    && !this.isFilterFocus) || (isNullOrUndefined(this.itemData) && this.allowFiltering)\n                    && ((this.dataSource instanceof DataManager)\n                        || (!isNullOrUndefined(this.dataSource) && !isNullOrUndefined(this.dataSource.length) &&\n                            this.dataSource.length !== 0)))) {\n                    if (this.itemTemplate && this.element.tagName === 'EJS-COMBOBOX' && this.allowFiltering) {\n                        setTimeout(() => {\n                            this.updateActionCompleteDataValues(ulElement, list);\n                        }, 0);\n                    }\n                    else {\n                        this.updateActionCompleteDataValues(ulElement, list);\n                    }\n                }\n                this.addNewItem(list, selectedItem);\n                if (!isNullOrUndefined(this.itemData)) {\n                    this.focusIndexItem();\n                }\n            }\n            if (this.beforePopupOpen) {\n                this.renderPopup();\n            }\n        }\n    }\n    updateActionCompleteDataValues(ulElement, list) {\n        this.actionCompleteData = { ulElement: ulElement.cloneNode(true), list: list, isUpdated: true };\n        if (this.actionData.list !== this.actionCompleteData.list && this.actionCompleteData.ulElement && this.actionCompleteData.list) {\n            this.actionData = this.actionCompleteData;\n        }\n    }\n    addNewItem(listData, newElement) {\n        if (!isNullOrUndefined(this.itemData) && !isNullOrUndefined(newElement)) {\n            const value = this.getItemData().value;\n            const isExist = listData.some((data) => {\n                return (((typeof data === 'string' || typeof data === 'number') && data === value) ||\n                    (getValue(this.fields.value, data) === value));\n            });\n            if (!isExist) {\n                this.addItem(this.itemData);\n            }\n        }\n    }\n    updateActionCompleteData(li, item, index) {\n        if (this.getModuleName() !== 'autocomplete' && this.actionCompleteData.ulElement) {\n            if (this.itemTemplate && this.element.tagName === 'EJS-COMBOBOX' && this.allowFiltering) {\n                setTimeout(() => {\n                    this.actionCompleteDataUpdate(li, item, index);\n                }, 0);\n            }\n            else {\n                this.actionCompleteDataUpdate(li, item, index);\n            }\n        }\n    }\n    actionCompleteDataUpdate(li, item, index) {\n        if (index != null) {\n            this.actionCompleteData.ulElement.insertBefore(li.cloneNode(true), this.actionCompleteData.ulElement.childNodes[index]);\n        }\n        else {\n            this.actionCompleteData.ulElement.appendChild(li.cloneNode(true));\n        }\n        if (this.isFiltering() && this.actionCompleteData.list.indexOf(item) < 0) {\n            this.actionCompleteData.list.push(item);\n        }\n    }\n    focusIndexItem() {\n        const value = this.getItemData().value;\n        this.activeIndex = this.getIndexByValue(value);\n        const element = this.findListElement(this.list, 'li', 'data-value', value);\n        this.selectedLI = element;\n        this.activeItem(element);\n        this.removeFocus();\n    }\n    updateSelection() {\n        const selectedItem = this.list.querySelector('.' + dropDownBaseClasses.selected);\n        if (selectedItem) {\n            this.setProperties({ 'index': this.getIndexByValue(selectedItem.getAttribute('data-value')) });\n            this.activeIndex = this.index;\n        }\n        else {\n            this.removeFocus();\n            this.list.querySelector('.' + dropDownBaseClasses.li).classList.add(dropDownListClasses.focus);\n        }\n    }\n    removeFocus() {\n        const highlightedItem = this.list.querySelectorAll('.' + dropDownListClasses.focus);\n        if (highlightedItem && highlightedItem.length) {\n            removeClass(highlightedItem, dropDownListClasses.focus);\n        }\n    }\n    renderPopup() {\n        if (this.popupObj && document.body.contains(this.popupObj.element)) {\n            this.refreshPopup();\n            return;\n        }\n        const args = { cancel: false };\n        this.trigger('beforeOpen', args, (args) => {\n            if (!args.cancel) {\n                const popupEle = this.createElement('div', {\n                    id: this.element.id + '_popup', className: 'e-ddl e-popup ' + (this.cssClass != null ? this.cssClass : '')\n                });\n                const searchBox = this.setSearchBox(popupEle);\n                this.listHeight = formatUnit(this.popupHeight);\n                if (this.headerTemplate) {\n                    this.setHeaderTemplate(popupEle);\n                }\n                append([this.list], popupEle);\n                if (this.footerTemplate) {\n                    this.setFooterTemplate(popupEle);\n                }\n                document.body.appendChild(popupEle);\n                popupEle.style.visibility = 'hidden';\n                if (this.popupHeight !== 'auto') {\n                    this.searchBoxHeight = 0;\n                    if (!isNullOrUndefined(searchBox.container)) {\n                        this.searchBoxHeight = (searchBox.container.parentElement).getBoundingClientRect().height;\n                        this.listHeight = (parseInt(this.listHeight, 10) - (this.searchBoxHeight)).toString() + 'px';\n                    }\n                    if (this.headerTemplate) {\n                        this.header = this.header ? this.header : popupEle.querySelector('.e-ddl-header');\n                        const height = Math.round(this.header.getBoundingClientRect().height);\n                        this.listHeight = (parseInt(this.listHeight, 10) - (height + this.searchBoxHeight)).toString() + 'px';\n                    }\n                    if (this.footerTemplate) {\n                        this.footer = this.footer ? this.footer : popupEle.querySelector('.e-ddl-footer');\n                        const height = Math.round(this.footer.getBoundingClientRect().height);\n                        this.listHeight = (parseInt(this.listHeight, 10) - (height + this.searchBoxHeight)).toString() + 'px';\n                    }\n                    this.list.style.maxHeight = (parseInt(this.listHeight, 10) - 2).toString() + 'px'; // due to box-sizing property\n                    popupEle.style.maxHeight = formatUnit(this.popupHeight);\n                }\n                else {\n                    popupEle.style.height = 'auto';\n                }\n                let offsetValue = 0;\n                let left;\n                if (!isNullOrUndefined(this.selectedLI) && (!isNullOrUndefined(this.activeIndex) && this.activeIndex >= 0)) {\n                    this.setScrollPosition();\n                }\n                else {\n                    this.list.scrollTop = 0;\n                }\n                if (Browser.isDevice && (!this.allowFiltering && (this.getModuleName() === 'dropdownlist' ||\n                    (this.isDropDownClick && this.getModuleName() === 'combobox')))) {\n                    offsetValue = this.getOffsetValue(popupEle);\n                    const firstItem = this.isEmptyList() ? this.list : this.liCollections[0];\n                    left = -(parseInt(getComputedStyle(firstItem).textIndent, 10) -\n                        parseInt(getComputedStyle(this.inputElement).paddingLeft, 10) +\n                        parseInt(getComputedStyle(this.inputElement.parentElement).borderLeftWidth, 10));\n                }\n                this.getFocusElement();\n                this.createPopup(popupEle, offsetValue, left);\n                this.checkCollision(popupEle);\n                if (Browser.isDevice) {\n                    this.popupObj.element.classList.add(dropDownListClasses.device);\n                    if (this.getModuleName() === 'dropdownlist' || (this.getModuleName() === 'combobox'\n                        && !this.allowFiltering && this.isDropDownClick)) {\n                        this.popupObj.collision = { X: 'fit', Y: 'fit' };\n                    }\n                    if (this.isFilterLayout()) {\n                        this.popupObj.element.classList.add(dropDownListClasses.mobileFilter);\n                        this.popupObj.position = { X: 0, Y: 0 };\n                        this.popupObj.dataBind();\n                        attributes(this.popupObj.element, { style: 'left:0px;right:0px;top:0px;bottom:0px;' });\n                        addClass([document.body, this.popupObj.element], dropDownListClasses.popupFullScreen);\n                        this.setSearchBoxPosition();\n                        this.backIconElement = searchBox.container.querySelector('.e-back-icon');\n                        this.clearIconElement = searchBox.container.querySelector('.' + dropDownListClasses.clearIcon);\n                        EventHandler.add(this.backIconElement, 'click', this.clickOnBackIcon, this);\n                        EventHandler.add(this.clearIconElement, 'click', this.clearText, this);\n                    }\n                }\n                popupEle.style.visibility = 'visible';\n                addClass([popupEle], 'e-popup-close');\n                const scrollParentElements = this.popupObj.getScrollableParent(this.inputWrapper.container);\n                for (const element of scrollParentElements) {\n                    EventHandler.add(element, 'scroll', this.scrollHandler, this);\n                }\n                if (Browser.isDevice && this.isFilterLayout()) {\n                    EventHandler.add(this.list, 'scroll', this.listScroll, this);\n                }\n                if (!isNullOrUndefined(this.list)) {\n                    this.unWireListEvents();\n                    this.wireListEvents();\n                }\n                attributes(this.targetElement(), { 'aria-expanded': 'true' });\n                const inputParent = this.isFiltering() ? this.filterInput.parentElement : this.inputWrapper.container;\n                addClass([inputParent], [dropDownListClasses.inputFocus]);\n                const animModel = { name: 'FadeIn', duration: 100 };\n                this.beforePopupOpen = true;\n                const popupInstance = this.popupObj;\n                const eventArgs = { popup: popupInstance, cancel: false, animation: animModel };\n                this.trigger('open', eventArgs, (eventArgs) => {\n                    if (!eventArgs.cancel) {\n                        addClass([this.inputWrapper.container], [dropDownListClasses.iconAnimation]);\n                        this.renderReactTemplates();\n                        this.popupObj.show(new Animation(eventArgs.animation), (this.zIndex === 1000) ? this.element : null);\n                    }\n                    else {\n                        this.beforePopupOpen = false;\n                        this.destroyPopup();\n                    }\n                });\n            }\n            else {\n                this.beforePopupOpen = false;\n            }\n        });\n    }\n    checkCollision(popupEle) {\n        if (!Browser.isDevice || (Browser.isDevice && !(this.getModuleName() === 'dropdownlist' || this.isDropDownClick))) {\n            const collision = isCollide(popupEle);\n            if (collision.length > 0) {\n                popupEle.style.marginTop = -parseInt(getComputedStyle(popupEle).marginTop, 10) + 'px';\n            }\n            this.popupObj.resolveCollision();\n        }\n    }\n    getOffsetValue(popupEle) {\n        const popupStyles = getComputedStyle(popupEle);\n        const borderTop = parseInt(popupStyles.borderTopWidth, 10);\n        const borderBottom = parseInt(popupStyles.borderBottomWidth, 10);\n        return this.setPopupPosition(borderTop + borderBottom);\n    }\n    createPopup(element, offsetValue, left) {\n        this.popupObj = new Popup(element, {\n            width: this.setWidth(), targetType: 'relative',\n            relateTo: this.inputWrapper.container, collision: { X: 'flip', Y: 'flip' }, offsetY: offsetValue,\n            enableRtl: this.enableRtl, offsetX: left, position: { X: 'left', Y: 'bottom' },\n            zIndex: this.zIndex,\n            close: () => {\n                if (!this.isDocumentClick) {\n                    this.focusDropDown();\n                }\n                // eslint-disable-next-line\n                if (this.isReact) {\n                    this.clearTemplate(['headerTemplate', 'footerTemplate']);\n                }\n                const isResetItem = (this.getModuleName() === 'autocomplete') ? true : false;\n                this.isNotSearchList = false;\n                this.isDocumentClick = false;\n                this.destroyPopup();\n                if (this.isFiltering() && this.actionCompleteData.list && this.actionCompleteData.list[0]) {\n                    this.isActive = true;\n                    this.onActionComplete(this.actionCompleteData.ulElement, this.actionCompleteData.list, null, true);\n                }\n            },\n            open: () => {\n                EventHandler.add(document, 'mousedown', this.onDocumentClick, this);\n                this.isPopupOpen = true;\n                const actionList = this.actionCompleteData && this.actionCompleteData.ulElement &&\n                    this.actionCompleteData.ulElement.querySelector('li');\n                const ulElement = this.list.querySelector('ul li');\n                if (this.isFiltering() && this.itemTemplate && (this.element.tagName === this.getNgDirective()) &&\n                    (actionList && ulElement && actionList.textContent !== ulElement.textContent) &&\n                    this.element.tagName !== 'EJS-COMBOBOX') {\n                    this.cloneElements();\n                }\n                if (this.isFilterLayout()) {\n                    removeClass([this.inputWrapper.container], [dropDownListClasses.inputFocus]);\n                    this.isFilterFocus = true;\n                    this.filterInput.focus();\n                    if (this.inputWrapper.clearButton) {\n                        addClass([this.inputWrapper.clearButton], dropDownListClasses.clearIconHide);\n                    }\n                }\n                this.activeStateChange();\n            },\n            targetExitViewport: () => {\n                if (!Browser.isDevice) {\n                    this.hidePopup();\n                }\n            }\n        });\n    }\n    isEmptyList() {\n        return !isNullOrUndefined(this.liCollections) && this.liCollections.length === 0;\n    }\n    getFocusElement() {\n        // combo-box used this method\n    }\n    isFilterLayout() {\n        return this.getModuleName() === 'dropdownlist' && this.allowFiltering;\n    }\n    scrollHandler() {\n        if (Browser.isDevice && ((this.getModuleName() === 'dropdownlist' &&\n            !this.isFilterLayout()) || (this.getModuleName() === 'combobox' && !this.allowFiltering && this.isDropDownClick))) {\n            this.hidePopup();\n        }\n    }\n    setSearchBoxPosition() {\n        const searchBoxHeight = this.filterInput.parentElement.getBoundingClientRect().height;\n        this.popupObj.element.style.maxHeight = '100%';\n        this.popupObj.element.style.width = '100%';\n        this.list.style.maxHeight = (window.innerHeight - searchBoxHeight) + 'px';\n        this.list.style.height = (window.innerHeight - searchBoxHeight) + 'px';\n        const clearElement = this.filterInput.parentElement.querySelector('.' + dropDownListClasses.clearIcon);\n        detach(this.filterInput);\n        clearElement.parentElement.insertBefore(this.filterInput, clearElement);\n    }\n    setPopupPosition(border) {\n        let offsetValue;\n        const popupOffset = border;\n        const selectedLI = this.list.querySelector('.' + dropDownListClasses.focus) || this.selectedLI;\n        const firstItem = this.isEmptyList() ? this.list : this.liCollections[0];\n        const lastItem = this.isEmptyList() ? this.list : this.liCollections[this.getItems().length - 1];\n        const liHeight = firstItem.getBoundingClientRect().height;\n        const listHeight = this.list.offsetHeight / 2;\n        const height = isNullOrUndefined(selectedLI) ? firstItem.offsetTop : selectedLI.offsetTop;\n        const lastItemOffsetValue = lastItem.offsetTop;\n        if (lastItemOffsetValue - listHeight < height && !isNullOrUndefined(this.liCollections) &&\n            this.liCollections.length > 0 && !isNullOrUndefined(selectedLI)) {\n            const count = this.list.offsetHeight / liHeight;\n            const paddingBottom = parseInt(getComputedStyle(this.list).paddingBottom, 10);\n            offsetValue = (count - (this.liCollections.length - this.activeIndex)) * liHeight - popupOffset + paddingBottom;\n            this.list.scrollTop = selectedLI.offsetTop;\n        }\n        else if (height > listHeight) {\n            offsetValue = listHeight - liHeight / 2;\n            this.list.scrollTop = height - listHeight + liHeight / 2;\n        }\n        else {\n            offsetValue = height;\n        }\n        const inputHeight = this.inputWrapper.container.offsetHeight;\n        offsetValue = offsetValue + liHeight + popupOffset - ((liHeight - inputHeight) / 2);\n        return -offsetValue;\n    }\n    setWidth() {\n        let width = formatUnit(this.popupWidth);\n        if (width.indexOf('%') > -1) {\n            const inputWidth = this.inputWrapper.container.offsetWidth * parseFloat(width) / 100;\n            width = inputWidth.toString() + 'px';\n        }\n        if (Browser.isDevice && (!this.allowFiltering && (this.getModuleName() === 'dropdownlist' ||\n            (this.isDropDownClick && this.getModuleName() === 'combobox')))) {\n            const firstItem = this.isEmptyList() ? this.list : this.liCollections[0];\n            width = (parseInt(width, 10) + (parseInt(getComputedStyle(firstItem).textIndent, 10) -\n                parseInt(getComputedStyle(this.inputElement).paddingLeft, 10) +\n                parseInt(getComputedStyle(this.inputElement.parentElement).borderLeftWidth, 10)) * 2) + 'px';\n        }\n        return width;\n    }\n    scrollBottom(isInitial) {\n        if (!isNullOrUndefined(this.selectedLI)) {\n            const currentOffset = this.list.offsetHeight;\n            const nextBottom = this.selectedLI.offsetTop + this.selectedLI.offsetHeight - this.list.scrollTop;\n            let nextOffset = this.list.scrollTop + nextBottom - currentOffset;\n            nextOffset = isInitial ? nextOffset + parseInt(getComputedStyle(this.list).paddingTop, 10) * 2 : nextOffset;\n            let boxRange = this.selectedLI.offsetTop + this.selectedLI.offsetHeight - this.list.scrollTop;\n            boxRange = this.fields.groupBy && !isNullOrUndefined(this.fixedHeaderElement) ?\n                boxRange - this.fixedHeaderElement.offsetHeight : boxRange;\n            if (this.activeIndex === 0) {\n                this.list.scrollTop = 0;\n            }\n            else if (nextBottom > currentOffset || !(boxRange > 0 && this.list.offsetHeight > boxRange)) {\n                this.list.scrollTop = nextOffset;\n            }\n        }\n    }\n    scrollTop() {\n        if (!isNullOrUndefined(this.selectedLI)) {\n            let nextOffset = this.selectedLI.offsetTop - this.list.scrollTop;\n            nextOffset = this.fields.groupBy && !isNullOrUndefined(this.fixedHeaderElement) ?\n                nextOffset - this.fixedHeaderElement.offsetHeight : nextOffset;\n            const boxRange = (this.selectedLI.offsetTop + this.selectedLI.offsetHeight - this.list.scrollTop);\n            if (this.activeIndex === 0) {\n                this.list.scrollTop = 0;\n            }\n            else if (nextOffset < 0) {\n                this.list.scrollTop = this.list.scrollTop + nextOffset;\n            }\n            else if (!(boxRange > 0 && this.list.offsetHeight > boxRange)) {\n                this.list.scrollTop = this.selectedLI.offsetTop - (this.fields.groupBy && !isNullOrUndefined(this.fixedHeaderElement) ?\n                    this.fixedHeaderElement.offsetHeight : 0);\n            }\n        }\n    }\n    isEditTextBox() {\n        return false;\n    }\n    isFiltering() {\n        return this.allowFiltering;\n    }\n    isPopupButton() {\n        return true;\n    }\n    setScrollPosition(e) {\n        if (!isNullOrUndefined(e)) {\n            switch (e.action) {\n                case 'pageDown':\n                case 'down':\n                case 'end':\n                    this.scrollBottom();\n                    break;\n                default:\n                    this.scrollTop();\n                    break;\n            }\n        }\n        else {\n            this.scrollBottom(true);\n        }\n    }\n    clearText() {\n        this.filterInput.value = this.typedString = '';\n        this.searchLists(null);\n    }\n    listScroll() {\n        this.filterInput.blur();\n    }\n    setEleWidth(width) {\n        if (!isNullOrUndefined(width)) {\n            if (typeof width === 'number') {\n                this.inputWrapper.container.style.width = formatUnit(width);\n            }\n            else if (typeof width === 'string') {\n                this.inputWrapper.container.style.width = (width.match(/px|%|em/)) ? (width) : (formatUnit(width));\n            }\n        }\n    }\n    closePopup(delay, e) {\n        this.isTyped = false;\n        if (!(this.popupObj && document.body.contains(this.popupObj.element) && this.beforePopupOpen)) {\n            return;\n        }\n        EventHandler.remove(document, 'mousedown', this.onDocumentClick);\n        this.isActive = false;\n        this.filterInputObj = null;\n        this.isDropDownClick = false;\n        this.preventAutoFill = false;\n        const scrollableParentElements = this.popupObj.getScrollableParent(this.inputWrapper.container);\n        for (const element of scrollableParentElements) {\n            EventHandler.remove(element, 'scroll', this.scrollHandler);\n        }\n        if (Browser.isDevice && this.isFilterLayout()) {\n            removeClass([document.body, this.popupObj.element], dropDownListClasses.popupFullScreen);\n            EventHandler.remove(this.list, 'scroll', this.listScroll);\n        }\n        if (this.isFilterLayout()) {\n            if (!Browser.isDevice) {\n                this.searchKeyModule.destroy();\n                if (this.clearIconElement) {\n                    EventHandler.remove(this.clearIconElement, 'click', this.clearText);\n                }\n            }\n            if (this.backIconElement) {\n                EventHandler.remove(this.backIconElement, 'click', this.clickOnBackIcon);\n                EventHandler.remove(this.clearIconElement, 'click', this.clearText);\n            }\n            EventHandler.remove(this.filterInput, 'input', this.onInput);\n            EventHandler.remove(this.filterInput, 'keyup', this.onFilterUp);\n            EventHandler.remove(this.filterInput, 'keydown', this.onFilterDown);\n            EventHandler.remove(this.filterInput, 'blur', this.onBlurHandler);\n            EventHandler.remove(this.filterInput, 'paste', this.pasteHandler);\n            this.filterInput = null;\n        }\n        attributes(this.targetElement(), { 'aria-expanded': 'false' });\n        this.inputWrapper.container.classList.remove(dropDownListClasses.iconAnimation);\n        if (this.isFiltering()) {\n            this.actionCompleteData.isUpdated = false;\n        }\n        this.beforePopupOpen = false;\n        const animModel = {\n            name: 'FadeOut',\n            duration: 100,\n            delay: delay ? delay : 0\n        };\n        const popupInstance = this.popupObj;\n        const eventArgs = { popup: popupInstance, cancel: false, animation: animModel, event: e || null };\n        this.trigger('close', eventArgs, (eventArgs) => {\n            if (!isNullOrUndefined(this.popupObj) &&\n                !isNullOrUndefined(this.popupObj.element.querySelector('.e-fixed-head'))) {\n                const fixedHeader = this.popupObj.element.querySelector('.e-fixed-head');\n                fixedHeader.parentNode.removeChild(fixedHeader);\n                this.fixedHeaderElement = null;\n            }\n            if (!eventArgs.cancel) {\n                if (this.getModuleName() === 'autocomplete') {\n                    this.rippleFun();\n                }\n                if (this.isPopupOpen) {\n                    this.popupObj.hide(new Animation(eventArgs.animation));\n                }\n                else {\n                    this.destroyPopup();\n                }\n            }\n        });\n    }\n    destroyPopup() {\n        this.isPopupOpen = false;\n        this.isFilterFocus = false;\n        this.popupObj.destroy();\n        detach(this.popupObj.element);\n    }\n    clickOnBackIcon() {\n        this.hidePopup();\n        this.focusIn();\n    }\n    /**\n     * To Initialize the control rendering\n     *\n     * @private\n     * @returns {void}\n     */\n    render() {\n        if (this.element.tagName === 'INPUT') {\n            this.inputElement = this.element;\n            if (isNullOrUndefined(this.inputElement.getAttribute('role'))) {\n                this.inputElement.setAttribute('role', 'textbox');\n            }\n            if (isNullOrUndefined(this.inputElement.getAttribute('type'))) {\n                this.inputElement.setAttribute('type', 'text');\n            }\n        }\n        else {\n            this.inputElement = this.createElement('input', { attrs: { role: 'textbox', type: 'text' } });\n            if (this.element.tagName !== this.getNgDirective()) {\n                this.element.style.display = 'none';\n            }\n            this.element.parentElement.insertBefore(this.inputElement, this.element);\n            this.preventTabIndex(this.inputElement);\n        }\n        let updatedCssClassValues = this.cssClass;\n        if (!isNullOrUndefined(this.cssClass) && this.cssClass !== '') {\n            updatedCssClassValues = (this.cssClass.replace(/\\s+/g, ' ')).trim();\n        }\n        this.inputWrapper = Input.createInput({\n            element: this.inputElement,\n            buttons: this.isPopupButton() ? [dropDownListClasses.icon] : null,\n            floatLabelType: this.floatLabelType,\n            properties: {\n                readonly: this.getModuleName() === 'dropdownlist' ? true : this.readonly,\n                placeholder: this.placeholder,\n                cssClass: updatedCssClassValues,\n                enabled: this.enabled,\n                enableRtl: this.enableRtl,\n                showClearButton: this.showClearButton\n            }\n        }, this.createElement);\n        if (this.element.tagName === this.getNgDirective()) {\n            this.element.appendChild(this.inputWrapper.container);\n        }\n        else {\n            this.inputElement.parentElement.insertBefore(this.element, this.inputElement);\n        }\n        this.hiddenElement = this.createElement('select', {\n            attrs: { 'aria-hidden': 'true', 'tabindex': '-1', 'class': dropDownListClasses.hiddenElement }\n        });\n        prepend([this.hiddenElement], this.inputWrapper.container);\n        this.validationAttribute(this.element, this.hiddenElement);\n        this.setReadOnly();\n        this.setFields();\n        this.inputWrapper.container.style.width = formatUnit(this.width);\n        this.inputWrapper.container.classList.add('e-ddl');\n        this.wireEvent();\n        this.tabIndex = this.element.hasAttribute('tabindex') ? this.element.getAttribute('tabindex') : '0';\n        this.element.removeAttribute('tabindex');\n        const id = this.element.getAttribute('id') ? this.element.getAttribute('id') : getUniqueID('ej2_dropdownlist');\n        this.element.id = id;\n        this.hiddenElement.id = id + '_hidden';\n        this.targetElement().setAttribute('tabindex', this.tabIndex);\n        attributes(this.targetElement(), this.getAriaAttributes());\n        this.updateDataAttribute(this.htmlAttributes);\n        this.setHTMLAttributes();\n        if (this.value !== null || this.activeIndex !== null || this.text !== null) {\n            this.initValue();\n        }\n        else if (this.element.tagName === 'SELECT' && this.element.options[0]) {\n            const selectElement = this.element;\n            this.value = selectElement.options[selectElement.selectedIndex].value;\n            this.text = isNullOrUndefined(this.value) ? null : selectElement.options[selectElement.selectedIndex].textContent;\n            this.initValue();\n        }\n        this.preventTabIndex(this.element);\n        if (!this.enabled) {\n            this.targetElement().tabIndex = -1;\n        }\n        this.initial = false;\n        this.element.style.opacity = '';\n        this.inputElement.onselect = (e) => {\n            e.stopImmediatePropagation();\n        };\n        this.inputElement.onchange = (e) => {\n            e.stopImmediatePropagation();\n        };\n        if (this.element.hasAttribute('autofocus')) {\n            this.focusIn();\n        }\n        if (!isNullOrUndefined(this.text)) {\n            this.inputElement.setAttribute('value', this.text);\n        }\n        if (this.element.hasAttribute('data-val')) {\n            this.element.setAttribute('data-val', 'false');\n        }\n        this.renderComplete();\n    }\n    setFooterTemplate(popupEle) {\n        let compiledString;\n        if (this.footer) {\n            this.footer.innerHTML = '';\n        }\n        else {\n            this.footer = this.createElement('div');\n            addClass([this.footer], dropDownListClasses.footer);\n        }\n        const footercheck = this.dropdownCompiler(this.footerTemplate);\n        if (footercheck) {\n            compiledString = compile(select(this.footerTemplate, document).innerHTML.trim());\n        }\n        else {\n            compiledString = compile(this.footerTemplate);\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const footerCompTemp = compiledString({}, this, 'footerTemplate', this.footerTemplateId, this.isStringTemplate, null, this.footer);\n        if (footerCompTemp && footerCompTemp.length > 0) {\n            for (let i = 0; i < footerCompTemp.length; i++) {\n                this.footer.appendChild(footerCompTemp[i]);\n            }\n        }\n        append([this.footer], popupEle);\n    }\n    setHeaderTemplate(popupEle) {\n        let compiledString;\n        if (this.header) {\n            this.header.innerHTML = '';\n        }\n        else {\n            this.header = this.createElement('div');\n            addClass([this.header], dropDownListClasses.header);\n        }\n        const headercheck = this.dropdownCompiler(this.headerTemplate);\n        if (headercheck) {\n            compiledString = compile(select(this.headerTemplate, document).innerHTML.trim());\n        }\n        else {\n            compiledString = compile(this.headerTemplate);\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const headerCompTemp = compiledString({}, this, 'headerTemplate', this.headerTemplateId, this.isStringTemplate, null, this.header);\n        if (headerCompTemp && headerCompTemp.length) {\n            for (let i = 0; i < headerCompTemp.length; i++) {\n                this.header.appendChild(headerCompTemp[i]);\n            }\n        }\n        const contentEle = popupEle.querySelector('div.e-content');\n        popupEle.insertBefore(this.header, contentEle);\n    }\n    setOldText(text) {\n        this.text = text;\n    }\n    setOldValue(value) {\n        this.value = value;\n    }\n    refreshPopup() {\n        if (!isNullOrUndefined(this.popupObj) && document.body.contains(this.popupObj.element) &&\n            ((this.allowFiltering && !(Browser.isDevice && this.isFilterLayout())) || this.getModuleName() === 'autocomplete')) {\n            removeClass([this.popupObj.element], 'e-popup-close');\n            this.popupObj.refreshPosition(this.inputWrapper.container);\n            this.popupObj.resolveCollision();\n        }\n    }\n    checkData(newProp) {\n        if (newProp.dataSource && !isNullOrUndefined(Object.keys(newProp.dataSource)) && this.itemTemplate && this.allowFiltering &&\n            !(this.isListSearched && (newProp.dataSource instanceof DataManager))) {\n            this.list = null;\n            this.actionCompleteData = { ulElement: null, list: null, isUpdated: false };\n        }\n        this.isListSearched = false;\n        const isChangeValue = Object.keys(newProp).indexOf('value') !== -1 && isNullOrUndefined(newProp.value);\n        const isChangeText = Object.keys(newProp).indexOf('text') !== -1 && isNullOrUndefined(newProp.text);\n        if (this.getModuleName() !== 'autocomplete' && this.allowFiltering && (isChangeValue || isChangeText)) {\n            this.itemData = null;\n        }\n        if (this.allowFiltering && newProp.dataSource && !isNullOrUndefined(Object.keys(newProp.dataSource))) {\n            this.actionCompleteData = { ulElement: null, list: null, isUpdated: false };\n            this.actionData = this.actionCompleteData;\n        }\n        else if (this.allowFiltering && newProp.query && !isNullOrUndefined(Object.keys(newProp.query))) {\n            this.actionCompleteData = this.getModuleName() === 'combobox' ?\n                { ulElement: null, list: null, isUpdated: false } : this.actionCompleteData;\n            this.actionData = this.actionCompleteData;\n        }\n    }\n    updateDataSource(props) {\n        if (this.inputElement.value !== '' || (!isNullOrUndefined(props) && (isNullOrUndefined(props.dataSource)\n            || (!(props.dataSource instanceof DataManager) && props.dataSource.length === 0)))) {\n            this.clearAll(null, props);\n        }\n        if ((this.fields.groupBy && props.fields) && !this.isGroupChecking && this.list) {\n            EventHandler.remove(this.list, 'scroll', this.setFloatingHeader);\n            EventHandler.add(this.list, 'scroll', this.setFloatingHeader, this);\n        }\n        if (!(!isNullOrUndefined(props) && (isNullOrUndefined(props.dataSource)\n            || (!(props.dataSource instanceof DataManager) && props.dataSource.length === 0))) || !(props.dataSource === [])) {\n            this.typedString = '';\n            this.resetList(this.dataSource);\n        }\n        if (!this.isCustomFilter && !this.isFilterFocus && document.activeElement !== this.filterInput) {\n            this.checkCustomValue();\n        }\n    }\n    checkCustomValue() {\n        this.itemData = this.getDataByValue(this.value);\n        const dataItem = this.getItemData();\n        this.setProperties({ 'text': dataItem.text, 'value': dataItem.value });\n    }\n    updateInputFields() {\n        if (this.getModuleName() === 'dropdownlist') {\n            Input.setValue(this.text, this.inputElement, this.floatLabelType, this.showClearButton);\n        }\n    }\n    /**\n     * Dynamically change the value of properties.\n     *\n     * @private\n     * @param {DropDownListModel} newProp - Returns the dynamic property value of the component.\n     * @param {DropDownListModel} oldProp - Returns the previous previous value of the component.\n     * @returns {void}\n     */\n    onPropertyChanged(newProp, oldProp) {\n        if (this.getModuleName() === 'dropdownlist') {\n            this.checkData(newProp);\n            this.setUpdateInitial(['fields', 'query', 'dataSource'], newProp);\n        }\n        for (const prop of Object.keys(newProp)) {\n            switch (prop) {\n                case 'query':\n                case 'dataSource': break;\n                case 'htmlAttributes':\n                    this.setHTMLAttributes();\n                    break;\n                case 'width':\n                    this.setEleWidth(newProp.width);\n                    break;\n                case 'placeholder':\n                    Input.setPlaceholder(newProp.placeholder, this.inputElement);\n                    break;\n                case 'filterBarPlaceholder':\n                    if (this.filterInput) {\n                        Input.setPlaceholder(newProp.filterBarPlaceholder, this.filterInput);\n                    }\n                    break;\n                case 'readonly':\n                    if (this.getModuleName() !== 'dropdownlist') {\n                        Input.setReadonly(newProp.readonly, this.inputElement);\n                    }\n                    this.setReadOnly();\n                    break;\n                case 'cssClass':\n                    this.setCssClass(newProp.cssClass, oldProp.cssClass);\n                    break;\n                case 'enableRtl':\n                    this.setEnableRtl();\n                    break;\n                case 'enabled':\n                    this.setEnable();\n                    break;\n                case 'text':\n                    if (newProp.text === null) {\n                        this.clearAll();\n                        break;\n                    }\n                    if (!this.list) {\n                        if (this.dataSource instanceof DataManager) {\n                            this.initRemoteRender = true;\n                        }\n                        this.renderList();\n                    }\n                    if (!this.initRemoteRender) {\n                        const li = this.getElementByText(newProp.text);\n                        if (!this.checkValidLi(li)) {\n                            if (this.liCollections && this.liCollections.length === 100 &&\n                                this.getModuleName() === 'autocomplete' && this.listData.length > 100) {\n                                this.setSelectionData(newProp.text, oldProp.text, 'text');\n                            }\n                            else if (newProp.text && this.dataSource instanceof DataManager) {\n                                const listLength = this.getItems().length;\n                                const checkField = isNullOrUndefined(this.fields.text) ? this.fields.value : this.fields.text;\n                                this.typedString = '';\n                                this.dataSource.executeQuery(this.getQuery(this.query).where(new Predicate(checkField, 'equal', newProp.text)))\n                                    .then((e) => {\n                                    if (e.result.length > 0) {\n                                        this.addItem(e.result, listLength);\n                                        this.updateValues();\n                                    }\n                                    else {\n                                        this.setOldText(oldProp.text);\n                                    }\n                                });\n                            }\n                            else {\n                                this.setOldText(oldProp.text);\n                            }\n                        }\n                        this.updateInputFields();\n                    }\n                    break;\n                case 'value':\n                    if (newProp.value === null) {\n                        this.clearAll();\n                        break;\n                    }\n                    this.notify('beforeValueChange', { newProp: newProp }); // gird component value type change\n                    if (!this.list) {\n                        if (this.dataSource instanceof DataManager) {\n                            this.initRemoteRender = true;\n                        }\n                        this.renderList();\n                    }\n                    if (!this.initRemoteRender) {\n                        const item = this.getElementByValue(newProp.value);\n                        if (!this.checkValidLi(item)) {\n                            if (this.liCollections && this.liCollections.length === 100 &&\n                                this.getModuleName() === 'autocomplete' && this.listData.length > 100) {\n                                this.setSelectionData(newProp.value, oldProp.value, 'value');\n                            }\n                            else if (newProp.value && this.dataSource instanceof DataManager) {\n                                const listLength = this.getItems().length;\n                                const checkField = isNullOrUndefined(this.fields.value) ? this.fields.text : this.fields.value;\n                                this.typedString = '';\n                                this.dataSource.executeQuery(this.getQuery(this.query).where(new Predicate(checkField, 'equal', newProp.value)))\n                                    .then((e) => {\n                                    if (e.result.length > 0) {\n                                        this.addItem(e.result, listLength);\n                                        this.updateValues();\n                                    }\n                                    else {\n                                        this.setOldValue(oldProp.value);\n                                    }\n                                });\n                            }\n                            else {\n                                this.setOldValue(oldProp.value);\n                            }\n                        }\n                        this.updateInputFields();\n                        this.preventChange = this.isAngular && this.preventChange ? !this.preventChange : this.preventChange;\n                    }\n                    break;\n                case 'index':\n                    if (newProp.index === null) {\n                        this.clearAll();\n                        break;\n                    }\n                    if (!this.list) {\n                        if (this.dataSource instanceof DataManager) {\n                            this.initRemoteRender = true;\n                        }\n                        this.renderList();\n                    }\n                    if (!this.initRemoteRender && this.liCollections) {\n                        const element = this.liCollections[newProp.index];\n                        if (!this.checkValidLi(element)) {\n                            if (this.liCollections && this.liCollections.length === 100 &&\n                                this.getModuleName() === 'autocomplete' && this.listData.length > 100) {\n                                this.setSelectionData(newProp.index, oldProp.index, 'index');\n                            }\n                            else {\n                                this.index = oldProp.index;\n                            }\n                        }\n                        this.updateInputFields();\n                    }\n                    break;\n                case 'footerTemplate':\n                    if (this.popupObj) {\n                        this.setFooterTemplate(this.popupObj.element);\n                    }\n                    break;\n                case 'headerTemplate':\n                    if (this.popupObj) {\n                        this.setHeaderTemplate(this.popupObj.element);\n                    }\n                    break;\n                case 'valueTemplate':\n                    if (!isNullOrUndefined(this.itemData) && this.valueTemplate != null) {\n                        this.setValueTemplate();\n                    }\n                    break;\n                case 'allowFiltering':\n                    if (this.allowFiltering) {\n                        this.actionCompleteData = { ulElement: this.ulElement,\n                            list: this.listData, isUpdated: true };\n                        this.actionData = this.actionCompleteData;\n                        this.updateSelectElementData(this.allowFiltering);\n                    }\n                    break;\n                case 'floatLabelType':\n                    Input.removeFloating(this.inputWrapper);\n                    Input.addFloating(this.inputElement, newProp.floatLabelType, this.placeholder, this.createElement);\n                    break;\n                case 'showClearButton':\n                    Input.setClearButton(newProp.showClearButton, this.inputElement, this.inputWrapper, null, this.createElement);\n                    this.bindClearEvent();\n                    break;\n                default:\n                    {\n                        // eslint-disable-next-line max-len\n                        const ddlProps = this.getPropObject(prop, newProp, oldProp);\n                        super.onPropertyChanged(ddlProps.newProperty, ddlProps.oldProperty);\n                    }\n                    break;\n            }\n        }\n    }\n    checkValidLi(element) {\n        if (this.isValidLI(element)) {\n            this.setSelection(element, null);\n            return true;\n        }\n        return false;\n    }\n    setSelectionData(newProp, oldProp, prop) {\n        let li;\n        this.updateListValues = () => {\n            if (prop === 'text') {\n                li = this.getElementByText(newProp);\n                if (!this.checkValidLi(li)) {\n                    this.setOldText(oldProp);\n                }\n            }\n            else if (prop === 'value') {\n                li = this.getElementByValue(newProp);\n                if (!this.checkValidLi(li)) {\n                    this.setOldValue(oldProp);\n                }\n            }\n            else if (prop === 'index') {\n                li = this.liCollections[newProp];\n                if (!this.checkValidLi(li)) {\n                    this.index = oldProp;\n                }\n            }\n        };\n    }\n    setReadOnly() {\n        if (this.readonly) {\n            addClass([this.inputWrapper.container], ['e-readonly']);\n        }\n        else {\n            removeClass([this.inputWrapper.container], ['e-readonly']);\n        }\n    }\n    setCssClass(newClass, oldClass) {\n        if (!isNullOrUndefined(oldClass)) {\n            oldClass = (oldClass.replace(/\\s+/g, ' ')).trim();\n        }\n        if (!isNullOrUndefined(newClass)) {\n            newClass = (newClass.replace(/\\s+/g, ' ')).trim();\n        }\n        Input.setCssClass(newClass, [this.inputWrapper.container], oldClass);\n        if (this.popupObj) {\n            Input.setCssClass(newClass, [this.popupObj.element], oldClass);\n        }\n    }\n    /**\n     * Return the module name of this component.\n     *\n     * @private\n     * @returns {string} Return the module name of this component.\n     */\n    getModuleName() {\n        return 'dropdownlist';\n    }\n    /**\n     * Opens the popup that displays the list of items.\n     *\n     * @returns {void}\n     */\n    showPopup() {\n        if (!this.enabled) {\n            return;\n        }\n        if (this.isFiltering() && this.dataSource instanceof DataManager && (this.actionData.list != this.actionCompleteData.list) &&\n            this.actionData.list && this.actionData.ulElement) {\n            this.actionCompleteData = this.actionData;\n            this.onActionComplete(this.actionCompleteData.ulElement, this.actionCompleteData.list, null, true);\n        }\n        if (this.beforePopupOpen) {\n            this.refreshPopup();\n            return;\n        }\n        this.beforePopupOpen = true;\n        if (this.isFiltering() && !this.isActive && this.actionCompleteData.list && this.actionCompleteData.list[0]) {\n            this.isActive = true;\n            this.onActionComplete(this.actionCompleteData.ulElement, this.actionCompleteData.list, null, true);\n        }\n        else if (isNullOrUndefined(this.list) || !isUndefined(this.list) && (this.list.classList.contains(dropDownBaseClasses.noData) ||\n            this.list.querySelectorAll('.' + dropDownBaseClasses.li).length <= 0)) {\n            this.renderList();\n        }\n        this.invokeRenderPopup();\n    }\n    invokeRenderPopup() {\n        if (Browser.isDevice && this.isFilterLayout()) {\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const proxy = this;\n            window.onpopstate = () => {\n                proxy.hidePopup();\n            };\n            history.pushState({}, '');\n        }\n        if (!isNullOrUndefined(this.list.children[0]) || this.list.classList.contains(dropDownBaseClasses.noData)) {\n            this.renderPopup();\n        }\n        attributes(this.targetElement(), { 'aria-activedescendant': this.selectedLI ? this.selectedLI.id : null });\n    }\n    renderHightSearch() {\n        // update high light search\n    }\n    /* eslint-disable valid-jsdoc, jsdoc/require-param */\n    /**\n     * Hides the popup if it is in an open state.\n     *\n     * @returns {void}\n     */\n    hidePopup(e) {\n        /* eslint-enable valid-jsdoc, jsdoc/require-param */\n        if (this.isEscapeKey && this.getModuleName() === 'dropdownlist') {\n            Input.setValue(this.text, this.inputElement, this.floatLabelType, this.showClearButton);\n            this.isEscapeKey = false;\n            if (!isNullOrUndefined(this.index)) {\n                const element = this.findListElement(this.ulElement, 'li', 'data-value', this.value);\n                this.selectedLI = this.liCollections[this.index] || element;\n                if (this.selectedLI) {\n                    this.updateSelectedItem(this.selectedLI, null, true);\n                    if (this.valueTemplate && this.itemData !== null) {\n                        this.setValueTemplate();\n                    }\n                }\n            }\n            else {\n                this.resetSelection();\n            }\n        }\n        this.closePopup(0, e);\n        const dataItem = this.getItemData();\n        const isSelectVal = !isNullOrUndefined(this.selectedLI);\n        if (this.inputElement && this.inputElement.value.trim() === '' && !this.isInteracted && (this.isSelectCustom ||\n            isSelectVal && this.inputElement.value !== dataItem.text)) {\n            this.isSelectCustom = false;\n            this.clearAll(e);\n        }\n    }\n    /* eslint-disable valid-jsdoc, jsdoc/require-param */\n    /**\n     * Sets the focus on the component for interaction.\n     *\n     * @returns {void}\n     */\n    focusIn(e) {\n        if (!this.enabled) {\n            return;\n        }\n        if (this.targetElement().classList.contains(dropDownListClasses.disable)) {\n            return;\n        }\n        let isFocused = false;\n        if (this.preventFocus && Browser.isDevice) {\n            this.inputWrapper.container.tabIndex = 1;\n            this.inputWrapper.container.focus();\n            this.preventFocus = false;\n            isFocused = true;\n        }\n        if (!isFocused) {\n            this.targetElement().focus();\n        }\n        addClass([this.inputWrapper.container], [dropDownListClasses.inputFocus]);\n        this.onFocus(e);\n    }\n    /**\n     * Moves the focus from the component if the component is already focused.\n     *\n     * @returns {void}\n     */\n    focusOut(e) {\n        /* eslint-enable valid-jsdoc, jsdoc/require-param */\n        if (!this.enabled) {\n            return;\n        }\n        this.isTyped = true;\n        this.hidePopup(e);\n        if (this.targetElement()) {\n            this.targetElement().blur();\n        }\n        removeClass([this.inputWrapper.container], [dropDownListClasses.inputFocus]);\n    }\n    /**\n     * Removes the component from the DOM and detaches all its related event handlers. Also it removes the attributes and classes.\n     *\n     * @method destroy\n     * @returns {void}\n     */\n    destroy() {\n        this.isActive = false;\n        resetIncrementalSearchValues(this.element.id);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        if (this.isReact) {\n            this.clearTemplate();\n        }\n        this.hidePopup();\n        this.unWireEvent();\n        if (this.list) {\n            this.unWireListEvents();\n        }\n        if (this.element && !this.element.classList.contains('e-' + this.getModuleName())) {\n            return;\n        }\n        if (this.inputElement) {\n            const attrArray = ['readonly', 'aria-disabled', 'aria-placeholder',\n                'placeholder', 'aria-owns', 'aria-labelledby', 'aria-haspopup', 'aria-expanded',\n                'aria-activedescendant', 'autocomplete', 'aria-readonly', 'autocorrect',\n                'autocapitalize', 'spellcheck', 'aria-autocomplete', 'aria-live', 'aria-describedby', 'aria-label'];\n            for (let i = 0; i < attrArray.length; i++) {\n                this.inputElement.removeAttribute(attrArray[i]);\n            }\n            this.inputElement.setAttribute('tabindex', this.tabIndex);\n            this.inputElement.classList.remove('e-input');\n            Input.setValue('', this.inputElement, this.floatLabelType, this.showClearButton);\n        }\n        this.element.style.display = 'block';\n        if (this.inputWrapper.container.parentElement.tagName === this.getNgDirective()) {\n            detach(this.inputWrapper.container);\n        }\n        else {\n            this.inputWrapper.container.parentElement.insertBefore(this.element, this.inputWrapper.container);\n            detach(this.inputWrapper.container);\n        }\n        super.destroy();\n    }\n    /* eslint-disable valid-jsdoc, jsdoc/require-returns-description */\n    /**\n     * Gets all the list items bound on this component.\n     *\n     * @returns {Element[]}\n     */\n    getItems() {\n        if (!this.list) {\n            if (this.dataSource instanceof DataManager) {\n                this.initRemoteRender = true;\n            }\n            this.renderList();\n        }\n        return this.ulElement ? super.getItems() : [];\n    }\n    /**\n     * Gets the data Object that matches the given value.\n     *\n     * @param { string | number } value - Specifies the value of the list item.\n     * @returns {Object}\n     */\n    getDataByValue(value) {\n        return super.getDataByValue(value);\n    }\n    /* eslint-enable valid-jsdoc, jsdoc/require-returns-description */\n    /**\n     * Allows you to clear the selected values from the component.\n     *\n     * @returns {void}\n     */\n    clear() {\n        this.value = null;\n    }\n};\n__decorate$1([\n    Property(null)\n], DropDownList.prototype, \"cssClass\", void 0);\n__decorate$1([\n    Property('100%')\n], DropDownList.prototype, \"width\", void 0);\n__decorate$1([\n    Property('300px')\n], DropDownList.prototype, \"popupHeight\", void 0);\n__decorate$1([\n    Property('100%')\n], DropDownList.prototype, \"popupWidth\", void 0);\n__decorate$1([\n    Property(null)\n], DropDownList.prototype, \"placeholder\", void 0);\n__decorate$1([\n    Property(null)\n], DropDownList.prototype, \"filterBarPlaceholder\", void 0);\n__decorate$1([\n    Property({})\n], DropDownList.prototype, \"htmlAttributes\", void 0);\n__decorate$1([\n    Property(null)\n], DropDownList.prototype, \"query\", void 0);\n__decorate$1([\n    Property(null)\n], DropDownList.prototype, \"valueTemplate\", void 0);\n__decorate$1([\n    Property(null)\n], DropDownList.prototype, \"headerTemplate\", void 0);\n__decorate$1([\n    Property(null)\n], DropDownList.prototype, \"footerTemplate\", void 0);\n__decorate$1([\n    Property(false)\n], DropDownList.prototype, \"allowFiltering\", void 0);\n__decorate$1([\n    Property(false)\n], DropDownList.prototype, \"readonly\", void 0);\n__decorate$1([\n    Property(null)\n], DropDownList.prototype, \"text\", void 0);\n__decorate$1([\n    Property(null)\n], DropDownList.prototype, \"value\", void 0);\n__decorate$1([\n    Property(null)\n], DropDownList.prototype, \"index\", void 0);\n__decorate$1([\n    Property('Never')\n], DropDownList.prototype, \"floatLabelType\", void 0);\n__decorate$1([\n    Property(false)\n], DropDownList.prototype, \"showClearButton\", void 0);\n__decorate$1([\n    Event()\n], DropDownList.prototype, \"filtering\", void 0);\n__decorate$1([\n    Event()\n], DropDownList.prototype, \"change\", void 0);\n__decorate$1([\n    Event()\n], DropDownList.prototype, \"beforeOpen\", void 0);\n__decorate$1([\n    Event()\n], DropDownList.prototype, \"open\", void 0);\n__decorate$1([\n    Event()\n], DropDownList.prototype, \"close\", void 0);\n__decorate$1([\n    Event()\n], DropDownList.prototype, \"blur\", void 0);\n__decorate$1([\n    Event()\n], DropDownList.prototype, \"focus\", void 0);\nDropDownList = __decorate$1([\n    NotifyPropertyChanges\n], DropDownList);\n\n/**\n * export all modules from current location\n */\n\nvar __decorate$2 = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nconst RTL = 'e-rtl';\nconst DROPDOWNTREE = 'e-ddt';\nconst HIDDENELEMENT = 'e-ddt-hidden';\nconst DROPDOWNICON = 'e-input-group-icon e-ddt-icon e-icons';\nconst SHOW_CHIP = 'e-show-chip';\nconst SHOW_CLEAR = 'e-show-clear';\nconst SHOW_DD_ICON = 'e-show-dd-icon';\nconst CHIP_INPUT = 'e-chip-input';\nconst INPUTFOCUS = 'e-input-focus';\nconst INPUTGROUP = 'e-input-group';\nconst ICONANIMATION = 'e-icon-anim';\nconst CLOSEICON_CLASS = 'e-clear-icon e-icons';\nconst CHIP_WRAPPER = 'e-chips-wrapper';\nconst CHIP_COLLECTION = 'e-chips-collection';\nconst CHIP = 'e-chips';\nconst CHIP_CONTENT = 'e-chipcontent';\nconst CHIP_CLOSE = 'e-chips-close';\nconst HIDEICON = 'e-icon-hide';\nconst DDTHIDEICON = 'e-ddt-icon-hide';\nconst POPUP_CLASS = 'e-ddt e-popup';\nconst PARENTITEM = 'e-list-parent';\nconst CONTENT = 'e-popup-content';\nconst DROPDOWN = 'e-dropdown';\nconst DISABLED = 'e-disabled';\nconst ICONS = 'e-icons';\nconst CHECKALLPARENT = 'e-selectall-parent';\nconst CHECKALLHIDE = 'e-hide-selectall';\nconst BIGGER = 'e-bigger';\nconst SMALL = 'e-small';\nconst ALLTEXT = 'e-all-text';\nconst CHECKBOXFRAME = 'e-frame';\nconst CHECK = 'e-check';\nconst CHECKBOXWRAP = 'e-checkbox-wrapper';\nconst FILTERWRAP = 'e-filter-wrap';\nconst DDTICON = 'e-ddt-icon';\nconst FOOTER = 'e-ddt-footer';\nconst HEADER = 'e-ddt-header';\nconst NODATACONTAINER = 'e-ddt-nodata';\nconst NODATA = 'e-no-data';\nconst HEADERTEMPLATE = 'HeaderTemplate';\nconst FOOTERTEMPLATE = 'FooterTemplate';\nconst NORECORDSTEMPLATE = 'NoRecordsTemplate';\nconst ACTIONFAILURETEMPLATE = 'ActionFailureTemplate';\nconst CUSTOMTEMPLATE = 'CustomTemplate';\nconst REMAIN_WRAPPER = 'e-remain';\nconst OVERFLOW_VIEW = 'e-overflow';\nconst SHOW_TEXT = 'e-show-text';\nconst TOTAL_COUNT_WRAPPER = 'e-total-count';\nconst REMAIN_COUNT = 'e-wrap-count';\nclass Fields extends ChildProperty {\n}\n__decorate$2([\n    Property('child')\n], Fields.prototype, \"child\", void 0);\n__decorate$2([\n    Property([])\n], Fields.prototype, \"dataSource\", void 0);\n__decorate$2([\n    Property('expanded')\n], Fields.prototype, \"expanded\", void 0);\n__decorate$2([\n    Property('hasChildren')\n], Fields.prototype, \"hasChildren\", void 0);\n__decorate$2([\n    Property('htmlAttributes')\n], Fields.prototype, \"htmlAttributes\", void 0);\n__decorate$2([\n    Property('iconCss')\n], Fields.prototype, \"iconCss\", void 0);\n__decorate$2([\n    Property('imageUrl')\n], Fields.prototype, \"imageUrl\", void 0);\n__decorate$2([\n    Property('parentValue')\n], Fields.prototype, \"parentValue\", void 0);\n__decorate$2([\n    Property(null)\n], Fields.prototype, \"query\", void 0);\n__decorate$2([\n    Property('selected')\n], Fields.prototype, \"selected\", void 0);\n__decorate$2([\n    Property(null)\n], Fields.prototype, \"tableName\", void 0);\n__decorate$2([\n    Property('text')\n], Fields.prototype, \"text\", void 0);\n__decorate$2([\n    Property('tooltip')\n], Fields.prototype, \"tooltip\", void 0);\n__decorate$2([\n    Property('value')\n], Fields.prototype, \"value\", void 0);\nclass TreeSettings extends ChildProperty {\n}\n__decorate$2([\n    Property(false)\n], TreeSettings.prototype, \"autoCheck\", void 0);\n__decorate$2([\n    Property('Auto')\n], TreeSettings.prototype, \"expandOn\", void 0);\n__decorate$2([\n    Property(false)\n], TreeSettings.prototype, \"loadOnDemand\", void 0);\n/**\n * The Dropdown Tree control allows you to select single or multiple values from hierarchical data in a tree-like structure.\n * It has several out-of-the-box features, such as data binding, check boxes, templates, filter,\n * UI customization, accessibility, and preselected values.\n * ```html\n *  <input type=\"text\" id=\"tree\"></input>\n * ```\n * ```typescript\n *  let ddtObj: DropDownTree = new DropDownTree();\n *  ddtObj.appendTo(\"#tree\");\n * ```\n */\nlet DropDownTree = class DropDownTree extends Component {\n    constructor(options, element) {\n        super(options, element);\n        this.filterTimer = null;\n        this.isFilteredData = false;\n        this.isFilterRestore = false;\n        // eslint-disable-next-line\n        this.selectedData = [];\n        this.filterDelayTime = 300;\n        this.isClicked = false;\n    }\n    /**\n     * Get the properties to be maintained in the persisted state.\n     *\n     * @returns {string}\n     * @hidden\n     */\n    getPersistData() {\n        const keyEntity = ['value'];\n        return this.addOnPersist(keyEntity);\n    }\n    getLocaleName() {\n        return 'drop-down-tree';\n    }\n    /**\n     * Initialize the event handler.\n     *\n     * @returns {void}\n     * @private\n     */\n    preRender() {\n        this.inputFocus = false;\n        this.isPopupOpen = false;\n        this.isFirstRender = true;\n        this.isInitialized = false;\n        this.currentText = null;\n        this.currentValue = null;\n        this.oldValue = null;\n        this.removeValue = false;\n        this.selectedText = [];\n        this.treeItems = [];\n        this.dataValue = null;\n        this.isNodeSelected = false;\n        this.isDynamicChange = false;\n        this.clearIconWidth = 0;\n        this.headerTemplateId = `${this.element.id}${HEADERTEMPLATE}`;\n        this.footerTemplateId = `${this.element.id}${FOOTERTEMPLATE}`;\n        this.actionFailureTemplateId = `${this.element.id}${ACTIONFAILURETEMPLATE}`;\n        this.noRecordsTemplateId = `${this.element.id}${NORECORDSTEMPLATE}`;\n        this.customTemplateId = `${this.element.id}${CUSTOMTEMPLATE}`;\n        this.keyConfigs = {\n            escape: 'escape',\n            altUp: 'alt+uparrow',\n            altDown: 'alt+downarrow',\n            tab: 'tab',\n            shiftTab: 'shift+tab',\n            end: 'end',\n            enter: 'enter',\n            home: 'home',\n            moveDown: 'downarrow',\n            moveLeft: 'leftarrow',\n            moveRight: 'rightarrow',\n            moveUp: 'uparrow',\n            ctrlDown: 'ctrl+downarrow',\n            ctrlUp: 'ctrl+uparrow',\n            ctrlEnter: 'ctrl+enter',\n            ctrlHome: 'ctrl+home',\n            ctrlEnd: 'ctrl+end',\n            shiftDown: 'shift+downarrow',\n            shiftUp: 'shift+uparrow',\n            shiftEnter: 'shift+enter',\n            shiftHome: 'shift+home',\n            shiftEnd: 'shift+end',\n            csDown: 'ctrl+shift+downarrow',\n            csUp: 'ctrl+shift+uparrow',\n            csEnter: 'ctrl+shift+enter',\n            csHome: 'ctrl+shift+home',\n            csEnd: 'ctrl+shift+end',\n            space: 'space',\n            ctrlA: 'ctrl+A'\n        };\n    }\n    /**\n     * To Initialize the control rendering\n     *\n     * @private\n     * @returns {void}\n     */\n    render() {\n        const isTree = select('#' + this.element.id + '_tree', document);\n        if (isTree) {\n            const popupDiv = select('#' + this.element.id + '_popup', document);\n            detach(popupDiv ? popupDiv : isTree.parentElement);\n        }\n        this.ensureAutoCheck();\n        if (this.element.tagName === 'INPUT') {\n            this.inputEle = this.element;\n            if (isNullOrUndefined(this.inputEle.getAttribute('role'))) {\n                this.inputEle.setAttribute('role', 'textbox');\n            }\n            if (isNullOrUndefined(this.inputEle.getAttribute('type'))) {\n                this.inputEle.setAttribute('type', 'text');\n            }\n        }\n        else {\n            this.inputEle = this.createElement('input', { attrs: { role: 'textbox', type: 'text' } });\n            this.element.parentElement.insertBefore(this.inputEle, this.element);\n        }\n        this.inputObj = Input.createInput({\n            element: this.inputEle,\n            floatLabelType: this.floatLabelType,\n            buttons: this.showDropDownIcon ? [DROPDOWNICON] : null,\n            properties: {\n                readonly: true,\n                placeholder: this.placeholder,\n                enabled: this.enabled,\n                cssClass: this.cssClass,\n                enableRtl: this.enableRtl\n            }\n        }, this.createElement);\n        this.inputWrapper = this.inputObj.container;\n        if (!this.inputWrapper.classList.contains(INPUTGROUP)) {\n            this.inputWrapper.classList.add(INPUTGROUP);\n        }\n        if (this.showDropDownIcon) {\n            this.inputWrapper.classList.add(SHOW_DD_ICON);\n        }\n        if (this.element.tagName === this.getDirective()) {\n            this.element.appendChild(this.inputWrapper);\n        }\n        this.createHiddenElement();\n        this.createClearIcon();\n        this.inputWrapper.classList.add(DROPDOWNTREE);\n        this.setElementWidth(this.width);\n        this.updateDataAttribute();\n        this.setHTMLAttributes();\n        this.setAttributes();\n        this.popupDiv = this.createElement('div', { className: CONTENT, attrs: { 'tabindex': '0' } });\n        this.popupDiv.classList.add(DROPDOWN);\n        this.tree = this.createElement('div', { id: this.element.id + '_tree' });\n        this.popupDiv.appendChild(this.tree);\n        document.body.appendChild(this.popupDiv);\n        this.wireTreeEvents();\n        addClass([this.popupDiv], DDTHIDEICON);\n        this.renderTree();\n        this.isRemoteData = this.fields.dataSource instanceof DataManager;\n        if (this.allowMultiSelection || this.showCheckBox) {\n            if (this.mode !== 'Delimiter') {\n                this.createChip();\n            }\n            if (!this.wrapText && this.mode !== 'Custom') {\n                this.overFlowWrapper = this.createElement('span', { className: OVERFLOW_VIEW + ' ' + HIDEICON });\n                this.inputWrapper.insertBefore(this.overFlowWrapper, this.hiddenElement);\n                if (this.mode !== 'Box') {\n                    addClass([this.overFlowWrapper], SHOW_TEXT);\n                }\n            }\n        }\n        if (!this.isRemoteData) {\n            this.setTreeValue();\n            this.setTreeText();\n            this.updateHiddenValue();\n            this.setSelectedValue();\n            if (!this.wrapText) {\n                this.updateView();\n            }\n        }\n        this.wireEvents();\n        const firstUl = select('.' + PARENTITEM, this.treeObj.element);\n        if (firstUl && firstUl.getAttribute('aria-multiselectable')) {\n            firstUl.removeAttribute('aria-multiselectable');\n        }\n        this.oldValue = this.value;\n        this.isInitialized = true;\n        this.hasTemplate = this.itemTemplate || this.headerTemplate || this.footerTemplate || this.actionFailureTemplate\n            || this.noRecordsTemplate || this.customTemplate;\n        this.renderComplete();\n    }\n    ensureAutoCheck() {\n        if (this.allowFiltering && this.treeSettings.autoCheck) {\n            this.setProperties({ treeSettings: { autoCheck: false } }, true);\n        }\n    }\n    hideCheckAll(flag) {\n        const checkAllEle = !isNullOrUndefined(this.popupEle) ? this.popupEle.querySelector('.' + CHECKALLPARENT) : null;\n        if (!isNullOrUndefined(checkAllEle)) {\n            if (flag && !checkAllEle.classList.contains(CHECKALLHIDE)) {\n                addClass([checkAllEle], CHECKALLHIDE);\n            }\n            else if (!flag && checkAllEle.classList.contains(CHECKALLHIDE)) {\n                removeClass([checkAllEle], CHECKALLHIDE);\n            }\n        }\n    }\n    renderFilter() {\n        this.filterContainer = this.createElement('div', {\n            id: this.element.id + '_filter_wrap',\n            className: FILTERWRAP\n        });\n        const filterInput = this.createElement('input', {\n            id: this.element.id + '_filter',\n            attrs: { autocomplete: 'off', 'aria-label': this.filterBarPlaceholder }\n        });\n        this.filterContainer.appendChild(filterInput);\n        prepend([this.filterContainer], this.popupEle);\n        this.filterObj = new TextBox({\n            value: '',\n            showClearButton: true,\n            placeholder: this.filterBarPlaceholder,\n            input: this.filterChangeHandler.bind(this)\n        });\n        this.filterObj.appendTo('#' + this.element.id + '_filter');\n    }\n    filterChangeHandler(args) {\n        if (!isNullOrUndefined(args.value)) {\n            window.clearTimeout(this.filterTimer);\n            this.filterTimer = window.setTimeout(() => { this.filterHandler(args.value, args.event); }, this.filterDelayTime);\n        }\n    }\n    filterHandler(value, event) {\n        if (!this.isFilteredData) {\n            this.treeData = this.treeObj.getTreeData();\n        }\n        const filterFields = this.cloneFields(this.fields);\n        const args = {\n            cancel: false,\n            preventDefaultAction: false,\n            event: event,\n            text: value,\n            fields: filterFields\n        };\n        this.trigger('filtering', args, (args) => {\n            if (!args.cancel) {\n                let flag = false;\n                let fields;\n                this.isFilteredData = true;\n                if (value === '') {\n                    this.isFilteredData = false;\n                    this.isFilterRestore = true;\n                    fields = this.cloneFields(this.fields);\n                }\n                else if (args.preventDefaultAction) {\n                    fields = args.fields;\n                }\n                else {\n                    if (this.treeDataType === 1) {\n                        fields = this.selfReferencefilter(value, args.fields);\n                    }\n                    else {\n                        if (this.fields.dataSource instanceof DataManager) {\n                            flag = true;\n                        }\n                        else {\n                            fields = this.nestedFilter(value, args.fields);\n                        }\n                    }\n                }\n                this.hideCheckAll(this.isFilteredData);\n                if (flag) {\n                    return;\n                }\n                this.treeObj.fields = this.getTreeFields(fields);\n                this.treeObj.dataBind();\n            }\n        });\n    }\n    nestedFilter(value, filteredFields) {\n        // eslint-disable-next-line\n        const matchedDataSource = [];\n        for (let i = 0; i < this.treeData.length; i++) {\n            // eslint-disable-next-line\n            const filteredChild = this.nestedChildFilter(value, this.treeData[i]);\n            if (!isNullOrUndefined(filteredChild)) {\n                matchedDataSource.push(filteredChild);\n            }\n        }\n        filteredFields.dataSource = matchedDataSource;\n        return filteredFields;\n    }\n    // eslint-disable-next-line\n    nestedChildFilter(value, node) {\n        // eslint-disable-next-line\n        const children = node[this.fields.child];\n        if (isNullOrUndefined(children)) {\n            return (this.isMatchedNode(value, node)) ? node : null;\n        }\n        else {\n            // eslint-disable-next-line\n            const matchedChildren = [];\n            for (let i = 0; i < children.length; i++) {\n                // eslint-disable-next-line\n                const filteredChild = this.nestedChildFilter(value, children[i]);\n                if (!isNullOrUndefined(filteredChild)) {\n                    matchedChildren.push(filteredChild);\n                }\n            }\n            let filteredItems = Object.assign({}, node);\n            if (matchedChildren.length !== 0) {\n                filteredItems[this.fields.child] = matchedChildren;\n                return filteredItems;\n            }\n            else {\n                filteredItems[this.fields.child] = null;\n                return (this.isMatchedNode(value, filteredItems)) ? filteredItems : null;\n            }\n        }\n    }\n    selfReferencefilter(value, filteredFields) {\n        // eslint-disable-next-line\n        const matchedData = [];\n        // eslint-disable-next-line\n        const matchedDataSource = [];\n        for (let i = 0; i < this.treeData.length; i++) {\n            if (this.isMatchedNode(value, this.treeData[i])) {\n                matchedData.push(this.treeData[i]);\n            }\n        }\n        for (let i = 0; i < matchedData.length; i++) {\n            if (matchedDataSource.indexOf(matchedData[i]) === -1) {\n                matchedDataSource.push(matchedData[i]);\n                // eslint-disable-next-line\n                let parentId = matchedData[i][this.fields.parentValue];\n                while (!isNullOrUndefined(parentId)) {\n                    // eslint-disable-next-line\n                    let parent = null;\n                    for (let j = 0; j < this.treeData.length; j++) {\n                        // eslint-disable-next-line\n                        const value = this.treeData[j][this.fields.value];\n                        if (!isNullOrUndefined(value) && (value === parentId)) {\n                            parent = this.treeData[j];\n                            break;\n                        }\n                    }\n                    if (!isNullOrUndefined(parent) && (matchedDataSource.indexOf(parent) === -1)) {\n                        matchedDataSource.push(parent);\n                        parentId = parent[this.fields.parentValue];\n                    }\n                    else {\n                        break;\n                    }\n                }\n            }\n        }\n        filteredFields.dataSource = matchedDataSource;\n        return filteredFields;\n    }\n    // eslint-disable-next-line\n    isMatchedNode(value, node) {\n        let checkValue = node[this.fields.text];\n        if (this.ignoreCase) {\n            checkValue = checkValue.toLowerCase();\n            value = value.toLowerCase();\n        }\n        if (this.ignoreAccent) {\n            checkValue = DataUtil.ignoreDiacritics(checkValue);\n            value = DataUtil.ignoreDiacritics(value);\n        }\n        if (this.filterType === 'StartsWith') {\n            return checkValue.slice(0, value.length) === value;\n        }\n        else if (this.filterType === 'EndsWith') {\n            return checkValue.slice(-value.length) === value;\n        }\n        else {\n            return checkValue.indexOf(value) !== -1;\n        }\n    }\n    /* To wire events for the dropdown tree */\n    wireEvents() {\n        EventHandler.add(this.inputWrapper, 'mouseup', this.dropDownClick, this);\n        EventHandler.add(this.inputWrapper, 'focus', this.focusIn, this);\n        EventHandler.add(this.inputWrapper, 'blur', this.focusOut, this);\n        EventHandler.add(this.inputWrapper, 'mousemove', this.mouseIn, this);\n        EventHandler.add(this.inputWrapper, 'mouseout', this.onMouseLeave, this);\n        EventHandler.add(this.overAllClear, 'mousedown', this.clearAll, this);\n        EventHandler.add(window, 'resize', this.windowResize, this);\n        const formElement = closest(this.inputWrapper, 'form');\n        if (formElement) {\n            EventHandler.add(formElement, 'reset', this.resetValueHandler, this);\n        }\n        this.keyboardModule = new KeyboardEvents(this.inputWrapper, {\n            keyAction: this.keyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n    }\n    wireTreeEvents() {\n        this.keyboardModule = new KeyboardEvents(this.tree, {\n            keyAction: this.treeAction.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n    }\n    wireCheckAllWrapperEvents() {\n        this.keyboardModule = new KeyboardEvents(this.checkAllParent, {\n            keyAction: this.checkAllAction.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n    }\n    /* To unwire events for the dropdown tree */\n    unWireEvents() {\n        EventHandler.remove(this.inputWrapper, 'mouseup', this.dropDownClick);\n        EventHandler.remove(this.inputWrapper, 'focus', this.focusIn);\n        EventHandler.remove(this.inputWrapper, 'blur', this.focusOut);\n        EventHandler.remove(this.inputWrapper, 'mousemove', this.mouseIn);\n        EventHandler.remove(this.inputWrapper, 'mouseout', this.onMouseLeave);\n        EventHandler.remove(this.overAllClear, 'mousedown', this.clearAll);\n        EventHandler.remove(window, 'resize', this.windowResize);\n        const formElement = closest(this.inputWrapper, 'form');\n        if (formElement) {\n            EventHandler.remove(formElement, 'reset', this.resetValueHandler);\n        }\n    }\n    /* Trigger when the dropdown is clicked */\n    dropDownClick(e) {\n        if (!this.enabled || this.readonly) {\n            return;\n        }\n        if (this.isClearButtonClick) {\n            this.isClearButtonClick = false;\n            return;\n        }\n        if (this.isPopupOpen) {\n            this.hidePopup();\n        }\n        else {\n            this.focusIn(e);\n            this.renderPopup();\n        }\n        this.showOverAllClear();\n    }\n    mouseIn() {\n        if (this.enabled || !this.readonly) {\n            this.showOverAllClear();\n        }\n    }\n    onMouseLeave() {\n        if (!this.inputFocus) {\n            addClass([this.overAllClear], HIDEICON);\n            removeClass([this.inputWrapper], SHOW_CLEAR);\n        }\n    }\n    getDirective() {\n        return 'EJS-DROPDOWNTREE';\n    }\n    focusOut(e) {\n        if (!this.enabled || this.readonly || !this.inputFocus) {\n            return;\n        }\n        if ((Browser.isIE || Browser.info.name === 'edge') && (e.target === this.inputWrapper)) {\n            return;\n        }\n        const target = e.relatedTarget;\n        if ((target !== this.inputEle) && (isNullOrUndefined(target)) && (e.target !== this.inputWrapper || !this.isPopupOpen)) {\n            this.onFocusOut(e);\n        }\n    }\n    onFocusOut(event) {\n        this.inputFocus = false;\n        if (this.isPopupOpen) {\n            this.hidePopup();\n        }\n        if (this.isClearButtonClick) {\n            this.isClearButtonClick = false;\n        }\n        if (this.showClearButton) {\n            this.clearIconWidth = select('.e-clear-icon', this.inputWrapper).offsetWidth;\n            addClass([this.overAllClear], HIDEICON);\n            removeClass([this.inputWrapper], SHOW_CLEAR);\n        }\n        removeClass([this.inputWrapper], [INPUTFOCUS]);\n        if ((this.allowMultiSelection || this.showCheckBox)) {\n            const isValue = this.value ? (this.value.length ? true : false) : false;\n            if (this.mode !== 'Delimiter' && this.mode !== 'Custom') {\n                if (this.chipWrapper && (this.mode === 'Default')) {\n                    addClass([this.chipWrapper], HIDEICON);\n                    removeClass([this.inputWrapper], SHOW_CHIP);\n                    removeClass([this.inputEle], CHIP_INPUT);\n                }\n            }\n            if (!this.wrapText && isValue) {\n                this.updateView();\n            }\n        }\n        if (this.changeOnBlur) {\n            this.triggerChangeEvent(event);\n        }\n        this.removeValue = false;\n        this.oldValue = this.value;\n        this.trigger('blur');\n    }\n    updateView() {\n        if ((!this.showCheckBox && !this.allowMultiSelection) || this.mode === 'Custom' || this.inputFocus) {\n            return;\n        }\n        if (this.mode !== 'Box') {\n            addClass([this.inputWrapper, this.overFlowWrapper], SHOW_TEXT);\n        }\n        else {\n            addClass([this.inputWrapper], SHOW_CHIP);\n        }\n        if (this.value && this.value.length !== 0) {\n            if (this.inputWrapper.contains(this.chipWrapper)) {\n                addClass([this.chipWrapper], HIDEICON);\n            }\n            addClass([this.inputEle], CHIP_INPUT);\n            this.updateOverFlowView();\n            this.ensurePlaceHolder();\n        }\n    }\n    triggerChangeEvent(event) {\n        const isEqual = this.ddtCompareValues(this.oldValue, this.value);\n        if ((!isEqual || this.isChipDelete) && !this.removeValue) {\n            const eventArgs = {\n                e: event,\n                oldValue: this.oldValue,\n                value: this.value,\n                isInteracted: event ? true : false,\n                element: this.element\n            };\n            this.trigger('change', eventArgs);\n            this.oldValue = this.value;\n        }\n    }\n    ddtCompareValues(oldValue, newValue) {\n        if (oldValue === null || newValue === null) {\n            const isValid = oldValue === null ? ((newValue === oldValue) ? true : false) :\n                (oldValue.length === 0 ? (newValue === oldValue) : false);\n            return isValid;\n        }\n        else if (oldValue.length !== newValue.length) {\n            return false;\n        }\n        for (let i = 0; i < oldValue.length; i++) {\n            if (oldValue[i] !== newValue[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    focusIn(e) {\n        if (!this.enabled || this.readonly || this.inputFocus) {\n            return;\n        }\n        this.showOverAllClear();\n        this.inputFocus = true;\n        addClass([this.inputWrapper], [INPUTFOCUS]);\n        if (this.allowMultiSelection || this.showCheckBox) {\n            if (this.mode !== 'Delimiter' && this.inputFocus) {\n                if (this.chipWrapper && (this.value && this.value.length !== 0)) {\n                    removeClass([this.chipWrapper], HIDEICON);\n                    addClass([this.inputEle], CHIP_INPUT);\n                }\n                addClass([this.inputWrapper], SHOW_CHIP);\n                if (this.popupObj) {\n                    this.popupObj.refreshPosition();\n                }\n            }\n            if (!this.wrapText && this.mode !== 'Custom') {\n                if (this.inputWrapper.contains(this.overFlowWrapper)) {\n                    addClass([this.overFlowWrapper], HIDEICON);\n                }\n                if (this.mode === 'Delimiter') {\n                    removeClass([this.inputWrapper], SHOW_CHIP);\n                    removeClass([this.inputEle], CHIP_INPUT);\n                }\n                else {\n                    addClass([this.inputWrapper], SHOW_CHIP);\n                }\n                removeClass([this.inputWrapper], SHOW_TEXT);\n                this.ensurePlaceHolder();\n            }\n        }\n        const args = { isInteracted: e ? true : false, event: e };\n        this.trigger('focus', args);\n    }\n    treeAction(e) {\n        const eventArgs = {\n            cancel: false,\n            event: e\n        };\n        this.trigger('keyPress', eventArgs, (observedArgs) => {\n            if (!observedArgs.cancel) {\n                switch (e.action) {\n                    case 'escape':\n                    case 'altUp':\n                        this.inputWrapper.focus();\n                        e.preventDefault();\n                        if (this.isPopupOpen) {\n                            this.hidePopup();\n                        }\n                        break;\n                    case 'tab':\n                    case 'shiftTab':\n                        if (this.isPopupOpen) {\n                            this.hidePopup();\n                        }\n                        break;\n                    case 'enter':\n                    case 'ctrlEnter':\n                    case 'shiftEnter':\n                    case 'csEnter':\n                        if (!this.showCheckBox) {\n                            this.isValueChange = true;\n                            this.keyEventArgs = e;\n                        }\n                        break;\n                    case 'space':\n                        this.isValueChange = true;\n                        this.keyEventArgs = e;\n                        break;\n                    case 'ctrlA':\n                        if (this.allowMultiSelection) {\n                            this.selectAll(true);\n                        }\n                        break;\n                    case 'moveRight':\n                    case 'moveLeft':\n                    case 'shiftDown':\n                    case 'moveDown':\n                    case 'ctrlDown':\n                    case 'csDown':\n                    case 'shiftUp':\n                    case 'moveUp':\n                    case 'ctrlUp':\n                    case 'csUp':\n                    case 'home':\n                    case 'shiftHome':\n                    case 'ctrlHome':\n                    case 'csHome':\n                    case 'end':\n                    case 'shiftEnd':\n                    case 'ctrlEnd':\n                    case 'csEnd':\n                }\n            }\n            else {\n                e.stopImmediatePropagation();\n            }\n        });\n    }\n    keyActionHandler(e) {\n        const eventArgs = {\n            cancel: false,\n            event: e\n        };\n        this.trigger('keyPress', eventArgs, (observedArgs) => {\n            if (!observedArgs.cancel) {\n                switch (e.action) {\n                    case 'escape':\n                    case 'altUp':\n                        if (this.isPopupOpen) {\n                            this.hidePopup();\n                        }\n                        break;\n                    case 'shiftTab':\n                    case 'tab':\n                        if (this.isPopupOpen) {\n                            this.hidePopup();\n                        }\n                        if (this.inputFocus) {\n                            this.onFocusOut();\n                        }\n                        break;\n                    case 'altDown':\n                        if (!this.isPopupOpen) {\n                            this.showPopup();\n                            e.preventDefault();\n                        }\n                        break;\n                    case 'moveDown':\n                        if (this.showSelectAll && this.showCheckBox) {\n                            this.checkAllParent.focus();\n                        }\n                        break;\n                }\n            }\n        });\n    }\n    checkAllAction(e) {\n        const eventArgs = {\n            cancel: false,\n            event: e\n        };\n        this.trigger('keyPress', eventArgs, (observedArgs) => {\n            if (!observedArgs.cancel) {\n                switch (e.action) {\n                    case 'space':\n                        this.clickHandler(e);\n                        break;\n                    case 'moveDown':\n                        this.treeObj.element.focus();\n                }\n            }\n        });\n    }\n    windowResize() {\n        if (this.popupObj) {\n            this.popupObj.setProperties({ width: this.setWidth() });\n            this.popupObj.refreshPosition();\n        }\n    }\n    resetValueHandler(e) {\n        const formElement = closest(this.inputWrapper, 'form');\n        if (formElement && e.target === formElement) {\n            this.isDynamicChange = true;\n            this.setProperties({ value: null }, true);\n            this.resetValue(true);\n            this.isDynamicChange = false;\n        }\n    }\n    getAriaAttributes() {\n        const disable = this.enabled ? 'false' : 'true';\n        return {\n            'aria-disabled': disable,\n            'aria-owns': this.element.id + '_options',\n            'role': 'listbox',\n            'aria-haspopup': 'true',\n            'aria-expanded': 'false',\n            'aria-activedescendant': 'null',\n            'aria-labelledby': this.hiddenElement.id\n        };\n    }\n    updateOverFlowView() {\n        this.overFlowWrapper.classList.remove(TOTAL_COUNT_WRAPPER);\n        removeClass([this.overFlowWrapper], HIDEICON);\n        if (this.value && this.value.length) {\n            let data = '';\n            let overAllContainer;\n            let temp;\n            let tempData;\n            let tempIndex = 1;\n            let wrapperleng;\n            let remaining;\n            let downIconWidth = 0;\n            this.overFlowWrapper.innerHTML = '';\n            // eslint-disable-next-line\n            const l10nLocale = { overflowCountTemplate: '+${count} more..', totalCountTemplate: '${count} selected' };\n            this.l10n = new L10n(this.getLocaleName(), l10nLocale, this.locale);\n            const remainContent = this.l10n.getConstant('overflowCountTemplate');\n            const totalContent = this.l10n.getConstant('totalCountTemplate');\n            const remainElement = this.createElement('span', { className: REMAIN_WRAPPER });\n            this.overFlowWrapper.appendChild(remainElement);\n            remainElement.innerText = remainContent.replace('${count}', this.value.length.toString());\n            const remainSize = remainElement.offsetWidth;\n            remove(remainElement);\n            if (this.showDropDownIcon) {\n                downIconWidth = select('.' + DDTICON, this.inputWrapper).offsetWidth;\n            }\n            if (!isNullOrUndefined(this.value)) {\n                if (this.mode !== 'Box') {\n                    for (let index = 0; !isNullOrUndefined(this.value[index]); index++) {\n                        data += (index === 0) ? '' : this.delimiterChar + ' ';\n                        temp = this.getOverflowVal(index);\n                        data += temp;\n                        temp = this.overFlowWrapper.innerHTML;\n                        this.overFlowWrapper.innerHTML = data;\n                        wrapperleng = this.overFlowWrapper.offsetWidth;\n                        overAllContainer = this.inputWrapper.offsetWidth;\n                        if ((wrapperleng + downIconWidth + this.clearIconWidth) > overAllContainer) {\n                            if (tempData !== undefined && tempData !== '') {\n                                temp = tempData;\n                                index = tempIndex + 1;\n                            }\n                            this.overFlowWrapper.innerHTML = temp;\n                            remaining = this.value.length - index;\n                            wrapperleng = this.overFlowWrapper.offsetWidth;\n                            while (((wrapperleng + remainSize + downIconWidth + this.clearIconWidth) >= overAllContainer)\n                                && wrapperleng !== 0 && this.overFlowWrapper.innerHTML !== '') {\n                                const textArr = this.overFlowWrapper.innerHTML.split(this.delimiterChar);\n                                textArr.pop();\n                                this.overFlowWrapper.innerHTML = textArr.join(this.delimiterChar);\n                                remaining++;\n                                wrapperleng = this.overFlowWrapper.offsetWidth;\n                            }\n                            break;\n                        }\n                        else if ((wrapperleng + remainSize + downIconWidth + this.clearIconWidth) <= overAllContainer) {\n                            tempData = data;\n                            tempIndex = index;\n                        }\n                        else if (index === 0) {\n                            tempData = '';\n                            tempIndex = -1;\n                        }\n                    }\n                }\n                else {\n                    addClass([this.chipWrapper], HIDEICON);\n                    const ele = this.chipWrapper.cloneNode(true);\n                    const chips = selectAll('.' + CHIP, ele);\n                    for (let i = 0; i < chips.length; i++) {\n                        temp = this.overFlowWrapper.innerHTML;\n                        this.overFlowWrapper.appendChild(chips[i]);\n                        data = this.overFlowWrapper.innerHTML;\n                        wrapperleng = this.overFlowWrapper.offsetWidth;\n                        overAllContainer = this.inputWrapper.offsetWidth;\n                        if ((wrapperleng + downIconWidth + this.clearIconWidth) > overAllContainer) {\n                            if (tempData !== undefined && tempData !== '') {\n                                temp = tempData;\n                                i = tempIndex + 1;\n                            }\n                            this.overFlowWrapper.innerHTML = temp;\n                            remaining = this.value.length - i;\n                            wrapperleng = this.overFlowWrapper.offsetWidth;\n                            while (((wrapperleng + remainSize + downIconWidth + this.clearIconWidth) >= overAllContainer)\n                                && wrapperleng !== 0 && this.overFlowWrapper.innerHTML !== '') {\n                                this.overFlowWrapper.removeChild(this.overFlowWrapper.lastChild);\n                                remaining++;\n                                wrapperleng = this.overFlowWrapper.offsetWidth;\n                            }\n                            break;\n                        }\n                        else if ((wrapperleng + remainSize + downIconWidth + this.clearIconWidth) <= overAllContainer) {\n                            tempData = data;\n                            tempIndex = i;\n                        }\n                        else if (i === 0) {\n                            tempData = '';\n                            tempIndex = -1;\n                        }\n                    }\n                }\n            }\n            if (remaining > 0) {\n                this.overFlowWrapper.appendChild(this.updateRemainTemplate(remainElement, remaining, remainContent, totalContent));\n            }\n            if (this.mode === 'Box' && !this.overFlowWrapper.classList.contains(TOTAL_COUNT_WRAPPER)) {\n                addClass([remainElement], REMAIN_COUNT);\n            }\n        }\n        else {\n            this.overFlowWrapper.innerHTML = '';\n            addClass([this.overFlowWrapper], HIDEICON);\n        }\n        this.updateDelimMode();\n    }\n    updateRemainTemplate(remainElement, remaining, remainContent, totalContent) {\n        if (this.overFlowWrapper.firstChild && this.overFlowWrapper.firstChild.nodeType === 3 &&\n            this.overFlowWrapper.firstChild.nodeValue === '') {\n            this.overFlowWrapper.removeChild(this.overFlowWrapper.firstChild);\n        }\n        remainElement.innerHTML = '';\n        remainElement.innerText = (this.overFlowWrapper.firstChild && (this.overFlowWrapper.firstChild.nodeType === 3 || this.mode === 'Box')) ?\n            remainContent.replace('${count}', remaining.toString()) : totalContent.replace('${count}', remaining.toString());\n        if (this.overFlowWrapper.firstChild && (this.overFlowWrapper.firstChild.nodeType === 3 || this.mode === 'Box')) {\n            removeClass([this.overFlowWrapper], TOTAL_COUNT_WRAPPER);\n        }\n        else {\n            addClass([this.overFlowWrapper], TOTAL_COUNT_WRAPPER);\n            removeClass([this.overFlowWrapper], REMAIN_COUNT);\n        }\n        return remainElement;\n    }\n    getOverflowVal(index) {\n        // eslint-disable-next-line\n        const selectedData = this.getSelectedData(this.value[index]);\n        return getValue(this.treeSettings.loadOnDemand ? this.fields.text : 'text', selectedData);\n    }\n    updateDelimMode() {\n        if (this.mode !== 'Box') {\n            if (select('.' + REMAIN_WRAPPER, this.overFlowWrapper) && !this.overFlowWrapper.classList.contains(TOTAL_COUNT_WRAPPER)) {\n                addClass([this.overFlowWrapper], REMAIN_COUNT);\n                addClass([this.overFlowWrapper], SHOW_TEXT);\n            }\n            else {\n                this.overFlowWrapper.classList.remove(REMAIN_COUNT);\n                removeClass([this.overFlowWrapper], REMAIN_COUNT);\n            }\n        }\n        else if (select('.' + REMAIN_WRAPPER, this.overFlowWrapper)) {\n            this.overFlowWrapper.classList.remove(REMAIN_COUNT);\n        }\n    }\n    createHiddenElement() {\n        if (this.allowMultiSelection || this.showCheckBox) {\n            this.hiddenElement = this.createElement('select', {\n                attrs: { 'aria-hidden': 'true', 'class': HIDDENELEMENT, 'tabindex': '-1', 'multiple': '' }\n            });\n        }\n        else {\n            this.hiddenElement = this.createElement('select', {\n                attrs: { 'aria-hidden': 'true', 'tabindex': '-1', 'class': HIDDENELEMENT }\n            });\n        }\n        prepend([this.hiddenElement], this.inputWrapper);\n        this.validationAttribute();\n    }\n    createClearIcon() {\n        this.overAllClear = this.createElement('span', {\n            className: CLOSEICON_CLASS\n        });\n        addClass([this.overAllClear], HIDEICON);\n        removeClass([this.inputWrapper], SHOW_CLEAR);\n        if (this.showClearButton) {\n            this.inputWrapper.insertBefore(this.overAllClear, this.inputObj.buttons[0]);\n        }\n    }\n    validationAttribute() {\n        const name = this.inputEle.getAttribute('name') ? this.inputEle.getAttribute('name') : this.inputEle.getAttribute('id');\n        this.hiddenElement.setAttribute('name', name);\n        this.inputEle.removeAttribute('name');\n        const attributes$$1 = ['required', 'aria-required', 'form'];\n        for (let i = 0; i < attributes$$1.length; i++) {\n            const attr = this.inputEle.getAttribute(attributes$$1[i]);\n            if (attr) {\n                this.hiddenElement.setAttribute(attributes$$1[i], attr);\n                this.inputEle.removeAttribute(attributes$$1[i]);\n            }\n        }\n    }\n    createChip() {\n        if (!this.inputWrapper.contains(this.chipWrapper)) {\n            this.chipWrapper = this.createElement('span', {\n                className: CHIP_WRAPPER\n            });\n            this.chipCollection = this.createElement('span', {\n                className: CHIP_COLLECTION\n            });\n            this.chipWrapper.appendChild(this.chipCollection);\n            this.inputWrapper.insertBefore(this.chipWrapper, this.hiddenElement);\n            addClass([this.inputWrapper], SHOW_CHIP);\n            const isValid = this.getValidMode();\n            if (isValid && this.value !== null && (this.value && this.value.length !== 0)) {\n                addClass([this.inputEle], CHIP_INPUT);\n            }\n            else if (this.value === null || (this.value && this.value.length === 0)) {\n                addClass([this.chipWrapper], HIDEICON);\n            }\n        }\n    }\n    getValidMode() {\n        if (this.allowMultiSelection || this.showCheckBox) {\n            return this.mode === 'Box' ? true : (this.mode === 'Default' && this.inputFocus) ? true : false;\n        }\n        else {\n            return false;\n        }\n    }\n    createSelectAllWrapper() {\n        this.checkAllParent = this.createElement('div', {\n            className: CHECKALLPARENT, attrs: { 'tabindex': '0' }\n        });\n        this.selectAllSpan = this.createElement('span', {\n            className: ALLTEXT\n        });\n        this.selectAllSpan.textContent = '';\n        const ele = closest(this.element, '.' + BIGGER);\n        const touchClass = isNullOrUndefined(ele) ? '' : SMALL;\n        this.checkBoxElement = createCheckBox(this.createElement, true, { cssClass: touchClass });\n        this.checkBoxElement.setAttribute('role', 'checkbox');\n        this.checkAllParent.appendChild(this.checkBoxElement);\n        this.checkAllParent.appendChild(this.selectAllSpan);\n        this.setLocale();\n        EventHandler.add(this.checkAllParent, 'mouseup', this.clickHandler, this);\n        this.wireCheckAllWrapperEvents();\n    }\n    clickHandler(e) {\n        let target;\n        if ((e.currentTarget && e.currentTarget.classList.contains(CHECKALLPARENT))) {\n            target = e.currentTarget.firstElementChild.lastElementChild;\n        }\n        else {\n            target = e.target;\n        }\n        this.checkWrapper = closest(target, '.' + CHECKBOXWRAP);\n        if (!isNullOrUndefined(this.checkWrapper)) {\n            this.isClicked = true;\n            const checkElement = select('.' + CHECKBOXFRAME, this.checkWrapper);\n            this.changeState(this.checkWrapper, checkElement.classList.contains(CHECK) ? 'uncheck' : 'check', e);\n            this.isClicked = false;\n        }\n        e.preventDefault();\n    }\n    changeState(wrapper, state, e) {\n        let ariaState;\n        const frameSpan = wrapper.getElementsByClassName(CHECKBOXFRAME)[0];\n        if (state === 'check' && !frameSpan.classList.contains(CHECK)) {\n            frameSpan.classList.add(CHECK);\n            ariaState = 'true';\n            if (!this.isReverseUpdate) {\n                this.treeObj.checkAll();\n                if (!this.changeOnBlur) {\n                    this.triggerChangeEvent(e);\n                }\n            }\n            this.setLocale(true);\n        }\n        else if (state === 'uncheck' && (frameSpan.classList.contains(CHECK))) {\n            frameSpan.classList.remove(CHECK);\n            ariaState = 'false';\n            if (!this.isReverseUpdate) {\n                this.treeObj.uncheckAll();\n                if (!this.changeOnBlur) {\n                    this.triggerChangeEvent(e);\n                }\n            }\n            this.setLocale(false);\n        }\n        this.setMultiSelect();\n        this.ensurePlaceHolder();\n        ariaState = state === 'check' ? 'true' : 'false';\n        if (!isNullOrUndefined(ariaState)) {\n            wrapper.setAttribute('aria-checked', ariaState);\n        }\n    }\n    setLocale(unSelect) {\n        if (!this.selectAllSpan) {\n            return;\n        }\n        if (this.selectAllText !== 'Select All' || this.unSelectAllText !== 'Unselect All') {\n            const template = unSelect ? this.unSelectAllText : this.selectAllText;\n            this.selectAllSpan.textContent = '';\n            // eslint-disable-next-line\n            const compiledString = compile(template);\n            const templateName = unSelect ? 'unSelectAllText' : 'selectAllText';\n            for (const item of compiledString({}, this, templateName, null, !this.isStringTemplate)) {\n                this.selectAllSpan.textContent = item.textContent;\n            }\n        }\n        else {\n            this.selectAllSpan.textContent = unSelect ? this.unSelectAllText : this.selectAllText;\n        }\n    }\n    setAttributes() {\n        this.inputEle.setAttribute('tabindex', '-1');\n        const id = this.element.getAttribute('id');\n        this.hiddenElement.id = id + '_hidden';\n        this.inputWrapper.setAttribute('tabindex', '0');\n        attributes(this.inputWrapper, this.getAriaAttributes());\n    }\n    setHTMLAttributes() {\n        if (Object.keys(this.htmlAttributes).length) {\n            for (const htmlAttr of Object.keys(this.htmlAttributes)) {\n                if (htmlAttr === 'class') {\n                    this.inputWrapper.classList.add(this.htmlAttributes[htmlAttr]);\n                }\n                else if (htmlAttr === 'disabled' && this.htmlAttributes[htmlAttr] === 'disabled') {\n                    this.setProperties({ enabled: false }, true);\n                    this.setEnable();\n                }\n                else if (htmlAttr === 'readonly' && !isNullOrUndefined(this.htmlAttributes[htmlAttr])) {\n                    this.setProperties({ readonly: true }, true);\n                    this.dataBind();\n                }\n                else if (htmlAttr === 'style') {\n                    this.inputWrapper.setAttribute('style', this.htmlAttributes[htmlAttr]);\n                }\n                else {\n                    const defaultAttr = ['title', 'id', 'placeholder', 'aria-placeholder',\n                        'role', 'autocorrect', 'autocomplete', 'autocapitalize', 'spellcheck', 'minlength', 'maxlength'];\n                    const validateAttr = ['name', 'required'];\n                    if (htmlAttr.indexOf('data') === 0 || validateAttr.indexOf(htmlAttr) > -1) {\n                        this.hiddenElement.setAttribute(htmlAttr, this.htmlAttributes[htmlAttr]);\n                    }\n                    else if (defaultAttr.indexOf(htmlAttr) > -1) {\n                        if (htmlAttr === 'placeholder') {\n                            Input.setPlaceholder(this.htmlAttributes[htmlAttr], this.inputEle);\n                        }\n                        else {\n                            this.inputEle.setAttribute(htmlAttr, this.htmlAttributes[htmlAttr]);\n                        }\n                    }\n                    else {\n                        this.inputWrapper.setAttribute(htmlAttr, this.htmlAttributes[htmlAttr]);\n                    }\n                }\n            }\n        }\n    }\n    updateDataAttribute() {\n        const value = this.htmlAttributes;\n        const invalidAttr = ['class', 'style', 'id', 'type'];\n        const attr = {};\n        for (let a = 0; a < this.element.attributes.length; a++) {\n            if (invalidAttr.indexOf(this.element.attributes[a].name) === -1 &&\n                !(this.element.attributes[a].name === 'readonly')) {\n                attr[this.element.attributes[a].name] = this.element.getAttribute(this.element.attributes[a].name);\n            }\n        }\n        extend(attr, value, attr);\n        this.setProperties({ htmlAttributes: attr }, true);\n    }\n    showOverAllClear() {\n        if (!this.enabled || this.readonly) {\n            return;\n        }\n        if (this.overAllClear) {\n            const isValue = this.value ? (this.value.length ? true : false) : false;\n            if (isValue && this.showClearButton) {\n                removeClass([this.overAllClear], HIDEICON);\n                addClass([this.inputWrapper], SHOW_CLEAR);\n            }\n            else {\n                addClass([this.overAllClear], HIDEICON);\n                removeClass([this.inputWrapper], SHOW_CLEAR);\n            }\n        }\n    }\n    setTreeValue() {\n        if (this.value !== null && this.value.length !== 0) {\n            // eslint-disable-next-line\n            let data;\n            if (this.showCheckBox || this.allowMultiSelection) {\n                for (let i = 0; i < this.value.length; i++) {\n                    data = this.treeObj.getTreeData(this.value[i])[0];\n                    if (isNullOrUndefined(data)) {\n                        this.value.splice(this.value.indexOf(this.value[i]), 1);\n                    }\n                }\n                if (this.value.length !== 0) {\n                    this.setValidValue();\n                }\n            }\n            else {\n                data = this.treeObj.getTreeData(this.value[0])[0];\n                if (!isNullOrUndefined(data)) {\n                    this.setProperties({ text: data[this.fields.text] }, true);\n                    this.setValidValue();\n                }\n                else {\n                    this.setProperties({ value: this.currentValue }, true);\n                }\n            }\n        }\n    }\n    setTreeText() {\n        if (this.value !== null && !this.isInitialized) {\n            return;\n        }\n        if (this.text !== null) {\n            // eslint-disable-next-line\n            let data;\n            const valArr = [];\n            if (this.showCheckBox || this.allowMultiSelection) {\n                const textArr = this.text.split(this.delimiterChar);\n                for (let i = 0; i < textArr.length; i++) {\n                    data = this.getItems(textArr[i]);\n                    if (!isNullOrUndefined(data)) {\n                        valArr.push(data[this.fields.value].toString());\n                    }\n                }\n                if (valArr.length !== 0) {\n                    this.oldValue = this.value;\n                    this.setProperties({ value: valArr }, true);\n                    this.setValidValue();\n                }\n                else {\n                    this.setProperties({ text: this.currentText }, true);\n                }\n            }\n            else {\n                data = this.getItems(this.text);\n                if (!isNullOrUndefined(data)) {\n                    this.oldValue = this.value;\n                    this.setProperties({ value: [data[this.fields.value].toString()] }, true);\n                    this.setValidValue();\n                }\n                else {\n                    this.setProperties({ text: this.currentText }, true);\n                }\n            }\n        }\n    }\n    setSelectedValue() {\n        if (this.value != null) {\n            return;\n        }\n        if (!this.isInitialized) {\n            this.oldValue = this.value;\n            if (this.treeObj.selectedNodes.length > 0 && !this.showCheckBox) {\n                this.setProperties({ value: this.treeObj.selectedNodes }, true);\n                if (this.allowMultiSelection) {\n                    this.updateMode();\n                }\n            }\n            else if (this.showCheckBox && this.treeObj.checkedNodes) {\n                if (this.treeObj.checkedNodes.length > 0) {\n                    this.setProperties({ value: this.treeObj.checkedNodes }, true);\n                    setValue('selectedNodes', [], this.treeObj);\n                    this.treeObj.dataBind();\n                    this.updateMode();\n                }\n            }\n            this.updateSelectedValues();\n            this.currentText = this.text;\n            this.currentValue = this.value;\n        }\n    }\n    setValidValue() {\n        if (!this.showCheckBox && !this.allowMultiSelection) {\n            Input.setValue(this.text, this.inputEle, this.floatLabelType);\n            const id = this.value[0].toString();\n            if (this.treeObj.selectedNodes[0] !== id) {\n                setValue('selectedNodes', [id], this.treeObj);\n            }\n        }\n        else {\n            if (this.showCheckBox) {\n                let difference = this.value.filter((e) => {\n                    return this.treeObj.checkedNodes.indexOf(e) === -1;\n                });\n                if (difference.length > 0 || this.treeSettings.autoCheck) {\n                    this.treeObj.checkedNodes = this.value.slice();\n                    this.treeObj.dataBind();\n                    this.setMultiSelect();\n                }\n            }\n            else {\n                this.treeObj.selectedNodes = this.value.slice();\n                this.selectedText = [];\n                this.updateSelectedValues();\n            }\n            this.treeObj.dataBind();\n        }\n        this.currentText = this.text;\n        this.currentValue = this.value;\n        if (this.isInitialized) {\n            this.triggerChangeEvent();\n        }\n    }\n    // eslint-disable-next-line\n    getItems(givenText) {\n        // eslint-disable-next-line\n        let data;\n        if (this.treeDataType === 1) {\n            for (let i = 0; i < this.treeItems.length; i++) {\n                // eslint-disable-next-line\n                const text = getValue(this.fields.text, this.treeItems[i]);\n                if (!isNullOrUndefined(this.treeItems[i]) && !isNullOrUndefined(text) && text === givenText) {\n                    data = this.treeItems[i];\n                    break;\n                }\n            }\n        }\n        else {\n            data = this.getNestedItems(this.treeItems, this.fields, givenText);\n        }\n        return data;\n    }\n    // eslint-disable-next-line\n    getNestedItems(data, field, givenText) {\n        // eslint-disable-next-line\n        let newData;\n        for (let i = 0, objlen = data.length; i < objlen; i++) {\n            // eslint-disable-next-line\n            const dataId = getValue(this.fields.text, data[i]);\n            if (data[i] && dataId && dataId.toString() === givenText) {\n                return data[i];\n            }\n            else if (typeof field.child === 'string' && !isNullOrUndefined(getValue(field.child, data[i]))) {\n                // eslint-disable-next-line\n                const childData = getValue(field.child, data[i]);\n                // eslint-disable-next-line\n                newData = this.getNestedItems(childData, this.getChildType(field), givenText);\n                if (newData !== undefined) {\n                    break;\n                }\n            }\n            else if (this.fields.dataSource instanceof DataManager && !isNullOrUndefined(getValue('child', data[i]))) {\n                const child = 'child';\n                // eslint-disable-next-line\n                newData = this.getNestedItems(getValue(child, data[i]), this.getChildType(field), givenText);\n                if (newData !== undefined) {\n                    break;\n                }\n            }\n        }\n        return newData;\n    }\n    getChildType(mapper) {\n        return (typeof mapper.child === 'string' || isNullOrUndefined(mapper.child)) ? mapper : mapper.child;\n    }\n    /* To render the treeview */\n    renderTree() {\n        this.treeObj = new TreeView({\n            fields: this.getTreeFields(this.fields),\n            enableRtl: this.enableRtl,\n            nodeSelected: this.onNodeSelected.bind(this),\n            nodeChecked: this.onNodeChecked.bind(this),\n            nodeChecking: this.beforeCheck.bind(this),\n            actionFailure: this.onActionFailure.bind(this),\n            nodeClicked: this.onNodeClicked.bind(this),\n            dataBound: this.OnDataBound.bind(this),\n            allowMultiSelection: this.allowMultiSelection,\n            showCheckBox: this.showCheckBox,\n            autoCheck: this.treeSettings.autoCheck,\n            sortOrder: this.sortOrder,\n            expandOn: this.treeSettings.expandOn,\n            loadOnDemand: this.treeSettings.loadOnDemand,\n            nodeSelecting: this.onBeforeSelect.bind(this),\n            nodeTemplate: this.itemTemplate\n        });\n        this.treeObj.root = this.root ? this.root : this;\n        this.treeObj.appendTo('#' + this.tree.id);\n    }\n    /* To render the popup element */\n    renderPopup() {\n        if (this.isFilteredData) {\n            this.filterObj.value = '';\n            this.treeObj.fields = this.getTreeFields(this.fields);\n            this.isFilterRestore = true;\n            this.isFilteredData = false;\n            this.hideCheckAll(false);\n        }\n        let isCancelled = false;\n        const args = { cancel: false };\n        this.trigger('beforeOpen', args, (args) => {\n            if (!args.cancel) {\n                addClass([this.inputWrapper], [ICONANIMATION]);\n                if (this.isFirstRender) {\n                    this.popupEle = this.createElement('div', {\n                        id: this.element.id + '_popup', className: POPUP_CLASS + ' ' + (this.cssClass != null ? this.cssClass : '')\n                    });\n                    document.body.appendChild(this.popupEle);\n                    this.createPopup(this.popupEle);\n                }\n                else {\n                    this.popupEle = this.popupObj.element;\n                }\n            }\n            else {\n                isCancelled = true;\n            }\n            if (this.isFirstRender && !isCancelled) {\n                prepend([this.popupDiv], this.popupEle);\n                removeClass([this.popupDiv], DDTHIDEICON);\n                if (this.allowFiltering) {\n                    this.renderFilter();\n                }\n                if (this.showCheckBox && this.showSelectAll && (!this.popupDiv.classList.contains(NODATA))) {\n                    this.createSelectAllWrapper();\n                    this.popupEle.insertBefore(this.checkAllParent, this.popupDiv);\n                }\n                if (this.headerTemplate) {\n                    this.setHeaderTemplate();\n                }\n                if (this.footerTemplate) {\n                    this.setFooterTemplate();\n                }\n                this.isFirstRender = false;\n                /* eslint-disable */\n                if (this.hasTemplate && this.portals) {\n                    this.portals = this.portals.concat(this.treeObj.portals);\n                    /* eslint-enable */\n                    this.renderReactTemplates();\n                }\n            }\n            if (!isCancelled) {\n                attributes(this.inputWrapper, { 'aria-expanded': 'true' });\n                this.popupObj.show(null, (this.zIndex === 1000) ? this.inputEle : null);\n                removeClass([this.popupEle], DDTHIDEICON);\n                this.updatePopupHeight();\n                this.popupObj.refreshPosition();\n                if (!(this.showCheckBox && this.showSelectAll) && (!this.popupDiv.classList.contains(NODATA)\n                    && this.treeItems.length > 0)) {\n                    this.treeObj.element.focus();\n                }\n                if (this.checkSelectAll && this.checkBoxElement) {\n                    const wrap = closest(this.checkBoxElement, '.' + CHECKBOXWRAP);\n                    this.changeState(wrap, 'check');\n                    this.checkSelectAll = false;\n                }\n                if (this.allowFiltering) {\n                    removeClass([this.inputWrapper], [INPUTFOCUS]);\n                    this.filterObj.element.focus();\n                }\n                const eventArgs = { popup: this.popupObj };\n                this.trigger('open', eventArgs);\n            }\n        });\n    }\n    updatePopupHeight() {\n        if (this.isFirstRender) {\n            return;\n        }\n        let popupHeight = this.getHeight();\n        this.popupEle.style.maxHeight = popupHeight;\n        if (this.allowFiltering) {\n            const height = Math.round(this.filterContainer.getBoundingClientRect().height);\n            popupHeight = formatUnit(parseInt(popupHeight, 10) - height + 'px');\n        }\n        if (this.headerTemplate) {\n            const height = Math.round(this.header.getBoundingClientRect().height);\n            popupHeight = formatUnit(parseInt(popupHeight, 10) - height + 'px');\n        }\n        if (this.showCheckBox && this.showSelectAll) {\n            const height = Math.round(this.checkAllParent.getBoundingClientRect().height);\n            popupHeight = formatUnit(parseInt(popupHeight, 10) - height + 'px');\n        }\n        if (this.footerTemplate) {\n            const height = Math.round(this.footer.getBoundingClientRect().height);\n            popupHeight = formatUnit(parseInt(popupHeight, 10) - height + 'px');\n        }\n        let border = parseInt(window.getComputedStyle(this.popupEle).borderTopWidth, 10);\n        border = border + parseInt(window.getComputedStyle(this.popupEle).borderBottomWidth, 10);\n        popupHeight = formatUnit(parseInt(popupHeight, 10) - border + 'px');\n        this.popupDiv.style.maxHeight = popupHeight;\n    }\n    createPopup(element) {\n        if (this.isFirstRender) {\n            this.popupObj = new Popup(element, {\n                width: this.setWidth(),\n                targetType: 'relative',\n                collision: { X: 'flip', Y: 'flip' },\n                relateTo: this.inputWrapper,\n                zIndex: this.zIndex,\n                enableRtl: this.enableRtl,\n                position: { X: 'left', Y: 'bottom' },\n                close: () => {\n                    this.isPopupOpen = false;\n                },\n                open: () => {\n                    EventHandler.add(document, 'mousedown', this.onDocumentClick, this);\n                    this.isPopupOpen = true;\n                },\n                targetExitViewport: () => {\n                    if (!Browser.isDevice) {\n                        this.hidePopup();\n                    }\n                }\n            });\n        }\n    }\n    /* To calculate the width when change via set model */\n    setElementWidth(inputWidth) {\n        const ddElement = this.inputWrapper;\n        if (!isNullOrUndefined(inputWidth)) {\n            if (typeof inputWidth === 'number') {\n                ddElement.style.width = formatUnit(inputWidth);\n            }\n            else if (typeof inputWidth === 'string') {\n                ddElement.style.width = (inputWidth.match(/px|%|em/)) ? (inputWidth) :\n                    (formatUnit(inputWidth));\n            }\n        }\n    }\n    /* To calculate the width of the popup */\n    setWidth() {\n        let width = formatUnit(this.popupWidth);\n        if (width.indexOf('%') > -1) {\n            width = (this.inputWrapper.offsetWidth * parseFloat(width) / 100).toString() + 'px';\n        }\n        else if (typeof this.popupWidth === 'string') {\n            width = (this.popupWidth.match(/px|em/)) ? (this.popupWidth) : width;\n        }\n        return width;\n    }\n    /* To calculate the height of the popup */\n    getHeight() {\n        let height = formatUnit(this.popupHeight);\n        if (height.indexOf('%') > -1) {\n            // Will set the height of the popup according to the view port height\n            height = (document.documentElement.clientHeight * parseFloat(height) / 100).toString() + 'px';\n        }\n        else if (typeof this.popupHeight === 'string') {\n            height = (this.popupHeight.match(/px|em/)) ? (this.popupHeight) : height;\n        }\n        return height;\n    }\n    onDocumentClick(e) {\n        const target = e.target;\n        const isTree = closest(target, '.' + PARENTITEM);\n        const isFilter = closest(target, '.' + FILTERWRAP);\n        const isHeader = closest(target, '.' + HEADER);\n        const isFooter = closest(target, '.' + FOOTER);\n        const isScroller = target.classList.contains(DROPDOWN) ? true :\n            (matches(target, '.e-ddt .e-popup') || matches(target, '.e-ddt .e-treeview'));\n        if ((this.isPopupOpen && (this.inputWrapper.contains(target) || isTree || isFilter || isScroller || isHeader || isFooter)) ||\n            ((this.allowMultiSelection || this.showCheckBox) && (this.isPopupOpen && target.classList.contains(CHIP_CLOSE) ||\n                (this.isPopupOpen && (target.classList.contains(CHECKALLPARENT) || target.classList.contains(ALLTEXT)\n                    || target.classList.contains(CHECKBOXFRAME)))))) {\n            this.isDocumentClick = false;\n            e.preventDefault();\n        }\n        else if (!this.inputWrapper.contains(target) && this.inputFocus) {\n            this.focusOut(e);\n        }\n    }\n    onActionFailure(e) {\n        this.trigger('actionFailure', e);\n        this.l10nUpdate(true);\n        addClass([this.popupDiv], NODATA);\n    }\n    OnDataBound(args) {\n        this.treeItems = args.data;\n        if (this.treeItems.length <= 0) {\n            this.l10nUpdate();\n            addClass([this.popupDiv], NODATA);\n            this.hideCheckAll(true);\n        }\n        else if (this.popupDiv.classList.contains(NODATA) && this.treeItems.length >= 1) {\n            removeClass([this.popupDiv], NODATA);\n            this.hideCheckAll(false);\n        }\n        this.treeDataType = this.getTreeDataType(this.treeItems, this.fields);\n        if (this.isFirstRender && this.isRemoteData) {\n            this.setTreeValue();\n            this.setTreeText();\n            this.updateHiddenValue();\n            this.setSelectedValue();\n            if (!this.wrapText) {\n                this.updateView();\n            }\n            this.treeObj.element.focus();\n        }\n        const eventArgs = { data: args.data };\n        this.trigger('dataBound', eventArgs);\n        if (this.isFilteredData) {\n            this.treeObj.expandAll();\n        }\n        if (this.isFilterRestore) {\n            this.restoreFilterSelection();\n            this.isFilterRestore = false;\n        }\n    }\n    restoreFilterSelection() {\n        if (this.showCheckBox) {\n            this.treeObj.checkedNodes = this.value ? this.value : [];\n        }\n        else {\n            this.treeObj.selectedNodes = this.value ? this.value : [];\n        }\n    }\n    /* To set cssclass for the dropdowntree */\n    setCssClass(newClass, oldClass) {\n        const elements = this.popupObj ? [this.inputWrapper, this.popupObj.element] : [this.inputWrapper];\n        if (!isNullOrUndefined(oldClass) && oldClass !== '') {\n            removeClass(elements, oldClass.split(' '));\n        }\n        if (!isNullOrUndefined(newClass) && newClass !== '') {\n            addClass(elements, newClass.split(' '));\n        }\n    }\n    setEnableRTL(state) {\n        if (state) {\n            this.inputWrapper.classList.add(RTL);\n        }\n        else {\n            this.inputWrapper.classList.remove(RTL);\n        }\n        if (this.popupObj) {\n            this.popupObj.enableRtl = state;\n            this.popupObj.dataBind();\n        }\n        if (this.treeObj) {\n            this.treeObj.enableRtl = state;\n            this.treeObj.dataBind();\n        }\n    }\n    /* To set enable property */\n    setEnable() {\n        Input.setEnabled(this.enabled, this.inputEle);\n        if (this.enabled) {\n            removeClass([this.inputWrapper], DISABLED);\n            this.inputEle.setAttribute('aria-disabled', 'false');\n            this.inputWrapper.setAttribute('aria-disabled', 'false');\n        }\n        else {\n            if (this.isPopupOpen) {\n                this.hidePopup();\n            }\n            addClass([this.inputWrapper], DISABLED);\n            if (this.inputWrapper && this.inputWrapper.classList.contains(INPUTFOCUS)) {\n                removeClass([this.inputWrapper], [INPUTFOCUS]);\n            }\n            this.inputEle.setAttribute('aria-disabled', 'true');\n            this.inputWrapper.setAttribute('aria-disabled', 'true');\n        }\n    }\n    cloneFields(fields) {\n        const clonedField = {\n            dataSource: fields.dataSource, value: fields.value, text: fields.text, parentValue: fields.parentValue,\n            child: this.cloneChildField(fields.child), hasChildren: fields.hasChildren, expanded: fields.expanded,\n            iconCss: fields.iconCss, imageUrl: fields.imageUrl, htmlAttributes: fields.htmlAttributes, query: fields.query,\n            selected: fields.selected, tableName: fields.tableName, tooltip: fields.tooltip\n        };\n        return clonedField;\n    }\n    cloneChildField(fields) {\n        if (typeof fields === 'string') {\n            return fields;\n        }\n        else {\n            const clonedField = {\n                dataSource: fields.dataSource, value: fields.value, text: fields.text, parentValue: fields.parentValue,\n                child: (fields.child ? this.cloneChildField(fields.child) : null), hasChildren: fields.hasChildren,\n                expanded: fields.expanded, iconCss: fields.iconCss, imageUrl: fields.imageUrl, htmlAttributes: fields.htmlAttributes,\n                query: fields.query, selected: fields.selected, tableName: fields.tableName, tooltip: fields.tooltip\n            };\n            return clonedField;\n        }\n    }\n    getTreeFields(fields) {\n        const treeFields = {\n            dataSource: fields.dataSource, id: fields.value, text: fields.text, parentID: fields.parentValue,\n            child: this.getTreeChildren(fields.child), hasChildren: fields.hasChildren, expanded: fields.expanded,\n            iconCss: fields.iconCss, imageUrl: fields.imageUrl, isChecked: fields.selected,\n            htmlAttributes: fields.htmlAttributes, query: fields.query, selected: fields.selected,\n            tableName: fields.tableName, tooltip: fields.tooltip\n        };\n        return treeFields;\n    }\n    getTreeChildren(mapper) {\n        if (typeof mapper === 'string') {\n            return mapper;\n        }\n        else if (!isNullOrUndefined(mapper)) {\n            mapper = this.getActualProperties(mapper);\n            const childFields = mapper;\n            if (mapper.value) {\n                childFields.id = mapper.value;\n            }\n            if (mapper.parentValue) {\n                childFields.parentID = mapper.parentValue;\n            }\n            if (mapper.child) {\n                childFields.child = this.getTreeChildren(mapper.child);\n            }\n            if (mapper.selected && this.showCheckBox) {\n                childFields.isChecked = mapper.selected;\n            }\n            return childFields;\n        }\n        return null;\n    }\n    // eslint-disable-next-line\n    getTreeDataType(ds, field) {\n        if (this.fields.dataSource instanceof DataManager) {\n            for (let i = 0; i < ds.length; i++) {\n                if ((typeof field.child === 'string') && isNullOrUndefined(getValue(field.child, ds[i]))) {\n                    return 1;\n                }\n            }\n            return 2;\n        }\n        this.fields.dataSource = isNullOrUndefined(this.fields.dataSource) ? [] : this.fields.dataSource;\n        for (let i = 0, len = this.fields.dataSource.length; i < len; i++) {\n            if ((typeof field.child === 'string') && !isNullOrUndefined(getValue(field.child, this.fields.dataSource[i]))) {\n                return 2;\n            }\n            if (!isNullOrUndefined(getValue(field.parentValue, this.fields.dataSource[i])) || !isNullOrUndefined(getValue(field.hasChildren, this.fields.dataSource[i]))) {\n                return 1;\n            }\n        }\n        return 1;\n    }\n    /* Triggers when the tree fields is changed dynamically */\n    setFields() {\n        this.resetValue();\n        if (this.hasTemplate) {\n            this.updateTemplate();\n        }\n        this.treeObj.fields = this.getTreeFields(this.fields);\n        this.treeObj.dataBind();\n    }\n    getEventArgs(args) {\n        // eslint-disable-next-line\n        const checkData = args.data;\n        // eslint-disable-next-line\n        const selectData = args.nodeData;\n        let state;\n        if (this.showCheckBox) {\n            if (args.action === 'check') {\n                state = 'select';\n            }\n            else if (args.action === 'uncheck') {\n                state = 'un-select';\n            }\n        }\n        const eventArgs = {\n            action: this.showCheckBox ? state : args.action,\n            isInteracted: this.isClicked ? true : args.isInteracted,\n            item: args.node,\n            itemData: this.showCheckBox ? checkData[0] : selectData\n        };\n        return eventArgs;\n    }\n    onBeforeSelect(args) {\n        if (args.isInteracted) {\n            this.oldValue = this.value ? this.value.slice() : this.value;\n            if (this.value === null) {\n                this.setProperties({ value: [] }, true);\n            }\n        }\n    }\n    updateHiddenValue() {\n        if (this.allowMultiSelection || this.showCheckBox) {\n            return;\n        }\n        if (this.value && this.value.length) {\n            this.hiddenElement.innerHTML = '<option selected value =\"' + this.value[0] + '\">' + this.text + '</option>';\n        }\n        else {\n            this.hiddenElement.innerHTML = '';\n        }\n    }\n    /* Triggers when the tree node is selected */\n    onNodeSelected(args) {\n        if (this.showCheckBox) {\n            return;\n        }\n        let selectedText;\n        if (args.isInteracted) {\n            const id = getValue('id', args.nodeData).toString();\n            if (!this.allowMultiSelection) {\n                this.hiddenElement.innerHTML = '';\n                this.setProperties({ value: [id] }, true);\n                if (this.itemTemplate) {\n                    selectedText = getValue('text', this.treeObj.getNode(id));\n                }\n                else {\n                    selectedText = getValue('text', args.nodeData).toString();\n                }\n                Input.setValue(selectedText, this.inputEle, this.floatLabelType);\n                this.setProperties({ text: selectedText }, true);\n                this.currentText = this.text;\n                this.currentValue = this.value;\n                attributes(this.inputWrapper, { 'aria-describedby': this.element.id });\n                attributes(this.inputWrapper, { 'aria-activedescendant': id.toString() });\n                this.updateHiddenValue();\n                this.showOverAllClear();\n                this.hidePopup();\n                this.isNodeSelected = true;\n            }\n            else if (this.allowMultiSelection) {\n                this.setMultiSelect();\n            }\n        }\n        const eventArgs = this.getEventArgs(args);\n        this.trigger('select', eventArgs);\n        if (this.isValueChange && !this.changeOnBlur) {\n            this.triggerChangeEvent(this.keyEventArgs);\n            this.isValueChange = false;\n        }\n    }\n    onNodeClicked(args) {\n        if (!this.changeOnBlur && this.isNodeSelected) {\n            this.triggerChangeEvent(args.event);\n            this.isNodeSelected = false;\n        }\n        const target = args.event.target;\n        if ((target.classList.contains('e-fullrow') || target.classList.contains('e-list-text')) && this.showCheckBox) {\n            this.isClicked = true;\n            // eslint-disable-next-line\n            const getNodeDetails = this.treeObj.getNode(args.node);\n            if (getNodeDetails.isChecked === 'true') {\n                this.treeObj.uncheckAll([args.node]);\n            }\n            else {\n                this.treeObj.checkAll([args.node]);\n            }\n            this.isClicked = false;\n            this.setMultiSelect();\n            this.ensurePlaceHolder();\n        }\n        if (!this.changeOnBlur && (this.allowMultiSelection || this.showCheckBox)) {\n            this.triggerChangeEvent(args.event);\n        }\n    }\n    onNodeChecked(args) {\n        const eventArgs = this.getEventArgs(args);\n        this.trigger('select', eventArgs);\n        if (this.isFilteredData && args.action === 'uncheck') {\n            const id = getValue('id', args.data[0]).toString();\n            this.removeSelectedData(id, true);\n        }\n        if (!this.isChipDelete && args.isInteracted) {\n            this.setMultiSelect();\n            this.ensurePlaceHolder();\n        }\n        if (this.showSelectAll && this.checkBoxElement) {\n            const nodes = this.treeObj.element.querySelectorAll('li');\n            const checkedNodes = this.treeObj.element.querySelectorAll('li .e-checkbox-wrapper[aria-checked=true]');\n            const wrap = closest(this.checkBoxElement, '.' + CHECKBOXWRAP);\n            if (wrap && args.action === 'uncheck') {\n                this.isReverseUpdate = true;\n                this.changeState(wrap, 'uncheck');\n                this.isReverseUpdate = false;\n            }\n            else if (wrap && args.action === 'check' && checkedNodes.length === nodes.length) {\n                this.isReverseUpdate = true;\n                this.changeState(wrap, 'check');\n                this.isReverseUpdate = false;\n            }\n        }\n    }\n    beforeCheck(args) {\n        if (args.isInteracted) {\n            this.oldValue = this.value ? this.value.slice() : this.value;\n        }\n    }\n    updateClearButton(state) {\n        if (state) {\n            if (!this.inputWrapper.contains(this.overAllClear)) {\n                this.inputEle.parentElement.insertBefore(this.overAllClear, this.inputEle.nextSibling);\n            }\n            else {\n                removeClass([this.overAllClear], HIDEICON);\n                addClass([this.inputWrapper], SHOW_CLEAR);\n            }\n        }\n        else {\n            addClass([this.overAllClear], HIDEICON);\n            removeClass([this.inputWrapper], SHOW_CLEAR);\n        }\n        if ((this.allowMultiSelection || this.showCheckBox) && this.chipWrapper) {\n            const chipClose = selectAll('.' + CHIP_CLOSE, this.chipWrapper);\n            for (let i = 0; i < chipClose.length; i++) {\n                if (!state) {\n                    addClass([chipClose[i]], HIDEICON);\n                }\n                else {\n                    removeClass([chipClose[i]], HIDEICON);\n                }\n            }\n        }\n    }\n    updateDropDownIconState(state) {\n        const spinIcon = select('.' + DDTICON, this.inputWrapper);\n        if (state) {\n            if (!spinIcon) {\n                Input.appendSpan(DROPDOWNICON, this.inputWrapper, this.createElement);\n            }\n            else {\n                removeClass([spinIcon], HIDEICON);\n            }\n            addClass([this.inputWrapper], SHOW_DD_ICON);\n        }\n        else {\n            addClass([spinIcon], HIDEICON);\n            removeClass([this.inputWrapper], SHOW_DD_ICON);\n        }\n    }\n    updateMode() {\n        if (this.mode === 'Custom') {\n            return;\n        }\n        if (this.mode !== 'Delimiter') {\n            if (!this.inputWrapper.contains(this.chipWrapper)) {\n                this.createChip();\n            }\n            const isValid = this.getValidMode();\n            if (this.chipWrapper.classList.contains(HIDEICON) && isValid) {\n                removeClass([this.chipWrapper], HIDEICON);\n                addClass([this.inputWrapper], SHOW_CHIP);\n            }\n            else if (!isValid) {\n                addClass([this.chipWrapper], HIDEICON);\n                removeClass([this.inputWrapper], SHOW_CHIP);\n            }\n            const isValue = this.value !== null ? (this.value.length !== 0 ? true : false) : false;\n            if (isValid && isValue) {\n                addClass([this.inputEle], CHIP_INPUT);\n            }\n            else {\n                removeClass([this.inputEle], CHIP_INPUT);\n            }\n        }\n        else if (this.inputEle.classList.contains(CHIP_INPUT)) {\n            removeClass([this.inputEle], CHIP_INPUT);\n            if (this.chipWrapper) {\n                addClass([this.chipWrapper], HIDEICON);\n                removeClass([this.inputWrapper], SHOW_CHIP);\n            }\n        }\n    }\n    ensurePlaceHolder() {\n        if (this.value && this.value.length === 0) {\n            removeClass([this.inputEle], CHIP_INPUT);\n            if (this.chipWrapper) {\n                addClass([this.chipWrapper], HIDEICON);\n            }\n        }\n    }\n    ensureClearIconPosition(floatLabelType) {\n        if (floatLabelType !== 'Never') {\n            this.inputWrapper.insertBefore(this.overAllClear, this.inputObj.buttons[0]);\n        }\n    }\n    setMultiSelectValue(newValues) {\n        if (!this.isFilteredData) {\n            this.setProperties({ value: newValues }, true);\n            if (newValues && newValues.length !== 0 && !this.showCheckBox) {\n                this.treeObj.selectedNodes = this.value.slice();\n                this.treeObj.dataBind();\n            }\n        }\n        else {\n            const selectedValues = isNullOrUndefined(this.value) ? [] : this.value;\n            for (let i = 0; i < newValues.length; i++) {\n                if (isNullOrUndefined(this.value) || this.value.indexOf(newValues[i]) === -1) {\n                    selectedValues.push(newValues[i]);\n                }\n            }\n            this.setProperties({ value: selectedValues }, true);\n        }\n    }\n    setMultiSelect() {\n        if (this.showCheckBox && !this.isDynamicChange) {\n            this.setMultiSelectValue(this.treeObj.checkedNodes.slice());\n        }\n        else {\n            const ddtValue = this.allowMultiSelection ? (this.showCheckBox ? this.treeObj.checkedNodes\n                : this.treeObj.selectedNodes) : (this.value ? (this.showCheckBox ? this.value : [this.value[0]]) : null);\n            this.setMultiSelectValue(ddtValue);\n            if (this.showCheckBox && this.value !== null) {\n                this.treeObj.checkedNodes = this.value;\n                this.treeObj.dataBind();\n            }\n        }\n        this.selectedText = [];\n        const checkSelection = this.allowMultiSelection ? true : (this.showCheckBox ? true : false);\n        if (this.inputWrapper.contains(this.chipWrapper) && !checkSelection) {\n            removeClass([this.inputEle], CHIP_INPUT);\n            detach(this.chipWrapper);\n        }\n        const isValid = this.getValidMode();\n        if (isValid && this.value !== null) {\n            addClass([this.inputEle], CHIP_INPUT);\n            if (this.chipWrapper) {\n                removeClass([this.chipWrapper], HIDEICON);\n            }\n        }\n        const isValue = this.value ? (this.value.length ? true : false) : false;\n        if (this.chipWrapper && (this.mode === 'Box' && !isValue)) {\n            addClass([this.chipWrapper], HIDEICON);\n            removeClass([this.inputEle], CHIP_INPUT);\n        }\n        this.updateSelectedValues();\n    }\n    // eslint-disable-next-line\n    getSelectedData(value) {\n        // eslint-disable-next-line\n        let data = null;\n        if (this.isFilteredData) {\n            for (let i = 0; i < this.selectedData.length; i++) {\n                if (getValue(this.treeSettings.loadOnDemand ? this.fields.value : 'id', this.selectedData[i]).toString() === value) {\n                    data = this.selectedData[i];\n                    break;\n                }\n            }\n        }\n        if (isNullOrUndefined(data)) {\n            if (this.treeSettings.loadOnDemand) {\n                data = this.getNodeData(value);\n            }\n            else {\n                data = this.treeObj.getNode(value);\n            }\n            if (!isNullOrUndefined(data)) {\n                this.selectedData.push(data);\n            }\n        }\n        return data;\n    }\n    getNodeData(id) {\n        let childItems;\n        if (isNullOrUndefined(id)) {\n            return childItems;\n        }\n        else if (this.treeDataType === 1) {\n            for (let i = 0, objlen = this.treeItems.length; i < objlen; i++) {\n                let dataId = getValue(this.fields.value, this.treeItems[i]);\n                if (!isNullOrUndefined(this.treeItems[i]) && !isNullOrUndefined(dataId) && dataId.toString() === id) {\n                    return this.treeItems[i];\n                }\n            }\n        }\n        else {\n            return this.getChildNodeData(this.treeItems, this.fields, id);\n        }\n        return childItems;\n    }\n    getChildNodeData(obj, mapper, id) {\n        let newChildItems;\n        if (isNullOrUndefined(obj)) {\n            return newChildItems;\n        }\n        for (let i = 0, objlen = obj.length; i < objlen; i++) {\n            let dataValue = getValue(mapper.value, obj[i]);\n            if (obj[i] && dataValue && dataValue.toString() === id) {\n                return obj[i];\n            }\n            else if (typeof mapper.child === 'string' && !isNullOrUndefined(getValue(mapper.child, obj[i]))) {\n                let childNodeData = getValue(mapper.child, obj[i]);\n                newChildItems = this.getChildNodeData(childNodeData, this.getChildMapperFields(mapper), id);\n                if (newChildItems !== undefined) {\n                    break;\n                }\n            }\n            else if (this.fields.dataSource instanceof DataManager && !isNullOrUndefined(getValue('child', obj[i]))) {\n                let child = 'child';\n                newChildItems = this.getChildNodeData(getValue(child, obj[i]), this.getChildMapperFields(mapper), id);\n                if (newChildItems !== undefined) {\n                    break;\n                }\n            }\n        }\n        return newChildItems;\n    }\n    getChildMapperFields(mapper) {\n        return (typeof mapper.child === 'string' || isNullOrUndefined(mapper.child)) ? mapper : mapper.child;\n    }\n    removeSelectedData(value, muteOnChange) {\n        const selectedValues = isNullOrUndefined(this.value) ? [] : this.value.slice();\n        selectedValues.splice(selectedValues.indexOf(value), 1);\n        this.setProperties({ value: selectedValues }, muteOnChange);\n        for (let i = 0; i < this.selectedData.length; i++) {\n            if (getValue(this.treeSettings.loadOnDemand ? this.fields.value : 'id', this.selectedData[i]).toString() === value) {\n                this.selectedData.splice(i, 1);\n                break;\n            }\n        }\n    }\n    updateSelectedValues() {\n        this.dataValue = '';\n        let temp;\n        let text;\n        let textValue = '';\n        // eslint-disable-next-line\n        let selectedData;\n        this.hiddenElement.innerHTML = '';\n        let hiddenInputValue = '';\n        if ((!this.isChipDelete || this.treeSettings.autoCheck) && (this.inputWrapper.contains(this.chipWrapper))) {\n            this.chipCollection.innerHTML = '';\n        }\n        if (!this.isFilteredData) {\n            this.selectedData = [];\n        }\n        if (!isNullOrUndefined(this.value)) {\n            for (let i = 0, len = this.value.length; i < len; i++) {\n                selectedData = this.getSelectedData(this.value[i]);\n                text = getValue(this.treeSettings.loadOnDemand ? this.fields.text : 'text', selectedData);\n                this.selectedText.push(text);\n                temp = this.selectedText[this.selectedText.length - 1];\n                if (this.selectedText.length > 1) {\n                    this.dataValue += (this.delimiterChar + ' ' + temp);\n                    textValue += (',' + temp);\n                }\n                else {\n                    this.dataValue += temp;\n                    textValue += temp;\n                }\n                if (this.mode !== 'Custom' && this.mode !== 'Delimiter' && (!this.isChipDelete || this.treeSettings.autoCheck) &&\n                    (this.allowMultiSelection || this.showCheckBox)) {\n                    this.setChipValues(temp, this.value[i]);\n                }\n                hiddenInputValue += '<option selected value =\"' + this.value[i] + '\">' +\n                    this.selectedText[this.selectedText.length - 1] + '</option>';\n            }\n            if (this.selectedText.length >= 1) {\n                this.setProperties({ text: textValue }, true);\n            }\n            this.hiddenElement.innerHTML = hiddenInputValue;\n            if (this.mode === 'Custom' && (this.allowMultiSelection || this.showCheckBox)) {\n                this.setTagValues();\n            }\n        }\n        const isValid = this.getValidMode();\n        if (this.mode !== 'Custom' && this.mode !== 'Box' && (this.allowMultiSelection || this.showCheckBox) && !isValid) {\n            if (this.chipWrapper) {\n                addClass([this.chipWrapper], HIDEICON);\n                removeClass([this.inputWrapper], SHOW_CHIP);\n            }\n        }\n        Input.setValue(this.dataValue, this.inputEle, this.floatLabelType);\n        if (textValue === '') {\n            this.setProperties({ text: null }, true);\n        }\n        else {\n            this.setProperties({ text: textValue }, true);\n        }\n        if (this.showClearButton && this.inputFocus) {\n            this.showOverAllClear();\n        }\n        if ((this.allowMultiSelection || this.showCheckBox) && this.popupObj) {\n            this.popupObj.refreshPosition();\n        }\n        this.currentText = this.text;\n        this.currentValue = this.value;\n    }\n    setChipValues(text, value) {\n        if (!this.inputWrapper.contains(this.chipWrapper)) {\n            this.createChip();\n        }\n        const chip = this.createElement('span', {\n            className: CHIP,\n            attrs: { 'data-value': value }\n        });\n        const chipContent = this.createElement('span', { className: CHIP_CONTENT });\n        const chipClose = this.createElement('span', { className: CHIP_CLOSE + ' ' + ICONS });\n        chipContent.innerHTML = text;\n        chip.appendChild(chipContent);\n        this.chipCollection.appendChild(chip);\n        if (this.showClearButton) {\n            chip.appendChild(chipClose);\n            EventHandler.add(chipClose, 'mousedown', this.removeChip, this);\n        }\n    }\n    setTagValues() {\n        if (this.value === null || this.text == null) {\n            return;\n        }\n        if (!this.inputWrapper.contains(this.chipWrapper)) {\n            this.createChip();\n        }\n        if (!this.inputWrapper.classList.contains(SHOW_CHIP)) {\n            addClass([this.inputWrapper], SHOW_CHIP);\n        }\n        const chip = this.createElement('span', {\n            className: CHIP,\n        });\n        if (!this.inputEle.classList.contains(CHIP_INPUT)) {\n            addClass([this.inputEle], CHIP_INPUT);\n        }\n        if (this.chipWrapper.classList.contains(HIDEICON)) {\n            removeClass([this.chipWrapper], HIDEICON);\n        }\n        const chipContent = this.createElement('span', { className: CHIP_CONTENT });\n        const template = this.customTemplate;\n        const templateId = this.customTemplateId;\n        const templatestring = 'customTemplate';\n        const compiledString = this.templateComplier(template);\n        let tempArr = compiledString({ 'value': this.value, 'text': this.text }, this, templatestring, templateId, this.isStringTemplate, undefined, chipContent);\n        if (tempArr) {\n            tempArr = Array.prototype.slice.call(tempArr);\n            append(tempArr, chipContent);\n        }\n        chip.appendChild(chipContent);\n        this.chipCollection.appendChild(chip);\n    }\n    setSelectAllWrapper(state) {\n        if (this.isFirstRender) {\n            return;\n        }\n        if (state && !this.popupEle.contains(this.checkAllParent) && this.showCheckBox) {\n            this.createSelectAllWrapper();\n            this.popupEle.insertBefore(this.checkAllParent, this.popupDiv);\n        }\n        else if (this.popupEle.contains(this.checkAllParent)) {\n            detach(this.checkAllParent);\n            this.checkAllParent = null;\n        }\n    }\n    setHeaderTemplate() {\n        if (this.header) {\n            this.header.innerHTML = '';\n        }\n        else {\n            this.header = this.createElement('div');\n            addClass([this.header], HEADER);\n        }\n        // eslint-disable-next-line\n        const compiledString = this.templateComplier(this.headerTemplate);\n        let tempArr = compiledString({}, this, 'headerTemplate', this.headerTemplateId, this.isStringTemplate, undefined, this.header);\n        if (tempArr) {\n            tempArr = Array.prototype.slice.call(tempArr);\n            append(tempArr, this.header);\n        }\n        this.popupEle.insertBefore(this.header, this.checkAllParent ? this.checkAllParent : this.popupDiv);\n    }\n    // eslint-disable-next-line\n    templateComplier(template) {\n        if (template) {\n            // eslint-disable-next-line\n            try {\n                if (document.querySelectorAll(template).length) {\n                    return compile(document.querySelector(template).innerHTML.trim());\n                }\n                else {\n                    return compile(template);\n                }\n            }\n            catch (e) {\n                return compile(template);\n            }\n        }\n        return compile(template);\n    }\n    setFooterTemplate() {\n        if (this.footer) {\n            this.footer.innerHTML = '';\n        }\n        else {\n            this.footer = this.createElement('div');\n            addClass([this.footer], FOOTER);\n        }\n        // eslint-disable-next-line\n        const compiledString = this.templateComplier(this.footerTemplate);\n        let tempArr = compiledString({}, this, 'footerTemplate', this.footerTemplateId, this.isStringTemplate, undefined, this.footer);\n        if (tempArr) {\n            tempArr = Array.prototype.slice.call(tempArr);\n            append(tempArr, this.footer);\n        }\n        append([this.footer], this.popupEle);\n    }\n    clearAll(e) {\n        if (!this.enabled || this.readonly) {\n            return;\n        }\n        this.resetValue();\n        this.showOverAllClear();\n        if ((this.allowMultiSelection || this.showCheckBox)) {\n            if (this.popupObj) {\n                this.popupObj.refreshPosition();\n            }\n            if (!this.wrapText) {\n                this.updateOverflowWrapper(true);\n            }\n        }\n        if (e) {\n            this.isClearButtonClick = true;\n        }\n        if (!this.changeOnBlur) {\n            this.triggerChangeEvent(e);\n        }\n    }\n    removeChip(e) {\n        if (!this.enabled || this.readonly) {\n            return;\n        }\n        const element = e.target.parentElement;\n        const value = element.getAttribute('data-value');\n        if (this.chipCollection) {\n            if (element) {\n                remove(element);\n            }\n        }\n        this.isChipDelete = true;\n        this.isClearButtonClick = true;\n        this.removeSelectedData(value, true);\n        this.selectedText = [];\n        if (this.allowMultiSelection) {\n            this.treeObj.selectedNodes = this.value.slice();\n            this.updateSelectedValues();\n        }\n        if (this.showCheckBox) {\n            this.treeObj.uncheckAll([value]);\n            this.clearCheckAll();\n            this.setMultiSelect();\n        }\n        this.triggerChangeEvent(e);\n        this.isChipDelete = false;\n        this.ensurePlaceHolder();\n    }\n    resetValue(isDynamicChange) {\n        if (this.value == [] && this.text == null) {\n            return;\n        }\n        Input.setValue(null, this.inputEle, this.floatLabelType);\n        if (!isDynamicChange) {\n            this.oldValue = this.value;\n            this.setProperties({ value: [] }, true);\n        }\n        this.dataValue = null;\n        this.setProperties({ text: null }, true);\n        this.selectedData = [];\n        setValue('selectedNodes', [], this.treeObj);\n        this.hiddenElement.innerHTML = '';\n        if (this.showCheckBox) {\n            this.treeObj.checkedNodes = [];\n            this.treeObj.dataBind();\n            this.setMultiSelect();\n            this.clearCheckAll();\n        }\n        if (this.oldValue === null && !isDynamicChange) {\n            this.removeValue = true;\n        }\n        else if (isDynamicChange) {\n            this.triggerChangeEvent();\n        }\n        if ((this.allowMultiSelection || this.showCheckBox) && this.chipWrapper) {\n            this.chipCollection.innerHTML = '';\n            if (!this.wrapText) {\n                this.updateOverflowWrapper(true);\n            }\n            this.ensurePlaceHolder();\n        }\n    }\n    clearCheckAll() {\n        if (this.showSelectAll && this.value && this.value.length === 0) {\n            this.setLocale(false);\n        }\n    }\n    selectAllItems(state) {\n        if (this.showCheckBox) {\n            if (state) {\n                this.treeObj.checkAll();\n            }\n            else {\n                this.treeObj.uncheckAll();\n            }\n            this.checkSelectAll = true;\n        }\n        else if (this.allowMultiSelection) {\n            if (!state) {\n                this.treeObj.selectedNodes = [];\n            }\n            else {\n                const li = selectAll('li', this.treeObj.element);\n                let id;\n                const arr = [];\n                for (let i = 0; i < li.length; i++) {\n                    id = li[i].getAttribute('data-uid').toString();\n                    arr.push(id);\n                }\n                this.treeObj.selectedNodes = arr;\n            }\n        }\n        this.updateMode();\n        this.setMultiSelect();\n        if (!this.wrapText) {\n            if (state) {\n                this.updateView();\n            }\n            else {\n                this.updateOverflowWrapper(true);\n            }\n        }\n    }\n    updateTreeSettings(prop) {\n        const value = Object.keys(prop.treeSettings)[0];\n        if (value === 'autoCheck') {\n            this.ensureAutoCheck();\n            this.treeObj.autoCheck = this.treeSettings.autoCheck;\n        }\n        else if (value === 'loadOnDemand') {\n            this.treeObj.loadOnDemand = this.treeSettings.loadOnDemand;\n        }\n        else if (value === 'expandOn') {\n            this.treeObj.expandOn = this.treeSettings.expandOn;\n            this.treeObj.dataBind();\n            return;\n        }\n        this.treeObj.dataBind();\n        this.setMultiSelect();\n        this.updateValue(this.value);\n    }\n    updateCheckBoxState(checkBox) {\n        if (this.hasTemplate) {\n            this.updateTemplate();\n        }\n        if (!this.wrapText) {\n            this.updateOverflowWrapper(false);\n        }\n        this.treeObj.showCheckBox = checkBox;\n        this.treeObj.dataBind();\n        this.isDynamicChange = true;\n        this.setSelectAllWrapper(this.showSelectAll);\n        if (this.showSelectAll) {\n            this.setLocale();\n        }\n        if (this.showCheckBox) {\n            this.updateMode();\n        }\n        this.setMultiSelect();\n        this.isDynamicChange = false;\n    }\n    updateTemplate() {\n        if (this.popupObj) {\n            this.clearTemplate();\n            /* eslint-disable */\n            this.portals = [];\n            /* eslint-enable */\n            this.popupObj.destroy();\n            if (this.isPopupOpen) {\n                this.hidePopup();\n                this.isFirstRender = true;\n                this.renderPopup();\n            }\n            else {\n                this.isFirstRender = true;\n            }\n        }\n    }\n    l10nUpdate(actionFailure) {\n        if (this.noRecord) {\n            this.noRecord.innerHTML = '';\n        }\n        else {\n            this.noRecord = this.createElement('div');\n            addClass([this.noRecord], NODATACONTAINER);\n            prepend([this.noRecord], this.popupDiv);\n        }\n        if (this.noRecordsTemplate !== 'No Records Found' || this.actionFailureTemplate !== 'The Request Failed') {\n            const template = actionFailure ? this.actionFailureTemplate : this.noRecordsTemplate;\n            const templateId = actionFailure ? this.actionFailureTemplateId : this.noRecordsTemplateId;\n            const templatestring = actionFailure ? 'actionFailureTemplate' : 'noRecordsTemplate';\n            // eslint-disable-next-line\n            const compiledString = this.templateComplier(template);\n            let tempArr = compiledString({}, this, templatestring, templateId, this.isStringTemplate, undefined, this.noRecord);\n            if (tempArr) {\n                tempArr = Array.prototype.slice.call(tempArr);\n                append(tempArr, this.noRecord);\n            }\n        }\n        else {\n            // eslint-disable-next-line\n            const l10nLocale = { noRecordsTemplate: 'No Records Found', actionFailureTemplate: 'The Request Failed' };\n            this.l10n = new L10n(this.getLocaleName(), l10nLocale, this.locale);\n            this.noRecord.innerHTML = actionFailure ?\n                this.l10n.getConstant('actionFailureTemplate') : this.l10n.getConstant('noRecordsTemplate');\n        }\n    }\n    updateRecordTemplate(action) {\n        if (this.treeItems && this.treeItems.length <= 0) {\n            this.l10nUpdate(action);\n            if (this.hasTemplate) {\n                this.updateTemplate();\n            }\n        }\n    }\n    updateOverflowWrapper(state) {\n        if (!state) {\n            if (!this.inputWrapper.contains(this.overFlowWrapper)) {\n                this.overFlowWrapper = this.createElement('span', { className: OVERFLOW_VIEW + ' ' + HIDEICON });\n                this.inputWrapper.insertBefore(this.overFlowWrapper, this.hiddenElement);\n            }\n        }\n        else if (this.inputWrapper.contains(this.overFlowWrapper) && state) {\n            this.overFlowWrapper.innerHTML = '';\n        }\n    }\n    updateMultiSelection(state) {\n        if (!this.wrapText) {\n            this.updateOverflowWrapper(false);\n        }\n        this.treeObj.allowMultiSelection = state;\n        this.treeObj.dataBind();\n        this.updateOption();\n        if (this.allowMultiSelection) {\n            this.updateMode();\n        }\n        this.setMultiSelect();\n    }\n    updateAllowFiltering(state) {\n        if (!this.isFirstRender) {\n            if (state) {\n                this.renderFilter();\n            }\n            else {\n                this.destroyFilter();\n            }\n        }\n        this.ensureAutoCheck();\n    }\n    updateFilterPlaceHolder() {\n        if (this.filterObj) {\n            this.filterObj.placeholder = this.filterBarPlaceholder;\n            this.filterObj.element.setAttribute('aria-label', this.filterBarPlaceholder);\n        }\n    }\n    updateValue(value) {\n        this.isDynamicChange = true;\n        if (isNullOrUndefined(value) || value.length === 0) {\n            this.resetValue(true);\n        }\n        else {\n            this.setTreeValue();\n            if ((this.allowMultiSelection || this.showCheckBox) && !this.wrapText) {\n                this.updateOverflowWrapper(false);\n                this.updateView();\n            }\n        }\n        this.updateHiddenValue();\n        this.isDynamicChange = false;\n    }\n    updateText(text) {\n        if (isNullOrUndefined(text)) {\n            this.resetValue();\n        }\n        else {\n            this.setTreeText();\n            if ((this.allowMultiSelection || this.showCheckBox) && !this.wrapText) {\n                this.updateOverflowWrapper(false);\n                this.updateView();\n            }\n        }\n        this.updateHiddenValue();\n    }\n    updateModelMode() {\n        const validMode = this.allowMultiSelection ? true : (this.showCheckBox ? true : false);\n        if (!validMode) {\n            return;\n        }\n        if (!this.wrapText) {\n            const overFlow = select('.' + OVERFLOW_VIEW, this.inputWrapper);\n            if (overFlow) {\n                overFlow.innerHTML = '';\n            }\n        }\n        this.updateMode();\n        this.setMultiSelect();\n        if (!this.wrapText && (this.value && this.value.length !== 0)) {\n            this.updateOverFlowView();\n            addClass([this.inputEle], CHIP_INPUT);\n            if (this.mode === 'Box') {\n                removeClass([this.overFlowWrapper, this.inputWrapper], SHOW_TEXT);\n            }\n            else {\n                addClass([this.overFlowWrapper, this.inputWrapper], SHOW_TEXT);\n            }\n        }\n    }\n    updateOption() {\n        if (!this.hiddenElement.hasAttribute('multiple') && (this.allowMultiSelection || this.showCheckBox)) {\n            this.hiddenElement.setAttribute('multiple', '');\n        }\n        else if (this.hiddenElement.hasAttribute('multiple') && (!this.allowMultiSelection && !this.showCheckBox)) {\n            this.hiddenElement.removeAttribute('multiple');\n        }\n    }\n    /**\n     * Dynamically change the value of properties.\n     *\n     * @param {DropDownTreeModel} newProp - specifies the newProp value.\n     * @param {DropDownTreeModel} oldProp - specifies the newProp value.\n     * @returns {void}\n     * @private\n     */\n    onPropertyChanged(newProp, oldProp) {\n        for (const prop of Object.keys(newProp)) {\n            switch (prop) {\n                case 'width':\n                    this.setElementWidth(newProp.width);\n                    if (this.popupObj) {\n                        this.popupObj.element.style.width = this.setWidth();\n                    }\n                    break;\n                case 'placeholder':\n                    Input.setPlaceholder(newProp.placeholder, this.inputEle);\n                    break;\n                case 'cssClass':\n                    this.setCssClass(newProp.cssClass, oldProp.cssClass);\n                    break;\n                case 'enableRtl':\n                    this.setEnableRTL(this.enableRtl);\n                    break;\n                case 'fields':\n                    this.setFields();\n                    break;\n                case 'readonly':\n                    Input.setReadonly(newProp.readonly, this.inputEle);\n                    break;\n                case 'enabled':\n                    this.setEnable();\n                    break;\n                case 'floatLabelType':\n                    Input.removeFloating(this.inputObj);\n                    Input.addFloating(this.inputEle, newProp.floatLabelType, this.placeholder, this.createElement);\n                    this.ensureClearIconPosition(newProp.floatLabelType);\n                    break;\n                case 'showClearButton':\n                    this.updateClearButton(newProp.showClearButton);\n                    break;\n                case 'allowFiltering':\n                    this.updateAllowFiltering(newProp.allowFiltering);\n                    break;\n                case 'filterBarPlaceholder':\n                    this.updateFilterPlaceHolder();\n                    break;\n                case 'value':\n                    this.oldValue = oldProp.value;\n                    this.updateValue(newProp.value);\n                    break;\n                case 'text':\n                    this.updateText(newProp.text);\n                    break;\n                case 'allowMultiSelection':\n                    this.updateMultiSelection(newProp.allowMultiSelection);\n                    break;\n                case 'mode':\n                    if (!this.showCheckBox && !this.allowMultiSelection) {\n                        return;\n                    }\n                    if (this.mode === 'Custom') {\n                        if (this.overFlowWrapper) {\n                            detach(this.overFlowWrapper);\n                        }\n                        if (this.chipWrapper) {\n                            detach(this.chipWrapper);\n                        }\n                        this.setTagValues();\n                    }\n                    else {\n                        if (oldProp.mode === 'Custom') {\n                            this.updateOverflowWrapper(this.wrapText);\n                        }\n                        this.updateModelMode();\n                    }\n                    break;\n                case 'delimiterChar':\n                    if (this.mode === 'Box') {\n                        return;\n                    }\n                    if (this.showCheckBox || this.allowMultiSelection) {\n                        this.setMultiSelect();\n                    }\n                    break;\n                case 'selectAllText':\n                    if (this.showCheckBox && this.showSelectAll) {\n                        this.setLocale();\n                    }\n                    break;\n                case 'unSelectAllText':\n                    if (this.showCheckBox && this.showSelectAll) {\n                        this.setLocale(false);\n                    }\n                    break;\n                case 'showSelectAll':\n                    if (this.showCheckBox) {\n                        this.setSelectAllWrapper(newProp.showSelectAll);\n                        this.updatePopupHeight();\n                    }\n                    break;\n                case 'showCheckBox':\n                    this.updateCheckBoxState(newProp.showCheckBox);\n                    if (!this.wrapText) {\n                        this.updateOverflowWrapper(true);\n                    }\n                    this.updatePopupHeight();\n                    this.updateOption();\n                    break;\n                case 'treeSettings':\n                    this.updateTreeSettings(newProp);\n                    break;\n                case 'customTemplate':\n                    if (this.mode !== \"Custom\") {\n                        return;\n                    }\n                    this.chipCollection.innerHTML = \"\";\n                    this.setTagValues();\n                    break;\n                case 'sortOrder':\n                    if (this.hasTemplate) {\n                        this.updateTemplate();\n                    }\n                    this.treeObj.sortOrder = newProp.sortOrder;\n                    this.treeObj.dataBind();\n                    this.updateValue(this.value);\n                    break;\n                case 'showDropDownIcon':\n                    this.updateDropDownIconState(newProp.showDropDownIcon);\n                    break;\n                case 'popupWidth':\n                    if (this.popupObj) {\n                        this.popupObj.element.style.width = this.setWidth();\n                    }\n                    break;\n                case 'popupHeight':\n                    if (this.popupObj) {\n                        this.updatePopupHeight();\n                    }\n                    break;\n                case 'zIndex':\n                    if (this.popupObj) {\n                        this.popupObj.zIndex = newProp.zIndex;\n                        this.popupObj.dataBind();\n                    }\n                    break;\n                case 'headerTemplate':\n                    this.updateTemplate();\n                    break;\n                case 'footerTemplate':\n                    this.updateTemplate();\n                    break;\n                case 'itemTemplate':\n                    this.updateTemplate();\n                    this.treeObj.nodeTemplate = newProp.itemTemplate;\n                    this.treeObj.dataBind();\n                    break;\n                case 'noRecordsTemplate':\n                    this.updateRecordTemplate();\n                    break;\n                case 'actionFailureTemplate':\n                    this.updateRecordTemplate(true);\n                    break;\n                case 'htmlAttributes':\n                    this.setHTMLAttributes();\n                    break;\n                case 'wrapText':\n                    this.updateOverflowWrapper(this.wrapText);\n                    if ((this.allowMultiSelection || this.showCheckBox) && !this.wrapText) {\n                        this.updateView();\n                    }\n                    else {\n                        addClass([this.overFlowWrapper], HIDEICON);\n                        if (this.chipWrapper && this.mode === 'Box') {\n                            removeClass([this.chipWrapper], HIDEICON);\n                        }\n                        else {\n                            removeClass([this.inputWrapper], SHOW_CHIP);\n                            removeClass([this.inputEle], CHIP_INPUT);\n                        }\n                        this.ensurePlaceHolder();\n                    }\n                    break;\n            }\n        }\n    }\n    /**\n     * Allows you to clear the selected values from the Dropdown Tree component.\n     *\n     * @method clear\n     * @returns {void}\n     */\n    clear() {\n        this.clearAll();\n        if (this.inputFocus) {\n            this.onFocusOut();\n        }\n        else {\n            if (this.changeOnBlur) {\n                this.triggerChangeEvent();\n            }\n            this.removeValue = false;\n        }\n    }\n    /**\n     * Removes the component from the DOM and detaches all its related event handlers. Also, it removes the attributes and classes.\n     *\n     * @method destroy\n     * @returns {void}\n     */\n    destroy() {\n        this.clearTemplate();\n        this.unWireEvents();\n        this.setCssClass(null, this.cssClass);\n        this.setProperties({ value: [] }, true);\n        this.setProperties({ text: null }, true);\n        this.treeObj.destroy();\n        this.destroyFilter();\n        if (this.popupObj) {\n            this.popupObj.destroy();\n            detach(this.popupObj.element);\n        }\n        if (this.element.tagName !== this.getDirective()) {\n            this.inputWrapper.parentElement.insertBefore(this.element, this.inputWrapper);\n        }\n        Input.setValue(null, this.inputEle, this.floatLabelType);\n        detach(this.inputWrapper);\n        detach(this.popupDiv);\n        this.element.classList.remove('e-input');\n        if (this.showCheckBox || this.allowMultiSelection) {\n            this.element.classList.remove(CHIP_INPUT);\n        }\n        super.destroy();\n    }\n    destroyFilter() {\n        if (this.filterObj) {\n            this.filterObj.destroy();\n            detach(this.filterObj.element);\n            detach(this.filterContainer);\n            this.filterObj = null;\n        }\n    }\n    /**\n     * Ensures visibility of the Dropdown Tree item by using item value or item element.\n     * If many Dropdown Tree items are present, and we are in need to find a particular item, then the `ensureVisible` property\n     * helps you to bring the item to visibility by expanding the Dropdown Tree and scrolling to the specific item.\n     *\n     * @param  {string | Element} item - Specifies the value of Dropdown Tree item/ Dropdown Tree item element.\n     * @returns {void}\n     */\n    ensureVisible(item) {\n        this.treeObj.ensureVisible(item);\n    }\n    /**\n     * To get the updated data source of the Dropdown Tree.\n     *\n     * @param  {string | Element} item - Specifies the value of Dropdown Tree item/ Dropdown Tree item element\n     * @returns {'{[key: string]: Object }[]'} - returns the updated data source of the Dropdown Tree.\n     */\n    // eslint-disable-next-line\n    getData(item) {\n        return this.treeObj.getTreeData(item);\n    }\n    /**\n     * Close the Dropdown tree pop-up.\n     *\n     * @returns {void}\n     */\n    hidePopup() {\n        const eventArgs = { popup: this.popupObj };\n        this.inputWrapper.classList.remove(ICONANIMATION);\n        if (this.popupEle) {\n            addClass([this.popupEle], DDTHIDEICON);\n        }\n        attributes(this.inputWrapper, { 'aria-expanded': 'false' });\n        if (this.popupObj && this.isPopupOpen) {\n            this.popupObj.hide();\n            if (this.inputFocus) {\n                this.inputWrapper.focus();\n                if (this.allowFiltering) {\n                    addClass([this.inputWrapper], [INPUTFOCUS]);\n                }\n            }\n            this.trigger('close', eventArgs);\n        }\n    }\n    /**\n     * Based on the state parameter, entire list item will be selected or deselected.\n     *\n     * @param {boolean} state - Unselects/Selects entire Dropdown Tree items.\n     * @returns {void}\n     *\n     */\n    selectAll(state) {\n        this.selectAllItems(state);\n    }\n    /**\n     * Opens the popup that displays the Dropdown Tree items.\n     *\n     * @returns {void}\n     */\n    showPopup() {\n        if (!this.enabled || this.readonly || this.isPopupOpen) {\n            return;\n        }\n        this.renderPopup();\n        this.focusIn();\n    }\n    /**\n     * Return the module name.\n     *\n     * @private\n     * @returns {string} - returns the module name.\n     */\n    getModuleName() {\n        return 'dropdowntree';\n    }\n};\n__decorate$2([\n    Property('The Request Failed')\n], DropDownTree.prototype, \"actionFailureTemplate\", void 0);\n__decorate$2([\n    Property(false)\n], DropDownTree.prototype, \"allowFiltering\", void 0);\n__decorate$2([\n    Property(false)\n], DropDownTree.prototype, \"allowMultiSelection\", void 0);\n__decorate$2([\n    Property(true)\n], DropDownTree.prototype, \"changeOnBlur\", void 0);\n__decorate$2([\n    Property('')\n], DropDownTree.prototype, \"cssClass\", void 0);\n__decorate$2([\n    Property(\"${value.length} item(s) selected\")\n], DropDownTree.prototype, \"customTemplate\", void 0);\n__decorate$2([\n    Property(',')\n], DropDownTree.prototype, \"delimiterChar\", void 0);\n__decorate$2([\n    Property(true)\n], DropDownTree.prototype, \"enabled\", void 0);\n__decorate$2([\n    Complex({}, Fields)\n], DropDownTree.prototype, \"fields\", void 0);\n__decorate$2([\n    Property(null)\n], DropDownTree.prototype, \"filterBarPlaceholder\", void 0);\n__decorate$2([\n    Property('StartsWith')\n], DropDownTree.prototype, \"filterType\", void 0);\n__decorate$2([\n    Property('Never')\n], DropDownTree.prototype, \"floatLabelType\", void 0);\n__decorate$2([\n    Property(null)\n], DropDownTree.prototype, \"footerTemplate\", void 0);\n__decorate$2([\n    Property(false)\n], DropDownTree.prototype, \"ignoreAccent\", void 0);\n__decorate$2([\n    Property(true)\n], DropDownTree.prototype, \"ignoreCase\", void 0);\n__decorate$2([\n    Property(null)\n], DropDownTree.prototype, \"headerTemplate\", void 0);\n__decorate$2([\n    Property({})\n], DropDownTree.prototype, \"htmlAttributes\", void 0);\n__decorate$2([\n    Property(null)\n], DropDownTree.prototype, \"itemTemplate\", void 0);\n__decorate$2([\n    Property('Default')\n], DropDownTree.prototype, \"mode\", void 0);\n__decorate$2([\n    Property('No Records Found')\n], DropDownTree.prototype, \"noRecordsTemplate\", void 0);\n__decorate$2([\n    Property(null)\n], DropDownTree.prototype, \"placeholder\", void 0);\n__decorate$2([\n    Property('300px')\n], DropDownTree.prototype, \"popupHeight\", void 0);\n__decorate$2([\n    Property('100%')\n], DropDownTree.prototype, \"popupWidth\", void 0);\n__decorate$2([\n    Property(false)\n], DropDownTree.prototype, \"readonly\", void 0);\n__decorate$2([\n    Property(false)\n], DropDownTree.prototype, \"showSelectAll\", void 0);\n__decorate$2([\n    Property('Select All')\n], DropDownTree.prototype, \"selectAllText\", void 0);\n__decorate$2([\n    Property(false)\n], DropDownTree.prototype, \"showCheckBox\", void 0);\n__decorate$2([\n    Property(true)\n], DropDownTree.prototype, \"showClearButton\", void 0);\n__decorate$2([\n    Property(true)\n], DropDownTree.prototype, \"showDropDownIcon\", void 0);\n__decorate$2([\n    Property('None')\n], DropDownTree.prototype, \"sortOrder\", void 0);\n__decorate$2([\n    Property(null)\n], DropDownTree.prototype, \"text\", void 0);\n__decorate$2([\n    Complex({}, TreeSettings)\n], DropDownTree.prototype, \"treeSettings\", void 0);\n__decorate$2([\n    Property('Unselect All')\n], DropDownTree.prototype, \"unSelectAllText\", void 0);\n__decorate$2([\n    Property(null)\n], DropDownTree.prototype, \"value\", void 0);\n__decorate$2([\n    Property('100%')\n], DropDownTree.prototype, \"width\", void 0);\n__decorate$2([\n    Property(1000)\n], DropDownTree.prototype, \"zIndex\", void 0);\n__decorate$2([\n    Property(false)\n], DropDownTree.prototype, \"wrapText\", void 0);\n__decorate$2([\n    Event()\n], DropDownTree.prototype, \"actionFailure\", void 0);\n__decorate$2([\n    Event()\n], DropDownTree.prototype, \"beforeOpen\", void 0);\n__decorate$2([\n    Event()\n], DropDownTree.prototype, \"change\", void 0);\n__decorate$2([\n    Event()\n], DropDownTree.prototype, \"close\", void 0);\n__decorate$2([\n    Event()\n], DropDownTree.prototype, \"blur\", void 0);\n__decorate$2([\n    Event()\n], DropDownTree.prototype, \"created\", void 0);\n__decorate$2([\n    Event()\n], DropDownTree.prototype, \"dataBound\", void 0);\n__decorate$2([\n    Event()\n], DropDownTree.prototype, \"destroyed\", void 0);\n__decorate$2([\n    Event()\n], DropDownTree.prototype, \"filtering\", void 0);\n__decorate$2([\n    Event()\n], DropDownTree.prototype, \"focus\", void 0);\n__decorate$2([\n    Event()\n], DropDownTree.prototype, \"keyPress\", void 0);\n__decorate$2([\n    Event()\n], DropDownTree.prototype, \"open\", void 0);\n__decorate$2([\n    Event()\n], DropDownTree.prototype, \"select\", void 0);\nDropDownTree = __decorate$2([\n    NotifyPropertyChanges\n], DropDownTree);\n\n/**\n * export all modules from current location\n */\n\nvar __decorate$3 = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n// eslint-disable-next-line @typescript-eslint/triple-slash-reference\n/// <reference path='../drop-down-list/drop-down-list-model.d.ts'/>\nconst SPINNER_CLASS = 'e-atc-spinner-icon';\ndropDownListClasses.root = 'e-combobox';\nconst inputObject$1 = {\n    container: null,\n    buttons: []\n};\n/**\n * The ComboBox component allows the user to type a value or choose an option from the list of predefined options.\n * ```html\n * <select id=\"list\">\n *      <option value='1'>Badminton</option>\n *      <option value='2'>Basketball</option>\n *      <option value='3'>Cricket</option>\n *      <option value='4'>Football</option>\n *      <option value='5'>Tennis</option>\n * </select>\n * ```\n * ```typescript\n *   let games:ComboBox = new ComboBox();\n *   games.appendTo(\"#list\");\n * ```\n */\nlet ComboBox = class ComboBox extends DropDownList {\n    /**\n     * *Constructor for creating the component\n     *\n     * @param {ComboBoxModel} options - Specifies the ComboBox model.\n     * @param {string | HTMLElement} element - Specifies the element to render as component.\n     * @private\n     */\n    constructor(options, element) {\n        super(options, element);\n    }\n    /**\n     * Initialize the event handler\n     *\n     * @private\n     * @returns {void}\n     */\n    preRender() {\n        super.preRender();\n    }\n    getLocaleName() {\n        return 'combo-box';\n    }\n    wireEvent() {\n        if (this.getModuleName() === 'combobox') {\n            EventHandler.add(this.inputWrapper.buttons[0], 'mousedown', this.preventBlur, this);\n            EventHandler.add(this.inputWrapper.container, 'blur', this.onBlurHandler, this);\n        }\n        if (!isNullOrUndefined(this.inputWrapper.buttons[0])) {\n            EventHandler.add(this.inputWrapper.buttons[0], 'mousedown', this.dropDownClick, this);\n        }\n        EventHandler.add(this.inputElement, 'focus', this.targetFocus, this);\n        if (!this.readonly) {\n            EventHandler.add(this.inputElement, 'input', this.onInput, this);\n            EventHandler.add(this.inputElement, 'keyup', this.onFilterUp, this);\n            EventHandler.add(this.inputElement, 'keydown', this.onFilterDown, this);\n            EventHandler.add(this.inputElement, 'paste', this.pasteHandler, this);\n        }\n        this.bindCommonEvent();\n    }\n    preventBlur(e) {\n        if ((!this.allowFiltering && document.activeElement !== this.inputElement &&\n            !document.activeElement.classList.contains(dropDownListClasses.input) && Browser.isDevice || !Browser.isDevice)) {\n            e.preventDefault();\n        }\n    }\n    onBlurHandler(e) {\n        const inputValue = this.inputElement && this.inputElement.value === '' ?\n            null : this.inputElement && this.inputElement.value;\n        if (!isNullOrUndefined(this.listData) && !isNullOrUndefined(inputValue) && inputValue !== this.text) {\n            this.customValue(e);\n        }\n        super.onBlurHandler(e);\n    }\n    targetElement() {\n        return this.inputElement;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    setOldText(text) {\n        Input.setValue(this.text, this.inputElement, this.floatLabelType, this.showClearButton);\n        this.customValue();\n        this.removeSelection();\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    setOldValue(value) {\n        if (this.allowCustom) {\n            this.valueMuteChange(this.value);\n        }\n        else {\n            this.valueMuteChange(null);\n        }\n        this.removeSelection();\n        this.setHiddenValue();\n    }\n    valueMuteChange(value) {\n        const inputValue = isNullOrUndefined(value) ? null : value.toString();\n        Input.setValue(inputValue, this.inputElement, this.floatLabelType, this.showClearButton);\n        this.setProperties({ value: value, text: value, index: null }, true);\n        this.activeIndex = this.index;\n        const fields = this.fields;\n        const dataItem = {};\n        dataItem[fields.text] = isNullOrUndefined(value) ? null : value.toString();\n        dataItem[fields.value] = isNullOrUndefined(value) ? null : value.toString();\n        this.itemData = dataItem;\n        this.item = null;\n        if (this.previousValue !== this.value) {\n            this.detachChangeEvent(null);\n        }\n    }\n    updateValues() {\n        if (!isNullOrUndefined(this.value)) {\n            const li = this.getElementByValue(this.value);\n            if (li) {\n                this.setSelection(li, null);\n            }\n            else if (this.allowCustom) {\n                this.valueMuteChange(this.value);\n            }\n            else {\n                this.valueMuteChange(null);\n            }\n        }\n        else if (this.text && isNullOrUndefined(this.value)) {\n            const li = this.getElementByText(this.text);\n            if (li) {\n                this.setSelection(li, null);\n            }\n            else {\n                Input.setValue(this.text, this.inputElement, this.floatLabelType, this.showClearButton);\n                this.customValue();\n            }\n        }\n        else {\n            this.setSelection(this.liCollections[this.activeIndex], null);\n        }\n        this.setHiddenValue();\n        Input.setValue(this.text, this.inputElement, this.floatLabelType, this.showClearButton);\n    }\n    updateIconState() {\n        if (this.showClearButton) {\n            if (this.inputElement && this.inputElement.value !== '' && !this.readonly) {\n                removeClass([this.inputWrapper.clearButton], dropDownListClasses.clearIconHide);\n            }\n            else {\n                addClass([this.inputWrapper.clearButton], dropDownListClasses.clearIconHide);\n            }\n        }\n    }\n    getAriaAttributes() {\n        const ariaAttributes = {\n            'aria-owns': this.element.id + '_options',\n            'role': 'combobox',\n            'aria-autocomplete': 'both',\n            'aria-labelledby': this.hiddenElement.id,\n            'aria-hasPopup': 'true',\n            'aria-expanded': 'false',\n            'aria-readonly': this.readonly.toString(),\n            'autocomplete': 'off',\n            'autocorrect': 'off',\n            'autocapitalize': 'off',\n            'spellcheck': 'false'\n        };\n        return ariaAttributes;\n    }\n    searchLists(e) {\n        this.isTyped = true;\n        if (this.isFiltering()) {\n            super.searchLists(e);\n            if (this.ulElement && this.filterInput.value.trim() === '') {\n                this.setHoverList(this.ulElement.querySelector('.' + dropDownListClasses.li));\n            }\n        }\n        else {\n            if (this.ulElement && this.inputElement.value === '' && this.preventAutoFill) {\n                this.setHoverList(this.ulElement.querySelector('.' + dropDownListClasses.li));\n            }\n            this.incrementalSearch(e);\n        }\n    }\n    getNgDirective() {\n        return 'EJS-COMBOBOX';\n    }\n    setSearchBox() {\n        this.filterInput = this.inputElement;\n        return (this.isFiltering() ? this.inputWrapper : inputObject$1);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    onActionComplete(ulElement, list, e, isUpdated) {\n        super.onActionComplete(ulElement, list, e);\n        if (this.isSelectCustom) {\n            this.removeSelection();\n        }\n        if (!this.preventAutoFill && this.getModuleName() === 'combobox' && this.isTyped) {\n            setTimeout(() => {\n                this.inlineSearch();\n            });\n        }\n    }\n    getFocusElement() {\n        const dataItem = this.isSelectCustom ? { text: '' } : this.getItemData();\n        const selected = this.list.querySelector('.' + dropDownListClasses.selected);\n        const isSelected = dataItem.text === this.inputElement.value && !isNullOrUndefined(selected);\n        if (isSelected) {\n            return selected;\n        }\n        if ((Browser.isDevice && !this.isDropDownClick || !Browser.isDevice) &&\n            !isNullOrUndefined(this.liCollections) && this.liCollections.length > 0) {\n            const inputValue = this.inputElement.value;\n            const activeItem = Search(inputValue, this.liCollections, this.filterType, true);\n            const activeElement = activeItem.item;\n            if (!isNullOrUndefined(activeElement)) {\n                const count = this.getIndexByValue(activeElement.getAttribute('data-value')) - 1;\n                const height = parseInt(getComputedStyle(this.liCollections[0], null).getPropertyValue('height'), 10);\n                if (!isNaN(height) && this.getModuleName() !== 'autocomplete') {\n                    this.removeFocus();\n                    const fixedHead = this.fields.groupBy ? this.liCollections[0].offsetHeight : 0;\n                    this.list.scrollTop = count * height + fixedHead;\n                    addClass([activeElement], dropDownListClasses.focus);\n                }\n            }\n            else {\n                if (this.isSelectCustom && this.inputElement.value.trim() !== '') {\n                    this.removeFocus();\n                    this.list.scrollTop = 0;\n                }\n            }\n            return activeElement;\n        }\n        else {\n            return null;\n        }\n    }\n    setValue(e) {\n        if (e && e.type === 'keydown' && e.action === 'enter') {\n            this.removeFillSelection();\n        }\n        if (this.autofill && this.getModuleName() === 'combobox' && e && e.type === 'keydown' && e.action !== 'enter') {\n            this.preventAutoFill = false;\n            this.inlineSearch(e);\n            return false;\n        }\n        else {\n            return super.setValue(e);\n        }\n    }\n    checkCustomValue() {\n        this.itemData = this.getDataByValue(this.value);\n        const dataItem = this.getItemData();\n        if (!(this.allowCustom && isNullOrUndefined(dataItem.value) && isNullOrUndefined(dataItem.text))) {\n            this.setProperties({ 'value': dataItem.value, 'text': dataItem.text }, !this.allowCustom);\n        }\n    }\n    /**\n     * Shows the spinner loader.\n     *\n     * @returns {void}\n     * @deprecated\n     */\n    showSpinner() {\n        if (isNullOrUndefined(this.spinnerElement)) {\n            this.spinnerElement = (this.getModuleName() === 'autocomplete') ? (this.inputWrapper.buttons[0] ||\n                this.inputWrapper.clearButton ||\n                Input.appendSpan('e-input-group-icon ' + SPINNER_CLASS, this.inputWrapper.container, this.createElement)) :\n                (this.inputWrapper.buttons[0] || this.inputWrapper.clearButton);\n            addClass([this.spinnerElement], dropDownListClasses.disableIcon);\n            createSpinner({\n                target: this.spinnerElement,\n                width: Browser.isDevice ? '16px' : '14px'\n            }, this.createElement);\n            showSpinner(this.spinnerElement);\n        }\n    }\n    /**\n     * Hides the spinner loader.\n     *\n     * @returns {void}\n     * @deprecated\n     */\n    hideSpinner() {\n        if (!isNullOrUndefined(this.spinnerElement)) {\n            hideSpinner(this.spinnerElement);\n            removeClass([this.spinnerElement], dropDownListClasses.disableIcon);\n            if (this.spinnerElement.classList.contains(SPINNER_CLASS)) {\n                detach(this.spinnerElement);\n            }\n            else {\n                this.spinnerElement.innerHTML = '';\n            }\n            this.spinnerElement = null;\n        }\n    }\n    setAutoFill(activeElement, isHover) {\n        if (!isHover) {\n            this.setHoverList(activeElement);\n        }\n        if (this.autofill && !this.preventAutoFill) {\n            const currentValue = this.getTextByValue(activeElement.getAttribute('data-value')).toString();\n            const currentFillValue = this.getFormattedValue(activeElement.getAttribute('data-value'));\n            if (this.getModuleName() === 'combobox') {\n                if (!this.isSelected && this.previousValue !== currentFillValue) {\n                    this.updateSelectedItem(activeElement, null);\n                    this.isSelected = true;\n                    this.previousValue = this.getFormattedValue(activeElement.getAttribute('data-value'));\n                }\n                else {\n                    this.updateSelectedItem(activeElement, null, true);\n                }\n            }\n            if (!this.isAndroidAutoFill(currentValue)) {\n                this.setAutoFillSelection(currentValue, isHover);\n            }\n        }\n    }\n    isAndroidAutoFill(value) {\n        if (Browser.isAndroid) {\n            const currentPoints = this.getSelectionPoints();\n            const prevEnd = this.prevSelectPoints.end;\n            const curEnd = currentPoints.end;\n            const prevStart = this.prevSelectPoints.start;\n            const curStart = currentPoints.start;\n            if (prevEnd !== 0 && ((prevEnd === value.length && prevStart === value.length) ||\n                (prevStart > curStart && prevEnd > curEnd) || (prevEnd === curEnd && prevStart === curStart))) {\n                return true;\n            }\n            else {\n                return false;\n            }\n        }\n        else {\n            return false;\n        }\n    }\n    clearAll(e, property) {\n        if (isNullOrUndefined(property) || (!isNullOrUndefined(property) && isNullOrUndefined(property.dataSource))) {\n            super.clearAll(e);\n        }\n        if (this.isFiltering() && !isNullOrUndefined(e) && e.target === this.inputWrapper.clearButton) {\n            this.searchLists(e);\n        }\n    }\n    isSelectFocusItem(element) {\n        return !isNullOrUndefined(element);\n    }\n    inlineSearch(e) {\n        const isKeyNavigate = (e && (e.action === 'down' || e.action === 'up' ||\n            e.action === 'home' || e.action === 'end' || e.action === 'pageUp' || e.action === 'pageDown'));\n        const activeElement = isKeyNavigate ? this.liCollections[this.activeIndex] : this.getFocusElement();\n        if (!isNullOrUndefined(activeElement)) {\n            if (!isKeyNavigate) {\n                const value = this.getFormattedValue(activeElement.getAttribute('data-value'));\n                this.activeIndex = this.getIndexByValue(value);\n                this.activeIndex = !isNullOrUndefined(this.activeIndex) ? this.activeIndex : null;\n            }\n            this.preventAutoFill = this.inputElement.value === '' ? false : this.preventAutoFill;\n            this.setAutoFill(activeElement, isKeyNavigate);\n        }\n        else if (this.inputElement.value === '') {\n            this.activeIndex = null;\n            this.list.scrollTop = 0;\n            const focusItem = this.list.querySelector('.' + dropDownListClasses.li);\n            this.setHoverList(focusItem);\n        }\n        else {\n            this.activeIndex = null;\n            this.removeSelection();\n            if (this.liCollections && this.liCollections.length > 0 && !this.isCustomFilter) {\n                this.removeFocus();\n            }\n        }\n    }\n    incrementalSearch(e) {\n        this.showPopup();\n        if (!isNullOrUndefined(this.listData)) {\n            this.inlineSearch(e);\n            e.preventDefault();\n        }\n    }\n    setAutoFillSelection(currentValue, isKeyNavigate = false) {\n        const selection = this.getSelectionPoints();\n        const value = this.inputElement.value.substr(0, selection.start);\n        if (value && (value.toLowerCase() === currentValue.substr(0, selection.start).toLowerCase())) {\n            const inputValue = value + currentValue.substr(value.length, currentValue.length);\n            Input.setValue(inputValue, this.inputElement, this.floatLabelType, this.showClearButton);\n            this.inputElement.setSelectionRange(selection.start, this.inputElement.value.length);\n        }\n        else if (isKeyNavigate) {\n            Input.setValue(currentValue, this.inputElement, this.floatLabelType, this.showClearButton);\n            this.inputElement.setSelectionRange(0, this.inputElement.value.length);\n        }\n    }\n    getValueByText(text) {\n        return super.getValueByText(text, true, this.ignoreAccent);\n    }\n    unWireEvent() {\n        if (this.getModuleName() === 'combobox') {\n            EventHandler.remove(this.inputWrapper.buttons[0], 'mousedown', this.preventBlur);\n            EventHandler.remove(this.inputWrapper.container, 'blur', this.onBlurHandler);\n        }\n        if (!isNullOrUndefined(this.inputWrapper.buttons[0])) {\n            EventHandler.remove(this.inputWrapper.buttons[0], 'mousedown', this.dropDownClick);\n        }\n        if (this.inputElement) {\n            EventHandler.remove(this.inputElement, 'focus', this.targetFocus);\n            if (!this.readonly) {\n                EventHandler.remove(this.inputElement, 'input', this.onInput);\n                EventHandler.remove(this.inputElement, 'keyup', this.onFilterUp);\n                EventHandler.remove(this.inputElement, 'keydown', this.onFilterDown);\n                EventHandler.remove(this.inputElement, 'paste', this.pasteHandler);\n            }\n        }\n        this.unBindCommonEvent();\n    }\n    setSelection(li, e) {\n        super.setSelection(li, e);\n        if (!isNullOrUndefined(li) && !this.autofill && !this.isDropDownClick) {\n            this.removeFocus();\n        }\n    }\n    selectCurrentItem(e) {\n        let li;\n        if (this.isPopupOpen) {\n            if (this.isSelected) {\n                li = this.list.querySelector('.' + dropDownListClasses.selected);\n            }\n            else {\n                li = this.list.querySelector('.' + dropDownListClasses.focus);\n            }\n            if (li) {\n                this.setSelection(li, e);\n                this.isTyped = false;\n            }\n            if (this.isSelected) {\n                this.isSelectCustom = false;\n                this.onChangeEvent(e);\n            }\n        }\n        if (e.action === 'enter' && this.inputElement.value.trim() === '') {\n            this.clearAll(e);\n        }\n        else if (this.isTyped && !this.isSelected && isNullOrUndefined(li)) {\n            this.customValue(e);\n        }\n        this.hidePopup(e);\n    }\n    setHoverList(li) {\n        this.removeSelection();\n        if (this.isValidLI(li) && !li.classList.contains(dropDownListClasses.selected)) {\n            this.removeFocus();\n            li.classList.add(dropDownListClasses.focus);\n        }\n    }\n    targetFocus(e) {\n        if (Browser.isDevice && !this.allowFiltering) {\n            this.preventFocus = false;\n        }\n        this.onFocus(e);\n    }\n    dropDownClick(e) {\n        e.preventDefault();\n        if (Browser.isDevice && !this.isFiltering()) {\n            this.preventFocus = true;\n        }\n        super.dropDownClick(e);\n    }\n    customValue(e) {\n        const value = this.getValueByText(this.inputElement.value);\n        if (!this.allowCustom && this.inputElement.value !== '') {\n            const previousValue = this.previousValue;\n            const currentValue = this.value;\n            this.setProperties({ value: value });\n            if (isNullOrUndefined(this.value)) {\n                Input.setValue('', this.inputElement, this.floatLabelType, this.showClearButton);\n            }\n            if (this.autofill && previousValue === this.value && currentValue !== this.value) {\n                this.onChangeEvent(null);\n            }\n        }\n        else if (this.inputElement.value.trim() !== '') {\n            const previousValue = this.value;\n            if (isNullOrUndefined(value)) {\n                const value = this.inputElement.value === '' ? null : this.inputElement.value;\n                // eslint-disable-next-line max-len\n                const eventArgs = { text: value, item: {} };\n                if (!this.initial) {\n                    this.trigger('customValueSpecifier', eventArgs, (eventArgs) => {\n                        this.updateCustomValueCallback(value, eventArgs, previousValue, e);\n                    });\n                }\n                else {\n                    this.updateCustomValueCallback(value, eventArgs, previousValue);\n                }\n            }\n            else {\n                this.isSelectCustom = false;\n                this.setProperties({ value: value });\n                if (previousValue !== this.value) {\n                    this.onChangeEvent(e);\n                }\n            }\n        }\n        else if (this.allowCustom) {\n            this.isSelectCustom = true;\n        }\n    }\n    updateCustomValueCallback(value, eventArgs, previousValue, e) {\n        const fields = this.fields;\n        const item = eventArgs.item;\n        let dataItem = {};\n        if (item && getValue(fields.text, item) && getValue(fields.value, item)) {\n            dataItem = item;\n        }\n        else {\n            setValue(fields.text, value, dataItem);\n            setValue(fields.value, value, dataItem);\n        }\n        this.itemData = dataItem;\n        const changeData = {\n            text: getValue(fields.text, this.itemData),\n            value: getValue(fields.value, this.itemData),\n            index: null\n        };\n        this.setProperties(changeData, true);\n        this.setSelection(null, null);\n        this.isSelectCustom = true;\n        if (previousValue !== this.value) {\n            this.onChangeEvent(e);\n        }\n    }\n    /**\n     * Dynamically change the value of properties.\n     *\n     * @param {ComboBoxModel} newProp - Returns the dynamic property value of the component.\n     * @param {ComboBoxModel} oldProp - Returns the previous property value of the component.\n     * @private\n     * @returns {void}\n     */\n    onPropertyChanged(newProp, oldProp) {\n        if (this.getModuleName() === 'combobox') {\n            this.checkData(newProp);\n            this.setUpdateInitial(['fields', 'query', 'dataSource'], newProp);\n        }\n        for (const prop of Object.keys(newProp)) {\n            switch (prop) {\n                case 'readonly':\n                    Input.setReadonly(this.readonly, this.inputElement);\n                    if (this.readonly) {\n                        EventHandler.remove(this.inputElement, 'input', this.onInput);\n                        EventHandler.remove(this.inputElement, 'keyup', this.onFilterUp);\n                        EventHandler.remove(this.inputElement, 'keydown', this.onFilterDown);\n                    }\n                    else {\n                        EventHandler.add(this.inputElement, 'input', this.onInput, this);\n                        EventHandler.add(this.inputElement, 'keyup', this.onFilterUp, this);\n                        EventHandler.add(this.inputElement, 'keydown', this.onFilterDown, this);\n                    }\n                    this.setReadOnly();\n                    break;\n                case 'allowFiltering':\n                    this.setSearchBox();\n                    if (this.isFiltering() && this.getModuleName() === 'combobox' && isNullOrUndefined(this.list)) {\n                        super.renderList();\n                    }\n                    break;\n                case 'allowCustom':\n                    break;\n                default: {\n                    // eslint-disable-next-line max-len\n                    const comboProps = this.getPropObject(prop, newProp, oldProp);\n                    super.onPropertyChanged(comboProps.newProperty, comboProps.oldProperty);\n                    if (this.isFiltering() && prop === 'dataSource' && isNullOrUndefined(this.list) && this.itemTemplate &&\n                        this.getModuleName() === 'combobox') {\n                        super.renderList();\n                    }\n                    break;\n                }\n            }\n        }\n    }\n    /**\n     * To initialize the control rendering.\n     *\n     * @private\n     * @returns {void}\n     */\n    render() {\n        super.render();\n        this.setSearchBox();\n        if (this.isFiltering() && this.getModuleName() === 'combobox' && isNullOrUndefined(this.list)) {\n            super.renderList();\n        }\n        this.renderComplete();\n    }\n    /**\n     * Return the module name of this component.\n     *\n     * @private\n     * @returns {string} Return the module name of this component.\n     */\n    getModuleName() {\n        return 'combobox';\n    }\n    /**\n     * Adds a new item to the combobox popup list. By default, new item appends to the list as the last item,\n     * but you can insert based on the index parameter.\n     *\n     * @param  { Object[] } items - Specifies an array of JSON data or a JSON data.\n     * @param { number } itemIndex - Specifies the index to place the newly added item in the popup list.\n     * @returns {void}\n     * @deprecated\n     */\n    addItem(items, itemIndex) {\n        super.addItem(items, itemIndex);\n    }\n    /**\n     * To filter the data from given data source by using query\n     *\n     * @param  {Object[] | DataManager } dataSource - Set the data source to filter.\n     * @param  {Query} query - Specify the query to filter the data.\n     * @param  {FieldSettingsModel} fields - Specify the fields to map the column in the data table.\n     * @returns {void}\n     * @deprecated\n     */\n    filter(dataSource, query, fields) {\n        super.filter(dataSource, query, fields);\n    }\n    /**\n     * Opens the popup that displays the list of items.\n     *\n     * @returns {void}\n     * @deprecated\n     */\n    showPopup() {\n        super.showPopup();\n    }\n    /* eslint-disable valid-jsdoc, jsdoc/require-param */\n    /**\n     * Hides the popup if it is in open state.\n     *\n     * @returns {void}\n     * @deprecated\n     */\n    hidePopup(e) {\n        /* eslint-enable valid-jsdoc, jsdoc/require-param */\n        const inputValue = this.inputElement && this.inputElement.value === '' ? null\n            : this.inputElement && this.inputElement.value;\n        if (!isNullOrUndefined(this.listData)) {\n            const isEscape = this.isEscapeKey;\n            if (this.isEscapeKey) {\n                Input.setValue(this.typedString, this.inputElement, this.floatLabelType, this.showClearButton);\n                this.isEscapeKey = false;\n            }\n            if (this.autofill) {\n                this.removeFillSelection();\n            }\n            const dataItem = this.isSelectCustom ? { text: '' } : this.getItemData();\n            const selected = this.list.querySelector('.' + dropDownListClasses.selected);\n            if (this.inputElement && dataItem.text === this.inputElement.value && !isNullOrUndefined(selected)) {\n                if (this.isSelected) {\n                    this.onChangeEvent(e);\n                    this.isSelectCustom = false;\n                }\n                super.hidePopup(e);\n                return;\n            }\n            if (this.getModuleName() === 'combobox' && this.inputElement.value.trim() !== '') {\n                const searchItem = Search(this.inputElement.value, this.liCollections, 'Equal', true);\n                this.selectedLI = searchItem.item;\n                if (isNullOrUndefined(searchItem.index)) {\n                    searchItem.index = Search(this.inputElement.value, this.liCollections, 'StartsWith', true).index;\n                }\n                this.activeIndex = searchItem.index;\n                if (!isNullOrUndefined(this.selectedLI)) {\n                    this.updateSelectedItem(this.selectedLI, null, true);\n                }\n                else if (isEscape) {\n                    this.isSelectCustom = true;\n                    this.removeSelection();\n                }\n            }\n            if (!this.isEscapeKey && this.isTyped && !this.isInteracted) {\n                this.customValue(e);\n            }\n        }\n        if (isNullOrUndefined(this.listData) && this.allowCustom && !isNullOrUndefined(inputValue) && inputValue !== this.value) {\n            this.customValue();\n        }\n        super.hidePopup(e);\n    }\n    /**\n     * Sets the focus to the component for interaction.\n     *\n     * @returns {void}\n     */\n    focusIn() {\n        if (!this.enabled) {\n            return;\n        }\n        if (Browser.isDevice && !this.isFiltering()) {\n            this.preventFocus = true;\n        }\n        super.focusIn();\n    }\n    /**\n     * Allows you to clear the selected values from the component.\n     *\n     * @returns {void}\n     * @deprecated\n     */\n    clear() {\n        this.value = null;\n    }\n    /* eslint-disable valid-jsdoc, jsdoc/require-param */\n    /**\n     * Moves the focus from the component if the component is already focused.\n     *\n     * @returns {void}\n     * @deprecated\n     */\n    focusOut(e) {\n        /* eslint-enable valid-jsdoc, jsdoc/require-param */\n        super.focusOut(e);\n    }\n    /* eslint-disable valid-jsdoc, jsdoc/require-returns-description */\n    /**\n     * Gets all the list items bound on this component.\n     *\n     * @returns {Element[]}\n     * @deprecated\n     */\n    getItems() {\n        return super.getItems();\n    }\n    /**\n     * Gets the data Object that matches the given value.\n     *\n     * @param { string | number } value - Specifies the value of the list item.\n     * @returns {Object}\n     * @deprecated\n     */\n    getDataByValue(value) {\n        return super.getDataByValue(value);\n    }\n    /* eslint-enable valid-jsdoc, jsdoc/require-returns-description */\n    renderHightSearch() {\n        // update high light search\n    }\n};\n__decorate$3([\n    Property(false)\n], ComboBox.prototype, \"autofill\", void 0);\n__decorate$3([\n    Property(true)\n], ComboBox.prototype, \"allowCustom\", void 0);\n__decorate$3([\n    Property({})\n], ComboBox.prototype, \"htmlAttributes\", void 0);\n__decorate$3([\n    Property(false)\n], ComboBox.prototype, \"allowFiltering\", void 0);\n__decorate$3([\n    Property(null)\n], ComboBox.prototype, \"query\", void 0);\n__decorate$3([\n    Property(null)\n], ComboBox.prototype, \"index\", void 0);\n__decorate$3([\n    Property(true)\n], ComboBox.prototype, \"showClearButton\", void 0);\n__decorate$3([\n    Property(false)\n], ComboBox.prototype, \"enableRtl\", void 0);\n__decorate$3([\n    Event()\n], ComboBox.prototype, \"customValueSpecifier\", void 0);\n__decorate$3([\n    Event()\n], ComboBox.prototype, \"filtering\", void 0);\n__decorate$3([\n    Property(null)\n], ComboBox.prototype, \"valueTemplate\", void 0);\n__decorate$3([\n    Property('Never')\n], ComboBox.prototype, \"floatLabelType\", void 0);\n__decorate$3([\n    Property(null)\n], ComboBox.prototype, \"filterBarPlaceholder\", void 0);\n__decorate$3([\n    Property(null)\n], ComboBox.prototype, \"cssClass\", void 0);\n__decorate$3([\n    Property(null)\n], ComboBox.prototype, \"headerTemplate\", void 0);\n__decorate$3([\n    Property(null)\n], ComboBox.prototype, \"footerTemplate\", void 0);\n__decorate$3([\n    Property(null)\n], ComboBox.prototype, \"placeholder\", void 0);\n__decorate$3([\n    Property('100%')\n], ComboBox.prototype, \"width\", void 0);\n__decorate$3([\n    Property('300px')\n], ComboBox.prototype, \"popupHeight\", void 0);\n__decorate$3([\n    Property('100%')\n], ComboBox.prototype, \"popupWidth\", void 0);\n__decorate$3([\n    Property(false)\n], ComboBox.prototype, \"readonly\", void 0);\n__decorate$3([\n    Property(null)\n], ComboBox.prototype, \"text\", void 0);\n__decorate$3([\n    Property(null)\n], ComboBox.prototype, \"value\", void 0);\nComboBox = __decorate$3([\n    NotifyPropertyChanges\n], ComboBox);\n\n/**\n * export all modules from current location\n */\n\nvar __decorate$4 = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n// eslint-disable-next-line @typescript-eslint/triple-slash-reference\n/// <reference path='../combo-box/combo-box-model.d.ts'/>\ndropDownListClasses.root = 'e-autocomplete';\ndropDownListClasses.icon = 'e-input-group-icon e-ddl-icon e-search-icon';\n/**\n * The AutoComplete component provides the matched suggestion list when type into the input,\n * from which the user can select one.\n * ```html\n * <input id=\"list\" type=\"text\"/>\n * ```\n * ```typescript\n *   let atcObj:AutoComplete = new AutoComplete();\n *   atcObj.appendTo(\"#list\");\n * ```\n */\nlet AutoComplete = class AutoComplete extends ComboBox {\n    /**\n     * * Constructor for creating the widget\n     *\n     * @param {AutoCompleteModel} options - Specifies the AutoComplete model.\n     * @param {string | HTMLElement} element - Specifies the element to render as component.\n     * @private\n     */\n    constructor(options, element) {\n        super(options, element);\n        this.isFiltered = false;\n        this.searchList = false;\n    }\n    /**\n     * Initialize the event handler\n     *\n     * @private\n     * @returns {void}\n     */\n    preRender() {\n        super.preRender();\n    }\n    getLocaleName() {\n        return 'auto-complete';\n    }\n    getNgDirective() {\n        return 'EJS-AUTOCOMPLETE';\n    }\n    getQuery(query) {\n        const filterQuery = query ? query.clone() : this.query ? this.query.clone() : new Query();\n        const filterType = (this.queryString === '' && !isNullOrUndefined(this.value)) ? 'equal' : this.filterType;\n        const queryString = (this.queryString === '' && !isNullOrUndefined(this.value)) ? this.value : this.queryString;\n        if (this.isFiltered) {\n            return filterQuery;\n        }\n        if (this.queryString !== null && this.queryString !== '') {\n            const dataType = this.typeOfData(this.dataSource).typeof;\n            if (!(this.dataSource instanceof DataManager) && dataType === 'string' || dataType === 'number') {\n                filterQuery.where('', filterType, queryString, this.ignoreCase, this.ignoreAccent);\n            }\n            else {\n                const mapping = !isNullOrUndefined(this.fields.value) ? this.fields.value : '';\n                filterQuery.where(mapping, filterType, queryString, this.ignoreCase, this.ignoreAccent);\n            }\n        }\n        if (!isNullOrUndefined(this.suggestionCount)) {\n            // Since defualt value of suggestioncount is 20, checked the condition\n            if (this.suggestionCount !== 20) {\n                for (let queryElements = 0; queryElements < filterQuery.queries.length; queryElements++) {\n                    if (filterQuery.queries[queryElements].fn === 'onTake') {\n                        filterQuery.queries.splice(queryElements, 1);\n                    }\n                }\n            }\n            filterQuery.take(this.suggestionCount);\n        }\n        return filterQuery;\n    }\n    searchLists(e) {\n        this.isTyped = true;\n        this.isDataFetched = this.isSelectCustom = false;\n        if (isNullOrUndefined(this.list)) {\n            super.renderList(true);\n        }\n        this.queryString = this.filterInput.value;\n        if (e.type !== 'mousedown' && (e.keyCode === 40 || e.keyCode === 38)) {\n            this.queryString = this.queryString === '' ? null : this.queryString;\n            this.beforePopupOpen = true;\n            this.resetList(this.dataSource, this.fields);\n            return;\n        }\n        this.isSelected = false;\n        this.activeIndex = null;\n        const eventArgs = {\n            preventDefaultAction: false,\n            text: this.filterInput.value,\n            updateData: (dataSource, query, fields) => {\n                if (eventArgs.cancel) {\n                    return;\n                }\n                this.isFiltered = true;\n                this.filterAction(dataSource, query, fields);\n            },\n            cancel: false\n        };\n        this.trigger('filtering', eventArgs, (eventArgs) => {\n            if (!eventArgs.cancel && !this.isFiltered && !eventArgs.preventDefaultAction) {\n                this.searchList = true;\n                this.filterAction(this.dataSource, null, this.fields);\n            }\n        });\n    }\n    /**\n     * To filter the data from given data source by using query\n     *\n     * @param  {Object[] | DataManager } dataSource - Set the data source to filter.\n     * @param  {Query} query - Specify the query to filter the data.\n     * @param  {FieldSettingsModel} fields - Specify the fields to map the column in the data table.\n     * @returns {void}\n     * @deprecated\n     */\n    filter(dataSource, query, fields) {\n        this.isFiltered = true;\n        this.filterAction(dataSource, query, fields);\n    }\n    filterAction(dataSource, query, fields) {\n        this.beforePopupOpen = true;\n        if (this.queryString !== '' && (this.queryString.length >= this.minLength)) {\n            this.resetList(dataSource, fields, query);\n        }\n        else {\n            this.hidePopup();\n            this.beforePopupOpen = false;\n        }\n        this.renderReactTemplates();\n    }\n    clearAll(e, property) {\n        if (isNullOrUndefined(property) || (!isNullOrUndefined(property) && isNullOrUndefined(property.dataSource))) {\n            super.clearAll(e);\n        }\n        if (this.beforePopupOpen) {\n            this.hidePopup();\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    onActionComplete(ulElement, list, e, isUpdated) {\n        this.fixedHeaderElement = null;\n        super.onActionComplete(ulElement, list, e);\n        const item = this.list.querySelector('.' + dropDownListClasses.li);\n        if (!isNullOrUndefined(item)) {\n            removeClass([item], dropDownListClasses.focus);\n        }\n        this.postBackAction();\n    }\n    postBackAction() {\n        if (this.autofill && !isNullOrUndefined(this.liCollections[0]) && this.searchList) {\n            const items = [this.liCollections[0]];\n            const searchItem = Search(this.inputElement.value, items, 'StartsWith', this.ignoreCase);\n            this.searchList = false;\n            if (!isNullOrUndefined(searchItem.item)) {\n                super.setAutoFill(this.liCollections[0], true);\n            }\n        }\n    }\n    setSelection(li, e) {\n        if (!this.isValidLI(li)) {\n            return;\n        }\n        if (!isNullOrUndefined(e) && e.type === 'keydown' && e.action !== 'enter'\n            && e.action !== 'tab' && this.isValidLI(li)) {\n            const value = this.getFormattedValue(li.getAttribute('data-value'));\n            this.activeIndex = this.getIndexByValue(value);\n            this.setHoverList(li);\n            this.selectedLI = li;\n            this.setScrollPosition(e);\n            if (this.autofill && this.isPopupOpen) {\n                this.preventAutoFill = false;\n                const isKeyNavigate = (e && e.action === 'down' || e.action === 'up' ||\n                    e.action === 'home' || e.action === 'end' || e.action === 'pageUp' || e.action === 'pageDown');\n                super.setAutoFill(li, isKeyNavigate);\n            }\n            attributes(this.inputElement, { 'aria-activedescendant': this.selectedLI ? this.selectedLI.id : null });\n        }\n        else {\n            super.setSelection(li, e);\n        }\n    }\n    listOption(dataSource, fieldsSettings) {\n        const fields = super.listOption(dataSource, fieldsSettings);\n        if (isNullOrUndefined(fields.itemCreated)) {\n            fields.itemCreated = (e) => {\n                if (this.highlight) {\n                    if (this.element.tagName === this.getNgDirective() && this.itemTemplate) {\n                        setTimeout(() => {\n                            highlightSearch(e.item, this.queryString, this.ignoreCase, this.filterType);\n                        }, 0);\n                    }\n                    else {\n                        highlightSearch(e.item, this.queryString, this.ignoreCase, this.filterType);\n                    }\n                }\n            };\n        }\n        else {\n            const itemCreated = fields.itemCreated;\n            fields.itemCreated = (e) => {\n                if (this.highlight) {\n                    highlightSearch(e.item, this.queryString, this.ignoreCase, this.filterType);\n                }\n                itemCreated.apply(this, [e]);\n            };\n        }\n        return fields;\n    }\n    isFiltering() {\n        return true;\n    }\n    renderPopup() {\n        this.list.scrollTop = 0;\n        super.renderPopup();\n    }\n    isEditTextBox() {\n        return true && this.inputElement.value.trim() !== '';\n    }\n    isPopupButton() {\n        return this.showPopupButton;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    isSelectFocusItem(element) {\n        return false;\n    }\n    /**\n     * Search the entered text and show it in the suggestion list if available.\n     *\n     * @returns {void}\n     * @deprecated\n     */\n    showPopup() {\n        if (!this.enabled) {\n            return;\n        }\n        if (this.beforePopupOpen) {\n            this.refreshPopup();\n            return;\n        }\n        this.beforePopupOpen = true;\n        this.preventAutoFill = true;\n        if (isNullOrUndefined(this.list)) {\n            this.renderList();\n        }\n        else {\n            this.resetList(this.dataSource, this.fields);\n        }\n    }\n    /**\n     * Hides the popup if it is in open state.\n     *\n     * @returns {void}\n     */\n    hidePopup(e) {\n        super.hidePopup(e);\n        this.activeIndex = -1;\n    }\n    /**\n     * Dynamically change the value of properties.\n     *\n     * @param {AutoCompleteModel} newProp - Returns the dynamic property value of the component.\n     * @param {AutoCompleteModel} oldProp - Returns the previous property value of the component.\n     * @private\n     * @returns {void}\n     */\n    onPropertyChanged(newProp, oldProp) {\n        if (this.getModuleName() === 'autocomplete') {\n            this.setUpdateInitial(['fields', 'query', 'dataSource'], newProp);\n        }\n        for (const prop of Object.keys(newProp)) {\n            switch (prop) {\n                case 'showPopupButton':\n                    if (this.showPopupButton) {\n                        const button = Input.appendSpan(dropDownListClasses.icon, this.inputWrapper.container, this.createElement);\n                        this.inputWrapper.buttons[0] = button;\n                        if (this.inputWrapper && this.inputWrapper.buttons && this.inputWrapper.buttons[0]) {\n                            EventHandler.add(this.inputWrapper.buttons[0], 'click', this.dropDownClick, this);\n                        }\n                    }\n                    else {\n                        detach(this.inputWrapper.buttons[0]);\n                        this.inputWrapper.buttons[0] = null;\n                    }\n                    break;\n                default: {\n                    // eslint-disable-next-line max-len\n                    const atcProps = this.getPropObject(prop, newProp, oldProp);\n                    super.onPropertyChanged(atcProps.newProperty, atcProps.oldProperty);\n                    break;\n                }\n            }\n        }\n    }\n    renderHightSearch() {\n        if (this.highlight) {\n            for (let i = 0; i < this.liCollections.length; i++) {\n                const isHighlight = this.ulElement.querySelector('.e-active');\n                if (!isHighlight) {\n                    revertHighlightSearch(this.liCollections[i]);\n                    highlightSearch(this.liCollections[i], this.queryString, this.ignoreCase, this.filterType);\n                }\n            }\n        }\n    }\n    /**\n     * Return the module name of this component.\n     *\n     * @private\n     * @returns {string} Return the module name of this component.\n     */\n    getModuleName() {\n        return 'autocomplete';\n    }\n    /**\n     * To initialize the control rendering\n     *\n     * @private\n     * @returns {void}\n     */\n    render() {\n        super.render();\n    }\n};\n__decorate$4([\n    Complex({ value: null, iconCss: null, groupBy: null }, FieldSettings)\n], AutoComplete.prototype, \"fields\", void 0);\n__decorate$4([\n    Property(true)\n], AutoComplete.prototype, \"ignoreCase\", void 0);\n__decorate$4([\n    Property(false)\n], AutoComplete.prototype, \"showPopupButton\", void 0);\n__decorate$4([\n    Property(false)\n], AutoComplete.prototype, \"highlight\", void 0);\n__decorate$4([\n    Property(20)\n], AutoComplete.prototype, \"suggestionCount\", void 0);\n__decorate$4([\n    Property({})\n], AutoComplete.prototype, \"htmlAttributes\", void 0);\n__decorate$4([\n    Property(null)\n], AutoComplete.prototype, \"query\", void 0);\n__decorate$4([\n    Property(1)\n], AutoComplete.prototype, \"minLength\", void 0);\n__decorate$4([\n    Property('Contains')\n], AutoComplete.prototype, \"filterType\", void 0);\n__decorate$4([\n    Event()\n], AutoComplete.prototype, \"filtering\", void 0);\n__decorate$4([\n    Property(null)\n], AutoComplete.prototype, \"index\", void 0);\n__decorate$4([\n    Property('Never')\n], AutoComplete.prototype, \"floatLabelType\", void 0);\n__decorate$4([\n    Property(null)\n], AutoComplete.prototype, \"valueTemplate\", void 0);\n__decorate$4([\n    Property(null)\n], AutoComplete.prototype, \"filterBarPlaceholder\", void 0);\n__decorate$4([\n    Property(false)\n], AutoComplete.prototype, \"allowFiltering\", void 0);\n__decorate$4([\n    Property(null)\n], AutoComplete.prototype, \"text\", void 0);\nAutoComplete = __decorate$4([\n    NotifyPropertyChanges\n], AutoComplete);\n\n/**\n * export all modules from current location\n */\n\n/**\n * FloatLable Moduel\n * Specifies whether to display the floating label above the input element.\n */\nconst FLOATLINE = 'e-float-line';\nconst FLOATTEXT = 'e-float-text';\nconst LABELTOP = 'e-label-top';\nconst LABELBOTTOM = 'e-label-bottom';\n/* eslint-disable valid-jsdoc */\n/**\n * Function to create Float Label element.\n *\n * @param {HTMLDivElement} overAllWrapper - Overall wrapper of multiselect.\n * @param {HTMLElement} searchWrapper - Search wrapper of multiselect.\n * @param {HTMLElement} element - The given html element.\n * @param {HTMLInputElement} inputElement - Specify the input wrapper.\n * @param {number[] | string[] | boolean[]} value - Value of the MultiSelect.\n * @param {FloatLabelType} floatLabelType - Specify the FloatLabel Type.\n * @param {string} placeholder - Specify the PlaceHolder text.\n */\nfunction createFloatLabel(overAllWrapper, searchWrapper, element, inputElement, value, floatLabelType, placeholder) {\n    const floatLinelement = createElement('span', { className: FLOATLINE });\n    const floatLabelElement = createElement('label', { className: FLOATTEXT });\n    if (!isNullOrUndefined(element.id) && element.id !== '') {\n        floatLabelElement.id = 'label_' + element.id.replace(/ /g, '_');\n        attributes(element, { 'aria-labelledby': floatLabelElement.id });\n    }\n    if (!isNullOrUndefined(inputElement.placeholder) && inputElement.placeholder !== '') {\n        floatLabelElement.innerText = encodePlaceholder(inputElement.placeholder);\n        inputElement.removeAttribute('placeholder');\n    }\n    floatLabelElement.innerText = encodePlaceholder(placeholder);\n    searchWrapper.appendChild(floatLinelement);\n    searchWrapper.appendChild(floatLabelElement);\n    overAllWrapper.classList.add('e-float-input');\n    updateFloatLabelState(value, floatLabelElement);\n    if (floatLabelType === 'Always') {\n        if (floatLabelElement.classList.contains(LABELBOTTOM)) {\n            removeClass([floatLabelElement], LABELBOTTOM);\n        }\n        addClass([floatLabelElement], LABELTOP);\n    }\n}\n/**\n * Function to update status of the Float Label element.\n *\n * @param {string[] | number[] | boolean[]} value - Value of the MultiSelect.\n * @param {HTMLElement} label - Float label element.\n */\nfunction updateFloatLabelState(value, label) {\n    if (value && value.length > 0) {\n        addClass([label], LABELTOP);\n        removeClass([label], LABELBOTTOM);\n    }\n    else {\n        removeClass([label], LABELTOP);\n        addClass([label], LABELBOTTOM);\n    }\n}\n/**\n * Function to remove Float Label element.\n *\n * @param {HTMLDivElement} overAllWrapper - Overall wrapper of multiselect.\n * @param {HTMLDivElement} componentWrapper - Wrapper element of multiselect.\n * @param {HTMLElement} searchWrapper - Search wrapper of multiselect.\n * @param {HTMLInputElement} inputElement - Specify the input wrapper.\n * @param {number[] | string[] | boolean[]} value - Value of the MultiSelect.\n * @param {FloatLabelType} floatLabelType - Specify the FloatLabel Type.\n * @param {string} placeholder - Specify the PlaceHolder text.\n */\nfunction removeFloating(overAllWrapper, componentWrapper, searchWrapper, inputElement, value, floatLabelType, placeholder) {\n    const placeholderElement = componentWrapper.querySelector('.' + FLOATTEXT);\n    const floatLine = componentWrapper.querySelector('.' + FLOATLINE);\n    let placeholderText;\n    if (!isNullOrUndefined(placeholderElement)) {\n        placeholderText = placeholderElement.innerText;\n        detach(searchWrapper.querySelector('.' + FLOATTEXT));\n        setPlaceHolder(value, inputElement, placeholderText);\n        if (!isNullOrUndefined(floatLine)) {\n            detach(searchWrapper.querySelector('.' + FLOATLINE));\n        }\n    }\n    else {\n        placeholderText = (placeholder !== null) ? placeholder : '';\n        setPlaceHolder(value, inputElement, placeholderText);\n    }\n    overAllWrapper.classList.remove('e-float-input');\n}\n/**\n * Function to set the placeholder to the element.\n *\n * @param {number[] | string[] | boolean[]} value - Value of the MultiSelect.\n * @param {HTMLInputElement} inputElement - Specify the input wrapper.\n * @param {string} placeholder - Specify the PlaceHolder text.\n */\nfunction setPlaceHolder(value, inputElement, placeholder) {\n    if (value && value.length) {\n        inputElement.placeholder = '';\n    }\n    else {\n        inputElement.placeholder = placeholder;\n    }\n}\n/**\n * Function for focusing the Float Element.\n *\n * @param {HTMLDivElement} overAllWrapper - Overall wrapper of multiselect.\n * @param {HTMLDivElement} componentWrapper - Wrapper element of multiselect.\n */\nfunction floatLabelFocus(overAllWrapper, componentWrapper) {\n    overAllWrapper.classList.add('e-input-focus');\n    const label = componentWrapper.querySelector('.' + FLOATTEXT);\n    if (!isNullOrUndefined(label)) {\n        addClass([label], LABELTOP);\n        if (label.classList.contains(LABELBOTTOM)) {\n            removeClass([label], LABELBOTTOM);\n        }\n    }\n}\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/**\n * Function to focus the Float Label element.\n *\n * @param {HTMLDivElement} overAllWrapper - Overall wrapper of multiselect.\n * @param {HTMLDivElement} componentWrapper - Wrapper element of multiselect.\n * @param {number[] | string[] | boolean[]} value - Value of the MultiSelect.\n * @param {FloatLabelType} floatLabelType - Specify the FloatLabel Type.\n * @param {string} placeholder - Specify the PlaceHolder text.\n */\nfunction floatLabelBlur(overAllWrapper, componentWrapper, value, floatLabelType, placeholder) {\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    overAllWrapper.classList.remove('e-input-focus');\n    const label = componentWrapper.querySelector('.' + FLOATTEXT);\n    if (value && value.length <= 0 && floatLabelType === 'Auto' && !isNullOrUndefined(label)) {\n        if (label.classList.contains(LABELTOP)) {\n            removeClass([label], LABELTOP);\n        }\n        addClass([label], LABELBOTTOM);\n    }\n}\nfunction encodePlaceholder(placeholder) {\n    let result = '';\n    if (!isNullOrUndefined(placeholder) && placeholder !== '') {\n        const spanElement = document.createElement('span');\n        spanElement.innerHTML = '<input  placeholder=\"' + placeholder + '\"/>';\n        const hiddenInput = (spanElement.children[0]);\n        result = hiddenInput.placeholder;\n    }\n    return result;\n}\n/* eslint-enable valid-jsdoc */\n\nvar __decorate$5 = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n// eslint-disable-next-line @typescript-eslint/triple-slash-reference\n/// <reference path='../drop-down-base/drop-down-base-model.d.ts'/>\nconst FOCUS = 'e-input-focus';\nconst DISABLED$1 = 'e-disabled';\nconst OVER_ALL_WRAPPER = 'e-multiselect e-input-group e-control-wrapper';\nconst ELEMENT_WRAPPER = 'e-multi-select-wrapper';\nconst ELEMENT_MOBILE_WRAPPER = 'e-mob-wrapper';\nconst HIDE_LIST = 'e-hide-listitem';\nconst DELIMITER_VIEW = 'e-delim-view';\nconst CHIP_WRAPPER$1 = 'e-chips-collection';\nconst CHIP$1 = 'e-chips';\nconst CHIP_CONTENT$1 = 'e-chipcontent';\nconst CHIP_CLOSE$1 = 'e-chips-close';\nconst CHIP_SELECTED = 'e-chip-selected';\nconst SEARCHBOX_WRAPPER = 'e-searcher';\nconst DELIMITER_VIEW_WRAPPER = 'e-delimiter';\nconst ZERO_SIZE = 'e-zero-size';\nconst REMAIN_WRAPPER$1 = 'e-remain';\nconst CLOSEICON_CLASS$1 = 'e-chips-close e-close-hooker';\nconst DELIMITER_WRAPPER = 'e-delim-values';\nconst POPUP_WRAPPER = 'e-ddl e-popup e-multi-select-list-wrapper';\nconst INPUT_ELEMENT = 'e-dropdownbase';\nconst RTL_CLASS = 'e-rtl';\nconst CLOSE_ICON_HIDE = 'e-close-icon-hide';\nconst MOBILE_CHIP = 'e-mob-chip';\nconst FOOTER$1 = 'e-ddl-footer';\nconst HEADER$1 = 'e-ddl-header';\nconst DISABLE_ICON = 'e-ddl-disable-icon';\nconst SPINNER_CLASS$1 = 'e-ms-spinner-icon';\nconst HIDDEN_ELEMENT = 'e-multi-hidden';\nconst destroy = 'destroy';\nconst dropdownIcon = 'e-input-group-icon e-ddl-icon';\nconst iconAnimation = 'e-icon-anim';\nconst TOTAL_COUNT_WRAPPER$1 = 'e-delim-total';\nconst BOX_ELEMENT = 'e-multiselect-box';\nconst FILTERPARENT = 'e-filter-parent';\nconst CUSTOM_WIDTH = 'e-search-custom-width';\nconst FILTERINPUT = 'e-input-filter';\n/**\n * The Multiselect allows the user to pick a more than one value from list of predefined values.\n * ```html\n * <select id=\"list\">\n *      <option value='1'>Badminton</option>\n *      <option value='2'>Basketball</option>\n *      <option value='3'>Cricket</option>\n *      <option value='4'>Football</option>\n *      <option value='5'>Tennis</option>\n * </select>\n * ```\n * ```typescript\n * <script>\n *   var multiselectObj = new Multiselect();\n *   multiselectObj.appendTo(\"#list\");\n * </script>\n * ```\n */\nlet MultiSelect = class MultiSelect extends DropDownBase {\n    /**\n     * Constructor for creating the DropDownList widget.\n     *\n     * @param {MultiSelectModel} option - Specifies the MultiSelect model.\n     * @param {string | HTMLElement} element - Specifies the element to render as component.\n     * @private\n     */\n    constructor(option, element) {\n        super(option, element);\n        this.clearIconWidth = 0;\n        this.previousFilterText = '';\n        this.isValidKey = false;\n        this.selectAllEventData = [];\n        this.selectAllEventEle = [];\n        this.scrollFocusStatus = false;\n        this.keyDownStatus = false;\n    }\n    enableRTL(state) {\n        if (state) {\n            this.overAllWrapper.classList.add(RTL_CLASS);\n        }\n        else {\n            this.overAllWrapper.classList.remove(RTL_CLASS);\n        }\n        if (this.popupObj) {\n            this.popupObj.enableRtl = state;\n            this.popupObj.dataBind();\n        }\n    }\n    requiredModules() {\n        const modules = [];\n        if (this.mode === 'CheckBox') {\n            this.isGroupChecking = this.enableGroupCheckBox;\n            if (this.enableGroupCheckBox) {\n                const prevOnChange = this.isProtectedOnChange;\n                this.isProtectedOnChange = true;\n                this.enableSelectionOrder = false;\n                this.isProtectedOnChange = prevOnChange;\n            }\n            this.allowCustomValue = false;\n            this.hideSelectedItem = false;\n            this.closePopupOnSelect = false;\n            modules.push({\n                member: 'CheckBoxSelection',\n                args: [this]\n            });\n        }\n        return modules;\n    }\n    updateHTMLAttribute() {\n        if (Object.keys(this.htmlAttributes).length) {\n            for (const htmlAttr of Object.keys(this.htmlAttributes)) {\n                switch (htmlAttr) {\n                    case 'class': {\n                        const updatedClassValue = (this.htmlAttributes[htmlAttr].replace(/\\s+/g, ' ')).trim();\n                        if (updatedClassValue !== '') {\n                            addClass([this.overAllWrapper], updatedClassValue.split(' '));\n                            addClass([this.popupWrapper], updatedClassValue.split(' '));\n                        }\n                        break;\n                    }\n                    case 'disabled':\n                        this.enable(false);\n                        break;\n                    case 'placeholder':\n                        if (!this.placeholder) {\n                            this.inputElement.setAttribute(htmlAttr, this.htmlAttributes[htmlAttr]);\n                            this.setProperties({ placeholder: this.inputElement.placeholder }, true);\n                            this.refreshPlaceHolder();\n                        }\n                        break;\n                    default: {\n                        const defaultAttr = ['id'];\n                        const validateAttr = ['name', 'required', 'aria-required', 'form'];\n                        const containerAttr = ['title', 'role', 'style', 'class'];\n                        if (defaultAttr.indexOf(htmlAttr) > -1) {\n                            this.element.setAttribute(htmlAttr, this.htmlAttributes[htmlAttr]);\n                        }\n                        else if (htmlAttr.indexOf('data') === 0 || validateAttr.indexOf(htmlAttr) > -1) {\n                            this.hiddenElement.setAttribute(htmlAttr, this.htmlAttributes[htmlAttr]);\n                        }\n                        else if (containerAttr.indexOf(htmlAttr) > -1) {\n                            this.overAllWrapper.setAttribute(htmlAttr, this.htmlAttributes[htmlAttr]);\n                        }\n                        else if (htmlAttr !== 'size') {\n                            this.inputElement.setAttribute(htmlAttr, this.htmlAttributes[htmlAttr]);\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n    }\n    updateReadonly(state) {\n        if (state || this.mode === 'CheckBox') {\n            this.inputElement.setAttribute('readonly', 'true');\n        }\n        else {\n            this.inputElement.removeAttribute('readonly');\n        }\n    }\n    updateClearButton(state) {\n        if (state) {\n            if (this.overAllClear.parentNode) {\n                this.overAllClear.style.display = '';\n            }\n            else {\n                this.componentWrapper.appendChild(this.overAllClear);\n            }\n            this.componentWrapper.classList.remove(CLOSE_ICON_HIDE);\n        }\n        else {\n            this.overAllClear.style.display = 'none';\n            this.componentWrapper.classList.add(CLOSE_ICON_HIDE);\n        }\n    }\n    updateCssClass() {\n        if (!isNullOrUndefined(this.cssClass) && this.cssClass !== '') {\n            let updatedCssClassValues = this.cssClass;\n            updatedCssClassValues = (this.cssClass.replace(/\\s+/g, ' ')).trim();\n            if (updatedCssClassValues !== '') {\n                addClass([this.overAllWrapper], updatedCssClassValues.split(' '));\n                addClass([this.popupWrapper], updatedCssClassValues.split(' '));\n            }\n        }\n    }\n    updateOldPropCssClass(oldClass) {\n        if (!isNullOrUndefined(oldClass) && oldClass !== '') {\n            oldClass = (oldClass.replace(/\\s+/g, ' ')).trim();\n            if (oldClass !== '') {\n                removeClass([this.overAllWrapper], oldClass.split(' '));\n                removeClass([this.popupWrapper], oldClass.split(' '));\n            }\n        }\n    }\n    onPopupShown() {\n        if (Browser.isDevice && (this.mode === 'CheckBox' && this.allowFiltering)) {\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const proxy = this;\n            window.onpopstate = () => {\n                proxy.hidePopup();\n                proxy.inputElement.focus();\n            };\n            history.pushState({}, '');\n        }\n        const animModel = { name: 'FadeIn', duration: 100 };\n        const eventArgs = { popup: this.popupObj, cancel: false, animation: animModel };\n        this.trigger('open', eventArgs, (eventArgs) => {\n            if (!eventArgs.cancel) {\n                this.focusAtFirstListItem();\n                document.body.appendChild(this.popupObj.element);\n                if (this.mode === 'CheckBox' && this.enableGroupCheckBox && !isNullOrUndefined(this.fields.groupBy)) {\n                    this.updateListItems(this.list.querySelectorAll('li.e-list-item'), this.mainList.querySelectorAll('li.e-list-item'));\n                }\n                if (this.mode === 'CheckBox' || this.showDropDownIcon) {\n                    addClass([this.overAllWrapper], [iconAnimation]);\n                }\n                this.refreshPopup();\n                this.renderReactTemplates();\n                this.popupObj.show(eventArgs.animation, (this.zIndex === 1000) ? this.element : null);\n                attributes(this.inputElement, { 'aria-expanded': 'true' });\n                if (this.isFirstClick) {\n                    this.loadTemplate();\n                }\n            }\n        });\n    }\n    updateListItems(listItems, mainListItems) {\n        for (let i = 0; i < listItems.length; i++) {\n            this.findGroupStart(listItems[i]);\n            this.findGroupStart(mainListItems[i]);\n        }\n        this.deselectHeader();\n    }\n    loadTemplate() {\n        this.refreshListItems(null);\n        if (this.mode === 'CheckBox') {\n            this.removeFocus();\n        }\n        this.notify('reOrder', { module: 'CheckBoxSelection', enable: this.mode === 'CheckBox', e: this });\n    }\n    setScrollPosition() {\n        if (((!this.hideSelectedItem && this.mode !== 'CheckBox') || (this.mode === 'CheckBox' && !this.enableSelectionOrder)) &&\n            (!isNullOrUndefined(this.value) && (this.value.length > 0))) {\n            const valueEle = this.findListElement((this.hideSelectedItem ? this.ulElement : this.list), 'li', 'data-value', this.value[this.value.length - 1]);\n            if (!isNullOrUndefined(valueEle)) {\n                this.scrollBottom(valueEle);\n            }\n        }\n    }\n    focusAtFirstListItem() {\n        if (this.ulElement && this.ulElement.querySelector('li.'\n            + dropDownBaseClasses.li)) {\n            let element;\n            if (this.mode === 'CheckBox') {\n                this.removeFocus();\n                return;\n            }\n            else {\n                element = this.ulElement.querySelector('li.'\n                    + dropDownBaseClasses.li + ':not(.'\n                    + HIDE_LIST + ')');\n            }\n            if (element !== null) {\n                this.removeFocus();\n                this.addListFocus(element);\n            }\n        }\n    }\n    focusAtLastListItem(data) {\n        let activeElement;\n        if (data) {\n            activeElement = Search(data, this.liCollections, 'StartsWith', this.ignoreCase);\n        }\n        else {\n            if (this.value && this.value.length) {\n                Search(this.value[this.value.length - 1], this.liCollections, 'StartsWith', this.ignoreCase);\n            }\n            else {\n                activeElement = null;\n            }\n        }\n        if (activeElement && activeElement.item !== null) {\n            this.addListFocus(activeElement.item);\n            this.scrollBottom(activeElement.item, activeElement.index);\n        }\n    }\n    getAriaAttributes() {\n        const ariaAttributes = {\n            'aria-disabled': 'false',\n            'aria-owns': this.element.id + '_options',\n            'role': 'listbox',\n            'aria-multiselectable': 'true',\n            'aria-activedescendant': 'null',\n            'aria-haspopup': 'true',\n            'aria-expanded': 'false'\n        };\n        return ariaAttributes;\n    }\n    updateListARIA() {\n        if (!isNullOrUndefined(this.ulElement)) {\n            attributes(this.ulElement, { 'id': this.element.id + '_options', 'role': 'listbox', 'aria-hidden': 'false' });\n        }\n        const disableStatus = (this.inputElement.disabled) ? true : false;\n        attributes(this.inputElement, this.getAriaAttributes());\n        if (disableStatus) {\n            attributes(this.inputElement, { 'aria-disabled': 'true' });\n        }\n        this.ensureAriaDisabled((disableStatus) ? 'true' : 'false');\n    }\n    ensureAriaDisabled(status) {\n        if (this.htmlAttributes && this.htmlAttributes['aria-disabled']) {\n            const attr = this.htmlAttributes;\n            extend(attr, { 'aria-disabled': status }, attr);\n            this.setProperties({ htmlAttributes: attr }, true);\n        }\n    }\n    removelastSelection(e) {\n        const elements = this.chipCollectionWrapper.querySelectorAll('span.' + CHIP$1);\n        const value = elements[elements.length - 1].getAttribute('data-value');\n        if (!isNullOrUndefined(this.value)) {\n            this.tempValues = this.value.slice();\n        }\n        let customValue = this.getFormattedValue(value);\n        if (this.allowCustomValue && (value !== 'false' && customValue === false || (!isNullOrUndefined(customValue) &&\n            customValue.toString() === 'NaN'))) {\n            customValue = value;\n        }\n        this.removeValue(customValue, e);\n        this.removeChipSelection();\n        this.updateDelimeter(this.delimiterChar, e);\n        this.makeTextBoxEmpty();\n        if (this.mainList && this.listData) {\n            this.refreshSelection();\n        }\n        this.checkPlaceholderSize();\n    }\n    onActionFailure(e) {\n        super.onActionFailure(e);\n        this.renderPopup();\n        this.onPopupShown();\n    }\n    targetElement() {\n        this.targetInputElement = this.inputElement;\n        if (this.mode === 'CheckBox' && this.allowFiltering) {\n            this.notify('targetElement', { module: 'CheckBoxSelection', enable: this.mode === 'CheckBox' });\n        }\n        return this.targetInputElement.value;\n    }\n    getForQuery(valuecheck) {\n        let predicate;\n        const field = isNullOrUndefined(this.fields.value) ? this.fields.text : this.fields.value;\n        for (let i = 0; i < valuecheck.length; i++) {\n            if (i === 0) {\n                predicate = new Predicate(field, 'equal', valuecheck[i]);\n            }\n            else {\n                predicate = predicate.or(field, 'equal', valuecheck[i]);\n            }\n        }\n        return this.getQuery(this.query).where(predicate);\n    }\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    onActionComplete(ulElement, list, e, isUpdated) {\n        /* eslint-enable @typescript-eslint/no-unused-vars */\n        super.onActionComplete(ulElement, list, e);\n        this.updateSelectElementData(this.allowFiltering);\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const proxy = this;\n        if (!isNullOrUndefined(this.value) && !this.allowCustomValue) {\n            for (let i = 0; i < this.value.length; i++) {\n                const checkEle = this.findListElement(((this.allowFiltering && !isNullOrUndefined(this.mainList)) ? this.mainList : ulElement), 'li', 'data-value', proxy.value[i]);\n                if (!checkEle) {\n                    this.value.splice(i, 1);\n                    i -= 1;\n                }\n            }\n        }\n        this.updateActionList(ulElement, list, e);\n        if (this.dataSource instanceof DataManager && this.mode === 'CheckBox' && this.allowFiltering) {\n            this.removeFocus();\n        }\n    }\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    updateActionList(ulElement, list, e, isUpdated) {\n        /* eslint-enable @typescript-eslint/no-unused-vars */\n        if (this.mode === 'CheckBox' && this.showSelectAll) {\n            this.notify('selectAll', { module: 'CheckBoxSelection', enable: this.mode === 'CheckBox' });\n        }\n        if (!this.mainList && !this.mainData) {\n            this.mainList = ulElement.cloneNode ? ulElement.cloneNode(true) : ulElement;\n            this.mainData = list;\n            this.mainListCollection = this.liCollections;\n        }\n        else if (isNullOrUndefined(this.mainData) || this.mainData.length === 0) {\n            this.mainData = list;\n        }\n        if ((this.remoteCustomValue || list.length <= 0) && this.allowCustomValue && this.inputFocus && this.allowFiltering &&\n            this.inputElement.value && this.inputElement.value !== '') {\n            this.checkForCustomValue(this.tempQuery, this.fields);\n            return;\n        }\n        if (this.value && this.value.length && ((this.mode !== 'CheckBox' && this.inputElement.value.trim() !== '') ||\n            this.mode === 'CheckBox' || ((this.keyCode === 8 || this.keyCode === 46) && this.allowFiltering &&\n            this.allowCustomValue && this.dataSource instanceof DataManager && this.inputElement.value === ''))) {\n            this.refreshSelection();\n        }\n        this.updateListARIA();\n        this.unwireListEvents();\n        this.wireListEvents();\n        if (!isNullOrUndefined(this.setInitialValue)) {\n            this.setInitialValue();\n        }\n        if (!isNullOrUndefined(this.selectAllAction)) {\n            this.selectAllAction();\n        }\n        if (this.setDynValue) {\n            if (!isNullOrUndefined(this.text) && (isNullOrUndefined(this.value) || this.value.length === 0)) {\n                this.initialTextUpdate();\n            }\n            this.initialValueUpdate();\n            this.initialUpdate();\n            this.refreshPlaceHolder();\n            if (this.mode !== 'CheckBox' && this.changeOnBlur) {\n                this.updateValueState(null, this.value, null);\n            }\n        }\n        this.renderPopup();\n        if (this.beforePopupOpen) {\n            this.beforePopupOpen = false;\n            this.onPopupShown();\n        }\n    }\n    refreshSelection() {\n        let value;\n        let element;\n        const className = this.hideSelectedItem ?\n            HIDE_LIST :\n            dropDownBaseClasses.selected;\n        if (!isNullOrUndefined(this.value)) {\n            for (let index = 0; !isNullOrUndefined(this.value[index]); index++) {\n                value = this.value[index];\n                element = this.findListElement(this.list, 'li', 'data-value', value);\n                if (element) {\n                    addClass([element], className);\n                    if (this.hideSelectedItem && element.previousSibling\n                        && element.previousElementSibling.classList.contains(dropDownBaseClasses.group)\n                        && (!element.nextElementSibling ||\n                            element.nextElementSibling.classList.contains(dropDownBaseClasses.group))) {\n                        addClass([element.previousElementSibling], className);\n                    }\n                    if (this.hideSelectedItem && this.fields.groupBy && !element.previousElementSibling.classList.contains(HIDE_LIST)) {\n                        this.hideGroupItem(value);\n                    }\n                    if (this.hideSelectedItem && element.classList.contains(dropDownBaseClasses.focus)) {\n                        removeClass([element], dropDownBaseClasses.focus);\n                        const listEle = element.parentElement.querySelectorAll('.' +\n                            dropDownBaseClasses.li + ':not(.' + HIDE_LIST + ')');\n                        if (listEle.length > 0) {\n                            addClass([listEle[0]], dropDownBaseClasses.focus);\n                        }\n                        else {\n                            //EJ2-57588 - for this task, we prevent the ul element cloning ( this.ulElement = this.ulElement.cloneNode ? <HTMLElement>this.ulElement.cloneNode(true) : this.ulElement;)\n                            if (!(this.list && this.list.querySelectorAll('.' + dropDownBaseClasses.li).length > 0)) {\n                                this.l10nUpdate();\n                                addClass([this.list], dropDownBaseClasses.noData);\n                            }\n                        }\n                    }\n                    element.setAttribute('aria-selected', 'true');\n                    if (this.mode === 'CheckBox' && element.classList.contains('e-active')) {\n                        const ariaValue = element.firstElementChild.getAttribute('aria-checked');\n                        if (isNullOrUndefined(ariaValue) || ariaValue === 'false') {\n                            const args = {\n                                module: 'CheckBoxSelection',\n                                enable: this.mode === 'CheckBox',\n                                li: element,\n                                e: null\n                            };\n                            this.notify('updatelist', args);\n                        }\n                    }\n                }\n            }\n        }\n        this.checkSelectAll();\n        this.checkMaxSelection();\n    }\n    hideGroupItem(value) {\n        let element;\n        let element1;\n        const className = this.hideSelectedItem ?\n            HIDE_LIST :\n            dropDownBaseClasses.selected;\n        element1 = element = this.findListElement(this.ulElement, 'li', 'data-value', value);\n        let i = 0;\n        let j = 0;\n        let temp = true;\n        let temp1 = true;\n        do {\n            if (element && element.previousElementSibling\n                && (!element.previousElementSibling.classList.contains(HIDE_LIST) &&\n                    element.previousElementSibling.classList.contains(dropDownBaseClasses.li))) {\n                temp = false;\n            }\n            if (!temp || !element || (element.previousElementSibling\n                && element.previousElementSibling.classList.contains(dropDownBaseClasses.group))) {\n                i = 10;\n            }\n            else {\n                element = element.previousElementSibling;\n            }\n            if (element1 && element1.nextElementSibling\n                && (!element1.nextElementSibling.classList.contains(HIDE_LIST) &&\n                    element1.nextElementSibling.classList.contains(dropDownBaseClasses.li))) {\n                temp1 = false;\n            }\n            if (!temp1 || !element1 || (element1.nextElementSibling\n                && element1.nextElementSibling.classList.contains(dropDownBaseClasses.group))) {\n                j = 10;\n            }\n            else {\n                element1 = element1.nextElementSibling;\n            }\n        } while (i < 10 || j < 10);\n        if (temp && temp1 && !element.previousElementSibling.classList.contains(HIDE_LIST)) {\n            addClass([element.previousElementSibling], className);\n        }\n        else if (temp && temp1 && element.previousElementSibling.classList.contains(HIDE_LIST)) {\n            removeClass([element.previousElementSibling], className);\n        }\n    }\n    getValidLi() {\n        let liElement = this.ulElement.querySelector('li.' + dropDownBaseClasses.li + ':not(.' + HIDE_LIST + ')');\n        return (!isNullOrUndefined(liElement) ? liElement : this.liCollections[0]);\n    }\n    checkSelectAll() {\n        const groupItemLength = this.list.querySelectorAll('li.e-list-group-item.e-active').length;\n        const listItem = this.list.querySelectorAll('li.e-list-item');\n        const searchCount = this.list.querySelectorAll('li.' + dropDownBaseClasses.li).length;\n        let searchActiveCount = this.list.querySelectorAll('li.' + dropDownBaseClasses.selected).length;\n        if (this.enableGroupCheckBox && !isNullOrUndefined(this.fields.groupBy)) {\n            searchActiveCount = searchActiveCount - groupItemLength;\n        }\n        if ((searchCount === searchActiveCount || searchActiveCount === this.maximumSelectionLength)\n            && (this.mode === 'CheckBox' && this.showSelectAll)) {\n            this.notify('checkSelectAll', { module: 'CheckBoxSelection', enable: this.mode === 'CheckBox', value: 'check' });\n        }\n        else if ((searchCount !== searchActiveCount) && (this.mode === 'CheckBox' && this.showSelectAll)) {\n            this.notify('checkSelectAll', { module: 'CheckBoxSelection', enable: this.mode === 'CheckBox', value: 'uncheck' });\n        }\n        if (this.enableGroupCheckBox && this.fields.groupBy && !this.enableSelectionOrder) {\n            for (let i = 0; i < listItem.length; i++) {\n                this.findGroupStart(listItem[i]);\n            }\n            this.deselectHeader();\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    openClick(e) {\n        if (!this.openOnClick && this.mode !== 'CheckBox') {\n            if (this.targetElement() !== '') {\n                this.showPopup();\n            }\n            else {\n                this.hidePopup(e);\n            }\n        }\n        else if (!this.openOnClick && this.mode === 'CheckBox' && !this.isPopupOpen()) {\n            this.showPopup();\n        }\n    }\n    keyUp(e) {\n        if (this.mode === 'CheckBox' && !this.openOnClick) {\n            const char = String.fromCharCode(e.keyCode);\n            const isWordCharacter = char.match(/\\w/);\n            if (!isNullOrUndefined(isWordCharacter)) {\n                this.isValidKey = true;\n            }\n        }\n        this.isValidKey = (this.isPopupOpen() && e.keyCode === 8) || this.isValidKey;\n        this.isValidKey = e.ctrlKey && e.keyCode === 86 ? false : this.isValidKey;\n        if (this.isValidKey) {\n            this.isValidKey = false;\n            this.expandTextbox();\n            this.showOverAllClear();\n            switch (e.keyCode) {\n                default:\n                    // For filtering works in mobile firefox\n                    this.search(e);\n            }\n        }\n    }\n    /**\n     * To filter the multiselect data from given data source by using query\n     *\n     * @param  {Object[] | DataManager } dataSource - Set the data source to filter.\n     * @param  {Query} query - Specify the query to filter the data.\n     * @param  {FieldSettingsModel} fields - Specify the fields to map the column in the data table.\n     * @returns {void}\n     */\n    filter(dataSource, query, fields) {\n        this.isFiltered = true;\n        this.remoteFilterAction = true;\n        this.dataUpdater(dataSource, query, fields);\n    }\n    getQuery(query) {\n        const filterQuery = query ? query.clone() : this.query ? this.query.clone() : new Query();\n        if (this.isFiltered) {\n            return filterQuery;\n        }\n        if (this.filterAction) {\n            if (this.targetElement() !== null) {\n                const dataType = this.typeOfData(this.dataSource).typeof;\n                if (!(this.dataSource instanceof DataManager) && dataType === 'string' || dataType === 'number') {\n                    filterQuery.where('', this.filterType, this.targetElement(), this.ignoreCase, this.ignoreAccent);\n                }\n                else {\n                    const fields = this.fields;\n                    filterQuery.where(!isNullOrUndefined(fields.text) ? fields.text : '', this.filterType, this.targetElement(), this.ignoreCase, this.ignoreAccent);\n                }\n            }\n            return filterQuery;\n        }\n        else {\n            return query ? query : this.query ? this.query : new Query();\n        }\n    }\n    dataUpdater(dataSource, query, fields) {\n        this.isDataFetched = false;\n        if (this.targetElement().trim() === '') {\n            const list = this.mainList.cloneNode ? this.mainList.cloneNode(true) : this.mainList;\n            if (this.backCommand) {\n                this.remoteCustomValue = false;\n                if (this.allowCustomValue && list.querySelectorAll('li').length == 0 && this.mainData.length > 0) {\n                    this.mainData = [];\n                }\n                this.onActionComplete(list, this.mainData);\n                if (this.value && this.value.length) {\n                    this.refreshSelection();\n                }\n                if (this.keyCode !== 8) {\n                    this.focusAtFirstListItem();\n                }\n                this.notify('reOrder', { module: 'CheckBoxSelection', enable: this.mode === 'CheckBox', e: this });\n            }\n        }\n        else {\n            this.resetList(dataSource, fields, query);\n            if (this.allowCustomValue) {\n                if (!(dataSource instanceof DataManager)) {\n                    this.checkForCustomValue(query, fields);\n                }\n                else {\n                    this.remoteCustomValue = true;\n                    this.tempQuery = query;\n                }\n            }\n        }\n        this.refreshPopup();\n        if (this.mode === 'CheckBox') {\n            this.removeFocus();\n        }\n    }\n    checkForCustomValue(query, fields) {\n        const dataChecks = !this.getValueByText(this.inputElement.value, this.ignoreCase);\n        if (this.allowCustomValue && dataChecks) {\n            const value = this.inputElement.value;\n            const field = fields ? fields : this.fields;\n            const customData = (!isNullOrUndefined(this.mainData) && this.mainData.length > 0) ?\n                this.mainData[0] : this.mainData;\n            if (typeof (customData) !== 'string' && typeof (customData) !== 'number' && typeof (customData) !== 'boolean') {\n                const dataItem = {};\n                setValue(field.text, value, dataItem);\n                if (typeof getValue((this.fields.value ? this.fields.value : 'value'), customData)\n                    === 'number') {\n                    setValue(field.value, Math.random(), dataItem);\n                }\n                else {\n                    setValue(field.value, value, dataItem);\n                }\n                const tempData = JSON.parse(JSON.stringify(this.listData));\n                tempData.splice(0, 0, dataItem);\n                this.resetList(tempData, field, query);\n            }\n            else {\n                const tempData = [this.inputElement.value];\n                tempData[0] = (typeof customData === 'number' && !isNaN(parseFloat(tempData[0]))) ?\n                    parseFloat(tempData[0]) : tempData[0];\n                tempData[0] = (typeof customData === 'boolean') ?\n                    (tempData[0] === 'true' ? true : (tempData[0] === 'false' ? false : tempData[0])) : tempData[0];\n                this.resetList(tempData, field);\n            }\n        }\n        if (this.value && this.value.length) {\n            this.refreshSelection();\n        }\n    }\n    getNgDirective() {\n        return 'EJS-MULTISELECT';\n    }\n    wrapperClick(e) {\n        this.setDynValue = false;\n        if (!this.enabled) {\n            return;\n        }\n        if (e.target === this.overAllClear) {\n            e.preventDefault();\n            return;\n        }\n        if (!this.inputFocus) {\n            this.inputElement.focus();\n        }\n        if (!this.readonly) {\n            if (e.target && e.target.classList.toString().indexOf(CHIP_CLOSE$1) !== -1) {\n                if (this.isPopupOpen()) {\n                    this.refreshPopup();\n                }\n                return;\n            }\n            if (!this.isPopupOpen() &&\n                (this.openOnClick || (this.showDropDownIcon && e.target && e.target.className === dropdownIcon))) {\n                this.showPopup();\n            }\n            else {\n                this.hidePopup(e);\n                if (this.mode === 'CheckBox') {\n                    this.showOverAllClear();\n                    this.inputFocus = true;\n                    if (!this.overAllWrapper.classList.contains(FOCUS)) {\n                        this.overAllWrapper.classList.add(FOCUS);\n                    }\n                }\n            }\n        }\n        if (!(this.targetElement() && this.targetElement() !== '')) {\n            e.preventDefault();\n        }\n    }\n    enable(state) {\n        if (state) {\n            this.overAllWrapper.classList.remove(DISABLED$1);\n            this.inputElement.removeAttribute('disabled');\n            attributes(this.inputElement, { 'aria-disabled': 'false' });\n            this.ensureAriaDisabled('false');\n        }\n        else {\n            this.overAllWrapper.classList.add(DISABLED$1);\n            this.inputElement.setAttribute('disabled', 'true');\n            attributes(this.inputElement, { 'aria-disabled': 'true' });\n            this.ensureAriaDisabled('true');\n        }\n        if (this.enabled !== state) {\n            this.enabled = state;\n        }\n        this.hidePopup();\n    }\n    onBlurHandler(eve, isDocClickFromCheck) {\n        let target;\n        if (!isNullOrUndefined(eve)) {\n            target = eve.relatedTarget;\n        }\n        if (this.popupObj && document.body.contains(this.popupObj.element) && this.popupObj.element.contains(target)) {\n            if (this.mode !== 'CheckBox') {\n                this.inputElement.focus();\n            }\n            else if ((this.floatLabelType === 'Auto' &&\n                ((this.overAllWrapper.classList.contains('e-outline')) || (this.overAllWrapper.classList.contains('e-filled'))))) {\n                addClass([this.overAllWrapper], 'e-valid-input');\n            }\n            return;\n        }\n        if (this.floatLabelType === 'Auto' && (this.overAllWrapper.classList.contains('e-outline')) && this.mode === 'CheckBox' &&\n            ((isNullOrUndefined(this.value)) || this.value.length === 0)) {\n            removeClass([this.overAllWrapper], 'e-valid-input');\n        }\n        if (this.mode === 'CheckBox' && Browser.isIE && !isNullOrUndefined(eve) && !isDocClickFromCheck) {\n            this.inputFocus = false;\n            this.overAllWrapper.classList.remove(FOCUS);\n            return;\n        }\n        if (this.scrollFocusStatus) {\n            if (!isNullOrUndefined(eve)) {\n                eve.preventDefault();\n            }\n            this.inputElement.focus();\n            this.scrollFocusStatus = false;\n            return;\n        }\n        this.inputFocus = false;\n        this.overAllWrapper.classList.remove(FOCUS);\n        if (this.addTagOnBlur) {\n            const dataChecks = this.getValueByText(this.inputElement.value, this.ignoreCase, this.ignoreAccent);\n            const listLiElement = this.findListElement(this.list, 'li', 'data-value', dataChecks);\n            const className = this.hideSelectedItem ? HIDE_LIST : dropDownBaseClasses.selected;\n            const allowChipAddition = (listLiElement && !listLiElement.classList.contains(className)) ? true : false;\n            if (allowChipAddition) {\n                this.updateListSelection(listLiElement, eve);\n                if (this.mode === 'Delimiter') {\n                    this.updateDelimeter(this.delimiterChar);\n                }\n            }\n        }\n        this.updateDataList();\n        this.refreshListItems(null);\n        if (this.mode !== 'Box' && this.mode !== 'CheckBox') {\n            this.updateDelimView();\n        }\n        if (this.changeOnBlur) {\n            this.updateValueState(eve, this.value, this.tempValues);\n            this.dispatchEvent(this.hiddenElement, 'change');\n        }\n        this.overAllClear.style.display = 'none';\n        if (this.isPopupOpen()) {\n            this.hidePopup(eve);\n        }\n        this.makeTextBoxEmpty();\n        this.trigger('blur');\n        this.focused = true;\n        if (Browser.isDevice && this.mode !== 'Delimiter' && this.mode !== 'CheckBox') {\n            this.removeChipFocus();\n        }\n        this.removeChipSelection();\n        this.refreshInputHight();\n        floatLabelBlur(this.overAllWrapper, this.componentWrapper, this.value, this.floatLabelType, this.placeholder);\n        this.refreshPlaceHolder();\n        if ((this.allowFiltering || (this.enableSelectionOrder === true && this.mode === 'CheckBox'))\n            && !isNullOrUndefined(this.mainList)) {\n            this.ulElement = this.mainList;\n        }\n        this.checkPlaceholderSize();\n    }\n    checkPlaceholderSize() {\n        if (this.showDropDownIcon) {\n            const downIconWidth = this.dropIcon.offsetWidth +\n                parseInt(window.getComputedStyle(this.dropIcon).marginRight, 10);\n            this.setPlaceholderSize(downIconWidth);\n        }\n        else {\n            if (!isNullOrUndefined(this.dropIcon)) {\n                this.setPlaceholderSize(this.showDropDownIcon ? this.dropIcon.offsetWidth : 0);\n            }\n        }\n    }\n    setPlaceholderSize(downIconWidth) {\n        if (isNullOrUndefined(this.value) || this.value.length === 0) {\n            if (this.dropIcon.offsetWidth !== 0) {\n                this.searchWrapper.style.width = ('calc(100% - ' + (downIconWidth + 10)) + 'px';\n            }\n            else {\n                addClass([this.searchWrapper], CUSTOM_WIDTH);\n            }\n        }\n        else if (!isNullOrUndefined(this.value)) {\n            this.searchWrapper.removeAttribute('style');\n            removeClass([this.searchWrapper], CUSTOM_WIDTH);\n        }\n    }\n    refreshInputHight() {\n        if ((!this.value || !this.value.length) && (isNullOrUndefined(this.text) || this.text === '')) {\n            this.searchWrapper.classList.remove(ZERO_SIZE);\n        }\n        else {\n            this.searchWrapper.classList.add(ZERO_SIZE);\n        }\n    }\n    validateValues(newValue, oldValue) {\n        return JSON.stringify(newValue.slice().sort()) !== JSON.stringify(oldValue.slice().sort());\n    }\n    updateValueState(event, newVal, oldVal) {\n        const newValue = newVal ? newVal : [];\n        const oldValue = oldVal ? oldVal : [];\n        if (this.initStatus && this.validateValues(newValue, oldValue)) {\n            const eventArgs = {\n                e: event,\n                oldValue: oldVal,\n                value: newVal,\n                isInteracted: event ? true : false,\n                element: this.element,\n                event: event\n            };\n            if (this.isAngular && this.preventChange) {\n                this.preventChange = false;\n            }\n            else {\n                this.trigger('change', eventArgs);\n            }\n            this.updateTempValue();\n            if (!this.changeOnBlur) {\n                this.dispatchEvent(this.hiddenElement, 'change');\n            }\n        }\n    }\n    updateTempValue() {\n        if (!this.value) {\n            this.tempValues = this.value;\n        }\n        else {\n            this.tempValues = this.value.slice();\n        }\n    }\n    getPagingCount() {\n        const height = this.list.classList.contains(dropDownBaseClasses.noData) ? null :\n            getComputedStyle(this.getItems()[0], null).getPropertyValue('height');\n        return Math.round(this.list.offsetHeight / parseInt(height, 10));\n    }\n    pageUpSelection(steps) {\n        const collection = this.list.querySelectorAll('li.'\n            + dropDownBaseClasses.li + ':not(.' + HIDE_LIST + ')' + ':not(.e-reorder-hide)');\n        const previousItem = steps >= 0 ? collection[steps + 1] : collection[0];\n        this.addListFocus(previousItem);\n        this.scrollBottom(previousItem, this.getIndexByValue(previousItem.getAttribute('data-value')));\n    }\n    pageDownSelection(steps) {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const list = this.getItems();\n        const collection = this.list.querySelectorAll('li.'\n            + dropDownBaseClasses.li + ':not(.' + HIDE_LIST + ')' + ':not(.e-reorder-hide)');\n        const previousItem = steps <= collection.length ? collection[steps - 1] : collection[collection.length - 1];\n        this.addListFocus(previousItem);\n        this.scrollBottom(previousItem, this.getIndexByValue(previousItem.getAttribute('data-value')));\n    }\n    getItems() {\n        if (!this.list) {\n            super.render();\n        }\n        return this.ulElement && this.ulElement.querySelectorAll('.' + dropDownBaseClasses.li).length > 0 ?\n            this.ulElement.querySelectorAll('.' + dropDownBaseClasses.li\n                + ':not(.' + HIDE_LIST + ')') : [];\n    }\n    focusInHandler(e) {\n        if (this.enabled) {\n            this.showOverAllClear();\n            this.inputFocus = true;\n            if (this.value && this.value.length) {\n                if (this.mode !== 'Delimiter' && this.mode !== 'CheckBox') {\n                    this.chipCollectionWrapper.style.display = '';\n                }\n                else {\n                    this.showDelimWrapper();\n                }\n                if (this.mode !== 'CheckBox') {\n                    this.viewWrapper.style.display = 'none';\n                }\n            }\n            if (this.mode !== 'CheckBox') {\n                this.searchWrapper.classList.remove(ZERO_SIZE);\n            }\n            this.checkPlaceholderSize();\n            if (this.focused) {\n                const args = { isInteracted: e ? true : false, event: e };\n                this.trigger('focus', args);\n                this.focused = false;\n            }\n            if (!this.overAllWrapper.classList.contains(FOCUS)) {\n                this.overAllWrapper.classList.add(FOCUS);\n            }\n            floatLabelFocus(this.overAllWrapper, this.componentWrapper);\n            if (this.isPopupOpen()) {\n                this.refreshPopup();\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    showDelimWrapper() {\n        if (this.mode === 'CheckBox') {\n            this.viewWrapper.style.display = '';\n        }\n        else {\n            this.delimiterWrapper.style.display = '';\n        }\n        this.componentWrapper.classList.add(DELIMITER_VIEW_WRAPPER);\n    }\n    hideDelimWrapper() {\n        this.delimiterWrapper.style.display = 'none';\n        this.componentWrapper.classList.remove(DELIMITER_VIEW_WRAPPER);\n    }\n    expandTextbox() {\n        let size = 5;\n        if (this.placeholder) {\n            size = size > this.inputElement.placeholder.length ? size : this.inputElement.placeholder.length;\n        }\n        if (this.inputElement.value.length > size) {\n            this.inputElement.size = this.inputElement.value.length;\n        }\n        else {\n            this.inputElement.size = size;\n        }\n    }\n    isPopupOpen() {\n        return ((this.popupWrapper !== null) && (this.popupWrapper.parentElement !== null));\n    }\n    refreshPopup() {\n        if (this.popupObj && this.mobFilter) {\n            this.popupObj.setProperties({ width: this.calcPopupWidth() });\n            this.popupObj.refreshPosition(this.overAllWrapper);\n            this.popupObj.resolveCollision();\n        }\n    }\n    checkTextLength() {\n        return this.targetElement().length < 1;\n    }\n    popupKeyActions(e) {\n        switch (e.keyCode) {\n            case 38:\n                this.hidePopup(e);\n                if (this.mode === 'CheckBox') {\n                    this.inputElement.focus();\n                }\n                e.preventDefault();\n                break;\n            case 40:\n                if (!this.isPopupOpen()) {\n                    this.showPopup();\n                    e.preventDefault();\n                }\n                break;\n        }\n    }\n    updateAriaAttribute() {\n        const focusedItem = this.list.querySelector('.' + dropDownBaseClasses.focus);\n        if (!isNullOrUndefined(focusedItem)) {\n            this.inputElement.setAttribute('aria-activedescendant', focusedItem.id);\n            if (this.allowFiltering) {\n                var filterInput = this.popupWrapper.querySelector('.' + FILTERINPUT);\n                filterInput && filterInput.setAttribute('aria-activedescendant', focusedItem.id);\n            }\n            else if (this.mode == \"CheckBox\") {\n                this.overAllWrapper.setAttribute('aria-activedescendant', focusedItem.id);\n            }\n        }\n    }\n    homeNavigation(isHome) {\n        this.removeFocus();\n        const scrollEle = this.ulElement.querySelectorAll('li.' + dropDownBaseClasses.li\n            + ':not(.' + HIDE_LIST + ')' + ':not(.e-reorder-hide)');\n        if (scrollEle.length > 0) {\n            const element = scrollEle[(isHome) ? 0 : (scrollEle.length - 1)];\n            element.classList.add(dropDownBaseClasses.focus);\n            this.scrollBottom(element);\n        }\n    }\n    onKeyDown(e) {\n        if (this.readonly || !this.enabled && this.mode !== 'CheckBox') {\n            return;\n        }\n        this.keyCode = e.keyCode;\n        this.keyDownStatus = true;\n        if (e.keyCode > 111 && e.keyCode < 124) {\n            return;\n        }\n        if (e.altKey) {\n            this.popupKeyActions(e);\n            return;\n        }\n        else if (this.isPopupOpen()) {\n            const focusedItem = this.list.querySelector('.' + dropDownBaseClasses.focus);\n            let activeIndex;\n            switch (e.keyCode) {\n                case 36:\n                case 35:\n                    this.homeNavigation((e.keyCode === 36) ? true : false);\n                    break;\n                case 33:\n                    e.preventDefault();\n                    if (focusedItem) {\n                        this.getIndexByValue(focusedItem.getAttribute('data-value'));\n                        this.pageUpSelection(activeIndex - this.getPagingCount());\n                        this.updateAriaAttribute();\n                    }\n                    return;\n                case 34:\n                    e.preventDefault();\n                    if (focusedItem) {\n                        this.getIndexByValue(focusedItem.getAttribute('data-value'));\n                        this.pageDownSelection(activeIndex + this.getPagingCount());\n                        this.updateAriaAttribute();\n                    }\n                    return;\n                case 38:\n                    this.arrowUp(e);\n                    break;\n                case 40:\n                    this.arrowDown(e);\n                    break;\n                case 27:\n                    e.preventDefault();\n                    this.hidePopup(e);\n                    if (this.mode === 'CheckBox') {\n                        this.inputElement.focus();\n                    }\n                    return;\n                case 13:\n                    e.preventDefault();\n                    if (this.mode !== 'CheckBox') {\n                        this.selectByKey(e);\n                    }\n                    this.checkPlaceholderSize();\n                    return;\n                case 32:\n                    this.spaceKeySelection(e);\n                    return;\n                case 9:\n                    e.preventDefault();\n                    this.hidePopup(e);\n                    this.inputElement.focus();\n                    this.overAllWrapper.classList.add(FOCUS);\n            }\n        }\n        else {\n            switch (e.keyCode) {\n                case 13:\n                case 9:\n                case 16:\n                case 17:\n                case 20:\n                    return;\n                case 40:\n                    if (this.openOnClick) {\n                        this.showPopup();\n                    }\n                    break;\n                case 27:\n                    e.preventDefault();\n                    this.escapeAction();\n                    return;\n            }\n        }\n        if (this.checkTextLength()) {\n            this.keyNavigation(e);\n        }\n        if (this.mode === 'CheckBox' && this.enableSelectionOrder) {\n            if (this.allowFiltering) {\n                this.previousFilterText = this.targetElement();\n            }\n            this.checkBackCommand(e);\n        }\n        this.expandTextbox();\n        if (!(this.mode === 'CheckBox' && this.showSelectAll)) {\n            this.refreshPopup();\n        }\n    }\n    arrowDown(e) {\n        e.preventDefault();\n        this.moveByList(1);\n        this.keyAction = true;\n        if (document.activeElement.classList.contains(FILTERINPUT)\n            || (this.mode === 'CheckBox' && !this.allowFiltering && document.activeElement !== this.list)) {\n            EventHandler.add(this.list, 'keydown', this.onKeyDown, this);\n        }\n        this.updateAriaAttribute();\n    }\n    arrowUp(e) {\n        e.preventDefault();\n        this.keyAction = true;\n        let list = this.list.querySelectorAll('li.'\n            + dropDownBaseClasses.li\n            + ':not(.' + HIDE_LIST + ')' + ':not(.e-reorder-hide)');\n        if (this.enableGroupCheckBox && this.mode === 'CheckBox' && !isNullOrUndefined(this.fields.groupBy)) {\n            list = this.list.querySelectorAll('li.'\n                + dropDownBaseClasses.li + ',li.' + dropDownBaseClasses.group\n                + ':not(.' + HIDE_LIST + ')' + ':not(.e-reorder-hide)');\n        }\n        const focuseElem = this.list.querySelector('li.' + dropDownBaseClasses.focus);\n        const index = Array.prototype.slice.call(list).indexOf(focuseElem);\n        if (index <= 0 && (this.mode === 'CheckBox' && this.allowFiltering)) {\n            this.keyAction = false;\n            this.notify('inputFocus', { module: 'CheckBoxSelection', enable: this.mode === 'CheckBox', value: 'focus' });\n        }\n        this.moveByList(-1);\n        this.updateAriaAttribute();\n    }\n    spaceKeySelection(e) {\n        if (this.mode === 'CheckBox') {\n            if (!document.activeElement.classList.contains(FILTERINPUT)) {\n                e.preventDefault();\n                this.keyAction = true;\n            }\n            this.selectByKey(e);\n        }\n        this.checkPlaceholderSize();\n    }\n    checkBackCommand(e) {\n        if (e.keyCode === 8 && this.allowFiltering ? this.targetElement() !== this.previousFilterText : this.targetElement() === '') {\n            this.backCommand = false;\n        }\n        else {\n            this.backCommand = true;\n        }\n    }\n    keyNavigation(e) {\n        if ((this.mode !== 'Delimiter' && this.mode !== 'CheckBox') && this.value && this.value.length) {\n            switch (e.keyCode) {\n                case 37: //left arrow\n                    e.preventDefault();\n                    this.moveBy(-1, e);\n                    break;\n                case 39: //right arrow\n                    e.preventDefault();\n                    this.moveBy(1, e);\n                    break;\n                case 8:\n                    this.removelastSelection(e);\n                    break;\n                case 46: //del\n                    this.removeSelectedChip(e);\n                    break;\n            }\n        }\n        else if (e.keyCode === 8 && this.mode === 'Delimiter') {\n            if (this.value && this.value.length) {\n                e.preventDefault();\n                const temp = this.value[this.value.length - 1];\n                this.removeValue(temp, e);\n                this.updateDelimeter(this.delimiterChar, e);\n                this.focusAtLastListItem(temp);\n            }\n        }\n    }\n    selectByKey(e) {\n        this.removeChipSelection();\n        this.selectListByKey(e);\n        if (this.hideSelectedItem) {\n            this.focusAtFirstListItem();\n        }\n    }\n    escapeAction() {\n        const temp = this.tempValues ? this.tempValues.slice() : [];\n        if (this.value && this.validateValues(this.value, temp)) {\n            if (this.mode !== 'CheckBox') {\n                this.value = temp;\n                this.initialValueUpdate();\n            }\n            if (this.mode !== 'Delimiter' && this.mode !== 'CheckBox') {\n                this.chipCollectionWrapper.style.display = '';\n            }\n            else {\n                this.showDelimWrapper();\n            }\n            this.refreshPlaceHolder();\n            if (this.value.length) {\n                this.showOverAllClear();\n            }\n            else {\n                this.hideOverAllClear();\n            }\n        }\n        this.makeTextBoxEmpty();\n    }\n    scrollBottom(selectedLI, activeIndex) {\n        const currentOffset = this.list.offsetHeight;\n        const nextBottom = selectedLI.offsetTop + selectedLI.offsetHeight - this.list.scrollTop;\n        const nextOffset = this.list.scrollTop + nextBottom - currentOffset;\n        let boxRange = (selectedLI.offsetTop + selectedLI.offsetHeight - this.list.scrollTop);\n        boxRange = this.fields.groupBy && !isNullOrUndefined(this.fixedHeaderElement) ?\n            boxRange - this.fixedHeaderElement.offsetHeight : boxRange;\n        if (activeIndex === 0) {\n            this.list.scrollTop = 0;\n        }\n        else if (nextBottom > currentOffset) {\n            this.list.scrollTop = nextOffset;\n        }\n        else if (!(boxRange > 0 && this.list.offsetHeight > boxRange)) {\n            this.list.scrollTop = nextOffset;\n        }\n    }\n    scrollTop(selectedLI, activeIndex) {\n        let nextOffset = selectedLI.offsetTop - this.list.scrollTop;\n        nextOffset = this.fields.groupBy && !isUndefined(this.fixedHeaderElement) ?\n            nextOffset - this.fixedHeaderElement.offsetHeight : nextOffset;\n        const boxRange = (selectedLI.offsetTop + selectedLI.offsetHeight - this.list.scrollTop);\n        if (activeIndex === 0) {\n            this.list.scrollTop = 0;\n        }\n        else if (nextOffset < 0) {\n            this.list.scrollTop = this.list.scrollTop + nextOffset;\n        }\n        else if (!(boxRange > 0 && this.list.offsetHeight > boxRange)) {\n            this.list.scrollTop = selectedLI.offsetTop - (this.fields.groupBy && !isUndefined(this.fixedHeaderElement) ?\n                this.fixedHeaderElement.offsetHeight : 0);\n        }\n    }\n    selectListByKey(e) {\n        const li = this.list.querySelector('li.' + dropDownBaseClasses.focus);\n        let limit = this.value && this.value.length ? this.value.length : 0;\n        let target;\n        if (li !== null) {\n            if (li.classList.contains('e-active')) {\n                limit = limit - 1;\n            }\n            if (this.isValidLI(li) && limit < this.maximumSelectionLength) {\n                this.updateListSelection(li, e);\n                this.addListFocus(li);\n                if (this.mode === 'CheckBox') {\n                    this.updateDelimView();\n                    this.updateDelimeter(this.delimiterChar, e);\n                    this.refreshInputHight();\n                    this.checkPlaceholderSize();\n                    if (this.enableGroupCheckBox && !isNullOrUndefined(this.fields.groupBy)) {\n                        target = li.firstElementChild.lastElementChild;\n                        this.findGroupStart(target);\n                        this.deselectHeader();\n                    }\n                }\n                else {\n                    this.updateDelimeter(this.delimiterChar, e);\n                }\n                this.makeTextBoxEmpty();\n                if (this.mode !== 'CheckBox') {\n                    this.refreshListItems(li.textContent);\n                }\n                if (!this.changeOnBlur) {\n                    this.updateValueState(e, this.value, this.tempValues);\n                }\n                this.refreshPopup();\n            }\n            else {\n                if (!this.isValidLI(li) && limit < this.maximumSelectionLength) {\n                    target = li.firstElementChild.lastElementChild;\n                    if (target.classList.contains('e-check')) {\n                        this.selectAllItem(false, e, li);\n                    }\n                    else {\n                        this.selectAllItem(true, e, li);\n                    }\n                }\n            }\n            this.refreshSelection();\n            if (this.closePopupOnSelect) {\n                this.hidePopup(e);\n            }\n        }\n        this.refreshPlaceHolder();\n    }\n    refreshListItems(data) {\n        if ((this.allowFiltering || (this.mode === 'CheckBox' && this.enableSelectionOrder === true)\n            || this.allowCustomValue) && this.mainList && this.listData) {\n            const list = this.mainList.cloneNode ? this.mainList.cloneNode(true) : this.mainList;\n            this.onActionComplete(list, this.mainData);\n            this.focusAtLastListItem(data);\n            if (this.value && this.value.length) {\n                this.refreshSelection();\n            }\n        }\n    }\n    removeSelectedChip(e) {\n        const selectedElem = this.chipCollectionWrapper.querySelector('span.' + CHIP_SELECTED);\n        let temp;\n        if (selectedElem !== null) {\n            if (!isNullOrUndefined(this.value)) {\n                this.tempValues = this.value.slice();\n            }\n            temp = selectedElem.nextElementSibling;\n            if (temp !== null) {\n                this.removeChipSelection();\n                this.addChipSelection(temp, e);\n            }\n            this.removeValue(selectedElem.getAttribute('data-value'), e);\n            this.makeTextBoxEmpty();\n        }\n        if (this.closePopupOnSelect) {\n            this.hidePopup(e);\n        }\n        this.checkPlaceholderSize();\n    }\n    moveByTop(state) {\n        const elements = this.list.querySelectorAll('li.' + dropDownBaseClasses.li);\n        let index;\n        if (elements.length > 1) {\n            this.removeFocus();\n            index = state ? 0 : (elements.length - 1);\n            this.addListFocus(elements[index]);\n            this.scrollBottom(elements[index], index);\n        }\n        this.updateAriaAttribute();\n    }\n    moveByList(position) {\n        if (this.list) {\n            let elements = this.list.querySelectorAll('li.'\n                + dropDownBaseClasses.li\n                + ':not(.' + HIDE_LIST + ')' + ':not(.e-reorder-hide)');\n            if (this.mode === 'CheckBox' && this.enableGroupCheckBox && !isNullOrUndefined(this.fields.groupBy)) {\n                elements = this.list.querySelectorAll('li.'\n                    + dropDownBaseClasses.li + ',li.' + dropDownBaseClasses.group\n                    + ':not(.' + HIDE_LIST + ')' + ':not(.e-reorder-hide)');\n            }\n            const selectedElem = this.list.querySelector('li.' + dropDownBaseClasses.focus);\n            let temp = -1;\n            if (elements.length) {\n                for (let index = 0; index < elements.length; index++) {\n                    if (elements[index] === selectedElem) {\n                        temp = index;\n                        break;\n                    }\n                }\n                if (position > 0) {\n                    if (temp < (elements.length - 1)) {\n                        this.removeFocus();\n                        this.addListFocus(elements[++temp]);\n                        this.updateCheck(elements[temp]);\n                        this.scrollBottom(elements[temp], temp);\n                    }\n                }\n                else {\n                    if (temp > 0) {\n                        this.removeFocus();\n                        this.addListFocus(elements[--temp]);\n                        this.updateCheck(elements[temp]);\n                        this.scrollTop(elements[temp], temp);\n                    }\n                }\n            }\n        }\n    }\n    updateCheck(element) {\n        if (this.mode === 'CheckBox' && this.enableGroupCheckBox &&\n            !isNullOrUndefined(this.fields.groupBy)) {\n            const checkElement = element.firstElementChild.lastElementChild;\n            if (checkElement.classList.contains('e-check')) {\n                element.classList.add('e-active');\n            }\n            else {\n                element.classList.remove('e-active');\n            }\n        }\n    }\n    moveBy(position, e) {\n        let temp;\n        const elements = this.chipCollectionWrapper.querySelectorAll('span.' + CHIP$1);\n        const selectedElem = this.chipCollectionWrapper.querySelector('span.' + CHIP_SELECTED);\n        if (selectedElem === null) {\n            if (position < 0) {\n                this.addChipSelection(elements[elements.length - 1], e);\n            }\n        }\n        else {\n            if (position < 0) {\n                temp = selectedElem.previousElementSibling;\n                if (temp !== null) {\n                    this.removeChipSelection();\n                    this.addChipSelection(temp, e);\n                }\n            }\n            else {\n                temp = selectedElem.nextElementSibling;\n                this.removeChipSelection();\n                if (temp !== null) {\n                    this.addChipSelection(temp, e);\n                }\n            }\n        }\n    }\n    chipClick(e) {\n        if (this.enabled) {\n            const elem = closest(e.target, '.' + CHIP$1);\n            this.removeChipSelection();\n            this.addChipSelection(elem, e);\n        }\n    }\n    removeChipSelection() {\n        if (this.chipCollectionWrapper) {\n            this.removeChipFocus();\n        }\n    }\n    addChipSelection(element, e) {\n        addClass([element], CHIP_SELECTED);\n        this.trigger('chipSelection', e);\n    }\n    onChipRemove(e) {\n        if (e.which === 3 || e.button === 2) {\n            return;\n        }\n        if (this.enabled && !this.readonly) {\n            const element = e.target.parentElement;\n            const customVal = element.getAttribute('data-value');\n            let value = this.getFormattedValue(customVal);\n            if (this.allowCustomValue && ((customVal !== 'false' && value === false) ||\n                (!isNullOrUndefined(value) && value.toString() === 'NaN'))) {\n                value = customVal;\n            }\n            if (this.isPopupOpen() && this.mode !== 'CheckBox') {\n                this.hidePopup(e);\n            }\n            if (!this.inputFocus) {\n                this.inputElement.focus();\n            }\n            this.removeValue(value, e);\n            if (isNullOrUndefined(this.findListElement(this.list, 'li', 'data-value', value)) && this.mainList && this.listData) {\n                const list = this.mainList.cloneNode ? this.mainList.cloneNode(true) : this.mainList;\n                this.onActionComplete(list, this.mainData);\n            }\n            this.updateDelimeter(this.delimiterChar, e);\n            if (this.placeholder && this.floatLabelType === 'Never') {\n                this.makeTextBoxEmpty();\n                this.checkPlaceholderSize();\n            }\n            else {\n                this.inputElement.value = '';\n            }\n            e.preventDefault();\n        }\n    }\n    makeTextBoxEmpty() {\n        this.inputElement.value = '';\n        this.refreshPlaceHolder();\n    }\n    refreshPlaceHolder() {\n        if (this.placeholder && this.floatLabelType === 'Never') {\n            if ((this.value && this.value.length) || (!isNullOrUndefined(this.text) && this.text !== '')) {\n                this.inputElement.placeholder = '';\n            }\n            else {\n                this.inputElement.placeholder = encodePlaceholder(this.placeholder);\n            }\n        }\n        else {\n            this.setFloatLabelType();\n        }\n        this.expandTextbox();\n    }\n    removeAllItems(value, eve, isClearAll, element, mainElement) {\n        let index = this.value.indexOf(value);\n        const removeVal = this.value.slice(0);\n        removeVal.splice(index, 1);\n        this.setProperties({ value: [].concat([], removeVal) }, true);\n        element.setAttribute('aria-selected', 'false');\n        const className = this.hideSelectedItem ?\n            HIDE_LIST :\n            dropDownBaseClasses.selected;\n        removeClass([element], className);\n        this.notify('activeList', {\n            module: 'CheckBoxSelection',\n            enable: this.mode === 'CheckBox', li: element,\n            e: this, index: index\n        });\n        this.invokeCheckboxSelection(element, eve, isClearAll);\n        this.updateMainList(true, value, mainElement);\n        this.updateChipStatus();\n    }\n    invokeCheckboxSelection(element, eve, isClearAll) {\n        this.notify('updatelist', { module: 'CheckBoxSelection', enable: this.mode === 'CheckBox', li: element, e: eve });\n        attributes(this.inputElement, { 'aria-activedescendant': element.id });\n        if ((this.value && this.value.length !== this.mainData.length)\n            && (this.mode === 'CheckBox' && this.showSelectAll && !(this.isSelectAll || isClearAll))) {\n            this.notify('checkSelectAll', {\n                module: 'CheckBoxSelection',\n                enable: this.mode === 'CheckBox',\n                value: 'uncheck'\n            });\n        }\n    }\n    removeValue(value, eve, length, isClearAll) {\n        let index = this.value.indexOf(this.getFormattedValue(value));\n        if (index === -1 && this.allowCustomValue && !isNullOrUndefined(value)) {\n            index = this.value.indexOf(value.toString());\n        }\n        const targetEle = eve && eve.target;\n        isClearAll = (isClearAll || targetEle && targetEle.classList.contains('e-close-hooker')) ? true : null;\n        const className = this.hideSelectedItem ?\n            HIDE_LIST :\n            dropDownBaseClasses.selected;\n        if (index !== -1) {\n            const element = this.findListElement(this.list, 'li', 'data-value', value);\n            const val = this.getDataByValue(value);\n            const eventArgs = {\n                e: eve,\n                item: element,\n                itemData: val,\n                isInteracted: eve ? true : false,\n                cancel: false\n            };\n            this.trigger('removing', eventArgs, (eventArgs) => {\n                if (eventArgs.cancel) {\n                    this.removeIndex++;\n                }\n                else {\n                    const removeVal = this.value.slice(0);\n                    removeVal.splice(index, 1);\n                    this.setProperties({ value: [].concat([], removeVal) }, true);\n                    if (element !== null) {\n                        const hideElement = this.findListElement(this.mainList, 'li', 'data-value', value);\n                        element.setAttribute('aria-selected', 'false');\n                        removeClass([element], className);\n                        if (hideElement) {\n                            hideElement.setAttribute('aria-selected', 'false');\n                            removeClass([element, hideElement], className);\n                        }\n                        this.notify('activeList', {\n                            module: 'CheckBoxSelection',\n                            enable: this.mode === 'CheckBox', li: element,\n                            e: this, index: index\n                        });\n                        this.invokeCheckboxSelection(element, eve, isClearAll);\n                    }\n                    if (this.hideSelectedItem && this.fields.groupBy && element) {\n                        this.hideGroupItem(value);\n                    }\n                    if (this.hideSelectedItem && this.fixedHeaderElement && this.fields.groupBy && this.mode !== 'CheckBox' &&\n                        this.isPopupOpen()) {\n                        super.scrollStop();\n                    }\n                    this.updateMainList(true, value);\n                    this.removeChip(value);\n                    this.updateChipStatus();\n                    const limit = this.value && this.value.length ? this.value.length : 0;\n                    if (limit < this.maximumSelectionLength) {\n                        const collection = this.list.querySelectorAll('li.'\n                            + dropDownBaseClasses.li + ':not(.e-active)');\n                        removeClass(collection, 'e-disable');\n                    }\n                    this.trigger('removed', eventArgs);\n                    const targetEle = eve && eve.currentTarget;\n                    const isSelectAll = (targetEle && targetEle.classList.contains('e-selectall-parent')) ? true : null;\n                    if (!this.changeOnBlur && !isClearAll && (eve && length && !isSelectAll)) {\n                        this.updateValueState(eve, this.value, this.tempValues);\n                    }\n                    if (length) {\n                        this.selectAllEventData.push(val);\n                        this.selectAllEventEle.push(element);\n                    }\n                    if (length === 1) {\n                        if (!this.changeOnBlur) {\n                            this.updateValueState(eve, this.value, this.tempValues);\n                        }\n                        const args = {\n                            event: eve,\n                            items: this.selectAllEventEle,\n                            itemData: this.selectAllEventData,\n                            isInteracted: eve ? true : false,\n                            isChecked: false\n                        };\n                        this.trigger('selectedAll', args);\n                        this.selectAllEventData = [];\n                        this.selectAllEventEle = [];\n                    }\n                    if (isClearAll && (length === 1 || length === null)) {\n                        this.clearAllCallback(eve, isClearAll);\n                    }\n                }\n            });\n        }\n    }\n    updateMainList(state, value, mainElement) {\n        if (this.allowFiltering || this.mode === 'CheckBox') {\n            const element2 = mainElement ? mainElement :\n                this.findListElement(this.mainList, 'li', 'data-value', value);\n            if (element2) {\n                if (state) {\n                    element2.setAttribute('aria-selected', 'false');\n                    removeClass([element2], this.hideSelectedItem ?\n                        HIDE_LIST :\n                        dropDownBaseClasses.selected);\n                    if (this.mode === 'CheckBox') {\n                        element2.firstElementChild.setAttribute('aria-checked', 'false');\n                        removeClass([element2.firstElementChild.lastElementChild], 'e-check');\n                    }\n                }\n                else {\n                    element2.setAttribute('aria-selected', 'true');\n                    addClass([element2], this.hideSelectedItem ?\n                        HIDE_LIST :\n                        dropDownBaseClasses.selected);\n                    if (this.mode === 'CheckBox') {\n                        element2.firstElementChild.setAttribute('aria-checked', 'true');\n                        addClass([element2.firstElementChild.lastElementChild], 'e-check');\n                    }\n                }\n            }\n        }\n    }\n    removeChip(value) {\n        if (this.chipCollectionWrapper) {\n            const element = this.findListElement(this.chipCollectionWrapper, 'span', 'data-value', value);\n            if (element) {\n                remove(element);\n            }\n        }\n    }\n    setWidth(width) {\n        if (!isNullOrUndefined(width)) {\n            if (typeof width === 'number') {\n                this.overAllWrapper.style.width = formatUnit(width);\n            }\n            else if (typeof width === 'string') {\n                this.overAllWrapper.style.width = (width.match(/px|%|em/)) ? (width) : (formatUnit(width));\n            }\n        }\n    }\n    updateChipStatus() {\n        if (this.value && this.value.length) {\n            if (!isNullOrUndefined(this.chipCollectionWrapper)) {\n                (this.chipCollectionWrapper.style.display = '');\n            }\n            if (this.mode === 'Delimiter' || this.mode === 'CheckBox') {\n                this.showDelimWrapper();\n            }\n            this.showOverAllClear();\n        }\n        else {\n            if (!isNullOrUndefined(this.chipCollectionWrapper)) {\n                this.chipCollectionWrapper.style.display = 'none';\n            }\n            if (!isNullOrUndefined(this.delimiterWrapper)) {\n                (this.delimiterWrapper.style.display = 'none');\n            }\n            this.hideOverAllClear();\n        }\n    }\n    addValue(value, text, eve) {\n        if (!this.value) {\n            this.value = [];\n        }\n        if (this.value.indexOf(value) < 0) {\n            this.setProperties({ value: [].concat([], this.value, [value]) }, true);\n        }\n        const element = this.findListElement(this.list, 'li', 'data-value', value);\n        this.removeFocus();\n        if (element) {\n            this.addListFocus(element);\n            this.addListSelection(element);\n        }\n        if (this.mode !== 'Delimiter' && this.mode !== 'CheckBox') {\n            this.addChip(text, value, eve);\n        }\n        if (this.hideSelectedItem && this.fields.groupBy) {\n            this.hideGroupItem(value);\n        }\n        this.updateChipStatus();\n        this.checkMaxSelection();\n    }\n    checkMaxSelection() {\n        const limit = this.value && this.value.length ? this.value.length : 0;\n        if (limit === this.maximumSelectionLength) {\n            const collection = this.list.querySelectorAll('li.'\n                + dropDownBaseClasses.li + ':not(.e-active)');\n            addClass(collection, 'e-disable');\n        }\n    }\n    dispatchSelect(value, eve, element, isNotTrigger, length) {\n        const list = this.listData;\n        if (this.initStatus && !isNotTrigger) {\n            const val = this.getDataByValue(value);\n            const eventArgs = {\n                e: eve,\n                item: element,\n                itemData: val,\n                isInteracted: eve ? true : false,\n                cancel: false\n            };\n            this.trigger('select', eventArgs, (eventArgs) => {\n                if (!eventArgs.cancel) {\n                    if (length) {\n                        this.selectAllEventData.push(val);\n                        this.selectAllEventEle.push(element);\n                    }\n                    if (length === 1) {\n                        const args = {\n                            event: eve,\n                            items: this.selectAllEventEle,\n                            itemData: this.selectAllEventData,\n                            isInteracted: eve ? true : false,\n                            isChecked: true\n                        };\n                        this.trigger('selectedAll', args);\n                        this.selectAllEventData = [];\n                    }\n                    if (this.allowCustomValue && this.isServerRendered && this.listData !== list) {\n                        this.listData = list;\n                    }\n                    this.updateListSelectEventCallback(value, element, eve);\n                    if (this.hideSelectedItem && this.fixedHeaderElement && this.fields.groupBy && this.mode !== 'CheckBox') {\n                        super.scrollStop();\n                    }\n                }\n            });\n        }\n    }\n    addChip(text, value, e) {\n        if (this.chipCollectionWrapper) {\n            this.getChip(text, value, e);\n        }\n    }\n    removeChipFocus() {\n        const elements = this.chipCollectionWrapper.querySelectorAll('span.' + CHIP$1);\n        const closeElements = this.chipCollectionWrapper.querySelectorAll('span.' + CHIP_CLOSE$1.split(' ')[0]);\n        removeClass(elements, CHIP_SELECTED);\n        if (Browser.isDevice) {\n            for (let index = 0; index < closeElements.length; index++) {\n                closeElements[index].style.display = 'none';\n            }\n        }\n    }\n    onMobileChipInteraction(e) {\n        const chipElem = closest(e.target, '.' + CHIP$1);\n        const chipClose = chipElem.querySelector('span.' + CHIP_CLOSE$1.split(' ')[0]);\n        if (this.enabled && !this.readonly) {\n            if (!chipElem.classList.contains(CHIP_SELECTED)) {\n                this.removeChipFocus();\n                chipClose.style.display = '';\n                chipElem.classList.add(CHIP_SELECTED);\n            }\n            this.refreshPopup();\n            e.preventDefault();\n        }\n    }\n    multiCompiler(multiselectTemplate) {\n        let checkTemplate = false;\n        if (multiselectTemplate) {\n            try {\n                checkTemplate = (selectAll(multiselectTemplate, document).length) ? true : false;\n            }\n            catch (exception) {\n                checkTemplate = false;\n            }\n        }\n        return checkTemplate;\n    }\n    getChip(data, value, e) {\n        let itemData = { text: value, value: value };\n        const chip = this.createElement('span', {\n            className: CHIP$1,\n            attrs: { 'data-value': value, 'title': data }\n        });\n        let compiledString;\n        const chipContent = this.createElement('span', { className: CHIP_CONTENT$1 });\n        const chipClose = this.createElement('span', { className: CHIP_CLOSE$1 });\n        if (this.mainData) {\n            itemData = this.getDataByValue(value);\n        }\n        if (this.valueTemplate && !isNullOrUndefined(itemData)) {\n            const valuecheck = this.multiCompiler(this.valueTemplate);\n            if (valuecheck) {\n                compiledString = compile(select(this.valueTemplate, document).innerHTML.trim());\n            }\n            else {\n                compiledString = compile(this.valueTemplate);\n            }\n            // eslint-disable-next-line\n            let valueCompTemp = compiledString(itemData, this, 'valueTemplate', this.valueTemplateId, this.isStringTemplate, null, chipContent);\n            if (valueCompTemp && valueCompTemp.length > 0) {\n                for (let i = 0; i < valueCompTemp.length; i++) {\n                    chipContent.appendChild(valueCompTemp[i]);\n                }\n            }\n            this.renderReactTemplates();\n        }\n        else if (this.enableHtmlSanitizer) {\n            chipContent.innerText = data;\n        }\n        else {\n            chipContent.innerHTML = data;\n        }\n        chip.appendChild(chipContent);\n        const eventArgs = {\n            isInteracted: e ? true : false,\n            itemData: itemData,\n            e: e,\n            setClass: (classes) => {\n                addClass([chip], classes);\n            },\n            cancel: false\n        };\n        this.isPreventChange = this.isAngular && this.preventChange;\n        this.trigger('tagging', eventArgs, (eventArgs) => {\n            if (!eventArgs.cancel) {\n                if (Browser.isDevice) {\n                    chip.classList.add(MOBILE_CHIP);\n                    append([chipClose], chip);\n                    chipClose.style.display = 'none';\n                    EventHandler.add(chip, 'click', this.onMobileChipInteraction, this);\n                }\n                else {\n                    EventHandler.add(chip, 'mousedown', this.chipClick, this);\n                    if (this.showClearButton) {\n                        chip.appendChild(chipClose);\n                    }\n                }\n                EventHandler.add(chipClose, 'mousedown', this.onChipRemove, this);\n                this.chipCollectionWrapper.appendChild(chip);\n                if (!this.changeOnBlur && e) {\n                    this.updateValueState(e, this.value, this.tempValues);\n                }\n            }\n        });\n    }\n    calcPopupWidth() {\n        let width = formatUnit(this.popupWidth);\n        if (width.indexOf('%') > -1) {\n            const inputWidth = (this.componentWrapper.offsetWidth) * parseFloat(width) / 100;\n            width = inputWidth.toString() + 'px';\n        }\n        return width;\n    }\n    mouseIn() {\n        if (this.enabled && !this.readonly) {\n            this.showOverAllClear();\n        }\n    }\n    mouseOut() {\n        if (!this.inputFocus) {\n            this.overAllClear.style.display = 'none';\n        }\n    }\n    listOption(dataSource, fields) {\n        const iconCss = isNullOrUndefined(fields.iconCss) ? false : true;\n        const fieldProperty = isNullOrUndefined(fields.properties) ? fields :\n            fields.properties;\n        this.listCurrentOptions = (fields.text !== null || fields.value !== null) ? {\n            fields: fieldProperty, showIcon: iconCss, ariaAttributes: { groupItemRole: 'presentation' }\n        } : { fields: { value: 'text' } };\n        extend(this.listCurrentOptions, this.listCurrentOptions, fields, true);\n        if (this.mode === 'CheckBox') {\n            this.notify('listoption', { module: 'CheckBoxSelection', enable: this.mode === 'CheckBox', dataSource, fieldProperty });\n        }\n        return this.listCurrentOptions;\n    }\n    renderPopup() {\n        if (!this.list) {\n            super.render();\n        }\n        if (!this.popupObj) {\n            document.body.appendChild(this.popupWrapper);\n            const checkboxFilter = this.popupWrapper.querySelector('.' + FILTERPARENT);\n            if (this.mode === 'CheckBox' && !this.allowFiltering && checkboxFilter && this.filterParent) {\n                checkboxFilter.remove();\n                this.filterParent = null;\n            }\n            let overAllHeight = parseInt(this.popupHeight, 10);\n            this.popupWrapper.style.visibility = 'hidden';\n            if (this.headerTemplate) {\n                this.setHeaderTemplate();\n                overAllHeight -= this.header.offsetHeight;\n            }\n            append([this.list], this.popupWrapper);\n            if (this.footerTemplate) {\n                this.setFooterTemplate();\n                overAllHeight -= this.footer.offsetHeight;\n            }\n            if (this.mode === 'CheckBox' && this.showSelectAll) {\n                this.notify('selectAll', { module: 'CheckBoxSelection', enable: this.mode === 'CheckBox' });\n                overAllHeight -= this.selectAllHeight;\n            }\n            else if (this.mode === 'CheckBox' && !this.showSelectAll && (!this.headerTemplate && !this.footerTemplate)) {\n                this.notify('selectAll', { module: 'CheckBoxSelection', enable: this.mode === 'CheckBox' });\n                overAllHeight = parseInt(this.popupHeight, 10);\n            }\n            else if (this.mode === 'CheckBox' && !this.showSelectAll) {\n                this.notify('selectAll', { module: 'CheckBoxSelection', enable: this.mode === 'CheckBox' });\n                overAllHeight = parseInt(this.popupHeight, 10);\n                if (this.headerTemplate && this.header) {\n                    overAllHeight -= this.header.offsetHeight;\n                }\n                if (this.footerTemplate && this.footer) {\n                    overAllHeight -= this.footer.offsetHeight;\n                }\n            }\n            if (this.mode === 'CheckBox') {\n                const args = {\n                    module: 'CheckBoxSelection',\n                    enable: this.mode === 'CheckBox',\n                    popupElement: this.popupWrapper\n                };\n                if (this.allowFiltering) {\n                    this.notify('searchBox', args);\n                    overAllHeight -= this.searchBoxHeight;\n                }\n                addClass([this.popupWrapper], 'e-checkbox');\n            }\n            if (this.popupHeight !== 'auto') {\n                this.list.style.maxHeight = formatUnit(overAllHeight);\n                this.popupWrapper.style.maxHeight = formatUnit(this.popupHeight);\n            }\n            else {\n                this.list.style.maxHeight = formatUnit(this.popupHeight);\n            }\n            this.popupObj = new Popup(this.popupWrapper, {\n                width: this.calcPopupWidth(), targetType: 'relative', position: { X: 'left', Y: 'bottom' },\n                relateTo: this.overAllWrapper, collision: { X: 'flip', Y: 'flip' }, offsetY: 1,\n                enableRtl: this.enableRtl, zIndex: this.zIndex,\n                close: () => {\n                    if (this.popupObj.element.parentElement) {\n                        this.popupObj.unwireScrollEvents();\n                        // For restrict the page scrolling in safari browser\n                        const checkboxFilterInput = this.popupWrapper.querySelector('.' + FILTERINPUT);\n                        if (this.mode === 'CheckBox' && checkboxFilterInput && document.activeElement === checkboxFilterInput) {\n                            checkboxFilterInput.blur();\n                        }\n                        detach(this.popupObj.element);\n                    }\n                },\n                open: () => {\n                    this.popupObj.resolveCollision();\n                    if (!this.isFirstClick) {\n                        const ulElement = this.list.querySelector('ul');\n                        if (ulElement) {\n                            if (!(this.mode !== 'CheckBox' && (this.allowFiltering || this.allowCustomValue) &&\n                                this.targetElement().trim() !== '')) {\n                                this.mainList = ulElement.cloneNode ? ulElement.cloneNode(true) : ulElement;\n                            }\n                        }\n                        this.isFirstClick = true;\n                    }\n                    this.popupObj.wireScrollEvents();\n                    if (!(this.mode !== 'CheckBox' && (this.allowFiltering || this.allowCustomValue) &&\n                        this.targetElement().trim() !== '')) {\n                        this.loadTemplate();\n                    }\n                    this.setScrollPosition();\n                    if (this.allowFiltering) {\n                        this.notify('inputFocus', {\n                            module: 'CheckBoxSelection', enable: this.mode === 'CheckBox', value: 'focus'\n                        });\n                    }\n                }, targetExitViewport: () => {\n                    if (!Browser.isDevice) {\n                        this.hidePopup();\n                    }\n                }\n            });\n            if (this.mode === 'CheckBox' && Browser.isDevice && this.allowFiltering) {\n                this.notify('deviceSearchBox', { module: 'CheckBoxSelection', enable: this.mode === 'CheckBox' });\n            }\n            this.popupObj.close();\n            this.popupWrapper.style.visibility = '';\n        }\n    }\n    setHeaderTemplate() {\n        let compiledString;\n        if (this.header) {\n            this.header.remove();\n        }\n        this.header = this.createElement('div');\n        addClass([this.header], HEADER$1);\n        const headercheck = this.multiCompiler(this.headerTemplate);\n        if (headercheck) {\n            compiledString = compile(select(this.headerTemplate, document).innerHTML.trim());\n        }\n        else {\n            compiledString = compile(this.headerTemplate);\n        }\n        // eslint-disable-next-line\n        let elements = compiledString({}, this, 'headerTemplate', this.headerTemplateId, this.isStringTemplate, null, this.header);\n        if (elements && elements.length > 0) {\n            for (let temp = 0; temp < elements.length; temp++) {\n                this.header.appendChild(elements[temp]);\n            }\n        }\n        if (this.mode === 'CheckBox' && this.showSelectAll) {\n            prepend([this.header], this.popupWrapper);\n        }\n        else {\n            append([this.header], this.popupWrapper);\n        }\n        EventHandler.add(this.header, 'mousedown', this.onListMouseDown, this);\n    }\n    setFooterTemplate() {\n        let compiledString;\n        if (this.footer) {\n            this.footer.remove();\n        }\n        this.footer = this.createElement('div');\n        addClass([this.footer], FOOTER$1);\n        const footercheck = this.multiCompiler(this.footerTemplate);\n        if (footercheck) {\n            compiledString = compile(select(this.footerTemplate, document).innerHTML.trim());\n        }\n        else {\n            compiledString = compile(this.footerTemplate);\n        }\n        // eslint-disable-next-line\n        let elements = compiledString({}, this, 'footerTemplate', this.footerTemplateId, this.isStringTemplate, null, this.footer);\n        if (elements && elements.length > 0) {\n            for (let temp = 0; temp < elements.length; temp++) {\n                this.footer.appendChild(elements[temp]);\n            }\n        }\n        append([this.footer], this.popupWrapper);\n        EventHandler.add(this.footer, 'mousedown', this.onListMouseDown, this);\n    }\n    clearAll(e) {\n        if (this.enabled && !this.readonly) {\n            let temp;\n            if (this.value && this.value.length > 0) {\n                const liElement = this.list && this.list.querySelectorAll('li.e-list-item');\n                if (liElement && liElement.length > 0) {\n                    this.selectAllItems(false, e);\n                }\n                else {\n                    this.removeIndex = 0;\n                    for (temp = this.value[this.removeIndex]; this.removeIndex < this.value.length; temp = this.value[this.removeIndex]) {\n                        this.removeValue(temp, e, null, true);\n                    }\n                }\n            }\n            else {\n                this.clearAllCallback(e);\n            }\n        }\n    }\n    clearAllCallback(e, isClearAll) {\n        const tempValues = this.value ? this.value.slice() : [];\n        if (this.mainList && this.listData && ((this.allowFiltering && this.mode !== 'CheckBox') || this.allowCustomValue)) {\n            const list = this.mainList.cloneNode ? this.mainList.cloneNode(true) : this.mainList;\n            this.onActionComplete(list, this.mainData);\n        }\n        this.focusAtFirstListItem();\n        this.updateDelimeter(this.delimiterChar, e);\n        if (this.mode !== 'Box' && (!this.inputFocus || this.mode === 'CheckBox')) {\n            this.updateDelimView();\n        }\n        if (this.inputElement.value !== '') {\n            this.makeTextBoxEmpty();\n            this.search(null);\n        }\n        this.checkPlaceholderSize();\n        if (this.isPopupOpen()) {\n            this.refreshPopup();\n        }\n        if (!this.inputFocus) {\n            if (this.changeOnBlur) {\n                this.updateValueState(e, this.value, tempValues);\n            }\n            if (this.mode !== 'CheckBox') {\n                this.inputElement.focus();\n            }\n        }\n        if (this.mode === 'CheckBox') {\n            this.refreshPlaceHolder();\n            this.refreshInputHight();\n            if (this.changeOnBlur && isClearAll && (isNullOrUndefined(this.value) || this.value.length === 0)) {\n                this.updateValueState(e, this.value, this.tempValues);\n            }\n        }\n        if (!this.changeOnBlur && isClearAll && (isNullOrUndefined(this.value) || this.value.length === 0)) {\n            this.updateValueState(e, this.value, this.tempValues);\n        }\n        if (this.mode === 'CheckBox' && this.enableGroupCheckBox && !isNullOrUndefined(this.fields.groupBy)) {\n            this.updateListItems(this.list.querySelectorAll('li.e-list-item'), this.mainList.querySelectorAll('li.e-list-item'));\n        }\n        e.preventDefault();\n    }\n    windowResize() {\n        this.refreshPopup();\n        if ((!this.inputFocus || this.mode === 'CheckBox') && this.viewWrapper && this.viewWrapper.parentElement) {\n            this.updateDelimView();\n        }\n    }\n    resetValueHandler(e) {\n        const formElement = closest(this.inputElement, 'form');\n        if (formElement && e.target === formElement) {\n            const textVal = (this.element.tagName === this.getNgDirective()) ?\n                null : this.element.getAttribute('data-initial-value');\n            this.text = textVal;\n        }\n    }\n    wireEvent() {\n        EventHandler.add(this.componentWrapper, 'mousedown', this.wrapperClick, this);\n        EventHandler.add(window, 'resize', this.windowResize, this);\n        EventHandler.add(this.inputElement, 'focus', this.focusInHandler, this);\n        EventHandler.add(this.inputElement, 'keydown', this.onKeyDown, this);\n        EventHandler.add(this.inputElement, 'keyup', this.keyUp, this);\n        if (this.mode !== 'CheckBox') {\n            EventHandler.add(this.inputElement, 'input', this.onInput, this);\n        }\n        EventHandler.add(this.inputElement, 'blur', this.onBlurHandler, this);\n        EventHandler.add(this.componentWrapper, 'mouseover', this.mouseIn, this);\n        const formElement = closest(this.inputElement, 'form');\n        if (formElement) {\n            EventHandler.add(formElement, 'reset', this.resetValueHandler, this);\n        }\n        EventHandler.add(this.componentWrapper, 'mouseout', this.mouseOut, this);\n        EventHandler.add(this.overAllClear, 'mouseup', this.clearAll, this);\n        EventHandler.add(this.inputElement, 'paste', this.pasteHandler, this);\n    }\n    onInput(e) {\n        if (this.keyDownStatus) {\n            this.isValidKey = true;\n        }\n        else {\n            this.isValidKey = false;\n        }\n        this.keyDownStatus = false;\n        // For Filtering works in mobile firefox\n        if (Browser.isDevice && Browser.info.name === 'mozilla') {\n            this.search(e);\n        }\n    }\n    pasteHandler(event) {\n        setTimeout(() => {\n            this.expandTextbox();\n            this.search(event);\n        });\n    }\n    search(e) {\n        if (!isNullOrUndefined(e)) {\n            this.keyCode = e.keyCode;\n        }\n        if (!this.isPopupOpen() && this.openOnClick) {\n            this.showPopup();\n        }\n        this.openClick(e);\n        if (this.checkTextLength() && !this.allowFiltering && !isNullOrUndefined(e) && (e.keyCode !== 8)) {\n            this.focusAtFirstListItem();\n        }\n        else {\n            const text = this.targetElement();\n            if (this.allowFiltering) {\n                const eventArgs = {\n                    preventDefaultAction: false,\n                    text: this.targetElement(),\n                    updateData: (dataSource, query, fields) => {\n                        if (eventArgs.cancel) {\n                            return;\n                        }\n                        this.isFiltered = true;\n                        this.remoteFilterAction = true;\n                        this.dataUpdater(dataSource, query, fields);\n                    },\n                    event: e,\n                    cancel: false\n                };\n                this.trigger('filtering', eventArgs, (eventArgs) => {\n                    if (!eventArgs.cancel) {\n                        if (!this.isFiltered && !eventArgs.preventDefaultAction) {\n                            this.filterAction = true;\n                            this.dataUpdater(this.dataSource, null, this.fields);\n                        }\n                    }\n                });\n            }\n            else if (this.allowCustomValue) {\n                let query = new Query();\n                query = (text !== '') ? query.where(this.fields.text, 'startswith', text, this.ignoreCase, this.ignoreAccent) : query;\n                this.dataUpdater(this.mainData, query, this.fields);\n            }\n            else {\n                const liCollections = this.list.querySelectorAll('li.' + dropDownBaseClasses.li + ':not(.e-hide-listitem)');\n                const activeElement = Search(this.targetElement(), liCollections, 'StartsWith', this.ignoreCase);\n                if (activeElement && activeElement.item !== null) {\n                    this.addListFocus(activeElement.item);\n                    this.list.scrollTop =\n                        activeElement.item.offsetHeight * activeElement.index;\n                }\n                else if (this.targetElement() !== '') {\n                    this.removeFocus();\n                }\n                else {\n                    this.focusAtFirstListItem();\n                }\n            }\n        }\n    }\n    preRender() {\n        if (this.allowFiltering === null) {\n            this.allowFiltering = (this.mode === 'CheckBox') ? true : false;\n        }\n        this.initializeData();\n        this.updateDataAttribute(this.htmlAttributes);\n        super.preRender();\n    }\n    getLocaleName() {\n        return 'multi-select';\n    }\n    initializeData() {\n        this.mainListCollection = [];\n        this.beforePopupOpen = false;\n        this.filterAction = false;\n        this.remoteFilterAction = false;\n        this.isFirstClick = false;\n        this.mobFilter = true;\n        this.isFiltered = false;\n        this.focused = true;\n        this.initial = true;\n        this.backCommand = true;\n    }\n    updateData(delimiterChar, e) {\n        let data = '';\n        const delim = this.mode === 'Delimiter' || this.mode === 'CheckBox';\n        const text = [];\n        let temp;\n        const tempData = this.listData;\n        this.listData = this.mainData;\n        this.hiddenElement.innerHTML = '';\n        if (!isNullOrUndefined(this.value)) {\n            for (let index = 0; !isNullOrUndefined(this.value[index]); index++) {\n                const listValue = this.findListElement(((!isNullOrUndefined(this.mainList)) ? this.mainList : this.ulElement), 'li', 'data-value', this.value[index]);\n                if (isNullOrUndefined(listValue) && !this.allowCustomValue) {\n                    this.value.splice(index, 1);\n                    index -= 1;\n                }\n                else {\n                    if (this.listData) {\n                        temp = this.getTextByValue(this.value[index]);\n                    }\n                    else {\n                        temp = this.value[index];\n                    }\n                    data += temp + delimiterChar + ' ';\n                    text.push(temp);\n                }\n                this.hiddenElement.innerHTML += '<option selected value =\"' + this.value[index] + '\">' + index + '</option>';\n            }\n        }\n        this.setProperties({ text: text.toString() }, true);\n        if (delim) {\n            this.updateWrapperText(this.delimiterWrapper, data);\n            this.delimiterWrapper.setAttribute('id', getUniqueID('delim_val'));\n            this.inputElement.setAttribute('aria-describedby', this.delimiterWrapper.id);\n            this.inputElement.setAttribute('aria-labelledby', this.delimiterWrapper.id);\n        }\n        const targetEle = e && e.target;\n        const isClearAll = (targetEle && targetEle.classList.contains('e-close-hooker')) ? true : null;\n        if (!this.changeOnBlur && ((e && !isClearAll)) || this.isSelectAll) {\n            this.isSelectAll = false;\n            this.updateValueState(e, this.value, this.tempValues);\n        }\n        this.listData = tempData;\n        this.addValidInputClass();\n    }\n    initialTextUpdate() {\n        if (!isNullOrUndefined(this.text)) {\n            const textArr = this.text.split(this.delimiterChar);\n            const textVal = [];\n            for (let index = 0; textArr.length > index; index++) {\n                const val = this.getValueByText(textArr[index]);\n                if (!isNullOrUndefined(val)) {\n                    textVal.push(val);\n                }\n                else if (this.allowCustomValue) {\n                    textVal.push(textArr[index]);\n                }\n            }\n            if (textVal && textVal.length) {\n                this.setProperties({ value: textVal }, true);\n            }\n        }\n        else {\n            this.setProperties({ value: null }, true);\n        }\n    }\n    renderList(isEmptyData) {\n        if (!isEmptyData && this.allowCustomValue && this.list && (this.list.textContent === this.noRecordsTemplate\n            || this.list.querySelector('.e-ul') && this.list.querySelector('.e-ul').childElementCount === 0)) {\n            isEmptyData = true;\n        }\n        super.render(isEmptyData);\n        this.unwireListEvents();\n        this.wireListEvents();\n    }\n    initialValueUpdate() {\n        if (this.list) {\n            let text;\n            let element;\n            let value;\n            if (this.chipCollectionWrapper) {\n                this.chipCollectionWrapper.innerHTML = '';\n            }\n            this.removeListSelection();\n            if (!isNullOrUndefined(this.value)) {\n                for (let index = 0; !isNullOrUndefined(this.value[index]); index++) {\n                    value = this.value[index];\n                    element = this.findListElement(this.hideSelectedItem ? this.ulElement : this.list, 'li', 'data-value', value);\n                    text = this.getTextByValue(value);\n                    if ((element && (element.getAttribute('aria-selected') !== 'true')) ||\n                        (element && (element.getAttribute('aria-selected') === 'true' && this.hideSelectedItem) &&\n                            (this.mode === 'Box' || this.mode === 'Default'))) {\n                        this.addChip(text, value);\n                        this.addListSelection(element);\n                    }\n                    else if (value && this.allowCustomValue) {\n                        const indexItem = this.listData.length;\n                        const newValue = {};\n                        setValue(this.fields.text, value, newValue);\n                        setValue(this.fields.value, value, newValue);\n                        const noDataEle = this.popupWrapper.querySelector('.' + dropDownBaseClasses.noData);\n                        this.addItem(newValue, indexItem);\n                        element = element ? element : this.findListElement(this.hideSelectedItem ? this.ulElement : this.list, 'li', 'data-value', value);\n                        if (this.popupWrapper.contains(noDataEle)) {\n                            this.list.setAttribute('style', noDataEle.getAttribute('style'));\n                            this.popupWrapper.replaceChild(this.list, noDataEle);\n                            this.wireListEvents();\n                        }\n                        this.addChip(text, value);\n                        this.addListSelection(element);\n                    }\n                }\n            }\n            if (this.mode === 'CheckBox') {\n                this.updateDelimView();\n                if (this.changeOnBlur) {\n                    this.updateValueState(null, this.value, this.tempValues);\n                }\n                this.updateDelimeter(this.delimiterChar);\n                this.refreshInputHight();\n            }\n            else {\n                this.updateDelimeter(this.delimiterChar);\n            }\n            if (this.mode === 'CheckBox' && this.showSelectAll && (isNullOrUndefined(this.value) || !this.value.length)) {\n                this.notify('checkSelectAll', { module: 'CheckBoxSelection', enable: this.mode === 'CheckBox', value: 'uncheck' });\n            }\n            if (this.mode === 'Box' || (this.mode === 'Default' && this.inputFocus)) {\n                this.chipCollectionWrapper.style.display = '';\n            }\n            else if (this.mode === 'Delimiter' || this.mode === 'CheckBox') {\n                this.showDelimWrapper();\n            }\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    updateActionCompleteData(li, item) {\n        if (this.value && this.value.indexOf(li.getAttribute('data-value')) > -1) {\n            this.mainList = this.ulElement;\n            if (this.hideSelectedItem) {\n                addClass([li], HIDE_LIST);\n            }\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    updateAddItemList(list, itemCount) {\n        if (this.popupObj && this.popupObj.element && this.popupObj.element.querySelector('.' + dropDownBaseClasses.noData) && list) {\n            this.list = list;\n            this.mainList = this.ulElement = list.querySelector('ul');\n            remove(this.popupWrapper.querySelector('.e-content'));\n            this.popupObj = null;\n            this.renderPopup();\n        }\n        else if (this.allowCustomValue) {\n            this.list = list;\n            this.mainList = this.ulElement = list.querySelector('ul');\n        }\n    }\n    updateDataList() {\n        if (this.mainList && this.ulElement && !(this.isFiltered || this.filterAction)) {\n            let isDynamicGroupItemUpdate = this.mainList.childElementCount < this.ulElement.childElementCount;\n            let isReactTemplateUpdate = ((this.ulElement.childElementCount > 0 && this.ulElement.children[0].childElementCount > 0) && (this.mainList.children[0].childElementCount < this.ulElement.children[0].childElementCount));\n            let isAngularTemplateUpdate = this.itemTemplate && this.ulElement.childElementCount > 0 && !(this.ulElement.childElementCount < this.mainList.childElementCount) && (this.ulElement.children[0].childElementCount > 0 || (this.fields.groupBy && this.ulElement.children[1] && this.ulElement.children[1].childElementCount > 0));\n            if (isDynamicGroupItemUpdate || isReactTemplateUpdate || isAngularTemplateUpdate) {\n                //EJ2-57748 - for this task, we prevent the ul element cloning ( this.mainList = this.ulElement.cloneNode ? <HTMLElement>this.ulElement.cloneNode(true) : this.ulElement;)\n                this.mainList = this.ulElement;\n            }\n        }\n    }\n    isValidLI(li) {\n        return (li && !li.classList.contains(dropDownBaseClasses.disabled) && !li.classList.contains(dropDownBaseClasses.group) &&\n            li.classList.contains(dropDownBaseClasses.li));\n    }\n    updateListSelection(li, e, length) {\n        const customVal = li.getAttribute('data-value');\n        let value = this.getFormattedValue(customVal);\n        if (this.allowCustomValue && ((customVal !== 'false' && value === false) ||\n            (!isNullOrUndefined(value) && value.toString() === 'NaN'))) {\n            value = customVal;\n        }\n        this.removeHover();\n        if (!this.value || this.value.indexOf(value) === -1) {\n            this.dispatchSelect(value, e, li, (li.getAttribute('aria-selected') === 'true'), length);\n        }\n        else {\n            this.removeValue(value, e, length);\n        }\n    }\n    updateListSelectEventCallback(value, li, e) {\n        const text = this.getTextByValue(value);\n        if ((this.allowCustomValue || this.allowFiltering) && !this.findListElement(this.mainList, 'li', 'data-value', value)) {\n            const temp = li.cloneNode(true);\n            const fieldValue = this.fields.value ? this.fields.value : 'value';\n            if (this.allowCustomValue && this.mainData.length && typeof getValue(fieldValue, this.mainData[0]) === 'number') {\n                value = !isNaN(parseFloat(value.toString())) ? parseFloat(value.toString()) : value;\n            }\n            const data = this.getDataByValue(value);\n            const eventArgs = {\n                newData: data,\n                cancel: false\n            };\n            this.trigger('customValueSelection', eventArgs, (eventArgs) => {\n                if (!eventArgs.cancel) {\n                    append([temp], this.mainList);\n                    this.mainData.push(data);\n                    this.remoteCustomValue = false;\n                    this.addValue(value, text, e);\n                }\n            });\n        }\n        else {\n            this.remoteCustomValue = false;\n            this.addValue(value, text, e);\n        }\n    }\n    removeListSelection() {\n        const className = this.hideSelectedItem ?\n            HIDE_LIST :\n            dropDownBaseClasses.selected;\n        const selectedItems = this.list.querySelectorAll('.' + className);\n        let temp = selectedItems.length;\n        if (selectedItems && selectedItems.length) {\n            removeClass(selectedItems, className);\n            while (temp > 0) {\n                selectedItems[temp - 1].setAttribute('aria-selected', 'false');\n                temp--;\n            }\n        }\n        if (!isNullOrUndefined(this.mainList)) {\n            const selectItems = this.mainList.querySelectorAll('.' + className);\n            let temp1 = selectItems.length;\n            if (selectItems && selectItems.length) {\n                removeClass(selectItems, className);\n                while (temp1 > 0) {\n                    selectItems[temp1 - 1].setAttribute('aria-selected', 'false');\n                    if (this.mode === 'CheckBox') {\n                        if (selectedItems && (selectedItems.length > (temp1 - 1))) {\n                            selectedItems[temp1 - 1].firstElementChild.setAttribute('aria-checked', 'false');\n                            removeClass([selectedItems[temp1 - 1].firstElementChild.lastElementChild], 'e-check');\n                        }\n                        selectItems[temp1 - 1].firstElementChild.setAttribute('aria-checked', 'false');\n                        removeClass([selectItems[temp1 - 1].firstElementChild.lastElementChild], 'e-check');\n                    }\n                    temp1--;\n                }\n            }\n        }\n    }\n    removeHover() {\n        const hoveredItem = this.list.querySelectorAll('.' + dropDownBaseClasses.hover);\n        if (hoveredItem && hoveredItem.length) {\n            removeClass(hoveredItem, dropDownBaseClasses.hover);\n        }\n    }\n    removeFocus() {\n        if (this.list && this.mainList) {\n            const hoveredItem = this.list.querySelectorAll('.' + dropDownBaseClasses.focus);\n            const mainlist = this.mainList.querySelectorAll('.' + dropDownBaseClasses.focus);\n            if (hoveredItem && hoveredItem.length) {\n                removeClass(hoveredItem, dropDownBaseClasses.focus);\n                removeClass(mainlist, dropDownBaseClasses.focus);\n            }\n        }\n    }\n    addListHover(li) {\n        if (this.enabled && this.isValidLI(li)) {\n            this.removeHover();\n            addClass([li], dropDownBaseClasses.hover);\n        }\n        else {\n            if ((li !== null && li.classList.contains('e-list-group-item')) && this.enableGroupCheckBox && this.mode === 'CheckBox'\n                && !isNullOrUndefined(this.fields.groupBy)) {\n                this.removeHover();\n                addClass([li], dropDownBaseClasses.hover);\n            }\n        }\n    }\n    addListFocus(element) {\n        if (this.enabled && this.isValidLI(element)) {\n            this.removeFocus();\n            addClass([element], dropDownBaseClasses.focus);\n        }\n        else {\n            if (this.enableGroupCheckBox && this.mode === 'CheckBox' && !isNullOrUndefined(this.fields.groupBy)) {\n                addClass([element], dropDownBaseClasses.focus);\n            }\n        }\n    }\n    addListSelection(element, mainElement) {\n        const className = this.hideSelectedItem ?\n            HIDE_LIST :\n            dropDownBaseClasses.selected;\n        if (this.isValidLI(element) && !element.classList.contains(dropDownBaseClasses.hover)) {\n            addClass([element], className);\n            this.updateMainList(false, element.getAttribute('data-value'), mainElement);\n            element.setAttribute('aria-selected', 'true');\n            if (this.mode === 'CheckBox') {\n                const ariaCheck = element.firstElementChild.getAttribute('aria-checked');\n                if (ariaCheck === 'false' || isNullOrUndefined(ariaCheck)) {\n                    this.notify('updatelist', { module: 'CheckBoxSelection', enable: this.mode === 'CheckBox', li: element, e: this });\n                }\n            }\n            this.notify('activeList', { module: 'CheckBoxSelection', enable: this.mode === 'CheckBox', li: element, e: this });\n            if (this.chipCollectionWrapper) {\n                this.removeChipSelection();\n            }\n            attributes(this.inputElement, { 'aria-activedescendant': element.id });\n        }\n    }\n    updateDelimeter(delimChar, e) {\n        this.updateData(delimChar, e);\n    }\n    onMouseClick(e) {\n        this.keyCode = null;\n        this.scrollFocusStatus = false;\n        let target = e.target;\n        const li = closest(target, '.' + dropDownBaseClasses.li);\n        const headerLi = closest(target, '.' + dropDownBaseClasses.group);\n        if (headerLi && this.enableGroupCheckBox && this.mode === 'CheckBox' && this.fields.groupBy) {\n            target = target.classList.contains('e-list-group-item') ? target.firstElementChild.lastElementChild\n                : e.target;\n            if (target.classList.contains('e-check')) {\n                this.selectAllItem(false, e);\n                target.classList.remove('e-check');\n                target.classList.remove('e-stop');\n                closest(target, '.' + 'e-list-group-item').classList.remove('e-active');\n                target.setAttribute('aria-selected', 'false');\n            }\n            else {\n                this.selectAllItem(true, e);\n                target.classList.remove('e-stop');\n                target.classList.add('e-check');\n                closest(target, '.' + 'e-list-group-item').classList.add('e-active');\n                target.setAttribute('aria-selected', 'true');\n            }\n            this.refreshSelection();\n            this.checkSelectAll();\n        }\n        else {\n            if (this.isValidLI(li)) {\n                let limit = this.value && this.value.length ? this.value.length : 0;\n                if (li.classList.contains('e-active')) {\n                    limit = limit - 1;\n                }\n                if (limit < this.maximumSelectionLength) {\n                    this.updateListSelection(li, e);\n                    this.checkPlaceholderSize();\n                    this.addListFocus(li);\n                    if ((this.allowCustomValue || this.allowFiltering) && this.mainList && this.listData) {\n                        if (this.mode !== 'CheckBox') {\n                            this.focusAtLastListItem(li.getAttribute('data-value'));\n                            this.refreshSelection();\n                        }\n                    }\n                    else {\n                        this.makeTextBoxEmpty();\n                    }\n                }\n                if (this.mode === 'CheckBox') {\n                    this.updateDelimView();\n                    if (this.value && this.value.length > 50) {\n                        setTimeout(() => {\n                            this.updateDelimeter(this.delimiterChar, e);\n                        }, 0);\n                    }\n                    else {\n                        this.updateDelimeter(this.delimiterChar, e);\n                    }\n                    this.refreshInputHight();\n                }\n                else {\n                    this.updateDelimeter(this.delimiterChar, e);\n                }\n                this.checkSelectAll();\n                this.refreshPopup();\n                if (this.hideSelectedItem) {\n                    this.focusAtFirstListItem();\n                }\n                if (this.closePopupOnSelect) {\n                    this.hidePopup(e);\n                }\n                else {\n                    e.preventDefault();\n                }\n                this.makeTextBoxEmpty();\n                this.findGroupStart(target);\n                if (this.mode !== 'CheckBox') {\n                    this.refreshListItems(isNullOrUndefined(li) ? null : li.textContent);\n                }\n            }\n            else {\n                e.preventDefault();\n            }\n            this.refreshPlaceHolder();\n            this.deselectHeader();\n        }\n    }\n    findGroupStart(target) {\n        if (this.enableGroupCheckBox && this.mode === 'CheckBox' && !isNullOrUndefined(this.fields.groupBy)) {\n            const count = 0;\n            const liChecked = 0;\n            const liUnchecked = 0;\n            let groupValues;\n            if (this.itemTemplate && !target.getElementsByClassName('e-frame').length) {\n                while (!target.getElementsByClassName('e-frame').length) {\n                    target = target.parentElement;\n                }\n            }\n            if (target.classList.contains('e-frame')) {\n                target = target.parentElement.parentElement;\n            }\n            groupValues = this.findGroupAttrtibutes(target, liChecked, liUnchecked, count, 0);\n            groupValues = this.findGroupAttrtibutes(target, groupValues[0], groupValues[1], groupValues[2], 1);\n            while (!target.classList.contains('e-list-group-item')) {\n                if (target.classList.contains('e-list-icon')) {\n                    target = target.parentElement;\n                }\n                target = target.previousElementSibling;\n                if (target == null) {\n                    break;\n                }\n            }\n            this.updateCheckBox(target, groupValues[0], groupValues[1], groupValues[2]);\n        }\n    }\n    findGroupAttrtibutes(listElement, checked, unChecked, count, position) {\n        while (!listElement.classList.contains('e-list-group-item')) {\n            if (listElement.classList.contains('e-list-icon')) {\n                listElement = listElement.parentElement;\n            }\n            if (listElement.getElementsByClassName('e-frame')[0].classList.contains('e-check') &&\n                listElement.classList.contains('e-list-item')) {\n                checked++;\n            }\n            else if (listElement.classList.contains('e-list-item')) {\n                unChecked++;\n            }\n            count++;\n            listElement = position ? listElement.nextElementSibling : listElement.previousElementSibling;\n            if (listElement == null) {\n                break;\n            }\n        }\n        return [checked, unChecked, count];\n    }\n    updateCheckBox(groupHeader, checked, unChecked, count) {\n        if (groupHeader === null) {\n            return;\n        }\n        const checkBoxElement = groupHeader.getElementsByClassName('e-frame')[0];\n        if (count === checked) {\n            checkBoxElement.classList.remove('e-stop');\n            checkBoxElement.classList.add('e-check');\n            closest(checkBoxElement, '.' + 'e-list-group-item').classList.add('e-active');\n            groupHeader.setAttribute('aria-selected', 'true');\n        }\n        else if (count === unChecked) {\n            checkBoxElement.classList.remove('e-check');\n            checkBoxElement.classList.remove('e-stop');\n            closest(checkBoxElement, '.' + 'e-list-group-item').classList.remove('e-active');\n            groupHeader.setAttribute('aria-selected', 'false');\n        }\n        else if (this.maximumSelectionLength === checked - 1) {\n            checkBoxElement.classList.remove('e-stop');\n            groupHeader.setAttribute('aria-selected', 'true');\n            closest(checkBoxElement, '.' + 'e-list-group-item').classList.add('e-active');\n            checkBoxElement.classList.add('e-check');\n        }\n        else {\n            checkBoxElement.classList.remove('e-check');\n            checkBoxElement.classList.add('e-stop');\n            closest(checkBoxElement, '.' + 'e-list-group-item').classList.add('e-active');\n            groupHeader.setAttribute('aria-selected', 'false');\n        }\n    }\n    deselectHeader() {\n        const limit = this.value && this.value.length ? this.value.length : 0;\n        const collection = this.list.querySelectorAll('li.e-list-group-item:not(.e-active)');\n        if (limit < this.maximumSelectionLength) {\n            removeClass(collection, 'e-disable');\n        }\n        if (limit === this.maximumSelectionLength) {\n            addClass(collection, 'e-disable');\n        }\n    }\n    onMouseOver(e) {\n        let currentLi = closest(e.target, '.' + dropDownBaseClasses.li);\n        if (currentLi === null && this.mode === 'CheckBox' && !isNullOrUndefined(this.fields.groupBy)\n            && this.enableGroupCheckBox) {\n            currentLi = closest(e.target, '.' + dropDownBaseClasses.group);\n        }\n        this.addListHover(currentLi);\n    }\n    onMouseLeave() {\n        this.removeHover();\n    }\n    onListMouseDown(e) {\n        e.preventDefault();\n        this.scrollFocusStatus = true;\n    }\n    onDocumentClick(e) {\n        if (this.mode !== 'CheckBox') {\n            const target = e.target;\n            if (!(!isNullOrUndefined(this.popupObj) && closest(target, '[id=\"' + this.popupObj.element.id + '\"]')) &&\n                !this.overAllWrapper.contains(e.target)) {\n                this.scrollFocusStatus = false;\n            }\n            else {\n                this.scrollFocusStatus = (Browser.isIE || Browser.info.name === 'edge') && (document.activeElement === this.inputElement);\n            }\n        }\n    }\n    wireListEvents() {\n        if (!isNullOrUndefined(this.list)) {\n            EventHandler.add(document, 'mousedown', this.onDocumentClick, this);\n            EventHandler.add(this.list, 'mousedown', this.onListMouseDown, this);\n            EventHandler.add(this.list, 'mouseup', this.onMouseClick, this);\n            EventHandler.add(this.list, 'mouseover', this.onMouseOver, this);\n            EventHandler.add(this.list, 'mouseout', this.onMouseLeave, this);\n        }\n    }\n    unwireListEvents() {\n        EventHandler.remove(document, 'mousedown', this.onDocumentClick);\n        if (this.list) {\n            EventHandler.remove(this.list, 'mousedown', this.onListMouseDown);\n            EventHandler.remove(this.list, 'mouseup', this.onMouseClick);\n            EventHandler.remove(this.list, 'mouseover', this.onMouseOver);\n            EventHandler.remove(this.list, 'mouseout', this.onMouseLeave);\n        }\n    }\n    hideOverAllClear() {\n        if (!this.value || !this.value.length || this.inputElement.value === '') {\n            this.overAllClear.style.display = 'none';\n        }\n    }\n    showOverAllClear() {\n        if (((this.value && this.value.length) || this.inputElement.value !== '') && this.showClearButton && this.readonly !== true) {\n            this.overAllClear.style.display = '';\n        }\n        else {\n            this.overAllClear.style.display = 'none';\n        }\n    }\n    /**\n     * Sets the focus to widget for interaction.\n     *\n     * @returns {void}\n     */\n    focusIn() {\n        if (document.activeElement !== this.inputElement && this.enabled) {\n            this.inputElement.focus();\n        }\n    }\n    /**\n     * Remove the focus from widget, if the widget is in focus state.\n     *\n     * @returns {void}\n     */\n    focusOut() {\n        if (document.activeElement === this.inputElement && this.enabled) {\n            this.inputElement.blur();\n        }\n    }\n    /**\n     * Shows the spinner loader.\n     *\n     * @returns {void}\n     */\n    showSpinner() {\n        if (isNullOrUndefined(this.spinnerElement)) {\n            let filterClear = this.filterParent && this.filterParent.querySelector('.e-clear-icon.e-icons');\n            if (this.overAllClear.style.display !== 'none' || filterClear) {\n                this.spinnerElement = filterClear ? filterClear : this.overAllClear;\n            }\n            else {\n                this.spinnerElement = this.createElement('span', { className: CLOSEICON_CLASS$1 + ' ' + SPINNER_CLASS$1 });\n                this.componentWrapper.appendChild(this.spinnerElement);\n            }\n            createSpinner({ target: this.spinnerElement, width: Browser.isDevice ? '16px' : '14px' }, this.createElement);\n            addClass([this.spinnerElement], DISABLE_ICON);\n            showSpinner(this.spinnerElement);\n        }\n    }\n    /**\n     * Hides the spinner loader.\n     *\n     * @returns {void}\n     */\n    hideSpinner() {\n        if (!isNullOrUndefined(this.spinnerElement)) {\n            hideSpinner(this.spinnerElement);\n            removeClass([this.spinnerElement], DISABLE_ICON);\n            if (this.spinnerElement.classList.contains(SPINNER_CLASS$1)) {\n                detach(this.spinnerElement);\n            }\n            else {\n                this.spinnerElement.innerHTML = '';\n            }\n            this.spinnerElement = null;\n        }\n    }\n    updateWrapperText(wrapperType, wrapperData) {\n        if (this.valueTemplate || !this.enableHtmlSanitizer) {\n            wrapperType.innerHTML = wrapperData;\n        }\n        else {\n            wrapperType.innerText = SanitizeHtmlHelper.sanitize(wrapperData);\n        }\n    }\n    updateDelimView() {\n        if (this.delimiterWrapper) {\n            this.hideDelimWrapper();\n        }\n        if (this.chipCollectionWrapper) {\n            this.chipCollectionWrapper.style.display = 'none';\n        }\n        this.viewWrapper.style.display = '';\n        this.viewWrapper.style.width = '';\n        this.viewWrapper.classList.remove(TOTAL_COUNT_WRAPPER$1);\n        if (this.value && this.value.length) {\n            let data = '';\n            let temp;\n            let tempData;\n            let tempIndex = 1;\n            let wrapperleng;\n            let remaining;\n            let downIconWidth = 0;\n            let overAllContainer;\n            this.updateWrapperText(this.viewWrapper, data);\n            const l10nLocale = {\n                noRecordsTemplate: 'No records found',\n                actionFailureTemplate: 'Request failed',\n                overflowCountTemplate: '+${count} more..',\n                totalCountTemplate: '${count} selected'\n            };\n            let l10n = new L10n(this.getLocaleName(), l10nLocale, this.locale);\n            if (l10n.getConstant('actionFailureTemplate') === '') {\n                l10n = new L10n('dropdowns', l10nLocale, this.locale);\n            }\n            if (l10n.getConstant('noRecordsTemplate') === '') {\n                l10n = new L10n('dropdowns', l10nLocale, this.locale);\n            }\n            const remainContent = l10n.getConstant('overflowCountTemplate');\n            const totalContent = l10n.getConstant('totalCountTemplate');\n            const raminElement = this.createElement('span', {\n                className: REMAIN_WRAPPER$1\n            });\n            let remainCompildTemp = remainContent.replace('${count}', this.value.length.toString());\n            raminElement.innerText = remainCompildTemp;\n            this.viewWrapper.appendChild(raminElement);\n            this.renderReactTemplates();\n            const remainSize = raminElement.offsetWidth;\n            remove(raminElement);\n            if (this.showDropDownIcon) {\n                downIconWidth = this.dropIcon.offsetWidth + parseInt(window.getComputedStyle(this.dropIcon).marginRight, 10);\n            }\n            this.checkClearIconWidth();\n            if (!isNullOrUndefined(this.value)) {\n                for (let index = 0; !isNullOrUndefined(this.value[index]); index++) {\n                    data += (index === 0) ? '' : this.delimiterChar + ' ';\n                    temp = this.getOverflowVal(index);\n                    data += temp;\n                    temp = this.viewWrapper.innerHTML;\n                    this.updateWrapperText(this.viewWrapper, data);\n                    wrapperleng = this.viewWrapper.offsetWidth +\n                        parseInt(window.getComputedStyle(this.viewWrapper).paddingRight, 10);\n                    overAllContainer = this.componentWrapper.offsetWidth -\n                        parseInt(window.getComputedStyle(this.componentWrapper).paddingLeft, 10) -\n                        parseInt(window.getComputedStyle(this.componentWrapper).paddingRight, 10);\n                    if ((wrapperleng + downIconWidth + this.clearIconWidth) > overAllContainer) {\n                        if (tempData !== undefined && tempData !== '') {\n                            temp = tempData;\n                            index = tempIndex + 1;\n                        }\n                        this.updateWrapperText(this.viewWrapper, temp);\n                        remaining = this.value.length - index;\n                        wrapperleng = this.viewWrapper.offsetWidth +\n                            parseInt(window.getComputedStyle(this.viewWrapper).paddingRight, 10);\n                        while (((wrapperleng + remainSize + downIconWidth + this.clearIconWidth) > overAllContainer) && wrapperleng !== 0\n                            && this.viewWrapper.innerHTML !== '') {\n                            const textArr = [];\n                            this.viewWrapper.innerHTML = textArr.join(this.delimiterChar);\n                            remaining = this.value.length;\n                            wrapperleng = this.viewWrapper.offsetWidth +\n                                parseInt(window.getComputedStyle(this.viewWrapper).paddingRight, 10);\n                        }\n                        break;\n                    }\n                    else if ((wrapperleng + remainSize + downIconWidth + this.clearIconWidth) <= overAllContainer) {\n                        tempData = data;\n                        tempIndex = index;\n                    }\n                    else if (index === 0) {\n                        tempData = '';\n                        tempIndex = -1;\n                    }\n                }\n            }\n            if (remaining > 0) {\n                const totalWidth = overAllContainer - downIconWidth - this.clearIconWidth;\n                this.viewWrapper.appendChild(this.updateRemainTemplate(raminElement, this.viewWrapper, remaining, remainContent, totalContent, totalWidth));\n                this.updateRemainWidth(this.viewWrapper, totalWidth);\n                this.updateRemainingText(raminElement, downIconWidth, remaining, remainContent, totalContent);\n            }\n        }\n        else {\n            this.viewWrapper.innerHTML = '';\n            this.viewWrapper.style.display = 'none';\n        }\n    }\n    checkClearIconWidth() {\n        if (this.showClearButton) {\n            this.clearIconWidth = this.overAllClear.offsetWidth;\n        }\n    }\n    updateRemainWidth(viewWrapper, totalWidth) {\n        if (viewWrapper.classList.contains(TOTAL_COUNT_WRAPPER$1) && totalWidth < (viewWrapper.offsetWidth +\n            parseInt(window.getComputedStyle(viewWrapper).paddingLeft, 10)\n            + parseInt(window.getComputedStyle(viewWrapper).paddingLeft, 10))) {\n            viewWrapper.style.width = totalWidth + 'px';\n        }\n    }\n    updateRemainTemplate(raminElement, viewWrapper, remaining, remainContent, totalContent, totalWidth) {\n        if (viewWrapper.firstChild && viewWrapper.firstChild.nodeType === 3 && viewWrapper.firstChild.nodeValue === '') {\n            viewWrapper.removeChild(viewWrapper.firstChild);\n        }\n        raminElement.innerHTML = '';\n        let remainTemp = remainContent.replace('${count}', remaining.toString());\n        let totalTemp = totalContent.replace('${count}', remaining.toString());\n        raminElement.innerText = (viewWrapper.firstChild && viewWrapper.firstChild.nodeType === 3) ? remainTemp : totalTemp;\n        if (viewWrapper.firstChild && viewWrapper.firstChild.nodeType === 3) {\n            viewWrapper.classList.remove(TOTAL_COUNT_WRAPPER$1);\n        }\n        else {\n            viewWrapper.classList.add(TOTAL_COUNT_WRAPPER$1);\n            this.updateRemainWidth(viewWrapper, totalWidth);\n        }\n        return raminElement;\n    }\n    updateRemainingText(raminElement, downIconWidth, remaining, remainContent, totalContent) {\n        const overAllContainer = this.componentWrapper.offsetWidth -\n            parseInt(window.getComputedStyle(this.componentWrapper).paddingLeft, 10) -\n            parseInt(window.getComputedStyle(this.componentWrapper).paddingRight, 10);\n        let wrapperleng = this.viewWrapper.offsetWidth + parseInt(window.getComputedStyle(this.viewWrapper).paddingRight, 10);\n        if (((wrapperleng + downIconWidth) >= overAllContainer) && wrapperleng !== 0 && this.viewWrapper.firstChild &&\n            this.viewWrapper.firstChild.nodeType === 3) {\n            while (((wrapperleng + downIconWidth) > overAllContainer) && wrapperleng !== 0 && this.viewWrapper.firstChild &&\n                this.viewWrapper.firstChild.nodeType === 3) {\n                const textArr = this.viewWrapper.firstChild.nodeValue.split(this.delimiterChar);\n                textArr.pop();\n                this.viewWrapper.firstChild.nodeValue = textArr.join(this.delimiterChar);\n                if (this.viewWrapper.firstChild.nodeValue === '') {\n                    this.viewWrapper.removeChild(this.viewWrapper.firstChild);\n                }\n                remaining++;\n                wrapperleng = this.viewWrapper.offsetWidth;\n            }\n            const totalWidth = overAllContainer - downIconWidth;\n            this.updateRemainTemplate(raminElement, this.viewWrapper, remaining, remainContent, totalContent, totalWidth);\n        }\n    }\n    getOverflowVal(index) {\n        let temp;\n        if (this.mainData && this.mainData.length) {\n            if (this.mode === 'CheckBox') {\n                const newTemp = this.listData;\n                this.listData = this.mainData;\n                temp = this.getTextByValue(this.value[index]);\n                this.listData = newTemp;\n            }\n            else {\n                temp = this.getTextByValue(this.value[index]);\n            }\n        }\n        else {\n            temp = this.value[index];\n        }\n        return temp;\n    }\n    unWireEvent() {\n        EventHandler.remove(this.componentWrapper, 'mousedown', this.wrapperClick);\n        EventHandler.remove(window, 'resize', this.windowResize);\n        EventHandler.remove(this.inputElement, 'focus', this.focusInHandler);\n        EventHandler.remove(this.inputElement, 'keydown', this.onKeyDown);\n        if (this.mode !== 'CheckBox') {\n            EventHandler.remove(this.inputElement, 'input', this.onInput);\n        }\n        EventHandler.remove(this.inputElement, 'keyup', this.keyUp);\n        const formElement = closest(this.inputElement, 'form');\n        if (formElement) {\n            EventHandler.remove(formElement, 'reset', this.resetValueHandler);\n        }\n        EventHandler.remove(this.inputElement, 'blur', this.onBlurHandler);\n        EventHandler.remove(this.componentWrapper, 'mouseover', this.mouseIn);\n        EventHandler.remove(this.componentWrapper, 'mouseout', this.mouseOut);\n        EventHandler.remove(this.overAllClear, 'mousedown', this.clearAll);\n        EventHandler.remove(this.inputElement, 'paste', this.pasteHandler);\n    }\n    selectAllItem(state, event, list) {\n        let li;\n        li = this.list.querySelectorAll(state ?\n            'li.e-list-item:not([aria-selected=\"true\"]):not(.e-reorder-hide)' :\n            'li.e-list-item[aria-selected=\"true\"]:not(.e-reorder-hide)');\n        if (this.value && this.value.length && event && event.target\n            && closest(event.target, '.e-close-hooker') && this.allowFiltering) {\n            li = this.mainList.querySelectorAll(state ?\n                'li.e-list-item:not([aria-selected=\"true\"]):not(.e-reorder-hide)' :\n                'li.e-list-item[aria-selected=\"true\"]:not(.e-reorder-hide)');\n        }\n        if (this.enableGroupCheckBox && this.mode === 'CheckBox' && !isNullOrUndefined(this.fields.groupBy)) {\n            let target = (event ? (this.groupTemplate ? closest(event.target, '.e-list-group-item') : event.target) : null);\n            target = (event && event.keyCode === 32) ? list : target;\n            target = (target && target.classList.contains('e-frame')) ? target.parentElement.parentElement : target;\n            if (target && target.classList.contains('e-list-group-item')) {\n                let listElement = target.nextElementSibling;\n                if (isNullOrUndefined(listElement)) {\n                    return;\n                }\n                while (listElement.classList.contains('e-list-item')) {\n                    if (state) {\n                        if (!listElement.firstElementChild.lastElementChild.classList.contains('e-check')) {\n                            let selectionLimit = this.value && this.value.length ? this.value.length : 0;\n                            if (listElement.classList.contains('e-active')) {\n                                selectionLimit -= 1;\n                            }\n                            if (selectionLimit < this.maximumSelectionLength) {\n                                this.updateListSelection(listElement, event);\n                            }\n                        }\n                    }\n                    else {\n                        if (listElement.firstElementChild.lastElementChild.classList.contains('e-check')) {\n                            this.updateListSelection(listElement, event);\n                        }\n                    }\n                    listElement = listElement.nextElementSibling;\n                    if (listElement == null) {\n                        break;\n                    }\n                }\n                if (target.classList.contains('e-list-group-item')) {\n                    const focusedElement = this.list.getElementsByClassName('e-item-focus')[0];\n                    if (focusedElement) {\n                        focusedElement.classList.remove('e-item-focus');\n                    }\n                    if (state) {\n                        target.classList.add('e-active');\n                    }\n                    else {\n                        target.classList.remove('e-active');\n                    }\n                    target.classList.add('e-item-focus');\n                }\n                this.textboxValueUpdate();\n                this.checkPlaceholderSize();\n                if (!this.changeOnBlur && event) {\n                    this.updateValueState(event, this.value, this.tempValues);\n                }\n            }\n            else {\n                this.updateValue(event, li, state);\n            }\n        }\n        else {\n            this.updateValue(event, li, state);\n        }\n    }\n    updateValue(event, li, state) {\n        const length = li.length;\n        const beforeSelectArgs = {\n            event: event,\n            items: state ? li : [],\n            itemData: state ? this.listData : [],\n            isInteracted: event ? true : false,\n            isChecked: state,\n            preventSelectEvent: false\n        };\n        this.trigger('beforeSelectAll', beforeSelectArgs);\n        if (li && li.length) {\n            let index = 0;\n            let count = 0;\n            if (this.enableGroupCheckBox) {\n                count = state ? this.maximumSelectionLength - (this.value ? this.value.length : 0) : li.length;\n            }\n            else {\n                count = state ? this.maximumSelectionLength - (this.value ? this.value.length : 0) : this.maximumSelectionLength;\n            }\n            if (!beforeSelectArgs.preventSelectEvent) {\n                while (index < length && index <= 50 && index < count) {\n                    this.updateListSelection(li[index], event, length - index);\n                    if (this.enableGroupCheckBox) {\n                        this.findGroupStart(li[index]);\n                    }\n                    index++;\n                }\n                if (length > 50) {\n                    setTimeout(() => {\n                        while (index < length && index < count) {\n                            this.updateListSelection(li[index], event, length - index);\n                            if (this.enableGroupCheckBox) {\n                                this.findGroupStart(li[index]);\n                            }\n                            index++;\n                        }\n                        this.updatedataValueItems(event);\n                        if (!this.changeOnBlur) {\n                            this.updateValueState(event, this.value, this.tempValues);\n                            this.isSelectAll = this.isSelectAll ? !this.isSelectAll : this.isSelectAll;\n                        }\n                        this.updateHiddenElement();\n                    }, 0);\n                }\n            }\n            else {\n                for (let i = 0; i < li.length && i < count; i++) {\n                    this.removeHover();\n                    let customVal = li[i].getAttribute('data-value');\n                    let value = this.getFormattedValue(customVal);\n                    let mainElement = this.mainList ? this.mainList.querySelectorAll(state ?\n                        'li.e-list-item:not([aria-selected=\"true\"]):not(.e-reorder-hide)' :\n                        'li.e-list-item[aria-selected=\"true\"]:not(.e-reorder-hide)')[i] : null;\n                    if (state) {\n                        this.value = !this.value ? [] : this.value;\n                        if (this.value.indexOf(value) < 0) {\n                            this.setProperties({ value: [].concat([], this.value, [value]) }, true);\n                        }\n                        this.removeFocus();\n                        this.addListSelection(li[i], mainElement);\n                        this.updateChipStatus();\n                        this.checkMaxSelection();\n                    }\n                    else {\n                        this.removeAllItems(value, event, false, li[i], mainElement);\n                    }\n                    if (this.enableGroupCheckBox) {\n                        this.findGroupStart(li[i]);\n                    }\n                }\n                if (!state) {\n                    const limit = this.value && this.value.length ? this.value.length : 0;\n                    if (limit < this.maximumSelectionLength) {\n                        const collection = this.list.querySelectorAll('li.'\n                            + dropDownBaseClasses.li + ':not(.e-active)');\n                        removeClass(collection, 'e-disable');\n                    }\n                }\n                const args = {\n                    event: event,\n                    items: state ? li : [],\n                    itemData: state ? this.listData : [],\n                    isInteracted: event ? true : false,\n                    isChecked: state\n                };\n                this.trigger('selectedAll', args);\n            }\n        }\n        this.updatedataValueItems(event);\n        this.checkPlaceholderSize();\n        if (length <= 50 && !beforeSelectArgs.preventSelectEvent) {\n            if (!this.changeOnBlur) {\n                this.updateValueState(event, this.value, this.tempValues);\n                this.isSelectAll = this.isSelectAll ? !this.isSelectAll : this.isSelectAll;\n            }\n            this.updateHiddenElement();\n        }\n    }\n    updateHiddenElement() {\n        let hiddenValue = '';\n        let wrapperText = '';\n        let data = '';\n        const text = [];\n        if (this.mode === 'CheckBox') {\n            this.value.map((value, index) => {\n                hiddenValue += '<option selected value =\"' + value + '\">' + index + '</option>';\n                if (this.listData) {\n                    data = this.getTextByValue(value);\n                }\n                else {\n                    data = value;\n                }\n                wrapperText += data + this.delimiterChar + ' ';\n                text.push(data);\n            });\n            this.hiddenElement.innerHTML = hiddenValue;\n            this.updateWrapperText(this.delimiterWrapper, wrapperText);\n            this.delimiterWrapper.setAttribute('id', getUniqueID('delim_val'));\n            this.inputElement.setAttribute('aria-describedby', this.delimiterWrapper.id);\n            this.inputElement.setAttribute('aria-labelledby', this.delimiterWrapper.id);\n            this.setProperties({ text: text.toString() }, true);\n            this.refreshInputHight();\n            this.refreshPlaceHolder();\n        }\n    }\n    updatedataValueItems(event) {\n        this.deselectHeader();\n        this.textboxValueUpdate(event);\n    }\n    textboxValueUpdate(event) {\n        const isRemoveAll = event && event.target && (closest(event.target, '.e-selectall-parent')\n            || closest(event.target, '.e-close-hooker'));\n        if (this.mode !== 'Box' && !this.isPopupOpen() && !(this.mode === 'CheckBox' && (this.isSelectAll || isRemoveAll))) {\n            this.updateDelimView();\n        }\n        else {\n            this.searchWrapper.classList.remove(ZERO_SIZE);\n        }\n        if (this.mode === 'CheckBox') {\n            this.updateDelimView();\n            if (!(isRemoveAll || this.isSelectAll)) {\n                this.updateDelimeter(this.delimiterChar, event);\n            }\n            this.refreshInputHight();\n        }\n        else {\n            this.updateDelimeter(this.delimiterChar, event);\n        }\n        this.refreshPlaceHolder();\n    }\n    setZIndex() {\n        if (this.popupObj) {\n            this.popupObj.setProperties({ 'zIndex': this.zIndex });\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    updateDataSource(prop) {\n        if (isNullOrUndefined(this.list)) {\n            this.renderPopup();\n        }\n        else {\n            this.resetList(this.dataSource);\n        }\n        if (this.value && this.value.length) {\n            this.setProperties({ 'value': this.value });\n            this.refreshSelection();\n        }\n    }\n    onLoadSelect() {\n        this.setDynValue = true;\n        this.renderPopup();\n    }\n    selectAllItems(state, event) {\n        if (isNullOrUndefined(this.list)) {\n            this.selectAllAction = () => {\n                if (this.mode === 'CheckBox' && this.showSelectAll) {\n                    const args = {\n                        module: 'CheckBoxSelection',\n                        enable: this.mode === 'CheckBox',\n                        value: state ? 'check' : 'uncheck'\n                    };\n                    this.notify('checkSelectAll', args);\n                }\n                this.selectAllItem(state, event);\n                this.selectAllAction = null;\n            };\n            super.render();\n        }\n        else {\n            this.selectAllAction = null;\n            if (this.mode === 'CheckBox' && this.showSelectAll) {\n                const args = {\n                    value: state ? 'check' : 'uncheck',\n                    enable: this.mode === 'CheckBox',\n                    module: 'CheckBoxSelection'\n                };\n                this.notify('checkSelectAll', args);\n            }\n            this.selectAllItem(state, event);\n        }\n    }\n    /**\n     * Get the properties to be maintained in the persisted state.\n     *\n     * @returns {string} Returns the persisted data of the component.\n     */\n    getPersistData() {\n        return this.addOnPersist(['value']);\n    }\n    /**\n     * Dynamically change the value of properties.\n     *\n     * @param {MultiSelectModel} newProp - Returns the dynamic property value of the component.\n     * @param {MultiSelectModel} oldProp - Returns the previous property value of the component.\n     * @private\n     * @returns {void}\n     */\n    onPropertyChanged(newProp, oldProp) {\n        if (newProp.dataSource && !isNullOrUndefined(Object.keys(newProp.dataSource))\n            || newProp.query && !isNullOrUndefined(Object.keys(newProp.query))) {\n            this.mainList = null;\n            this.mainData = null;\n            this.isFirstClick = false;\n            this.isDynamicDataChange = true;\n        }\n        if (this.getModuleName() === 'multiselect') {\n            this.filterAction = false;\n            this.setUpdateInitial(['fields', 'query', 'dataSource'], newProp);\n        }\n        for (const prop of Object.keys(newProp)) {\n            switch (prop) {\n                case 'query':\n                case 'dataSource':\n                    if (this.mode === 'CheckBox' && this.showSelectAll) {\n                        if (!isNullOrUndefined(this.popupObj)) {\n                            this.popupObj.destroy();\n                            this.popupObj = null;\n                        }\n                        this.renderPopup();\n                    }\n                    break;\n                case 'htmlAttributes':\n                    this.updateHTMLAttribute();\n                    break;\n                case 'showClearButton':\n                    this.updateClearButton(newProp.showClearButton);\n                    break;\n                case 'text':\n                    this.updateVal(this.value, this.value, 'text');\n                    break;\n                case 'value':\n                    this.updateVal(this.value, oldProp.value, 'value');\n                    this.addValidInputClass();\n                    if (!this.closePopupOnSelect && this.isPopupOpen()) {\n                        this.refreshPopup();\n                    }\n                    this.preventChange = this.isAngular && this.preventChange ? !this.preventChange : this.preventChange;\n                    break;\n                case 'width':\n                    this.setWidth(newProp.width);\n                    this.popupObj.setProperties({ width: this.calcPopupWidth() });\n                    break;\n                case 'placeholder':\n                    this.refreshPlaceHolder();\n                    break;\n                case 'filterBarPlaceholder':\n                    if (this.allowFiltering) {\n                        this.notify('filterBarPlaceholder', { filterBarPlaceholder: newProp.filterBarPlaceholder });\n                    }\n                    break;\n                case 'delimiterChar':\n                    if (this.mode !== 'Box') {\n                        this.updateDelimView();\n                    }\n                    this.updateData(newProp.delimiterChar);\n                    break;\n                case 'cssClass':\n                    this.updateOldPropCssClass(oldProp.cssClass);\n                    this.updateCssClass();\n                    break;\n                case 'enableRtl':\n                    this.enableRTL(newProp.enableRtl);\n                    super.onPropertyChanged(newProp, oldProp);\n                    break;\n                case 'readonly':\n                    this.updateReadonly(newProp.readonly);\n                    this.hidePopup();\n                    break;\n                case 'enabled':\n                    this.hidePopup();\n                    this.enable(newProp.enabled);\n                    break;\n                case 'showSelectAll':\n                    if (this.popupObj) {\n                        this.popupObj.destroy();\n                        this.popupObj = null;\n                    }\n                    this.renderPopup();\n                    break;\n                case 'showDropDownIcon':\n                    this.dropDownIcon();\n                    break;\n                case 'floatLabelType':\n                    this.setFloatLabelType();\n                    this.addValidInputClass();\n                    break;\n                case 'enableSelectionOrder':\n                    break;\n                case 'selectAllText':\n                    this.notify('selectAllText', false);\n                    break;\n                case 'popupHeight':\n                    if (this.popupObj) {\n                        let overAllHeight = parseInt(this.popupHeight, 10);\n                        if (this.popupHeight !== 'auto') {\n                            this.list.style.maxHeight = formatUnit(overAllHeight);\n                            this.popupWrapper.style.maxHeight = formatUnit(this.popupHeight);\n                        }\n                        else {\n                            this.list.style.maxHeight = formatUnit(this.popupHeight);\n                        }\n                    }\n                    break;\n                case 'headerTemplate':\n                case 'footerTemplate':\n                    this.reInitializePoup();\n                    break;\n                case 'allowFiltering':\n                    if (this.mode === 'CheckBox' && this.popupObj) {\n                        this.reInitializePoup();\n                    }\n                    this.updateSelectElementData(this.allowFiltering);\n                    break;\n                default:\n                    {\n                        // eslint-disable-next-line max-len\n                        const msProps = this.getPropObject(prop, newProp, oldProp);\n                        super.onPropertyChanged(msProps.newProperty, msProps.oldProperty);\n                    }\n                    break;\n            }\n        }\n    }\n    reInitializePoup() {\n        if (this.popupObj) {\n            this.popupObj.destroy();\n            this.popupObj = null;\n        }\n        this.renderPopup();\n    }\n    presentItemValue(ulElement) {\n        let valuecheck = [];\n        for (let i = 0; i < this.value.length; i++) {\n            let checkEle = this.findListElement(((this.allowFiltering && !isNullOrUndefined(this.mainList)) ? this.mainList : ulElement), 'li', 'data-value', this.value[i]);\n            if (!checkEle) {\n                valuecheck.push(this.value[i]);\n            }\n        }\n        return valuecheck;\n    }\n    ;\n    addNonPresentItems(valuecheck, ulElement, list, event) {\n        this.dataSource.executeQuery(this.getForQuery(valuecheck)).then((e) => {\n            this.addItem(e.result, list.length);\n            this.updateActionList(ulElement, list, event);\n        });\n    }\n    ;\n    updateVal(newProp, oldProp, prop) {\n        if (!this.list) {\n            this.onLoadSelect();\n        }\n        else if ((this.dataSource instanceof DataManager) && (!this.listData || !(this.mainList && this.mainData))) {\n            this.onLoadSelect();\n        }\n        else {\n            let valuecheck = [];\n            if (!isNullOrUndefined(this.value) && !this.allowCustomValue) {\n                valuecheck = this.presentItemValue(this.ulElement);\n            }\n            if (prop == 'value' && valuecheck.length > 0 && this.dataSource instanceof DataManager && !isNullOrUndefined(this.value)\n                && this.listData != null) {\n                this.mainData = null;\n                this.setDynValue = true;\n                this.addNonPresentItems(valuecheck, this.ulElement, this.listData);\n            }\n            else {\n                if (prop === 'text') {\n                    this.initialTextUpdate();\n                    newProp = this.value;\n                }\n                if (isNullOrUndefined(this.value) || this.value.length === 0) {\n                    this.tempValues = oldProp;\n                }\n                // eslint-disable-next-line\n                if (this.allowCustomValue && (this.mode === 'Default' || this.mode === 'Box') && this.isReact && this.inputFocus\n                    && this.isPopupOpen() && this.mainData !== this.listData) {\n                    const list = this.mainList.cloneNode ? this.mainList.cloneNode(true) : this.mainList;\n                    this.onActionComplete(list, this.mainData);\n                }\n                this.initialValueUpdate();\n                if (this.mode !== 'Box' && !this.inputFocus) {\n                    this.updateDelimView();\n                }\n                if (!this.inputFocus) {\n                    this.refreshInputHight();\n                }\n                this.refreshPlaceHolder();\n                if (this.mode !== 'CheckBox' && this.changeOnBlur) {\n                    this.updateValueState(null, newProp, oldProp);\n                }\n                this.checkPlaceholderSize();\n            }\n        }\n        if (!this.changeOnBlur) {\n            this.updateValueState(null, newProp, oldProp);\n        }\n    }\n    /**\n     * Adds a new item to the multiselect popup list. By default, new item appends to the list as the last item,\n     * but you can insert based on the index parameter.\n     *\n     * @param  { Object[] } items - Specifies an array of JSON data or a JSON data.\n     * @param { number } itemIndex - Specifies the index to place the newly added item in the popup list.\n     * @returns {void}\n     */\n    addItem(items, itemIndex) {\n        super.addItem(items, itemIndex);\n    }\n    /**\n     * Hides the popup, if the popup in a open state.\n     *\n     * @returns {void}\n     */\n    hidePopup(e) {\n        const delay = 100;\n        if (this.isPopupOpen()) {\n            const animModel = {\n                name: 'FadeOut',\n                duration: 100,\n                delay: delay ? delay : 0\n            };\n            const eventArgs = { popup: this.popupObj, cancel: false, animation: animModel, event: e || null };\n            this.trigger('close', eventArgs, (eventArgs) => {\n                if (!eventArgs.cancel) {\n                    if (this.fields.groupBy && this.mode !== 'CheckBox' && this.fixedHeaderElement) {\n                        remove(this.fixedHeaderElement);\n                        this.fixedHeaderElement = null;\n                    }\n                    this.beforePopupOpen = false;\n                    this.overAllWrapper.classList.remove(iconAnimation);\n                    this.popupObj.hide(new Animation(eventArgs.animation));\n                    attributes(this.inputElement, { 'aria-expanded': 'false' });\n                    if (this.allowFiltering) {\n                        this.notify('inputFocus', { module: 'CheckBoxSelection', enable: this.mode === 'CheckBox', value: 'clear' });\n                    }\n                    this.popupObj.hide();\n                    removeClass([document.body, this.popupObj.element], 'e-popup-full-page');\n                    EventHandler.remove(this.list, 'keydown', this.onKeyDown);\n                }\n            });\n        }\n    }\n    /**\n     * Shows the popup, if the popup in a closed state.\n     *\n     * @returns {void}\n     */\n    showPopup() {\n        if (!this.enabled) {\n            return;\n        }\n        const args = { cancel: false };\n        this.trigger('beforeOpen', args, (args) => {\n            if (!args.cancel) {\n                if (!this.ulElement) {\n                    this.beforePopupOpen = true;\n                    super.render();\n                    if (this.mode === 'CheckBox' && Browser.isDevice && this.allowFiltering) {\n                        this.notify('popupFullScreen', { module: 'CheckBoxSelection', enable: this.mode === 'CheckBox' });\n                    }\n                    return;\n                }\n                if (this.mode === 'CheckBox' && Browser.isDevice && this.allowFiltering) {\n                    this.notify('popupFullScreen', { module: 'CheckBoxSelection', enable: this.mode === 'CheckBox' });\n                }\n                const mainLiLength = this.ulElement.querySelectorAll('li.' + 'e-list-item').length;\n                const liLength = this.ulElement.querySelectorAll('li.'\n                    + dropDownBaseClasses.li + '.' + HIDE_LIST).length;\n                if (mainLiLength > 0 && (mainLiLength === liLength) && (liLength === this.mainData.length) && !(this.targetElement() !== '' && this.allowCustomValue)) {\n                    this.beforePopupOpen = false;\n                    return;\n                }\n                this.onPopupShown();\n            }\n        });\n    }\n    /**\n     * Based on the state parameter, entire list item will be selected/deselected.\n     * parameter\n     * `true`   - Selects entire list items.\n     * `false`  - Un Selects entire list items.\n     *\n     * @param {boolean} state - if it’s true then Selects the entire list items. If it’s false the Unselects entire list items.\n     * @returns {void}\n     */\n    selectAll(state) {\n        this.isSelectAll = true;\n        this.selectAllItems(state);\n    }\n    /**\n     * Return the module name of this component.\n     *\n     * @private\n     * @returns {string} Return the module name of this component.\n     */\n    getModuleName() {\n        return 'multiselect';\n    }\n    /**\n     * Allows you to clear the selected values from the Multiselect component.\n     *\n     * @returns {void}\n     */\n    clear() {\n        this.selectAll(false);\n        if (this.value && this.value.length) {\n            setTimeout(() => {\n                this.setProperties({ value: null }, true);\n            }, 0);\n        }\n        else {\n            this.setProperties({ value: null }, true);\n        }\n    }\n    /**\n     * To Initialize the control rendering\n     *\n     * @private\n     * @returns {void}\n     */\n    render() {\n        this.setDynValue = this.initStatus = false;\n        this.isSelectAll = false;\n        this.searchWrapper = this.createElement('span', { className: SEARCHBOX_WRAPPER + ' ' + ((this.mode === 'Box') ? BOX_ELEMENT : '') });\n        this.viewWrapper = this.createElement('span', { className: DELIMITER_VIEW + ' ' + DELIMITER_WRAPPER, styles: 'display:none;' });\n        this.overAllClear = this.createElement('span', {\n            className: CLOSEICON_CLASS$1, styles: 'display:none;'\n        });\n        this.componentWrapper = this.createElement('div', { className: ELEMENT_WRAPPER });\n        this.overAllWrapper = this.createElement('div', { className: OVER_ALL_WRAPPER });\n        if (this.mode === 'CheckBox') {\n            addClass([this.overAllWrapper], 'e-checkbox');\n        }\n        if (Browser.isDevice) {\n            this.componentWrapper.classList.add(ELEMENT_MOBILE_WRAPPER);\n        }\n        this.setWidth(this.width);\n        this.overAllWrapper.appendChild(this.componentWrapper);\n        this.popupWrapper = this.createElement('div', { id: this.element.id + '_popup', className: POPUP_WRAPPER });\n        if (this.mode === 'Delimiter' || this.mode === 'CheckBox') {\n            this.delimiterWrapper = this.createElement('span', { className: DELIMITER_WRAPPER, styles: 'display:none' });\n            this.componentWrapper.appendChild(this.delimiterWrapper);\n        }\n        else {\n            this.chipCollectionWrapper = this.createElement('span', {\n                className: CHIP_WRAPPER$1,\n                styles: 'display:none'\n            });\n            if (this.mode === 'Default') {\n                this.chipCollectionWrapper.setAttribute('id', getUniqueID('chip_default'));\n            }\n            else if (this.mode === 'Box') {\n                this.chipCollectionWrapper.setAttribute('id', getUniqueID('chip_box'));\n            }\n            this.componentWrapper.appendChild(this.chipCollectionWrapper);\n        }\n        if (this.mode !== 'Box') {\n            this.componentWrapper.appendChild(this.viewWrapper);\n        }\n        this.componentWrapper.appendChild(this.searchWrapper);\n        if (this.showClearButton && !Browser.isDevice) {\n            this.componentWrapper.appendChild(this.overAllClear);\n        }\n        else {\n            this.componentWrapper.classList.add(CLOSE_ICON_HIDE);\n        }\n        this.dropDownIcon();\n        this.inputElement = this.createElement('input', {\n            className: INPUT_ELEMENT,\n            attrs: {\n                spellcheck: 'false',\n                type: 'text',\n                autocomplete: 'off',\n                tabindex: '0'\n            }\n        });\n        if (this.mode === 'Default' || this.mode === 'Box') {\n            this.inputElement.setAttribute('aria-describedby', this.chipCollectionWrapper.id);\n            this.inputElement.setAttribute('aria-labelledby', this.chipCollectionWrapper.id);\n        }\n        if (this.element.tagName !== this.getNgDirective()) {\n            this.element.style.display = 'none';\n        }\n        if (this.element.tagName === this.getNgDirective()) {\n            this.element.appendChild(this.overAllWrapper);\n            this.searchWrapper.appendChild(this.inputElement);\n        }\n        else {\n            this.element.parentElement.insertBefore(this.overAllWrapper, this.element);\n            this.searchWrapper.appendChild(this.inputElement);\n            this.searchWrapper.appendChild(this.element);\n            this.element.removeAttribute('tabindex');\n        }\n        if (this.floatLabelType !== 'Never') {\n            createFloatLabel(this.overAllWrapper, this.searchWrapper, this.element, this.inputElement, this.value, this.floatLabelType, this.placeholder);\n        }\n        else if (this.floatLabelType === 'Never') {\n            this.refreshPlaceHolder();\n        }\n        this.addValidInputClass();\n        this.element.style.opacity = '';\n        const id = this.element.getAttribute('id') ? this.element.getAttribute('id') : getUniqueID('ej2_dropdownlist');\n        this.element.id = id;\n        this.hiddenElement = this.createElement('select', {\n            attrs: { 'aria-hidden': 'true', 'class': HIDDEN_ELEMENT, 'tabindex': '-1', 'multiple': '' }\n        });\n        this.componentWrapper.appendChild(this.hiddenElement);\n        this.validationAttribute(this.element, this.hiddenElement);\n        if (this.mode !== 'CheckBox') {\n            this.hideOverAllClear();\n        }\n        this.wireEvent();\n        this.enable(this.enabled);\n        this.enableRTL(this.enableRtl);\n        this.checkInitialValue();\n        if (this.element.hasAttribute('data-val')) {\n            this.element.setAttribute('data-val', 'false');\n        }\n        this.renderComplete();\n    }\n    checkInitialValue() {\n        const isData = this.dataSource instanceof Array ? (this.dataSource.length > 0)\n            : !isNullOrUndefined(this.dataSource);\n        if (!(this.value && this.value.length) &&\n            isNullOrUndefined(this.text) &&\n            !isData &&\n            this.element.tagName === 'SELECT' &&\n            this.element.options.length > 0) {\n            const optionsElement = this.element.options;\n            const valueCol = [];\n            let textCol = '';\n            for (let index = 0, optionsLen = optionsElement.length; index < optionsLen; index++) {\n                const opt = optionsElement[index];\n                if (!isNullOrUndefined(opt.getAttribute('selected'))) {\n                    if (opt.getAttribute('value')) {\n                        valueCol.push(opt.getAttribute('value'));\n                    }\n                    else {\n                        textCol += (opt.text + this.delimiterChar);\n                    }\n                }\n            }\n            if (valueCol.length > 0) {\n                this.setProperties({ value: valueCol }, true);\n            }\n            else if (textCol !== '') {\n                this.setProperties({ text: textCol }, true);\n            }\n            if (valueCol.length > 0 || textCol !== '') {\n                this.refreshInputHight();\n                this.refreshPlaceHolder();\n            }\n        }\n        if ((this.value && this.value.length) || !isNullOrUndefined(this.text)) {\n            if (!this.list) {\n                super.render();\n            }\n        }\n        if (!isNullOrUndefined(this.text) && (isNullOrUndefined(this.value) || this.value.length === 0)) {\n            this.initialTextUpdate();\n        }\n        if (this.value && this.value.length) {\n            if (!(this.dataSource instanceof DataManager)) {\n                this.initialValueUpdate();\n                this.initialUpdate();\n            }\n            else {\n                this.setInitialValue = () => {\n                    this.initStatus = false;\n                    this.initialValueUpdate();\n                    this.initialUpdate();\n                    this.setInitialValue = null;\n                    this.initStatus = true;\n                };\n            }\n            this.updateTempValue();\n        }\n        else {\n            this.initialUpdate();\n        }\n        this.initStatus = true;\n        this.checkAutoFocus();\n        if (!isNullOrUndefined(this.text)) {\n            this.element.setAttribute('data-initial-value', this.text);\n        }\n    }\n    checkAutoFocus() {\n        if (this.element.hasAttribute('autofocus')) {\n            this.inputElement.focus();\n        }\n    }\n    setFloatLabelType() {\n        removeFloating(this.overAllWrapper, this.componentWrapper, this.searchWrapper, this.inputElement, this.value, this.floatLabelType, this.placeholder);\n        if (this.floatLabelType !== 'Never') {\n            createFloatLabel(this.overAllWrapper, this.searchWrapper, this.element, this.inputElement, this.value, this.floatLabelType, this.placeholder);\n        }\n    }\n    addValidInputClass() {\n        if ((!isNullOrUndefined(this.value) && this.value.length) || this.floatLabelType === 'Always') {\n            addClass([this.overAllWrapper], 'e-valid-input');\n        }\n        else {\n            removeClass([this.overAllWrapper], 'e-valid-input');\n        }\n    }\n    dropDownIcon() {\n        if (this.showDropDownIcon) {\n            this.dropIcon = this.createElement('span', { className: dropdownIcon });\n            this.componentWrapper.appendChild(this.dropIcon);\n            addClass([this.componentWrapper], ['e-down-icon']);\n        }\n        else {\n            if (!isNullOrUndefined(this.dropIcon)) {\n                this.dropIcon.parentElement.removeChild(this.dropIcon);\n                removeClass([this.componentWrapper], ['e-down-icon']);\n            }\n        }\n    }\n    initialUpdate() {\n        if (this.mode !== 'Box' && !(this.setDynValue && this.mode === 'Default' && this.inputFocus)) {\n            this.updateDelimView();\n        }\n        this.updateCssClass();\n        this.updateHTMLAttribute();\n        this.updateReadonly(this.readonly);\n        this.refreshInputHight();\n        this.checkPlaceholderSize();\n    }\n    /**\n     * Removes the component from the DOM and detaches all its related event handlers. Also it removes the attributes and classes.\n     *\n     * @method destroy\n     * @returns {void}\n     */\n    destroy() {\n        // eslint-disable-next-line\n        if (this.isReact) {\n            this.clearTemplate();\n        }\n        if (this.popupObj) {\n            this.popupObj.hide();\n        }\n        this.notify(destroy, {});\n        this.unwireListEvents();\n        this.unWireEvent();\n        this.list = null;\n        this.popupObj = null;\n        this.mainList = null;\n        this.mainData = null;\n        this.filterParent = null;\n        this.ulElement = null;\n        this.mainListCollection = null;\n        super.destroy();\n        const temp = ['readonly', 'aria-disabled', 'aria-placeholder', 'placeholder'];\n        let length = temp.length;\n        while (length > 0) {\n            this.inputElement.removeAttribute(temp[length - 1]);\n            length--;\n        }\n        this.element.removeAttribute('data-initial-value');\n        this.element.style.display = 'block';\n        if (this.overAllWrapper.parentElement) {\n            if (this.overAllWrapper.parentElement.tagName === this.getNgDirective()) {\n                remove(this.overAllWrapper);\n            }\n            else {\n                this.overAllWrapper.parentElement.insertBefore(this.element, this.overAllWrapper);\n                remove(this.overAllWrapper);\n            }\n        }\n    }\n};\n__decorate$5([\n    Complex({ text: null, value: null, iconCss: null, groupBy: null }, FieldSettings)\n], MultiSelect.prototype, \"fields\", void 0);\n__decorate$5([\n    Property(false)\n], MultiSelect.prototype, \"enablePersistence\", void 0);\n__decorate$5([\n    Property(null)\n], MultiSelect.prototype, \"groupTemplate\", void 0);\n__decorate$5([\n    Property('No records found')\n], MultiSelect.prototype, \"noRecordsTemplate\", void 0);\n__decorate$5([\n    Property('Request failed')\n], MultiSelect.prototype, \"actionFailureTemplate\", void 0);\n__decorate$5([\n    Property('None')\n], MultiSelect.prototype, \"sortOrder\", void 0);\n__decorate$5([\n    Property(true)\n], MultiSelect.prototype, \"enabled\", void 0);\n__decorate$5([\n    Property(false)\n], MultiSelect.prototype, \"enableHtmlSanitizer\", void 0);\n__decorate$5([\n    Property([])\n], MultiSelect.prototype, \"dataSource\", void 0);\n__decorate$5([\n    Property(null)\n], MultiSelect.prototype, \"query\", void 0);\n__decorate$5([\n    Property('StartsWith')\n], MultiSelect.prototype, \"filterType\", void 0);\n__decorate$5([\n    Property(1000)\n], MultiSelect.prototype, \"zIndex\", void 0);\n__decorate$5([\n    Property(false)\n], MultiSelect.prototype, \"ignoreAccent\", void 0);\n__decorate$5([\n    Property()\n], MultiSelect.prototype, \"locale\", void 0);\n__decorate$5([\n    Property(false)\n], MultiSelect.prototype, \"enableGroupCheckBox\", void 0);\n__decorate$5([\n    Property(null)\n], MultiSelect.prototype, \"cssClass\", void 0);\n__decorate$5([\n    Property('100%')\n], MultiSelect.prototype, \"width\", void 0);\n__decorate$5([\n    Property('300px')\n], MultiSelect.prototype, \"popupHeight\", void 0);\n__decorate$5([\n    Property('100%')\n], MultiSelect.prototype, \"popupWidth\", void 0);\n__decorate$5([\n    Property(null)\n], MultiSelect.prototype, \"placeholder\", void 0);\n__decorate$5([\n    Property(null)\n], MultiSelect.prototype, \"filterBarPlaceholder\", void 0);\n__decorate$5([\n    Property({})\n], MultiSelect.prototype, \"htmlAttributes\", void 0);\n__decorate$5([\n    Property(null)\n], MultiSelect.prototype, \"valueTemplate\", void 0);\n__decorate$5([\n    Property(null)\n], MultiSelect.prototype, \"headerTemplate\", void 0);\n__decorate$5([\n    Property(null)\n], MultiSelect.prototype, \"footerTemplate\", void 0);\n__decorate$5([\n    Property(null)\n], MultiSelect.prototype, \"itemTemplate\", void 0);\n__decorate$5([\n    Property(null)\n], MultiSelect.prototype, \"allowFiltering\", void 0);\n__decorate$5([\n    Property(true)\n], MultiSelect.prototype, \"changeOnBlur\", void 0);\n__decorate$5([\n    Property(false)\n], MultiSelect.prototype, \"allowCustomValue\", void 0);\n__decorate$5([\n    Property(true)\n], MultiSelect.prototype, \"showClearButton\", void 0);\n__decorate$5([\n    Property(1000)\n], MultiSelect.prototype, \"maximumSelectionLength\", void 0);\n__decorate$5([\n    Property(false)\n], MultiSelect.prototype, \"readonly\", void 0);\n__decorate$5([\n    Property(null)\n], MultiSelect.prototype, \"text\", void 0);\n__decorate$5([\n    Property(null)\n], MultiSelect.prototype, \"value\", void 0);\n__decorate$5([\n    Property(true)\n], MultiSelect.prototype, \"hideSelectedItem\", void 0);\n__decorate$5([\n    Property(true)\n], MultiSelect.prototype, \"closePopupOnSelect\", void 0);\n__decorate$5([\n    Property('Default')\n], MultiSelect.prototype, \"mode\", void 0);\n__decorate$5([\n    Property(',')\n], MultiSelect.prototype, \"delimiterChar\", void 0);\n__decorate$5([\n    Property(true)\n], MultiSelect.prototype, \"ignoreCase\", void 0);\n__decorate$5([\n    Property(false)\n], MultiSelect.prototype, \"showDropDownIcon\", void 0);\n__decorate$5([\n    Property('Never')\n], MultiSelect.prototype, \"floatLabelType\", void 0);\n__decorate$5([\n    Property(false)\n], MultiSelect.prototype, \"showSelectAll\", void 0);\n__decorate$5([\n    Property('Select All')\n], MultiSelect.prototype, \"selectAllText\", void 0);\n__decorate$5([\n    Property('Unselect All')\n], MultiSelect.prototype, \"unSelectAllText\", void 0);\n__decorate$5([\n    Property(true)\n], MultiSelect.prototype, \"enableSelectionOrder\", void 0);\n__decorate$5([\n    Property(true)\n], MultiSelect.prototype, \"openOnClick\", void 0);\n__decorate$5([\n    Property(false)\n], MultiSelect.prototype, \"addTagOnBlur\", void 0);\n__decorate$5([\n    Event()\n], MultiSelect.prototype, \"change\", void 0);\n__decorate$5([\n    Event()\n], MultiSelect.prototype, \"removing\", void 0);\n__decorate$5([\n    Event()\n], MultiSelect.prototype, \"removed\", void 0);\n__decorate$5([\n    Event()\n], MultiSelect.prototype, \"beforeSelectAll\", void 0);\n__decorate$5([\n    Event()\n], MultiSelect.prototype, \"selectedAll\", void 0);\n__decorate$5([\n    Event()\n], MultiSelect.prototype, \"beforeOpen\", void 0);\n__decorate$5([\n    Event()\n], MultiSelect.prototype, \"open\", void 0);\n__decorate$5([\n    Event()\n], MultiSelect.prototype, \"close\", void 0);\n__decorate$5([\n    Event()\n], MultiSelect.prototype, \"blur\", void 0);\n__decorate$5([\n    Event()\n], MultiSelect.prototype, \"focus\", void 0);\n__decorate$5([\n    Event()\n], MultiSelect.prototype, \"chipSelection\", void 0);\n__decorate$5([\n    Event()\n], MultiSelect.prototype, \"filtering\", void 0);\n__decorate$5([\n    Event()\n], MultiSelect.prototype, \"tagging\", void 0);\n__decorate$5([\n    Event()\n], MultiSelect.prototype, \"customValueSelection\", void 0);\nMultiSelect = __decorate$5([\n    NotifyPropertyChanges\n], MultiSelect);\n\nconst ICON = 'e-icons';\nconst CHECKBOXFRAME$1 = 'e-frame';\nconst CHECK$1 = 'e-check';\nconst CHECKBOXWRAP$1 = 'e-checkbox-wrapper';\nconst INDETERMINATE = 'e-stop';\nconst checkAllParent = 'e-selectall-parent';\nconst searchBackIcon = 'e-input-group-icon e-back-icon e-icons';\nconst filterBarClearIcon = 'e-input-group-icon e-clear-icon e-icons';\nconst filterInput = 'e-input-filter';\nconst filterParent = 'e-filter-parent';\nconst mobileFilter = 'e-ddl-device-filter';\nconst clearIcon = 'e-clear-icon';\nconst popupFullScreen = 'e-popup-full-page';\nconst device = 'e-ddl-device';\nconst FOCUS$1 = 'e-input-focus';\n/**\n * The Multiselect enable CheckBoxSelection call this inject module.\n */\nclass CheckBoxSelection {\n    constructor(parent) {\n        this.activeLi = [];\n        this.activeEle = [];\n        this.parent = parent;\n        this.removeEventListener();\n        this.addEventListener();\n    }\n    getModuleName() {\n        return 'CheckBoxSelection';\n    }\n    addEventListener() {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on('updatelist', this.listSelection, this);\n        this.parent.on('listoption', this.listOption, this);\n        this.parent.on('selectAll', this.setSelectAll, this);\n        this.parent.on('checkSelectAll', this.checkSelectAll, this);\n        this.parent.on('searchBox', this.setSearchBox, this);\n        this.parent.on('blur', this.onBlurHandler, this);\n        this.parent.on('targetElement', this.targetElement, this);\n        this.parent.on('deviceSearchBox', this.setDeviceSearchBox, this);\n        this.parent.on('inputFocus', this.getFocus, this);\n        this.parent.on('reOrder', this.setReorder, this);\n        this.parent.on('activeList', this.getActiveList, this);\n        this.parent.on('selectAllText', this.setLocale, this);\n        this.parent.on('filterBarPlaceholder', this.setPlaceholder, this);\n        EventHandler.add(document, 'mousedown', this.onDocumentClick, this);\n        this.parent.on('addItem', this.checboxCreate, this);\n        this.parent.on('popupFullScreen', this.setPopupFullScreen, this);\n    }\n    removeEventListener() {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updatelist', this.listSelection);\n        this.parent.off('listoption', this.listOption);\n        this.parent.off('selectAll', this.setSelectAll);\n        this.parent.off('checkSelectAll', this.checkSelectAll);\n        this.parent.off('searchBox', this.setSearchBox);\n        this.parent.off('blur', this.onBlurHandler);\n        this.parent.off('targetElement', this.targetElement);\n        this.parent.off('deviceSearchBox', this.setDeviceSearchBox);\n        this.parent.off('inputFocus', this.getFocus);\n        this.parent.off('reOrder', this.setReorder);\n        this.parent.off('activeList', this.getActiveList);\n        this.parent.off('selectAllText', this.setLocale);\n        this.parent.off('filterBarPlaceholder', this.setPlaceholder);\n        this.parent.off('addItem', this.checboxCreate);\n        this.parent.off('popupFullScreen', this.setPopupFullScreen);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    listOption(args) {\n        if (isNullOrUndefined(this.parent.listCurrentOptions.itemCreated)) {\n            this.parent.listCurrentOptions.itemCreated = (e) => {\n                this.checboxCreate(e);\n            };\n        }\n        else {\n            const itemCreated = this.parent.listCurrentOptions.itemCreated;\n            this.parent.listCurrentOptions.itemCreated = (e) => {\n                this.checboxCreate(e);\n                itemCreated.apply(this, [e]);\n            };\n        }\n    }\n    setPlaceholder(props) {\n        Input.setPlaceholder(props.filterBarPlaceholder, this.filterInput);\n    }\n    checboxCreate(e) {\n        let item;\n        if (!isNullOrUndefined(e.item)) {\n            item = e.item;\n        }\n        else {\n            item = e;\n        }\n        if (this.parent.enableGroupCheckBox || (item.className !== 'e-list-group-item '\n            && item.className !== 'e-list-group-item')) {\n            const checkboxEle = createCheckBox(this.parent.createElement, true);\n            const icon = select('div.' + ICON, item);\n            item.insertBefore(checkboxEle, item.childNodes[isNullOrUndefined(icon) ? 0 : 1]);\n            select('.' + CHECKBOXFRAME$1, checkboxEle);\n            if (this.parent.enableGroupCheckBox) {\n                this.parent.popupWrapper.classList.add('e-multiselect-group');\n            }\n            return item;\n        }\n        else {\n            return item;\n        }\n    }\n    setSelectAll() {\n        if (this.parent.showSelectAll) {\n            if (isNullOrUndefined(this.checkAllParent)) {\n                this.checkAllParent = this.parent.createElement('div', {\n                    className: checkAllParent\n                });\n                this.selectAllSpan = this.parent.createElement('span', {\n                    className: 'e-all-text'\n                });\n                this.selectAllSpan.textContent = '';\n                this.checkAllParent.appendChild(this.selectAllSpan);\n                this.setLocale();\n                this.checboxCreate(this.checkAllParent);\n                if (this.parent.headerTemplate) {\n                    if (!isNullOrUndefined(this.parent.filterParent)) {\n                        append([this.checkAllParent], this.parent.filterParent);\n                    }\n                    else {\n                        append([this.checkAllParent], this.parent.popupWrapper);\n                    }\n                }\n                if (!this.parent.headerTemplate) {\n                    if (!isNullOrUndefined(this.parent.filterParent)) {\n                        this.parent.filterParent.parentNode.insertBefore(this.checkAllParent, this.parent.filterParent.nextSibling);\n                    }\n                    else {\n                        prepend([this.checkAllParent], this.parent.popupWrapper);\n                    }\n                }\n                EventHandler.add(this.checkAllParent, 'mousedown', this.clickHandler, this);\n            }\n            if (this.parent.list.classList.contains('e-nodata') || (this.parent.listData && this.parent.listData.length <= 1 &&\n                !(this.parent.isDynamicDataChange)) || (this.parent.isDynamicDataChange &&\n                this.parent.listData && this.parent.listData.length <= 1)) {\n                this.checkAllParent.style.display = 'none';\n            }\n            else {\n                this.checkAllParent.style.display = 'block';\n            }\n            this.parent.selectAllHeight = this.checkAllParent.getBoundingClientRect().height;\n        }\n        else if (!isNullOrUndefined(this.checkAllParent)) {\n            this.checkAllParent.parentElement.removeChild(this.checkAllParent);\n            this.checkAllParent = null;\n        }\n    }\n    destroy() {\n        this.removeEventListener();\n        EventHandler.remove(document, 'mousedown', this.onDocumentClick);\n    }\n    listSelection(args) {\n        let target;\n        if (!isNullOrUndefined(args.e)) {\n            const frameElm = args.li.querySelector('.e-checkbox-wrapper .e-frame');\n            target = !isNullOrUndefined(args.e.target) ?\n                (args.e.target.classList.contains('e-frame')\n                    && (!this.parent.showSelectAll\n                        || (this.checkAllParent && !this.checkAllParent.contains(args.e.target)))) ?\n                    args.e.target : args.li.querySelector('.e-checkbox-wrapper').childNodes[1]\n                : args.li.querySelector('.e-checkbox-wrapper').childNodes[1];\n        }\n        else {\n            const checkboxWrapper = args.li.querySelector('.e-checkbox-wrapper');\n            target = checkboxWrapper ? checkboxWrapper.childNodes[1] : args.li.lastElementChild.childNodes[1];\n        }\n        if (this.parent.itemTemplate || this.parent.enableGroupCheckBox) {\n            target = args.li.firstElementChild.childNodes[1];\n        }\n        if (!isNullOrUndefined(target)) {\n            this.checkWrapper = closest(target, '.' + CHECKBOXWRAP$1);\n        }\n        if (!isNullOrUndefined(this.checkWrapper)) {\n            const checkElement = select('.' + CHECKBOXFRAME$1, this.checkWrapper);\n            const selectAll$$1 = false;\n            this.validateCheckNode(this.checkWrapper, checkElement.classList.contains(CHECK$1), args.li, args.e, selectAll$$1);\n        }\n    }\n    validateCheckNode(checkWrap, isCheck, li, e, selectAll$$1) {\n        this.changeState(checkWrap, isCheck ? 'uncheck' : 'check', e, true, selectAll$$1);\n    }\n    clickHandler(e) {\n        let target;\n        if (e.currentTarget.classList.contains(this.checkAllParent.className)) {\n            target = e.currentTarget.firstElementChild.lastElementChild;\n        }\n        else {\n            target = e.currentTarget;\n        }\n        this.checkWrapper = closest(target, '.' + CHECKBOXWRAP$1);\n        const selectAll$$1 = true;\n        if (!isNullOrUndefined(this.checkWrapper)) {\n            const checkElement = select('.' + CHECKBOXFRAME$1, this.checkWrapper);\n            this.validateCheckNode(this.checkWrapper, checkElement.classList.contains(CHECK$1), null, e, selectAll$$1);\n        }\n        e.preventDefault();\n    }\n    changeState(wrapper, state, e, isPrevent, selectAll$$1) {\n        let ariaState;\n        const frameSpan = wrapper.getElementsByClassName(CHECKBOXFRAME$1)[0];\n        if (state === 'check' && !frameSpan.classList.contains(CHECK$1)) {\n            frameSpan.classList.remove(INDETERMINATE);\n            frameSpan.classList.add(CHECK$1);\n            ariaState = 'true';\n            if (selectAll$$1) {\n                this.parent.selectAllItems(true, e);\n                this.setLocale(true);\n            }\n        }\n        else if (state === 'uncheck' && (frameSpan.classList.contains(CHECK$1) || frameSpan.classList.contains(INDETERMINATE))) {\n            removeClass([frameSpan], [CHECK$1, INDETERMINATE]);\n            ariaState = 'false';\n            if (selectAll$$1) {\n                this.parent.selectAllItems(false, e);\n                this.setLocale();\n            }\n        }\n        else if (state === 'indeterminate' && !(frameSpan.classList.contains(INDETERMINATE))) {\n            removeClass([frameSpan], [CHECK$1]);\n            frameSpan.classList.add(INDETERMINATE);\n            ariaState = 'false';\n            if (selectAll$$1) {\n                this.parent.selectAllItems(false, e);\n                this.setLocale();\n            }\n        }\n        ariaState = state === 'check' ? 'true' : state === 'uncheck' ? 'false' : ariaState;\n        if (!isNullOrUndefined(ariaState)) {\n            wrapper.setAttribute('aria-checked', ariaState);\n        }\n    }\n    setSearchBox(args) {\n        if (isNullOrUndefined(this.parent.filterParent)) {\n            this.parent.filterParent = this.parent.createElement('span', {\n                className: filterParent\n            });\n            this.filterInput = this.parent.createElement('input', {\n                attrs: { type: 'text' },\n                className: filterInput\n            });\n            this.parent.element.parentNode.insertBefore(this.filterInput, this.parent.element);\n            let backIcon = false;\n            if (Browser.isDevice) {\n                backIcon = true;\n                this.parent.mobFilter = false;\n            }\n            this.filterInputObj = Input.createInput({\n                element: this.filterInput,\n                buttons: backIcon ? [searchBackIcon, filterBarClearIcon] : [filterBarClearIcon],\n                properties: { placeholder: this.parent.filterBarPlaceholder }\n            }, this.parent.createElement);\n            if (!isNullOrUndefined(this.parent.cssClass)) {\n                if (this.parent.cssClass.split(' ').indexOf('e-outline') !== -1) {\n                    addClass([this.filterInputObj.container], 'e-outline');\n                }\n                else if (this.parent.cssClass.split(' ').indexOf('e-filled') !== -1) {\n                    addClass([this.filterInputObj.container], 'e-filled');\n                }\n            }\n            append([this.filterInputObj.container], this.parent.filterParent);\n            prepend([this.parent.filterParent], args.popupElement);\n            attributes(this.filterInput, {\n                'aria-disabled': 'false',\n                'aria-owns': this.parent.element.id + '_options',\n                'role': 'listbox',\n                'aria-activedescendant': null,\n                'autocomplete': 'off',\n                'autocorrect': 'off',\n                'autocapitalize': 'off',\n                'spellcheck': 'false'\n            });\n            this.clearIconElement = this.filterInput.parentElement.querySelector('.' + clearIcon);\n            if (!Browser.isDevice && this.clearIconElement) {\n                EventHandler.add(this.clearIconElement, 'mousedown', this.clearText, this);\n                this.clearIconElement.style.visibility = 'hidden';\n            }\n            EventHandler.add(this.filterInput, 'input', this.parent.onInput, this.parent);\n            EventHandler.add(this.filterInput, 'keyup', this.parent.keyUp, this.parent);\n            EventHandler.add(this.filterInput, 'keydown', this.parent.onKeyDown, this.parent);\n            EventHandler.add(this.filterInput, 'blur', this.onBlurHandler, this);\n            EventHandler.add(this.filterInput, 'paste', this.parent.pasteHandler, this.parent);\n            this.parent.searchBoxHeight = (this.filterInputObj.container.parentElement).getBoundingClientRect().height;\n            return this.filterInputObj;\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    clickOnBackIcon(e) {\n        this.parent.hidePopup();\n        removeClass([document.body, this.parent.popupObj.element], popupFullScreen);\n        this.parent.inputElement.focus();\n    }\n    clearText(e) {\n        this.parent.targetInputElement.value = '';\n        if (this.parent.allowFiltering && this.parent.targetInputElement.value === '') {\n            this.parent.search(null);\n        }\n        this.parent.refreshPopup();\n        this.parent.refreshListItems(null);\n        this.clearIconElement.style.visibility = 'hidden';\n        this.filterInput.focus();\n        this.setReorder(e);\n        e.preventDefault();\n    }\n    setDeviceSearchBox() {\n        this.parent.popupObj.element.classList.add(device);\n        this.parent.popupObj.element.classList.add(mobileFilter);\n        this.parent.popupObj.position = { X: 0, Y: 0 };\n        this.parent.popupObj.dataBind();\n        this.setSearchBoxPosition();\n        this.backIconElement = this.filterInputObj.container.querySelector('.e-back-icon');\n        this.clearIconElement = this.filterInputObj.container.querySelector('.' + clearIcon);\n        this.clearIconElement.style.visibility = 'hidden';\n        EventHandler.add(this.backIconElement, 'click', this.clickOnBackIcon, this);\n        EventHandler.add(this.clearIconElement, 'click', this.clearText, this);\n    }\n    setSearchBoxPosition() {\n        const searchBoxHeight = this.filterInput.parentElement.getBoundingClientRect().height;\n        let selectAllHeight = 0;\n        if (this.checkAllParent) {\n            selectAllHeight = this.checkAllParent.getBoundingClientRect().height;\n        }\n        this.parent.popupObj.element.style.maxHeight = '100%';\n        this.parent.popupObj.element.style.width = '100%';\n        this.parent.list.style.maxHeight = (window.innerHeight - searchBoxHeight - selectAllHeight) + 'px';\n        this.parent.list.style.height = (window.innerHeight - searchBoxHeight - selectAllHeight) + 'px';\n        const clearElement = this.filterInput.parentElement.querySelector('.' + clearIcon);\n        detach(this.filterInput);\n        clearElement.parentElement.insertBefore(this.filterInput, clearElement);\n    }\n    setPopupFullScreen() {\n        attributes(this.parent.popupObj.element, { style: 'left:0px;right:0px;top:0px;bottom:0px;' });\n        addClass([document.body, this.parent.popupObj.element], popupFullScreen);\n        this.parent.popupObj.element.style.maxHeight = '100%';\n        this.parent.popupObj.element.style.width = '100%';\n    }\n    targetElement() {\n        if (!isNullOrUndefined(this.clearIconElement)) {\n            this.parent.targetInputElement = this.filterInput;\n            this.clearIconElement.style.visibility = this.parent.targetInputElement.value === '' ? 'hidden' : 'visible';\n        }\n        return this.parent.targetInputElement.value;\n    }\n    onBlurHandler(e) {\n        if (!this.parent.element.classList.contains('e-listbox')) {\n            let target;\n            if (this.parent.keyAction) {\n                return;\n            }\n            if (Browser.isIE) {\n                target = !isNullOrUndefined(e) && e.target;\n            }\n            if (!Browser.isIE) {\n                target = !isNullOrUndefined(e) && e.relatedTarget;\n            }\n            // eslint-disable-next-line max-len\n            if (this.parent.popupObj && document.body.contains(this.parent.popupObj.element) && this.parent.popupObj.element.contains(target)\n                && !Browser.isIE && this.filterInput) {\n                this.filterInput.focus();\n                return;\n            }\n            if (this.parent.scrollFocusStatus && this.filterInput) {\n                e.preventDefault();\n                this.filterInput.focus();\n                this.parent.scrollFocusStatus = false;\n                return;\n            }\n            if (this.parent.popupObj && document.body.contains(this.parent.popupObj.element)\n                && !this.parent.popupObj.element.classList.contains('e-popup-close')) {\n                this.parent.inputFocus = false;\n                this.parent.updateValueState(e, this.parent.value, this.parent.tempValues);\n                this.parent.dispatchEvent(this.parent.hiddenElement, 'change');\n            }\n            if (this.parent.popupObj && document.body.contains(this.parent.popupObj.element) &&\n                !this.parent.popupObj.element.classList.contains('e-popup-close')) {\n                this.parent.inputFocus = false;\n                this.parent.overAllWrapper.classList.remove(FOCUS$1);\n                this.parent.trigger('blur');\n                this.parent.focused = true;\n            }\n            if (this.parent.popupObj && document.body.contains(this.parent.popupObj.element) &&\n                !this.parent.popupObj.element.classList.contains('e-popup-close') && !Browser.isDevice) {\n                this.parent.hidePopup();\n            }\n        }\n    }\n    onDocumentClick(e) {\n        if (this.parent.getLocaleName() !== 'listbox') {\n            const target = e.target;\n            if (!isNullOrUndefined(this.parent.popupObj) && closest(target, '[id=\"' + this.parent.popupObj.element.id + '\"]')) {\n                if (!(this.filterInput && this.filterInput.value !== '')) {\n                    e.preventDefault();\n                }\n            }\n            if (!(!isNullOrUndefined(this.parent.popupObj) && closest(target, '[id=\"' + this.parent.popupObj.element.id + '\"]')) &&\n                !this.parent.overAllWrapper.contains(e.target)) {\n                if (this.parent.overAllWrapper.classList.contains(dropDownBaseClasses.focus) || this.parent.isPopupOpen()) {\n                    this.parent.inputFocus = false;\n                    this.parent.scrollFocusStatus = false;\n                    this.parent.hidePopup();\n                    this.parent.onBlurHandler(e, true);\n                    this.parent.focused = true;\n                }\n            }\n            else {\n                this.parent.scrollFocusStatus = (Browser.isIE || Browser.info.name === 'edge') &&\n                    (document.activeElement === this.filterInput);\n            }\n            if (!this.parent.overAllWrapper.contains(e.target) && this.parent.overAllWrapper.classList.contains('e-input-focus') &&\n                !this.parent.isPopupOpen()) {\n                if (Browser.isIE) {\n                    this.parent.onBlurHandler();\n                }\n                else {\n                    this.parent.onBlurHandler(e);\n                }\n            }\n            if (this.filterInput === target) {\n                this.filterInput.focus();\n            }\n        }\n    }\n    getFocus(e) {\n        this.parent.overAllWrapper.classList.remove(FOCUS$1);\n        if (this.parent.keyAction && e.value !== 'clear' && e.value !== 'focus') {\n            this.parent.keyAction = false;\n            return;\n        }\n        if (e.value === 'focus') {\n            this.filterInput.focus();\n            this.parent.removeFocus();\n            EventHandler.remove(this.parent.list, 'keydown', this.parent.onKeyDown);\n        }\n        if (e.value === 'clear') {\n            this.filterInput.value = '';\n            this.clearIconElement.style.visibility = 'hidden';\n        }\n    }\n    checkSelectAll(e) {\n        if (e.value === 'check' && this.checkAllParent.getAttribute('aria-checked') !== 'true') {\n            this.changeState(this.checkAllParent, e.value, null, null, false);\n            this.setLocale(true);\n        }\n        if (e.value === 'uncheck') {\n            this.changeState(this.checkAllParent, e.value, null, null, false);\n            this.setLocale();\n        }\n        if (e.value === 'indeterminate') {\n            this.changeState(this.checkAllParent, e.value, null, null, false);\n            this.setLocale();\n        }\n    }\n    setLocale(unSelect) {\n        if (this.parent.selectAllText !== 'Select All' || this.parent.unSelectAllText !== 'Unselect All') {\n            const template = unSelect ? this.parent.unSelectAllText : this.parent.selectAllText;\n            this.selectAllSpan.textContent = '';\n            const compiledString = compile(template);\n            const templateName = unSelect ? 'unSelectAllText' : 'selectAllText';\n            for (const item of compiledString({}, this.parent, templateName, null, !this.parent.isStringTemplate)) {\n                this.selectAllSpan.textContent = item.textContent;\n            }\n        }\n        else {\n            const l10nLocale = { selectAllText: 'Select All', unSelectAllText: 'Unselect All' };\n            let l10n = new L10n(this.parent.getLocaleName(), {}, this.parent.locale);\n            if (l10n.getConstant('selectAllText') === '') {\n                l10n = new L10n('dropdowns', l10nLocale, this.parent.locale);\n            }\n            this.selectAllSpan.textContent = unSelect ? l10n.getConstant('unSelectAllText') : l10n.getConstant('selectAllText');\n        }\n    }\n    getActiveList(args) {\n        if (args.li.classList.contains('e-active')) {\n            this.activeLi.push(args.li.cloneNode(true));\n        }\n        else {\n            this.activeLi.splice(args.index, 1);\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    setReorder(args) {\n        if (this.parent.enableSelectionOrder && !isNullOrUndefined(this.parent.value)) {\n            const activeLiCount = this.parent.ulElement.querySelectorAll('li.e-active').length;\n            let remLi;\n            const ulEle = this.parent.createElement('ul', {\n                className: 'e-list-parent e-ul e-reorder'\n            });\n            if (activeLiCount > 0) {\n                append(this.parent.ulElement.querySelectorAll('li.e-active'), ulEle);\n                remLi = this.parent.ulElement.querySelectorAll('li.e-active');\n                addClass(remLi, 'e-reorder-hide');\n                prepend([ulEle], this.parent.list);\n            }\n            this.parent.focusAtFirstListItem();\n        }\n    }\n}\n\n/**\n * export all modules from current location\n */\n\nvar __decorate$6 = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar ListBox_1;\n// eslint-disable-next-line @typescript-eslint/triple-slash-reference\n/// <reference path='../drop-down-base/drop-down-base-model.d.ts'/>\n/**\n * Defines the Selection settings of List Box.\n */\nclass SelectionSettings extends ChildProperty {\n}\n__decorate$6([\n    Property('Multiple')\n], SelectionSettings.prototype, \"mode\", void 0);\n__decorate$6([\n    Property(false)\n], SelectionSettings.prototype, \"showCheckbox\", void 0);\n__decorate$6([\n    Property(false)\n], SelectionSettings.prototype, \"showSelectAll\", void 0);\n__decorate$6([\n    Property('Left')\n], SelectionSettings.prototype, \"checkboxPosition\", void 0);\n/**\n * Defines the toolbar settings of List Box.\n */\nclass ToolbarSettings extends ChildProperty {\n}\n__decorate$6([\n    Property([])\n], ToolbarSettings.prototype, \"items\", void 0);\n__decorate$6([\n    Property('Right')\n], ToolbarSettings.prototype, \"position\", void 0);\n/**\n * The ListBox is a graphical user interface component used to display a list of items.\n * Users can select one or more items in the list using a checkbox or by keyboard selection.\n * It supports sorting, grouping, reordering and drag and drop of items.\n * ```html\n * <select id=\"listbox\">\n *      <option value='1'>Badminton</option>\n *      <option value='2'>Basketball</option>\n *      <option value='3'>Cricket</option>\n *      <option value='4'>Football</option>\n *      <option value='5'>Tennis</option>\n * </select>\n * ```\n * ```typescript\n * <script>\n *   var listObj = new ListBox();\n *   listObj.appendTo(\"#listbox\");\n * </script>\n * ```\n */\nlet ListBox = ListBox_1 = class ListBox extends DropDownBase {\n    /**\n     * Constructor for creating the ListBox component.\n     *\n     * @param {ListBoxModel} options - Specifies ListBox model\n     * @param {string | HTMLElement} element - Specifies the element.\n     */\n    constructor(options, element) {\n        super(options, element);\n        this.isValidKey = false;\n        this.isDataSourceUpdate = false;\n        this.keyDownStatus = false;\n    }\n    /**\n     * Adds a new item to the popup list. By default, new item appends to the list as the last item,\n     * but you can insert based on the index parameter.\n     *\n     * @param  { Object[] } items - Specifies an array of JSON data or a JSON data.\n     * @param { number } itemIndex - Specifies the index to place the newly added item in the popup list.\n     * @returns {void}.\n     * @private\n     */\n    addItem(items, itemIndex) {\n        super.addItem(items, itemIndex);\n    }\n    /**\n     * Build and render the component.\n     *\n     * @private\n     * @returns {void}\n     */\n    render() {\n        this.inputString = '';\n        this.initLoad = true;\n        this.isCustomFiltering = false;\n        this.initialSelectedOptions = this.value;\n        super.render();\n        this.renderComplete();\n    }\n    initWrapper() {\n        const hiddenSelect = this.createElement('select', { className: 'e-hidden-select', attrs: { 'multiple': '' } });\n        hiddenSelect.style.visibility = 'hidden';\n        this.list.classList.add('e-listbox-wrapper');\n        if (this.itemTemplate) {\n            this.list.classList.add('e-list-template');\n        }\n        this.list.classList.add('e-wrapper');\n        this.list.classList.add('e-lib');\n        if (this.element.tagName === 'EJS-LISTBOX') {\n            this.element.setAttribute('tabindex', '0');\n            if (this.initLoad) {\n                this.element.appendChild(this.list);\n            }\n        }\n        else {\n            if (this.initLoad) {\n                this.element.parentElement.insertBefore(this.list, this.element);\n            }\n            this.list.insertBefore(this.element, this.list.firstChild);\n            this.element.style.display = 'none';\n        }\n        this.list.insertBefore(hiddenSelect, this.list.firstChild);\n        if (this.list.getElementsByClassName('e-list-item')[0]) {\n            this.list.getElementsByClassName('e-list-item')[0].classList.remove(dropDownBaseClasses.focus);\n        }\n        if (this.itemTemplate) {\n            this.renderReactTemplates();\n        }\n        removeClass([this.list], [dropDownBaseClasses.content, dropDownBaseClasses.root]);\n        this.validationAttribute(this.element, hiddenSelect);\n        this.list.setAttribute('role', 'listbox');\n        attributes(this.list, { 'role': 'listbox', 'aria-multiselectable': this.selectionSettings.mode === 'Multiple' ? 'true' : 'false' });\n        this.updateSelectionSettings();\n    }\n    updateSelectionSettings() {\n        if (this.selectionSettings.showCheckbox && this.selectionSettings.showSelectAll && this.liCollections.length) {\n            const l10nSelect = new L10n(this.getModuleName(), { selectAllText: 'Select All', unSelectAllText: 'Unselect All' }, this.locale);\n            this.showSelectAll = true;\n            this.selectAllText = l10nSelect.getConstant('selectAllText');\n            this.unSelectAllText = l10nSelect.getConstant('unSelectAllText');\n            this.popupWrapper = this.list;\n            this.checkBoxSelectionModule.checkAllParent = null;\n            this.notify('selectAll', {});\n        }\n    }\n    initDraggable() {\n        if (this.ulElement) {\n            this.ulElement.id = this.element.id + '_parent';\n        }\n        if (this.allowDragAndDrop) {\n            new Sortable(this.ulElement, {\n                scope: this.scope,\n                itemClass: 'e-list-item',\n                dragStart: this.triggerDragStart.bind(this),\n                drag: this.triggerDrag.bind(this),\n                beforeDrop: this.beforeDragEnd.bind(this),\n                drop: this.dragEnd.bind(this),\n                placeHolder: () => { return this.createElement('span', { className: 'e-placeholder' }); },\n                helper: (e) => {\n                    const wrapper = this.list.cloneNode();\n                    const ele = e.sender.cloneNode(true);\n                    wrapper.appendChild(ele);\n                    const refEle = this.getItems()[0];\n                    wrapper.style.width = refEle.offsetWidth + 'px';\n                    wrapper.style.height = refEle.offsetHeight + 'px';\n                    if ((this.value && this.value.length) > 1 && this.isSelected(ele)) {\n                        ele.appendChild(this.createElement('span', {\n                            className: 'e-list-badge', innerHTML: this.value.length + ''\n                        }));\n                    }\n                    wrapper.style.zIndex = getZindexPartial(this.element) + '';\n                    return wrapper;\n                }\n            });\n        }\n    }\n    updateActionCompleteData(li, item, index) {\n        this.jsonData.splice(index, 0, item);\n    }\n    initToolbar() {\n        const pos = this.toolbarSettings.position;\n        const prevScope = this.element.getAttribute('data-value');\n        if (this.toolbarSettings.items.length) {\n            const toolElem = this.createElement('div', { className: 'e-listbox-tool', attrs: { 'role': 'toolbar' } });\n            const wrapper = this.createElement('div', {\n                className: 'e-listboxtool-wrapper e-lib e-' + pos.toLowerCase()\n            });\n            this.list.parentElement.insertBefore(wrapper, this.list);\n            wrapper.appendChild(pos === 'Right' ? this.list : toolElem);\n            wrapper.appendChild(pos === 'Right' ? toolElem : this.list);\n            this.createButtons(toolElem);\n            if (!this.element.id) {\n                this.element.id = getUniqueID('e-' + this.getModuleName());\n            }\n            if (this.scope) {\n                document.querySelector(this.scope).setAttribute('data-value', this.element.id);\n            }\n            else {\n                this.updateToolBarState();\n            }\n        }\n        const scope = this.element.getAttribute('data-value');\n        if (prevScope && scope && (prevScope !== scope)) {\n            this.tBListBox = getComponent(document.getElementById(prevScope), this.getModuleName());\n            this.tBListBox.updateToolBarState();\n        }\n        else if (scope) {\n            this.tBListBox = getComponent(document.getElementById(scope), this.getModuleName());\n            this.tBListBox.updateToolBarState();\n        }\n    }\n    createButtons(toolElem) {\n        let btn;\n        let ele;\n        let title;\n        const l10n = new L10n(this.getModuleName(), {\n            moveUp: 'Move Up', moveDown: 'Move Down', moveTo: 'Move To',\n            moveFrom: 'Move From', moveAllTo: 'Move All To', moveAllFrom: 'Move All From'\n        }, this.locale);\n        this.toolbarSettings.items.forEach((value) => {\n            title = l10n.getConstant(value);\n            ele = this.createElement('button', {\n                attrs: {\n                    'type': 'button',\n                    'data-value': value,\n                    'title': title,\n                    'aria-label': title\n                }\n            });\n            toolElem.appendChild(ele);\n            btn = new Button({ iconCss: 'e-icons e-' + value.toLowerCase() }, ele);\n            btn.createElement = this.createElement;\n        });\n    }\n    validationAttribute(input, hiddenSelect) {\n        super.validationAttribute(input, hiddenSelect);\n        hiddenSelect.required = input.required;\n        input.required = false;\n    }\n    setHeight() {\n        const ele = this.toolbarSettings.items.length ? this.list.parentElement : this.list;\n        ele.style.height = formatUnit(this.height);\n        if (this.allowFiltering && this.height.toString().indexOf('%') < 0) {\n            addClass([this.list], 'e-filter-list');\n        }\n        else {\n            removeClass([this.list], 'e-filter-list');\n        }\n    }\n    setCssClass() {\n        const wrap = this.toolbarSettings.items.length ? this.list.parentElement : this.list;\n        if (this.cssClass) {\n            addClass([wrap], this.cssClass.split(' '));\n        }\n        if (this.enableRtl) {\n            addClass([this.list], 'e-rtl');\n        }\n    }\n    setEnable() {\n        const ele = this.toolbarSettings.items.length ? this.list.parentElement : this.list;\n        if (this.enabled) {\n            removeClass([ele], cssClass.disabled);\n        }\n        else {\n            addClass([ele], cssClass.disabled);\n        }\n    }\n    showSpinner() {\n        if (!this.spinner) {\n            this.spinner = this.createElement('div', { className: 'e-listbox-wrapper' });\n        }\n        this.spinner.style.height = formatUnit(this.height);\n        this.element.parentElement.insertBefore(this.spinner, this.element.nextSibling);\n        createSpinner({ target: this.spinner }, this.createElement);\n        showSpinner(this.spinner);\n    }\n    hideSpinner() {\n        if (this.spinner.querySelector('.e-spinner-pane')) {\n            hideSpinner(this.spinner);\n        }\n        if (this.spinner.parentElement) {\n            detach(this.spinner);\n        }\n    }\n    onInput() {\n        this.isDataSourceUpdate = false;\n        if (this.keyDownStatus) {\n            this.isValidKey = true;\n        }\n        else {\n            this.isValidKey = false;\n        }\n        this.keyDownStatus = false;\n        this.refreshClearIcon();\n    }\n    clearText() {\n        this.filterInput.value = '';\n        this.refreshClearIcon();\n        const event = document.createEvent('KeyboardEvent');\n        this.isValidKey = true;\n        this.KeyUp(event);\n    }\n    refreshClearIcon() {\n        if (this.filterInput.parentElement.querySelector('.' + listBoxClasses.clearIcon)) {\n            const clearElement = this.filterInput.parentElement.querySelector('.' + listBoxClasses.clearIcon);\n            clearElement.style.visibility = this.filterInput.value === '' ? 'hidden' : 'visible';\n        }\n    }\n    onActionComplete(ulElement, list, e) {\n        let searchEle;\n        if (this.allowFiltering && this.list.getElementsByClassName('e-filter-parent')[0]) {\n            searchEle = this.list.getElementsByClassName('e-filter-parent')[0].cloneNode(true);\n        }\n        if (list.length === 0) {\n            const noRecElem = ulElement.childNodes[0];\n            if (noRecElem) {\n                ulElement.removeChild(noRecElem);\n            }\n        }\n        super.onActionComplete(ulElement, list, e);\n        if (this.allowFiltering && !isNullOrUndefined(searchEle)) {\n            this.list.insertBefore(searchEle, this.list.firstElementChild);\n            this.filterParent = this.list.getElementsByClassName('e-filter-parent')[0];\n            this.filterWireEvents(searchEle);\n        }\n        this.initWrapper();\n        this.setSelection();\n        this.initDraggable();\n        this.mainList = this.ulElement;\n        if (this.initLoad) {\n            this.jsonData = [];\n            extend(this.jsonData, list, []);\n            this.initToolbarAndStyles();\n            this.wireEvents();\n            if (this.showCheckbox) {\n                this.setCheckboxPosition();\n            }\n            if (this.allowFiltering) {\n                this.setFiltering();\n            }\n        }\n        else {\n            if (this.isDataSourceUpdate) {\n                this.jsonData = [];\n                extend(this.jsonData, list, []);\n                this.isDataSourceUpdate = false;\n            }\n            if (this.allowFiltering) {\n                const filterElem = this.list.getElementsByClassName('e-input-filter')[0];\n                const txtLength = this.filterInput.value.length;\n                filterElem.selectionStart = txtLength;\n                filterElem.selectionEnd = txtLength;\n                filterElem.focus();\n            }\n        }\n        if (this.toolbarSettings.items.length && this.scope && this.scope.indexOf('#') > -1 && !isNullOrUndefined(e)) {\n            const scope = this.scope.replace('#', '');\n            const scopedLB = getComponent(document.getElementById(scope), this.getModuleName());\n            scopedLB.initToolbar();\n        }\n        this.initLoad = false;\n    }\n    initToolbarAndStyles() {\n        this.initToolbar();\n        this.setCssClass();\n        this.setEnable();\n        this.setHeight();\n    }\n    triggerDragStart(args) {\n        let badge;\n        args = extend(this.getDragArgs(args), { dragSelected: true });\n        if (Browser.isIos) {\n            this.list.style.overflow = 'hidden';\n        }\n        this.trigger('dragStart', args, (dragEventArgs) => {\n            this.allowDragAll = dragEventArgs.dragSelected;\n            if (!this.allowDragAll) {\n                badge = this.ulElement.getElementsByClassName('e-list-badge')[0];\n                if (badge) {\n                    detach(badge);\n                }\n            }\n        });\n    }\n    triggerDrag(args) {\n        let scrollParent;\n        let boundRect;\n        let scrollMoved = 36;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        let event = args.event;\n        let wrapper;\n        if (args.target && (args.target.classList.contains(\"e-listbox-wrapper\") || args.target.classList.contains(\"e-list-item\")\n            || args.target.classList.contains(\"e-filter-parent\") || args.target.classList.contains(\"e-input-group\"))) {\n            if (args.target.classList.contains(\"e-list-item\") || args.target.classList.contains(\"e-filter-parent\")\n                || args.target.classList.contains(\"e-input-group\")) {\n                wrapper = args.target.closest('.e-listbox-wrapper');\n            }\n            else {\n                wrapper = args.target;\n            }\n            if (this.allowFiltering) {\n                scrollParent = wrapper.querySelector('.e-list-parent');\n            }\n            else {\n                scrollParent = wrapper;\n            }\n            boundRect = scrollParent.getBoundingClientRect();\n            if ((boundRect.y + scrollParent.offsetHeight) - (event.pageY + scrollMoved) < 1) {\n                scrollParent.scrollTop = scrollParent.scrollTop + 10;\n            }\n            else if ((event.pageY - scrollMoved) - boundRect.y < 1) {\n                scrollParent.scrollTop = scrollParent.scrollTop - 10;\n            }\n        }\n        if (args.target === null) {\n            return;\n        }\n        this.trigger('drag', this.getDragArgs(args));\n        const listObj = this.getComponent(args.target);\n        if (listObj && listObj.listData.length === 0) {\n            const noRecElem = listObj.ulElement.childNodes[0];\n            if (noRecElem) {\n                listObj.ulElement.removeChild(noRecElem);\n            }\n        }\n    }\n    beforeDragEnd(args) {\n        this.dragValue = this.getFormattedValue(args.droppedElement.getAttribute('data-value'));\n        if (this.value.indexOf(this.dragValue) > -1) {\n            args.items = this.getDataByValues(this.value);\n        }\n        else {\n            args.items = this.getDataByValues([this.dragValue]);\n        }\n        this.trigger('beforeDrop', args);\n    }\n    dragEnd(args) {\n        let listData;\n        let liColl;\n        let jsonData;\n        let droppedData;\n        let selectedOptions;\n        let sortedData;\n        const dropValue = this.getFormattedValue(args.droppedElement.getAttribute('data-value'));\n        const listObj = this.getComponent(args.droppedElement);\n        const getArgs = this.getDragArgs({ target: args.droppedElement }, true);\n        const sourceArgs = { previousData: this.dataSource };\n        const destArgs = { previousData: listObj.dataSource };\n        let dragArgs = extend({}, getArgs, { target: args.target, source: { previousData: this.dataSource }, previousIndex: args.previousIndex, currentIndex: args.currentIndex });\n        if (listObj !== this) {\n            const sourceArgs1 = extend(sourceArgs, { currentData: this.listData });\n            dragArgs = extend(dragArgs, { source: sourceArgs1, destination: destArgs });\n        }\n        if (Browser.isIos) {\n            this.list.style.overflow = '';\n        }\n        if (listObj === this) {\n            const ul = this.ulElement;\n            listData = [].slice.call(this.listData);\n            liColl = [].slice.call(this.liCollections);\n            jsonData = [].slice.call(this.jsonData);\n            sortedData = [].slice.call(this.sortedData);\n            const toSortIdx = args.currentIndex;\n            let toIdx = args.currentIndex = this.getCurIdx(this, args.currentIndex);\n            const rIdx = listData.indexOf(this.getDataByValue(dropValue));\n            const jsonIdx = jsonData.indexOf(this.getDataByValue(dropValue));\n            const sIdx = sortedData.indexOf(this.getDataByValue(dropValue));\n            listData.splice(toIdx, 0, listData.splice(rIdx, 1)[0]);\n            sortedData.splice(toSortIdx, 0, sortedData.splice(sIdx, 1)[0]);\n            jsonData.splice(toIdx, 0, jsonData.splice(jsonIdx, 1)[0]);\n            liColl.splice(toIdx, 0, liColl.splice(rIdx, 1)[0]);\n            if (this.allowDragAll) {\n                selectedOptions = this.value && Array.prototype.indexOf.call(this.value, dropValue) > -1 ? this.value : [dropValue];\n                selectedOptions.forEach((value) => {\n                    if (value !== dropValue) {\n                        const idx = listData.indexOf(this.getDataByValue(value));\n                        const jsonIdx = jsonData.indexOf(this.getDataByValue(value));\n                        const sIdx = sortedData.indexOf(this.getDataByValue(value));\n                        if (idx > toIdx) {\n                            toIdx++;\n                        }\n                        jsonData.splice(toIdx, 0, jsonData.splice(jsonIdx, 1)[0]);\n                        listData.splice(toIdx, 0, listData.splice(idx, 1)[0]);\n                        sortedData.splice(toSortIdx, 0, sortedData.splice(sIdx, 1)[0]);\n                        liColl.splice(toIdx, 0, liColl.splice(idx, 1)[0]);\n                        ul.insertBefore(this.getItems()[this.getIndexByValue(value)], ul.getElementsByClassName('e-placeholder')[0]);\n                    }\n                });\n            }\n            this.listData = listData;\n            this.jsonData = jsonData;\n            this.sortedData = sortedData;\n            this.liCollections = liColl;\n        }\n        else {\n            let li;\n            const fLiColl = [].slice.call(this.liCollections);\n            let currIdx = args.currentIndex = this.getCurIdx(listObj, args.currentIndex);\n            const ul = listObj.ulElement;\n            listData = [].slice.call(listObj.listData);\n            liColl = [].slice.call(listObj.liCollections);\n            jsonData = [].slice.call(listObj.jsonData);\n            sortedData = [].slice.call(listObj.sortedData);\n            selectedOptions = (this.value && Array.prototype.indexOf.call(this.value, dropValue) > -1 && this.allowDragAll)\n                ? this.value : [dropValue];\n            const fListData = [].slice.call(this.listData);\n            const fSortData = [].slice.call(this.sortedData);\n            selectedOptions.forEach((value, index) => {\n                droppedData = this.getDataByValue(value);\n                const srcIdx = this.listData.indexOf(droppedData);\n                const jsonSrcIdx = this.jsonData.indexOf(droppedData);\n                const sortIdx = this.sortedData.indexOf(droppedData);\n                fListData.splice(srcIdx, 1);\n                this.jsonData.splice(jsonSrcIdx, 1);\n                fSortData.splice(sortIdx, 1);\n                this.listData = fListData;\n                this.sortedData = fSortData;\n                const destIdx = value === dropValue ? args.currentIndex : currIdx;\n                listData.splice(destIdx, 0, droppedData);\n                jsonData.splice(destIdx, 0, droppedData);\n                sortedData.splice(destIdx, 0, droppedData);\n                liColl.splice(destIdx, 0, fLiColl.splice(srcIdx, 1)[0]);\n                if (!value) {\n                    const liCollElem = this.getItems();\n                    for (let i = 0; i < liCollElem.length; i++) {\n                        if (liCollElem[i].getAttribute('data-value') === null && liCollElem[i].classList.contains('e-list-item')) {\n                            li = liCollElem[i];\n                            break;\n                        }\n                    }\n                }\n                else {\n                    li = this.getItems()[this.getIndexByValue(value)];\n                }\n                if (!li) {\n                    li = args.helper;\n                }\n                this.removeSelected(this, value === dropValue ? [args.droppedElement] : [li]);\n                ul.insertBefore(li, ul.getElementsByClassName('e-placeholder')[0]);\n                currIdx++;\n            });\n            if (this.fields.groupBy) {\n                let sourceElem = this.renderItems(this.listData, this.fields);\n                this.updateListItems(sourceElem, this.ulElement);\n                this.setSelection();\n            }\n            if (listObj.sortOrder !== 'None' || this.selectionSettings.showCheckbox\n                !== listObj.selectionSettings.showCheckbox || listObj.fields.groupBy || listObj.itemTemplate || this.itemTemplate) {\n                const sortable = getComponent(ul, 'sortable');\n                let sourceElem = listObj.renderItems(listData, listObj.fields);\n                listObj.updateListItems(sourceElem, ul);\n                this.setSelection();\n                if (sortable.placeHolderElement) {\n                    ul.appendChild(sortable.placeHolderElement);\n                }\n                ul.appendChild(args.helper);\n                listObj.setSelection();\n            }\n            this.liCollections = fLiColl;\n            listObj.liCollections = liColl;\n            listObj.jsonData = extend([], [], jsonData, false);\n            listObj.listData = extend([], [], listData, false);\n            listObj.sortedData = extend([], [], sortedData, false);\n            if (this.listData.length === 0) {\n                this.l10nUpdate();\n            }\n        }\n        if (this === listObj) {\n            const sourceArgs1 = extend(sourceArgs, { currentData: listData });\n            dragArgs = extend(dragArgs, { source: sourceArgs1 });\n        }\n        else {\n            const dragArgs1 = extend(destArgs, { currentData: listData });\n            dragArgs = extend(dragArgs, { destination: dragArgs1 });\n        }\n        this.trigger('drop', dragArgs);\n    }\n    updateListItems(sourceElem, destElem) {\n        const i = 0;\n        destElem.innerHTML = \"\";\n        while (i < sourceElem.childNodes.length) {\n            destElem.appendChild(sourceElem.childNodes[i]);\n        }\n    }\n    removeSelected(listObj, elems) {\n        if (listObj.selectionSettings.showCheckbox) {\n            elems.forEach((ele) => { ele.getElementsByClassName('e-frame')[0].classList.remove('e-check'); });\n        }\n        else {\n            removeClass(elems, cssClass.selected);\n        }\n    }\n    getCurIdx(listObj, idx) {\n        if (listObj.fields.groupBy) {\n            idx -= [].slice.call(listObj.ulElement.children).slice(0, idx)\n                .filter((ele) => ele.classList.contains(cssClass.group)).length;\n        }\n        return idx;\n    }\n    getComponent(li) {\n        let listObj;\n        const ele = (this.element.tagName === 'EJS-LISTBOX' ? closest(li, '.e-listbox')\n            : closest(li, '.e-listbox-wrapper') && closest(li, '.e-listbox-wrapper').querySelector('.e-listbox'));\n        if (ele) {\n            listObj = getComponent(ele, this.getModuleName());\n        }\n        return listObj;\n    }\n    listOption(dataSource, fields) {\n        this.listCurrentOptions = super.listOption(dataSource, fields);\n        this.listCurrentOptions = extend({}, this.listCurrentOptions, { itemCreated: this.triggerBeforeItemRender.bind(this) }, true);\n        this.notify('listoption', { module: 'CheckBoxSelection' });\n        return this.listCurrentOptions;\n    }\n    triggerBeforeItemRender(e) {\n        e.item.setAttribute('tabindex', '-1');\n        this.trigger('beforeItemRender', { element: e.item, item: e.curData });\n    }\n    requiredModules() {\n        const modules = [];\n        if (this.selectionSettings.showCheckbox) {\n            modules.push({\n                member: 'CheckBoxSelection',\n                args: [this]\n            });\n        }\n        return modules;\n    }\n    /**\n     * This method is used to enable or disable the items in the ListBox based on the items and enable argument.\n     *\n     * @param {string[]} items - Text items that needs to be enabled/disabled.\n     * @param {boolean} enable - Set `true`/`false` to enable/disable the list items.\n     * @param {boolean} isValue - Set `true` if `items` parameter is a array of unique values.\n     * @returns {void}\n     */\n    enableItems(items, enable = true, isValue) {\n        let li;\n        items.forEach((item) => {\n            let text = item;\n            li = this.findListElement(this.list, 'li', 'data-value', isValue ? text : this.getValueByText(text));\n            if (!li) {\n                return;\n            }\n            if (enable) {\n                removeClass([li], cssClass.disabled);\n                li.removeAttribute('aria-disabled');\n            }\n            else {\n                addClass([li], cssClass.disabled);\n                li.setAttribute('aria-disabled', 'true');\n            }\n        });\n    }\n    /**\n     * Based on the state parameter, specified list item will be selected/deselected.\n     *\n     * @param {string[]} items - Array of text value of the item.\n     * @param {boolean} state - Set `true`/`false` to select/un select the list items.\n     * @param {boolean} isValue - Set `true` if `items` parameter is a array of unique values.\n     * @returns {void}\n     */\n    selectItems(items, state = true, isValue) {\n        this.setSelection(items, state, !isValue);\n        this.updateSelectedOptions();\n    }\n    /**\n     * Based on the state parameter, entire list item will be selected/deselected.\n     *\n     * @param {boolean} state - Set `true`/`false` to select/un select the entire list items.\n     * @returns {void}\n     */\n    selectAll(state = true) {\n        this.selectAllItems(state);\n    }\n    /**\n     * Adds a new item to the list. By default, new item appends to the list as the last item,\n     * but you can insert based on the index parameter.\n     *\n     * @param  { Object[] } items - Specifies an array of JSON data or a JSON data.\n     * @param { number } itemIndex - Specifies the index to place the newly added item in the list.\n     * @returns {void}.\n     */\n    addItems(items, itemIndex) {\n        super.addItem(items, itemIndex);\n    }\n    /**\n     * Removes a item from the list. By default, removed the last item in the list,\n     * but you can remove based on the index parameter.\n     *\n     * @param  { Object[] } items - Specifies an array of JSON data or a JSON data.\n     * @param { number } itemIndex - Specifies the index to remove the item from the list.\n     * @returns {void}.\n     */\n    removeItems(items, itemIndex) {\n        this.removeItem(items, itemIndex);\n    }\n    /**\n     * Removes a item from the list. By default, removed the last item in the list,\n     * but you can remove based on the index parameter.\n     *\n     * @param  { Object[] } items - Specifies an array of JSON data or a JSON data.\n     * @param { number } itemIndex - Specifies the index to remove the item from the list.\n     * @returns {void}.\n     */\n    removeItem(items, itemIndex) {\n        const liCollections = [];\n        const liElement = this.list.querySelectorAll('.' + dropDownBaseClasses.li);\n        if (items) {\n            items = (items instanceof Array ? items : [items]);\n            const fields = this.fields;\n            let dataValue;\n            let objValue;\n            const dupData = [];\n            let itemIdx;\n            extend(dupData, [], this.jsonData);\n            const removeIdxes = [];\n            const removeLiIdxes = [];\n            for (let j = 0; j < items.length; j++) {\n                if (items[j] instanceof Object) {\n                    dataValue = getValue(fields.value, items[j]);\n                }\n                else {\n                    dataValue = items[j].toString();\n                }\n                for (let i = 0, len = dupData.length; i < len; i++) {\n                    if (dupData[i] instanceof Object) {\n                        objValue = getValue(fields.value, dupData[i]);\n                    }\n                    else {\n                        objValue = dupData[i].toString();\n                    }\n                    if (objValue === dataValue) {\n                        itemIdx = this.getIndexByValue(dataValue);\n                        const idx = itemIdx === i ? itemIdx : i;\n                        liCollections.push(liElement[idx]);\n                        removeIdxes.push(idx);\n                        removeLiIdxes.push(idx);\n                    }\n                }\n            }\n            for (let k = removeIdxes.length - 1; k >= 0; k--) {\n                this.listData.splice(removeIdxes[k], 1);\n            }\n            for (let k = removeIdxes.length - 1; k >= 0; k--) {\n                this.jsonData.splice(removeIdxes[k], 1);\n            }\n            for (let k = removeLiIdxes.length - 1; k >= 0; k--) {\n                this.updateLiCollection(removeLiIdxes[k]);\n            }\n        }\n        else {\n            itemIndex = itemIndex ? itemIndex : 0;\n            liCollections.push(liElement[itemIndex]);\n            this.listData.splice(itemIndex, 1);\n            this.jsonData.splice(itemIndex, 1);\n            this.updateLiCollection(itemIndex);\n        }\n        for (let i = 0; i < liCollections.length; i++) {\n            this.ulElement.removeChild(liCollections[i]);\n        }\n        if (this.listData.length === 0) {\n            this.l10nUpdate();\n        }\n        this.value = null;\n        this.updateToolBarState();\n    }\n    /**\n     * Gets the array of data Object that matches the given array of values.\n     *\n     * @param  { string[] | number[] | boolean[] } value - Specifies the array value of the list item.\n     * @returns {object[]}.\n     */\n    getDataByValues(value) {\n        const data = [];\n        for (let i = 0; i < value.length; i++) {\n            data.push(this.getDataByValue(value[i]));\n        }\n        return data;\n    }\n    /**\n     * Moves the given value(s) / selected value(s) upwards.\n     *\n     * @param  { string[] | number[] | boolean[] } value - Specifies the value(s).\n     * @returns {void}\n     */\n    moveUp(value) {\n        const elem = (value) ? this.getElemByValue(value) : this.getSelectedItems();\n        this.moveUpDown(true, false, elem);\n    }\n    /**\n     * Moves the given value(s) / selected value(s) downwards.\n     *\n     * @param  { string[] | number[] | boolean[] } value - Specifies the value(s).\n     * @returns {void}\n     */\n    moveDown(value) {\n        const elem = (value) ? this.getElemByValue(value) : this.getSelectedItems();\n        this.moveUpDown(false, false, elem);\n    }\n    /**\n     * Moves the given value(s) / selected value(s) to the given / default scoped ListBox.\n     *\n     * @param  { string[] | number[] | boolean[] } value - Specifies the value or array value of the list item.\n     * @param {number} index - Specifies the index.\n     * @param {string} targetId - Specifies the target id.\n     * @returns {void}\n     */\n    moveTo(value, index, targetId) {\n        const elem = (value) ? this.getElemByValue(value) : this.getSelectedItems();\n        const tlistbox = (targetId) ? getComponent(targetId, ListBox_1) : this.getScopedListBox();\n        this.moveData(this, tlistbox, false, elem, index);\n    }\n    /**\n     * Moves all the values from one ListBox to the scoped ListBox.\n     *\n     * @param  { string } targetId - Specifies the scoped ListBox ID.\n     * @param  { string } index - Specifies the index to where the items moved.\n     * @returns {void}\n     */\n    moveAllTo(targetId, index) {\n        if (this.listData.length > 0) {\n            const tlistbox = (targetId) ? getComponent(targetId, ListBox_1) : this.getScopedListBox();\n            this.moveAllData(this, tlistbox, false, index);\n        }\n    }\n    /* eslint-disable */\n    /**\n     * Gets the updated dataSource in ListBox.\n     *\n     * @returns {{ [key: string]: Object }[] | string[] | boolean[] | number[]} - Updated DataSource.\n     */\n    /* eslint-enable */\n    getDataList() {\n        return this.jsonData;\n    }\n    /* eslint-disable */\n    /**\n     * Returns the sorted Data in ListBox.\n     *\n     * @returns {{ [key: string]: Object }[] | string[] | boolean[] | number[]} - Sorted data\n     */\n    /* eslint-enable */\n    getSortedList() {\n        let sortData;\n        let tempData;\n        sortData = tempData = this.sortedData;\n        if (this.fields.groupBy) {\n            sortData = [];\n            for (let i = 0; i < tempData.length; i++) {\n                if (tempData[i].isHeader) {\n                    continue;\n                }\n                sortData.push(tempData[i]);\n            }\n        }\n        return sortData;\n    }\n    getElemByValue(value) {\n        const elem = [];\n        for (let i = 0; i < value.length; i++) {\n            elem.push(this.ulElement.querySelector('[data-value =\"' + value[i] + '\"]'));\n        }\n        return elem;\n    }\n    updateLiCollection(index) {\n        const tempLi = [].slice.call(this.liCollections);\n        tempLi.splice(index, 1);\n        this.liCollections = tempLi;\n    }\n    selectAllItems(state, event) {\n        [].slice.call(this.getItems()).forEach((li) => {\n            if (!li.classList.contains(cssClass.disabled)) {\n                if (this.selectionSettings.showCheckbox) {\n                    const ele = li.getElementsByClassName('e-check')[0];\n                    if ((!ele && state) || (ele && !state)) {\n                        this.notify('updatelist', { li: li, module: 'listbox' });\n                        if (this.maximumSelectionLength >= this.list.querySelectorAll('.e-list-item span.e-check').length) {\n                            this.checkMaxSelection();\n                        }\n                    }\n                }\n                else {\n                    if (state) {\n                        li.classList.add(cssClass.selected);\n                    }\n                    else {\n                        li.classList.remove(cssClass.selected);\n                    }\n                }\n            }\n        });\n        this.updateSelectedOptions();\n        if (this.allowFiltering && this.selectionSettings.showCheckbox) {\n            const liEle = this.list.getElementsByTagName('li');\n            let index = 0;\n            if (state) {\n                for (index = 0; index < liEle.length; index++) {\n                    const dataValue1 = this.getFormattedValue(liEle[index].getAttribute('data-value'));\n                    if (!this.value.some((e) => e === dataValue1)) {\n                        this.value.push(this.getFormattedValue(liEle[index].getAttribute('data-value')));\n                    }\n                }\n            }\n            else {\n                for (index = 0; index < liEle.length; index++) {\n                    const dataValue2 = this.getFormattedValue(liEle[index].getAttribute('data-value'));\n                    this.value = this.value.filter((e) => e !== dataValue2);\n                }\n            }\n            if (document.querySelectorAll('ul').length < 2) {\n                this.updateMainList();\n            }\n        }\n        this.triggerChange(this.getSelectedItems(), event);\n    }\n    updateMainList() {\n        const mainList = this.mainList.querySelectorAll('.e-list-item');\n        const ulList = this.ulElement.querySelectorAll('.e-list-item');\n        const mainCount = mainList.length;\n        const ulEleCount = ulList.length;\n        if (this.selectionSettings.showCheckbox || (document.querySelectorAll('ul').length > 1 || mainCount !== ulEleCount)) {\n            let listindex = 0;\n            let valueindex = 0;\n            let count = 0;\n            for (listindex; listindex < mainCount;) {\n                if (this.value) {\n                    for (valueindex; valueindex < this.value.length; valueindex++) {\n                        if (mainList[listindex].getAttribute('data-value') === this.value[valueindex]) {\n                            count++;\n                        }\n                    }\n                }\n                if (!count && this.selectionSettings.showCheckbox) {\n                    mainList[listindex].getElementsByClassName('e-frame')[0].classList.remove('e-check');\n                }\n                if (document.querySelectorAll('ul').length > 1 && count && mainCount !== ulEleCount) {\n                    this.mainList.removeChild(this.mainList.getElementsByTagName('li')[listindex]);\n                    listindex = 0;\n                }\n                else {\n                    listindex++;\n                }\n                count = 0;\n                valueindex = 0;\n            }\n        }\n    }\n    wireEvents() {\n        const form = closest(this.element, 'form');\n        const wrapper = this.element.tagName === 'EJS-LISTBOX' ? this.element : this.list;\n        EventHandler.add(this.list, 'click', this.clickHandler, this);\n        EventHandler.add(wrapper, 'keydown', this.keyDownHandler, this);\n        EventHandler.add(wrapper, 'focusout', this.focusOutHandler, this);\n        this.wireToolbarEvent();\n        if (this.selectionSettings.showCheckbox) {\n            EventHandler.remove(document, 'mousedown', this.checkBoxSelectionModule.onDocumentClick);\n        }\n        if (this.fields.groupBy || this.element.querySelector('select>optgroup')) {\n            EventHandler.remove(this.list, 'scroll', this.setFloatingHeader);\n        }\n        if (form) {\n            EventHandler.add(form, 'reset', this.formResetHandler, this);\n        }\n    }\n    wireToolbarEvent() {\n        if (this.toolbarSettings.items.length) {\n            EventHandler.add(this.getToolElem(), 'click', this.toolbarClickHandler, this);\n        }\n    }\n    unwireEvents() {\n        const form = closest(this.element, 'form');\n        const wrapper = this.element.tagName === 'EJS-LISTBOX' ? this.element : this.list;\n        EventHandler.remove(this.list, 'click', this.clickHandler);\n        EventHandler.remove(wrapper, 'keydown', this.keyDownHandler);\n        EventHandler.remove(wrapper, 'focusout', this.focusOutHandler);\n        if (this.allowFiltering && this.clearFilterIconElem) {\n            EventHandler.remove(this.clearFilterIconElem, 'click', this.clearText);\n        }\n        if (this.toolbarSettings.items.length) {\n            EventHandler.remove(this.getToolElem(), 'click', this.toolbarClickHandler);\n        }\n        if (form) {\n            EventHandler.remove(form, 'reset', this.formResetHandler);\n        }\n    }\n    clickHandler(e) {\n        this.selectHandler(e);\n    }\n    checkSelectAll() {\n        let searchCount = 0;\n        const liItems = this.list.querySelectorAll('li.' + dropDownBaseClasses.li);\n        for (let i = 0; i < liItems.length; i++) {\n            if (!liItems[i].classList.contains('e-disabled')) {\n                searchCount++;\n            }\n        }\n        const len = this.getSelectedItems().length;\n        if (this.showSelectAll && searchCount) {\n            this.notify('checkSelectAll', { module: 'CheckBoxSelection',\n                value: (searchCount === len) ? 'check' : (len === 0) ? 'uncheck' : 'indeterminate' });\n        }\n    }\n    getQuery(query) {\n        let filterQuery = query ? query.clone() : this.query ? this.query.clone() : new Query();\n        if (this.allowFiltering) {\n            const filterType = this.inputString === '' ? 'contains' : this.filterType;\n            let dataType = this.typeOfData(this.dataSource).typeof;\n            if (dataType === null) {\n                dataType = this.typeOfData(this.jsonData).typeof;\n            }\n            if (!(this.dataSource instanceof DataManager) && dataType === 'string' || dataType === 'number') {\n                filterQuery.where('', filterType, this.inputString, this.ignoreCase, this.ignoreAccent);\n            }\n            else {\n                const fields = (this.fields.text) ? this.fields.text : '';\n                filterQuery.where(fields, filterType, this.inputString, this.ignoreCase, this.ignoreAccent);\n            }\n        }\n        else {\n            filterQuery = query ? query : this.query ? this.query : new Query();\n        }\n        return filterQuery;\n    }\n    setFiltering() {\n        let filterInputObj;\n        if (this.initLoad || isNullOrUndefined(this.filterParent)) {\n            this.filterParent = this.createElement('span', {\n                className: listBoxClasses.filterParent\n            });\n            this.filterInput = this.createElement('input', {\n                attrs: { type: 'text' },\n                className: listBoxClasses.filterInput\n            });\n            this.element.parentNode.insertBefore(this.filterInput, this.element);\n            filterInputObj = Input.createInput({\n                element: this.filterInput,\n                buttons: [listBoxClasses.filterBarClearIcon],\n                properties: { placeholder: this.filterBarPlaceholder }\n            }, this.createElement);\n            append([filterInputObj.container], this.filterParent);\n            prepend([this.filterParent], this.list);\n            attributes(this.filterInput, {\n                'aria-disabled': 'false',\n                'aria-owns': this.element.id + '_options',\n                'role': 'listbox',\n                'aria-activedescendant': null,\n                'autocomplete': 'off',\n                'autocorrect': 'off',\n                'autocapitalize': 'off',\n                'spellcheck': 'false'\n            });\n            if (this.height.toString().indexOf('%') < 0) {\n                addClass([this.list], 'e-filter-list');\n            }\n            this.inputString = this.filterInput.value;\n            this.filterWireEvents();\n            return filterInputObj;\n        }\n    }\n    filterWireEvents(filterElem) {\n        if (filterElem) {\n            this.filterInput = filterElem.querySelector('.e-input-filter');\n        }\n        this.clearFilterIconElem = this.filterInput.parentElement.querySelector('.' + listBoxClasses.clearIcon);\n        if (this.clearFilterIconElem) {\n            EventHandler.add(this.clearFilterIconElem, 'click', this.clearText, this);\n            if (!filterElem) {\n                this.clearFilterIconElem.style.visibility = 'hidden';\n            }\n        }\n        EventHandler.add(this.filterInput, 'input', this.onInput, this);\n        EventHandler.add(this.filterInput, 'keyup', this.KeyUp, this);\n        EventHandler.add(this.filterInput, 'keydown', this.onKeyDown, this);\n    }\n    selectHandler(e, isKey) {\n        let isSelect = true;\n        let currSelIdx;\n        const li = closest(e.target, '.' + 'e-list-item');\n        let selectedLi = [li];\n        if (li && li.parentElement) {\n            currSelIdx = [].slice.call(li.parentElement.children).indexOf(li);\n            if (!this.selectionSettings.showCheckbox) {\n                if ((e.ctrlKey || Browser.isDevice) && this.isSelected(li)) {\n                    li.classList.remove(cssClass.selected);\n                    li.removeAttribute('aria-selected');\n                    isSelect = false;\n                }\n                else if (!(this.selectionSettings.mode === 'Multiple' && (e.ctrlKey || Browser.isDevice))) {\n                    this.getSelectedItems().forEach((ele) => {\n                        ele.removeAttribute('aria-selected');\n                    });\n                    removeClass(this.getSelectedItems(), cssClass.selected);\n                }\n            }\n            else {\n                isSelect = !li.getElementsByClassName('e-frame')[0].classList.contains('e-check');\n            }\n            if (e.shiftKey && !this.selectionSettings.showCheckbox && this.selectionSettings.mode !== 'Single') {\n                selectedLi = [].slice.call(li.parentElement.children)\n                    .slice(Math.min(currSelIdx, this.prevSelIdx), Math.max(currSelIdx, this.prevSelIdx) + 1)\n                    .filter((ele) => { return ele.classList.contains('e-list-item'); });\n            }\n            else {\n                this.prevSelIdx = [].slice.call(li.parentElement.children).indexOf(li);\n            }\n            if (isSelect) {\n                if (!this.selectionSettings.showCheckbox) {\n                    addClass(selectedLi, cssClass.selected);\n                }\n                selectedLi.forEach((ele) => {\n                    ele.setAttribute('aria-selected', 'true');\n                });\n                this.list.setAttribute('aria-activedescendant', li.id);\n            }\n            else {\n                selectedLi.forEach((ele) => {\n                    ele.setAttribute('aria-selected', 'false');\n                });\n            }\n            if (!isKey && (this.maximumSelectionLength > (this.value && this.value.length) || !isSelect) &&\n                (this.maximumSelectionLength >= (this.value && this.value.length) || !isSelect) &&\n                !(this.maximumSelectionLength < (this.value && this.value.length))) {\n                this.notify('updatelist', { li: li, e: e, module: 'listbox' });\n            }\n            if (this.allowFiltering && !isKey) {\n                const liDataValue = this.getFormattedValue(li.getAttribute('data-value'));\n                if (!isSelect) {\n                    this.value = this.value.filter((value1) => value1 !== liDataValue);\n                }\n                else {\n                    const values = [];\n                    extend(values, this.value);\n                    values.push(liDataValue);\n                    this.value = values;\n                }\n                if (document.querySelectorAll('ul').length < 2) {\n                    this.updateMainList();\n                }\n            }\n            this.updateSelectedOptions();\n            this.triggerChange(this.getSelectedItems(), e);\n            this.checkMaxSelection();\n        }\n    }\n    triggerChange(selectedLis, event) {\n        this.trigger('change', { elements: selectedLis, items: this.getDataByElements(selectedLis), value: this.value, event: event });\n    }\n    getDataByElems(elems) {\n        const data = [];\n        for (let i = 0, len = elems.length; i < len; i++) {\n            data.push(this.getDataByValue(this.getFormattedValue(elems[i].getAttribute('data-value'))));\n        }\n        return data;\n    }\n    getDataByElements(elems) {\n        const data = [];\n        let value;\n        let sIdx = 0;\n        if (!isNullOrUndefined(this.listData)) {\n            const type = this.typeOfData(this.listData).typeof;\n            if (type === 'string' || type === 'number' || type === 'boolean') {\n                for (const item of this.listData) {\n                    for (let i = sIdx, len = elems.length; i < len; i++) {\n                        value = this.getFormattedValue(elems[i].getAttribute('data-value'));\n                        if (!isNullOrUndefined(item) && item === value) {\n                            sIdx = i;\n                            data.push(item);\n                            break;\n                        }\n                    }\n                    if (elems.length === data.length) {\n                        break;\n                    }\n                }\n            }\n            else {\n                for (const item of this.listData) {\n                    for (let i = sIdx, len = elems.length; i < len; i++) {\n                        value = this.getFormattedValue(elems[i].getAttribute('data-value'));\n                        if (!isNullOrUndefined(item) && getValue((this.fields.value ? this.fields.value : 'value'), item) === value) {\n                            sIdx = i;\n                            data.push(item);\n                            break;\n                        }\n                    }\n                    if (elems.length === data.length) {\n                        break;\n                    }\n                }\n            }\n            return data;\n        }\n        return null;\n    }\n    checkMaxSelection() {\n        const limit = this.list.querySelectorAll('.e-list-item span.e-check').length;\n        if (this.selectionSettings.showCheckbox) {\n            let index = 0;\n            const liCollElem = this.list.getElementsByClassName('e-list-item');\n            for (index; index < liCollElem.length; index++) {\n                if (!liCollElem[index].querySelector('.e-frame.e-check')) {\n                    if (limit === this.maximumSelectionLength) {\n                        liCollElem[index].classList.add('e-disable');\n                    }\n                    else if (liCollElem[index].classList.contains('e-disable')) {\n                        liCollElem[index].classList.remove('e-disable');\n                    }\n                }\n            }\n        }\n    }\n    toolbarClickHandler(e) {\n        const btn = closest(e.target, 'button');\n        if (btn) {\n            this.toolbarAction = btn.getAttribute('data-value');\n            if (btn.disabled) {\n                return;\n            }\n            switch (this.toolbarAction) {\n                case 'moveUp':\n                    this.moveUpDown(true);\n                    break;\n                case 'moveDown':\n                    this.moveUpDown();\n                    break;\n                case 'moveTo':\n                    this.moveItemTo();\n                    break;\n                case 'moveFrom':\n                    this.moveItemFrom();\n                    break;\n                case 'moveAllTo':\n                    this.moveAllItemTo();\n                    break;\n                case 'moveAllFrom':\n                    this.moveAllItemFrom();\n                    break;\n                default:\n                    this.trigger('actionBegin', { cancel: false, items: this.getDataByElems(this.getSelectedItems()),\n                        eventName: this.toolbarAction });\n                    break;\n            }\n        }\n    }\n    moveUpDown(isUp, isKey, value) {\n        let elems = this.getSelectedItems();\n        if (value) {\n            elems = value;\n        }\n        if (((isUp && this.isSelected(this.ulElement.firstElementChild))\n            || (!isUp && this.isSelected(this.ulElement.lastElementChild))) && !value) {\n            return;\n        }\n        const tempItems = this.getDataByElems(elems);\n        const localDataArgs = { cancel: false, items: tempItems, eventName: this.toolbarAction };\n        this.trigger('actionBegin', localDataArgs);\n        if (localDataArgs.cancel) {\n            return;\n        }\n        (isUp ? elems : elems.reverse()).forEach((ele) => {\n            const jsonToIdx = Array.prototype.indexOf.call(this.ulElement.querySelectorAll('.e-list-item'), ele);\n            const idx = Array.prototype.indexOf.call(this.ulElement.children, ele);\n            moveTo(this.ulElement, this.ulElement, [idx], isUp ? idx - 1 : idx + 2);\n            this.changeData(idx, isUp ? idx - 1 : idx + 1, isUp ? jsonToIdx - 1 : jsonToIdx + 1, ele);\n        });\n        this.trigger('actionComplete', { items: tempItems, eventName: this.toolbarAction });\n        elems[0].focus();\n        if (!isKey && this.toolbarSettings.items.length) {\n            this.getToolElem().querySelector('[data-value=' + (isUp ? 'moveUp' : 'moveDown') + ']').focus();\n        }\n        this.updateToolBarState();\n    }\n    moveItemTo() {\n        this.moveData(this, this.getScopedListBox());\n    }\n    moveItemFrom() {\n        this.moveData(this.getScopedListBox(), this);\n    }\n    /**\n     * Called internally if any of the property value changed.\n     *\n     * @param {ListBox} fListBox - Specifies the from listbox.\n     * @param {ListBox} tListBox - Specifies the to listbox.\n     * @param {boolean} isKey - Specifies the key.\n     * @param {Element[]} value - Specifies the value.\n     * @param {number} index - Specifies the index.\n     * @returns {void}\n     * @private\n     */\n    moveData(fListBox, tListBox, isKey, value, index) {\n        const idx = [];\n        const dataIdx = [];\n        const jsonIdx = [];\n        const sortIdx = [];\n        const listData = [].slice.call(fListBox.listData);\n        const tListData = [].slice.call(tListBox.listData);\n        const sortData = [].slice.call(fListBox.sortedData);\n        let tSortData = [].slice.call(tListBox.sortedData);\n        const fliCollections = [].slice.call(fListBox.liCollections);\n        const dataLiIdx = [];\n        const tliCollections = [].slice.call(tListBox.liCollections);\n        const tempItems = [];\n        const data = [];\n        let elems = fListBox.getSelectedItems();\n        if (value) {\n            elems = value;\n        }\n        const isRefresh = tListBox.sortOrder !== 'None' || (tListBox.selectionSettings.showCheckbox !==\n            fListBox.selectionSettings.showCheckbox) || tListBox.fields.groupBy || tListBox.itemTemplate || fListBox.itemTemplate;\n        fListBox.value = [];\n        if (elems.length) {\n            this.removeSelected(fListBox, elems);\n            elems.forEach((ele) => {\n                idx.push(Array.prototype.indexOf.call(fListBox.ulElement.children, ele)); // update sortable elem\n                // To update lb view data\n                dataLiIdx.push(Array.prototype.indexOf.call(fListBox.ulElement.querySelectorAll('.e-list-item'), ele));\n                // To update lb listdata data\n                dataIdx.push(Array.prototype.indexOf.call(fListBox.listData, fListBox.getDataByElems([ele])[0]));\n                // To update lb sorted data\n                sortIdx.push(Array.prototype.indexOf.call(fListBox.sortedData, fListBox.getDataByElems([ele])[0]));\n                // To update lb original data\n                jsonIdx.push(Array.prototype.indexOf.call(fListBox.jsonData, fListBox.getDataByElems([ele])[0]));\n            });\n            if (this.sortOrder !== 'None') {\n                sortIdx.forEach((i) => {\n                    tempItems.push(fListBox.sortedData[i]);\n                });\n            }\n            else {\n                jsonIdx.forEach((i) => {\n                    tempItems.push(fListBox.jsonData[i]);\n                });\n            }\n            const localDataArgs = { cancel: false, items: tempItems, eventName: this.toolbarAction };\n            fListBox.trigger('actionBegin', localDataArgs);\n            if (localDataArgs.cancel) {\n                return;\n            }\n            const rLiCollection = [];\n            dataLiIdx.sort((n1, n2) => n1 - n2).reverse().forEach((i) => {\n                rLiCollection.push(fliCollections.splice(i, 1)[0]);\n            });\n            fListBox.liCollections = fliCollections;\n            if (index) {\n                const toColl = tliCollections.splice(0, index);\n                tListBox.liCollections = toColl.concat(rLiCollection.reverse()).concat(tliCollections);\n            }\n            else {\n                tListBox.liCollections = tliCollections.concat(rLiCollection.reverse());\n            }\n            if (tListBox.listData.length === 0) {\n                const noRecElem = tListBox.ulElement.childNodes[0];\n                if (noRecElem) {\n                    tListBox.ulElement.removeChild(noRecElem);\n                }\n            }\n            dataIdx.sort((n1, n2) => n2 - n1).forEach((i) => {\n                // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n                listData.splice(i, 1)[0];\n            });\n            sortIdx.sort((n1, n2) => n2 - n1).forEach((i) => {\n                // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n                sortData.splice(i, 1)[0];\n            });\n            jsonIdx.slice().reverse().forEach((i) => {\n                data.push(fListBox.jsonData.splice(i, 1)[0]);\n            });\n            if (isRefresh) {\n                if (fListBox.fields.groupBy) {\n                    let sourceElem = fListBox.renderItems(listData, fListBox.fields);\n                    fListBox.updateListItems(sourceElem, fListBox.ulElement);\n                }\n                else {\n                    elems.forEach((ele) => { detach(ele); });\n                }\n            }\n            else {\n                moveTo(fListBox.ulElement, tListBox.ulElement, idx, index);\n                fListBox.trigger('actionComplete', { items: tempItems, eventName: this.toolbarAction });\n            }\n            if (tListBox.mainList.childElementCount !== tListBox.jsonData.length) {\n                tListBox.mainList = tListBox.ulElement;\n            }\n            fListBox.updateMainList();\n            const tJsonData = [].slice.call(tListBox.jsonData);\n            tSortData = [].slice.call(tListBox.sortedData);\n            this.selectNextList(elems, dataLiIdx, dataIdx, fListBox);\n            if (isKey) {\n                this.list.focus();\n            }\n            fListBox.listData = listData;\n            fListBox.sortedData = sortData;\n            index = (index) ? index : tListData.length;\n            for (let i = tempItems.length - 1; i >= 0; i--) {\n                tListData.splice(index, 0, tempItems[i]);\n                tJsonData.splice(index, 0, tempItems[i]);\n                tSortData.splice(index, 0, tempItems[i]);\n            }\n            tListBox.listData = tListData;\n            tListBox.jsonData = tJsonData;\n            tListBox.sortedData = tSortData;\n            if (isRefresh) {\n                let sourceElem = tListBox.renderItems(tListData, tListBox.fields);\n                tListBox.updateListItems(sourceElem, tListBox.ulElement);\n                tListBox.setSelection();\n                fListBox.trigger('actionComplete', { items: tempItems, eventName: this.toolbarAction });\n            }\n            fListBox.updateSelectedOptions();\n            if (fListBox.listData.length === 0) {\n                fListBox.l10nUpdate();\n            }\n        }\n        if (fListBox.value.length === 1 && fListBox.getSelectedItems().length) {\n            fListBox.value[0] = fListBox.getFormattedValue(fListBox.getSelectedItems()[0].getAttribute('data-value'));\n        }\n    }\n    selectNextList(elems, dataLiIdx, dataIdx, inst) {\n        const childCnt = inst.ulElement.querySelectorAll('.e-list-item').length;\n        let ele;\n        let liIdx;\n        let validIdx = -1;\n        if (elems.length === 1 && childCnt && !inst.selectionSettings.showCheckbox) {\n            liIdx = childCnt <= dataLiIdx[0] ? childCnt - 1 : dataLiIdx[0];\n            ele = inst.ulElement.querySelectorAll('.e-list-item')[liIdx];\n            validIdx = inst.getValidIndex(ele, liIdx, childCnt === dataIdx[0] ? 38 : 40);\n            if (validIdx > -1) {\n                (inst.ulElement.querySelectorAll('.e-list-item')[validIdx].classList.add(cssClass.selected));\n            }\n        }\n    }\n    moveAllItemTo() {\n        this.moveAllData(this, this.getScopedListBox());\n    }\n    moveAllItemFrom() {\n        this.moveAllData(this.getScopedListBox(), this);\n    }\n    moveAllData(fListBox, tListBox, isKey, index) {\n        let listData = [].slice.call(tListBox.listData);\n        const jsonData = [].slice.call(tListBox.jsonData);\n        const isRefresh = tListBox.sortOrder !== 'None' || (tListBox.selectionSettings.showCheckbox !==\n            fListBox.selectionSettings.showCheckbox) || tListBox.fields.groupBy || tListBox.itemTemplate || fListBox.itemTemplate;\n        this.removeSelected(fListBox, fListBox.getSelectedItems());\n        const tempItems = [].slice.call(fListBox.jsonData);\n        const localDataArgs = { cancel: false, items: tempItems, eventName: this.toolbarAction };\n        fListBox.trigger('actionBegin', localDataArgs);\n        if (localDataArgs.cancel) {\n            return;\n        }\n        if (tListBox.listData.length === 0) {\n            const noRecElem = tListBox.ulElement.childNodes[0];\n            if (noRecElem) {\n                tListBox.ulElement.removeChild(noRecElem);\n            }\n        }\n        if (isRefresh) {\n            const noRecElem = fListBox.ulElement.childNodes[0];\n            if (noRecElem) {\n                fListBox.ulElement.removeChild(noRecElem);\n            }\n        }\n        moveTo(fListBox.ulElement, tListBox.ulElement, \n        // eslint-disable-next-line prefer-spread\n        Array.apply(null, { length: fListBox.ulElement.childElementCount }).map(Number.call, Number), index);\n        this.trigger('actionComplete', { items: tempItems, eventName: this.toolbarAction });\n        if (isKey) {\n            this.list.focus();\n        }\n        index = (index) ? index : listData.length;\n        for (let i = 0; i < fListBox.listData.length; i++) {\n            listData.splice(index + i, 0, fListBox.listData[i]);\n        }\n        for (let i = 0; i < fListBox.jsonData.length; i++) {\n            jsonData.splice(index + i, 0, fListBox.jsonData[i]);\n        }\n        const fliCollections = [].slice.call(fListBox.liCollections);\n        const tliCollections = [].slice.call(tListBox.liCollections);\n        fListBox.liCollections = [];\n        if (index) {\n            const toColl = tliCollections.splice(0, index);\n            tListBox.liCollections = toColl.concat(fliCollections).concat(tliCollections);\n        }\n        else {\n            tListBox.liCollections = tliCollections.concat(fliCollections);\n        }\n        fListBox.value = [];\n        listData = listData\n            .filter((data) => data.isHeader !== true);\n        tListBox.listData = listData;\n        tListBox.jsonData = jsonData;\n        fListBox.listData = fListBox.sortedData = fListBox.jsonData = [];\n        if (isRefresh) {\n            let sourceElem = tListBox.renderItems(listData, tListBox.fields);\n            tListBox.updateListItems(sourceElem, tListBox.ulElement);\n            this.trigger('actionComplete', { items: tempItems, eventName: this.toolbarAction });\n        }\n        else {\n            tListBox.sortedData = listData;\n        }\n        fListBox.updateSelectedOptions();\n        if (fListBox.listData.length === 0) {\n            fListBox.l10nUpdate();\n        }\n    }\n    changeData(fromIdx, toIdx, jsonToIdx, ele) {\n        const listData = [].slice.call(this.listData);\n        const jsonData = [].slice.call(this.jsonData);\n        const sortData = [].slice.call(this.sortedData);\n        const jsonIdx = Array.prototype.indexOf.call(this.jsonData, this.getDataByElems([ele])[0]);\n        const sortIdx = Array.prototype.indexOf.call(this.sortedData, this.getDataByElems([ele])[0]);\n        const liColl = [].slice.call(this.liCollections);\n        listData.splice(toIdx, 0, listData.splice(fromIdx, 1)[0]);\n        jsonData.splice(jsonToIdx, 0, jsonData.splice(jsonIdx, 1)[0]);\n        sortData.splice(toIdx, 0, sortData.splice(sortIdx, 1)[0]);\n        liColl.splice(toIdx, 0, liColl.splice(fromIdx, 1)[0]);\n        this.listData = listData;\n        this.jsonData = jsonData;\n        this.liCollections = liColl;\n        this.sortedData = sortData;\n    }\n    getSelectedItems() {\n        let ele = [];\n        if (this.selectionSettings.showCheckbox) {\n            [].slice.call(this.ulElement.getElementsByClassName('e-check')).forEach((cbox) => {\n                ele.push(closest(cbox, '.' + 'e-list-item'));\n            });\n        }\n        else {\n            ele = [].slice.call(this.ulElement.getElementsByClassName(cssClass.selected));\n        }\n        return ele;\n    }\n    getScopedListBox() {\n        let listObj;\n        if (this.scope) {\n            [].slice.call(document.querySelectorAll(this.scope)).forEach((ele) => {\n                if (getComponent(ele, this.getModuleName())) {\n                    listObj = getComponent(ele, this.getModuleName());\n                }\n            });\n        }\n        return listObj;\n    }\n    getGrabbedItems() {\n        for (let i = 0; i < this.value.length; i++) {\n            if (this.value[i] === this.dragValue) {\n                const liColl = this.list.querySelectorAll('[aria-selected=\"true\"]');\n                for (let i = 0; i < liColl.length; i++) {\n                    liColl[i].classList.add('e-grabbed');\n                }\n                break;\n            }\n        }\n        const elems = Array.prototype.slice.call(this.element.querySelectorAll('.e-grabbed'));\n        return elems;\n    }\n    getDragArgs(args, isDragEnd) {\n        let elems = this.getGrabbedItems();\n        if (elems.length) {\n            if (isDragEnd) {\n                elems.push(args.target);\n            }\n        }\n        else {\n            elems = [args.target];\n        }\n        return { elements: elems, items: this.getDataByElems(elems) };\n    }\n    onKeyDown(e) {\n        this.keyDownHandler(e);\n        e.stopPropagation();\n    }\n    keyDownHandler(e) {\n        if ([32, 35, 36, 37, 38, 39, 40, 65].indexOf(e.keyCode) > -1 && !this.allowFiltering) {\n            if (e.target && e.target.className.indexOf('e-edit-template') > -1) {\n                return;\n            }\n            e.preventDefault();\n            if (e.keyCode === 32 && this.ulElement.children.length) {\n                this.selectHandler({\n                    target: this.ulElement.getElementsByClassName('e-focused')[0],\n                    ctrlKey: e.ctrlKey, shiftKey: e.shiftKey\n                });\n            }\n            else if (e.keyCode === 65 && e.ctrlKey) {\n                this.selectAll();\n            }\n            else if ((e.keyCode === 38 || e.keyCode === 40) && e.ctrlKey && e.shiftKey) {\n                this.moveUpDown(e.keyCode === 38 ? true : false, true);\n            }\n            else if ((this.toolbarSettings.items.length || this.tBListBox) && (e.keyCode === 39 || e.keyCode === 37) && e.ctrlKey) {\n                const listObj = this.tBListBox || this.getScopedListBox();\n                if (e.keyCode === 39) {\n                    if (e.shiftKey) {\n                        this.moveAllData(this, listObj, true);\n                    }\n                    else {\n                        this.moveData(this, listObj, true);\n                    }\n                }\n                else {\n                    if (e.shiftKey) {\n                        this.moveAllData(listObj, this, true);\n                    }\n                    else {\n                        this.moveData(listObj, this, true);\n                    }\n                }\n            }\n            else if (e.keyCode !== 37 && e.keyCode !== 39 && e.code !== \"KeyA\") {\n                this.upDownKeyHandler(e);\n            }\n        }\n        else if (this.allowFiltering) {\n            if (e.keyCode === 40 || e.keyCode === 38) {\n                this.upDownKeyHandler(e);\n            }\n        }\n    }\n    upDownKeyHandler(e) {\n        const ul = this.ulElement;\n        const defaultIdx = (e.keyCode === 40 || e.keyCode === 36) ? 0 : ul.childElementCount - 1;\n        let fliIdx = defaultIdx;\n        const fli = ul.getElementsByClassName('e-focused')[0] || ul.getElementsByClassName(cssClass.selected)[0];\n        if (fli) {\n            if (e.keyCode !== 35 && e.keyCode !== 36) {\n                fliIdx = Array.prototype.indexOf.call(ul.children, fli);\n                if (e.keyCode === 40) {\n                    fliIdx++;\n                }\n                else {\n                    fliIdx--;\n                }\n                if (fliIdx < 0 || fliIdx > ul.childElementCount - 1) {\n                    return;\n                }\n            }\n            removeClass([fli], 'e-focused');\n        }\n        const cli = ul.children[fliIdx];\n        if (cli) {\n            fliIdx = this.getValidIndex(cli, fliIdx, e.keyCode);\n            if (fliIdx === -1) {\n                addClass([fli], 'e-focused');\n                return;\n            }\n            ul.children[fliIdx].focus();\n            ul.children[fliIdx].classList.add('e-focused');\n            if (!e.ctrlKey || !this.selectionSettings.showCheckbox && e.shiftKey && (e.keyCode === 36 || e.keyCode === 35)) {\n                this.selectHandler({ target: ul.children[fliIdx], ctrlKey: e.ctrlKey, shiftKey: e.shiftKey }, true);\n            }\n            if (this.selectionSettings.showCheckbox && e.ctrlKey && e.shiftKey && (e.keyCode === 36 || e.keyCode === 35)) {\n                let selectedidx = Array.prototype.indexOf.call(ul.children, fli);\n                let sidx = e.code === \"Home\" ? 0 : selectedidx;\n                let eidx = e.code === \"Home\" ? selectedidx : ul.children.length - 1;\n                for (let i = sidx; i <= eidx; i++) {\n                    const item = ul.children[i];\n                    this.notify('updatelist', { li: item, e: {\n                            target: this.ulElement.getElementsByClassName('e-focused')[0],\n                            ctrlKey: e.ctrlKey, shiftKey: e.shiftKey\n                        }, module: 'listbox' });\n                }\n            }\n        }\n    }\n    KeyUp(e) {\n        const char = String.fromCharCode(e.keyCode);\n        const isWordCharacter = char.match(/\\w/);\n        if (!isNullOrUndefined(isWordCharacter)) {\n            this.isValidKey = true;\n        }\n        this.isValidKey = (e.keyCode === 8) || (e.keyCode === 46) || this.isValidKey;\n        if (this.isValidKey) {\n            this.isValidKey = false;\n            switch (e.keyCode) {\n                default:\n                    if (this.allowFiltering) {\n                        const eventArgsData = {\n                            preventDefaultAction: false,\n                            text: this.targetElement(),\n                            updateData: (dataSource, query, fields) => {\n                                if (eventArgsData.cancel) {\n                                    return;\n                                }\n                                this.isFiltered = true;\n                                this.remoteFilterAction = true;\n                                this.dataUpdater(dataSource, query, fields);\n                            },\n                            event: e,\n                            cancel: false\n                        };\n                        this.trigger('filtering', eventArgsData, (args) => {\n                            this.isDataFetched = false;\n                            if (args.cancel || (this.filterInput.value !== '' && this.isFiltered)) {\n                                return;\n                            }\n                            if (!args.cancel && !this.isCustomFiltering && !args.preventDefaultAction) {\n                                this.inputString = this.filterInput.value;\n                                this.filteringAction(this.jsonData, new Query(), this.fields);\n                            }\n                            if (!this.isFiltered && !this.isCustomFiltering && !args.preventDefaultAction) {\n                                this.dataUpdater(this.jsonData, new Query(), this.fields);\n                            }\n                        });\n                    }\n            }\n        }\n    }\n    /**\n     * To filter the data from given data source by using query.\n     *\n     * @param  {Object[] | DataManager } dataSource - Set the data source to filter.\n     * @param  {Query} query - Specify the query to filter the data.\n     * @param  {FieldSettingsModel} fields - Specify the fields to map the column in the data table.\n     * @returns {void}.\n     */\n    filter(dataSource, query, fields) {\n        this.isCustomFiltering = true;\n        this.filteringAction(dataSource, query, fields);\n    }\n    filteringAction(dataSource, query, fields) {\n        this.resetList(dataSource, fields, query);\n    }\n    targetElement() {\n        this.targetInputElement = this.list.getElementsByClassName('e-input-filter')[0];\n        return this.targetInputElement.value;\n    }\n    dataUpdater(dataSource, query, fields) {\n        this.isDataFetched = false;\n        const backCommand = true;\n        if (this.targetElement().trim() === '') {\n            const list = this.mainList.cloneNode ? this.mainList.cloneNode(true) : this.mainList;\n            if (backCommand) {\n                this.remoteCustomValue = false;\n                this.onActionComplete(list, this.jsonData);\n                this.notify('reOrder', { module: 'CheckBoxSelection', enable: this.selectionSettings.showCheckbox, e: this });\n            }\n        }\n        else {\n            this.resetList(dataSource, fields, query);\n        }\n    }\n    focusOutHandler() {\n        const ele = this.list.getElementsByClassName('e-focused')[0];\n        if (ele) {\n            ele.classList.remove('e-focused');\n        }\n        if (this.allowFiltering) {\n            this.refreshClearIcon();\n        }\n    }\n    getValidIndex(cli, index, keyCode) {\n        const cul = this.ulElement;\n        if (cli.classList.contains('e-disabled') || cli.classList.contains(cssClass.group)) {\n            if (keyCode === 40 || keyCode === 36) {\n                index++;\n            }\n            else {\n                index--;\n            }\n        }\n        if (index < 0 || index === cul.childElementCount) {\n            return -1;\n        }\n        cli = cul.querySelectorAll('.e-list-item')[index];\n        if (cli.classList.contains('e-disabled') || cli.classList.contains(cssClass.group)) {\n            index = this.getValidIndex(cli, index, keyCode);\n        }\n        return index;\n    }\n    updateSelectedOptions() {\n        const selectedOptions = [];\n        const values = [];\n        extend(values, this.value);\n        this.getSelectedItems().forEach((ele) => {\n            if (!ele.classList.contains('e-grabbed')) {\n                selectedOptions.push(this.getFormattedValue(ele.getAttribute('data-value')));\n            }\n        });\n        if (this.mainList.childElementCount === this.ulElement.childElementCount) {\n            if (this.allowFiltering && this.selectionSettings.showCheckbox) {\n                for (let i = 0; i < selectedOptions.length; i++) {\n                    if (values.indexOf(selectedOptions[i]) > -1) {\n                        continue;\n                    }\n                    else {\n                        values.push(selectedOptions[i]);\n                    }\n                }\n                this.setProperties({ value: values }, true);\n            }\n            else {\n                this.setProperties({ value: selectedOptions }, true);\n            }\n        }\n        this.updateSelectTag();\n        this.updateToolBarState();\n        if (this.tBListBox) {\n            this.tBListBox.updateToolBarState();\n        }\n    }\n    clearSelection(values = this.value) {\n        if (this.selectionSettings.showCheckbox) {\n            let dvalue;\n            this.getSelectedItems().forEach((li) => {\n                dvalue = this.getFormattedValue(li.getAttribute('data-value'));\n                if (values.indexOf(dvalue) < 0) {\n                    li.getElementsByClassName('e-check')[0].classList.remove('e-check');\n                    li.getElementsByClassName('e-checkbox-wrapper')[0].removeAttribute('aria-checked');\n                    li.removeAttribute('aria-selected');\n                }\n            });\n        }\n    }\n    setSelection(values = this.value, isSelect = true, isText = false) {\n        let li;\n        let liselect;\n        if (values) {\n            values.forEach((value) => {\n                let text;\n                if (isText) {\n                    text = this.getValueByText(value);\n                }\n                else {\n                    text = value;\n                }\n                li = this.list.querySelector('[data-value=\"' + text + '\"]');\n                if (li) {\n                    if (this.selectionSettings.showCheckbox) {\n                        liselect = li.getElementsByClassName('e-frame')[0].classList.contains('e-check');\n                    }\n                    else {\n                        liselect = li.classList.contains('e-selected');\n                    }\n                    if (!isSelect && liselect || isSelect && !liselect && li) {\n                        if (this.selectionSettings.showCheckbox) {\n                            this.notify('updatelist', { li: li, module: 'listbox' });\n                        }\n                        else {\n                            if (isSelect) {\n                                li.classList.add(cssClass.selected);\n                                li.setAttribute('aria-selected', 'true');\n                            }\n                            else {\n                                li.classList.remove(cssClass.selected);\n                                li.removeAttribute('aria-selected');\n                            }\n                        }\n                    }\n                }\n            });\n        }\n        this.updateSelectTag();\n    }\n    updateSelectTag() {\n        const ele = this.getSelectTag();\n        let innerHTML = '';\n        ele.innerHTML = '';\n        if (this.value) {\n            for (let i = 0, len = this.value.length; i < len; i++) {\n                innerHTML += '<option selected value=\"' + this.value[i] + '\"></option>';\n            }\n            ele.innerHTML += innerHTML;\n        }\n        this.checkSelectAll();\n    }\n    checkDisabledState(inst) {\n        return inst.ulElement.querySelectorAll('.' + cssClass.li).length === 0;\n    }\n    updateToolBarState() {\n        if (this.toolbarSettings.items.length) {\n            const listObj = this.getScopedListBox();\n            const wrap = this.list.parentElement.getElementsByClassName('e-listbox-tool')[0];\n            this.toolbarSettings.items.forEach((value) => {\n                const btn = wrap.querySelector('[data-value=\"' + value + '\"]');\n                switch (value) {\n                    case 'moveAllTo':\n                        btn.disabled = this.checkDisabledState(this);\n                        break;\n                    case 'moveAllFrom':\n                        btn.disabled = this.checkDisabledState(listObj);\n                        break;\n                    case 'moveFrom':\n                        btn.disabled = listObj.value && listObj.value.length ? false : true;\n                        break;\n                    case 'moveUp':\n                        btn.disabled = this.value && this.value.length\n                            && !this.isSelected(this.ulElement.children[0]) ? false : true;\n                        break;\n                    case 'moveDown':\n                        btn.disabled = this.value && this.value.length\n                            && !this.isSelected(this.ulElement.children[this.ulElement.childElementCount - 1]) ? false : true;\n                        break;\n                    default:\n                        btn.disabled = this.value && this.value.length ? false : true;\n                        break;\n                }\n            });\n        }\n    }\n    setCheckboxPosition() {\n        const listWrap = this.list;\n        if (!this.initLoad && this.selectionSettings.checkboxPosition === 'Left') {\n            listWrap.classList.remove('e-right');\n        }\n        if (this.selectionSettings.checkboxPosition === 'Right') {\n            listWrap.classList.add('e-right');\n        }\n    }\n    showCheckbox(showCheckbox) {\n        let index = 0;\n        const liColl = this.list.lastElementChild.querySelectorAll('li');\n        const liCollLen = this.list.lastElementChild.getElementsByClassName('e-list-item').length;\n        if (showCheckbox) {\n            this.ulElement = this.renderItems(this.listData, this.fields);\n            this.mainList = this.ulElement;\n            this.list.removeChild(this.list.getElementsByTagName('ul')[0]);\n            this.list.appendChild(this.ulElement);\n            if (this.selectionSettings.showSelectAll && !this.list.getElementsByClassName('e-selectall-parent')[0]) {\n                const l10nShow = new L10n(this.getModuleName(), { selectAllText: 'Select All', unSelectAllText: 'Unselect All' }, this.locale);\n                this.showSelectAll = true;\n                this.selectAllText = l10nShow.getConstant('selectAllText');\n                this.unSelectAllText = l10nShow.getConstant('unSelectAllText');\n                this.popupWrapper = this.list;\n                this.checkBoxSelectionModule.checkAllParent = null;\n                this.notify('selectAll', {});\n                this.checkSelectAll();\n            }\n        }\n        else {\n            if (this.list.getElementsByClassName('e-selectall-parent')[0]) {\n                this.list.removeChild(this.list.getElementsByClassName('e-selectall-parent')[0]);\n            }\n            for (index; index < liCollLen; index++) {\n                if (liColl[index].classList.contains('e-list-item')) {\n                    liColl[index].removeChild(liColl[index].getElementsByClassName('e-checkbox-wrapper')[0]);\n                }\n                if (liColl[index].hasAttribute('aria-selected')) {\n                    liColl[index].removeAttribute('aria-selected');\n                }\n            }\n            this.mainList = this.ulElement;\n        }\n        this.value = [];\n    }\n    isSelected(ele) {\n        if (!isNullOrUndefined(ele)) {\n            return ele.classList.contains(cssClass.selected) || ele.querySelector('.e-check') !== null;\n        }\n        else {\n            return false;\n        }\n    }\n    getSelectTag() {\n        return this.list.getElementsByClassName('e-hidden-select')[0];\n    }\n    getToolElem() {\n        return this.list.parentElement.getElementsByClassName('e-listbox-tool')[0];\n    }\n    formResetHandler() {\n        this.value = this.initialSelectedOptions;\n    }\n    /**\n     * Return the module name.\n     *\n     * @private\n     * @returns {string} - Module name\n     */\n    getModuleName() {\n        return 'listbox';\n    }\n    /**\n     * Get the properties to be maintained in the persisted state.\n     *\n     * @returns {string} - Persist data\n     */\n    getPersistData() {\n        return this.addOnPersist(['value']);\n    }\n    getLocaleName() {\n        return 'listbox';\n    }\n    destroy() {\n        this.unwireEvents();\n        if (this.element.tagName === 'EJS-LISTBOX') {\n            this.element.innerHTML = '';\n        }\n        else {\n            this.element.style.display = 'inline-block';\n            if (this.toolbarSettings.items.length) {\n                this.list.parentElement.parentElement.insertBefore(this.list, this.list.parentElement);\n                detach(this.list.nextElementSibling);\n            }\n            this.list.parentElement.insertBefore(this.element, this.list);\n        }\n        super.destroy();\n        this.enableRtlElements = [];\n        this.liCollections = null;\n        this.list = null;\n        this.ulElement = null;\n        this.mainList = null;\n        this.spinner = null;\n        this.rippleFun = null;\n        if (this.itemTemplate) {\n            this.clearTemplate();\n        }\n    }\n    /**\n     * Called internally if any of the property value changed.\n     *\n     * @param {ListBoxModel} newProp - Specifies the new properties.\n     * @param {ListBoxModel} oldProp - Specifies the old properties.\n     * @returns {void}\n     * @private\n     */\n    onPropertyChanged(newProp, oldProp) {\n        const wrap = this.toolbarSettings.items.length ? this.list.parentElement : this.list;\n        super.onPropertyChanged(newProp, oldProp);\n        this.setUpdateInitial(['fields', 'query', 'dataSource'], newProp);\n        for (const prop of Object.keys(newProp)) {\n            switch (prop) {\n                case 'cssClass':\n                    if (oldProp.cssClass) {\n                        removeClass([wrap], oldProp.cssClass.split(' '));\n                    }\n                    if (newProp.cssClass) {\n                        addClass([wrap], newProp.cssClass.split(' '));\n                    }\n                    break;\n                case 'enableRtl':\n                    if (newProp.enableRtl) {\n                        this.list.classList.add('e-rtl');\n                    }\n                    else {\n                        this.list.classList.remove('e-rtl');\n                    }\n                    break;\n                case 'value':\n                    removeClass(this.list.querySelectorAll('.' + cssClass.selected), cssClass.selected);\n                    this.clearSelection(this.value);\n                    this.setSelection();\n                    break;\n                case 'height':\n                    this.setHeight();\n                    break;\n                case 'enabled':\n                    this.setEnable();\n                    break;\n                case 'allowDragAndDrop':\n                    if (newProp.allowDragAndDrop) {\n                        this.initDraggable();\n                    }\n                    else {\n                        getComponent(this.ulElement, 'sortable').destroy();\n                    }\n                    break;\n                case 'allowFiltering':\n                    if (this.allowFiltering) {\n                        this.setFiltering();\n                    }\n                    else {\n                        this.list.removeChild(this.list.getElementsByClassName('e-filter-parent')[0]);\n                        this.filterParent = null;\n                        removeClass([this.list], 'e-filter-list');\n                    }\n                    break;\n                case 'filterBarPlaceholder':\n                    if (this.allowFiltering) {\n                        if (this.filterInput) {\n                            Input.setPlaceholder(newProp.filterBarPlaceholder, this.filterInput);\n                        }\n                    }\n                    break;\n                case 'scope':\n                    if (this.allowDragAndDrop) {\n                        getComponent(this.ulElement, 'sortable').scope = newProp.scope;\n                    }\n                    if (this.toolbarSettings.items.length) {\n                        if (oldProp.scope) {\n                            getComponent(document.querySelector(oldProp.scope), this.getModuleName())\n                                .tBListBox = null;\n                        }\n                        if (newProp.scope) {\n                            getComponent(document.querySelector(newProp.scope), this.getModuleName())\n                                .tBListBox = this;\n                        }\n                    }\n                    break;\n                case 'toolbarSettings': {\n                    let ele;\n                    const pos = newProp.toolbarSettings.position;\n                    const toolElem = this.getToolElem();\n                    if (pos) {\n                        removeClass([wrap], ['e-right', 'e-left']);\n                        wrap.classList.add('e-' + pos.toLowerCase());\n                        if (pos === 'Left') {\n                            wrap.insertBefore(toolElem, this.list);\n                        }\n                        else {\n                            wrap.appendChild(toolElem);\n                        }\n                    }\n                    if (newProp.toolbarSettings.items) {\n                        if (oldProp.toolbarSettings && oldProp.toolbarSettings.items.length) {\n                            ele = this.list.parentElement;\n                            ele.parentElement.insertBefore(this.list, ele);\n                            detach(ele);\n                        }\n                        this.initToolbarAndStyles();\n                        this.wireToolbarEvent();\n                    }\n                    break;\n                }\n                case 'selectionSettings': {\n                    const showSelectAll = newProp.selectionSettings.showSelectAll;\n                    const showCheckbox = newProp.selectionSettings.showCheckbox;\n                    if (!isNullOrUndefined(showSelectAll)) {\n                        this.showSelectAll = showSelectAll;\n                        if (this.showSelectAll) {\n                            const l10nSel = new L10n(this.getModuleName(), { selectAllText: 'Select All', unSelectAllText: 'Unselect All' }, this.locale);\n                            this.checkBoxSelectionModule.checkAllParent = null;\n                            this.showSelectAll = true;\n                            this.selectAllText = l10nSel.getConstant('selectAllText');\n                            this.unSelectAllText = l10nSel.getConstant('selectAllText');\n                            this.popupWrapper = this.list;\n                        }\n                        this.notify('selectAll', {});\n                        this.checkSelectAll();\n                    }\n                    if (!isNullOrUndefined(showCheckbox)) {\n                        this.showCheckbox(showCheckbox);\n                    }\n                    if (this.selectionSettings.showCheckbox) {\n                        this.setCheckboxPosition();\n                    }\n                    break;\n                }\n                case 'dataSource':\n                    this.isDataSourceUpdate = true;\n                    this.jsonData = [].slice.call(this.dataSource);\n                    break;\n            }\n        }\n    }\n};\n__decorate$6([\n    Property('')\n], ListBox.prototype, \"cssClass\", void 0);\n__decorate$6([\n    Property([])\n], ListBox.prototype, \"value\", void 0);\n__decorate$6([\n    Property('')\n], ListBox.prototype, \"height\", void 0);\n__decorate$6([\n    Property(false)\n], ListBox.prototype, \"allowDragAndDrop\", void 0);\n__decorate$6([\n    Property(1000)\n], ListBox.prototype, \"maximumSelectionLength\", void 0);\n__decorate$6([\n    Property(false)\n], ListBox.prototype, \"allowFiltering\", void 0);\n__decorate$6([\n    Property('')\n], ListBox.prototype, \"scope\", void 0);\n__decorate$6([\n    Property(true)\n], ListBox.prototype, \"ignoreCase\", void 0);\n__decorate$6([\n    Property(null)\n], ListBox.prototype, \"filterBarPlaceholder\", void 0);\n__decorate$6([\n    Event()\n], ListBox.prototype, \"beforeItemRender\", void 0);\n__decorate$6([\n    Event()\n], ListBox.prototype, \"filtering\", void 0);\n__decorate$6([\n    Event()\n], ListBox.prototype, \"select\", void 0);\n__decorate$6([\n    Event()\n], ListBox.prototype, \"change\", void 0);\n__decorate$6([\n    Event()\n], ListBox.prototype, \"beforeDrop\", void 0);\n__decorate$6([\n    Event()\n], ListBox.prototype, \"dragStart\", void 0);\n__decorate$6([\n    Event()\n], ListBox.prototype, \"drag\", void 0);\n__decorate$6([\n    Event()\n], ListBox.prototype, \"drop\", void 0);\n__decorate$6([\n    Event()\n], ListBox.prototype, \"dataBound\", void 0);\n__decorate$6([\n    Property(null)\n], ListBox.prototype, \"groupTemplate\", void 0);\n__decorate$6([\n    Property('Request failed')\n], ListBox.prototype, \"actionFailureTemplate\", void 0);\n__decorate$6([\n    Property(1000)\n], ListBox.prototype, \"zIndex\", void 0);\n__decorate$6([\n    Property(false)\n], ListBox.prototype, \"ignoreAccent\", void 0);\n__decorate$6([\n    Complex({}, ToolbarSettings)\n], ListBox.prototype, \"toolbarSettings\", void 0);\n__decorate$6([\n    Complex({}, SelectionSettings)\n], ListBox.prototype, \"selectionSettings\", void 0);\nListBox = ListBox_1 = __decorate$6([\n    NotifyPropertyChanges\n], ListBox);\nconst listBoxClasses = {\n    backIcon: 'e-input-group-icon e-back-icon e-icons',\n    filterBarClearIcon: 'e-input-group-icon e-clear-icon e-icons',\n    filterInput: 'e-input-filter',\n    filterParent: 'e-filter-parent',\n    clearIcon: 'e-clear-icon'\n};\n\n/**\n * export all modules from current location\n */\n\n/**\n * export all modules from current location\n */\n\nexport { incrementalSearch, Search, escapeCharRegExp, resetIncrementalSearchValues, highlightSearch, revertHighlightSearch, FieldSettings, dropDownBaseClasses, DropDownBase, dropDownListClasses, DropDownList, Fields, TreeSettings, DropDownTree, ComboBox, AutoComplete, MultiSelect, CheckBoxSelection, createFloatLabel, updateFloatLabelState, removeFloating, setPlaceHolder, floatLabelFocus, floatLabelBlur, encodePlaceholder, SelectionSettings, ToolbarSettings, ListBox };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}