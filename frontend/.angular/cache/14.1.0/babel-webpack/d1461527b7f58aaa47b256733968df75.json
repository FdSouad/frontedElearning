{"ast":null,"code":"import _asyncToGenerator from \"D:/StageCap2022/e-learningProject__frontend/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Component } from '@angular/core';\nimport * as XLSX from \"xlsx\";\nlet DetailsSkillsMatrixComponent = class DetailsSkillsMatrixComponent {\n  constructor(modalService, data, route, modalManager, matriceDeCompetencesService) {\n    this.modalService = modalService;\n    this.data = data;\n    this.route = route;\n    this.modalManager = modalManager;\n    this.matriceDeCompetencesService = matriceDeCompetencesService;\n    this.addFormCat = new FormGroup({\n      name: new FormControl('', [Validators.required])\n    });\n    this.addFormSkill = new FormGroup({\n      name: new FormControl('', [Validators.required]),\n      nvc: new FormControl('1', [Validators.required]),\n      nvm: new FormControl('1', [Validators.required]),\n      cat: new FormControl('', [Validators.required]),\n      criticite: new FormControl('1', [Validators.required])\n    });\n    this.editFormSkill = new FormGroup({\n      name: new FormControl('', [Validators.required]),\n      nvc: new FormControl('', [Validators.required]),\n      nvm: new FormControl('', [Validators.required]),\n      cat: new FormControl('', [Validators.required]),\n      criticite: new FormControl('1', [Validators.required])\n    });\n    this.delFormCat = new FormGroup({\n      cat: new FormControl('', [Validators.required])\n    });\n    this.editFormCat = new FormGroup({\n      cat: new FormControl('', [Validators.required]),\n      newName: new FormControl('', [Validators.required])\n    });\n    this.addQuestionForm = new FormGroup({\n      quest: new FormControl('', [Validators.required]),\n      rep1Correcte: new FormControl('', [Validators.required]),\n      rep2: new FormControl('', [Validators.required]),\n      rep3: new FormControl('', [Validators.required]),\n      rep4: new FormControl('', [Validators.required])\n    });\n    this.range = new FormGroup({\n      start: new FormControl(null),\n      end: new FormControl(null)\n    });\n    this.dataAddCat = {\n      \"name\": \"\",\n      \"matrixe\": \"\"\n    };\n    this.modalRef = {};\n    this.categoToDel = \"\";\n    this.cpt = 1;\n    this.question = {\n      \"skill\": \"\",\n      \"quest\": \"\",\n      \"rep1Correcte\": \"\",\n      \"rep2\": \"\",\n      \"rep3\": \"\",\n      \"rep4\": \"\"\n    };\n    this.dataSkill = {\n      newName: \"\",\n      name: \"\",\n      criticite: \"\",\n      niveauMin: \"\",\n      niveauCible: \"\",\n      categorie: \"\"\n    };\n    this.perimetres = this.data.perimetres;\n    this.fileName = \"SkillsMatrixsheet.xlsx\";\n    this.dataoutils = [{\n      NomConsultant: 'Consultant1',\n      CatiaV5: 4,\n      VLM: 3,\n      TeamCenter: 0\n    }, {\n      NomConsultant: 'Consultant2',\n      CatiaV5: 1,\n      VLM: 4,\n      TeamCenter: 1\n    }, {\n      NomConsultant: 'Consultant3',\n      CatiaV5: 0,\n      VLM: 4,\n      TeamCenter: 2\n    }, {\n      NomConsultant: 'Consultant4',\n      CatiaV5: 3,\n      VLM: 4,\n      TeamCenter: 1\n    }];\n    this.displayedColumns = ['ID consultant', 'fullName', 'Email', 'Pole', 'Perimetre', 'Role'];\n    this.folders = [{\n      name: 'Trimestre 1',\n      updated: new Date('1/1/21')\n    }, {\n      name: 'Trimestre 2',\n      updated: new Date('5/1/21')\n    }, {\n      name: 'Trimestre 3',\n      updated: new Date('9/1/21')\n    }];\n    this.wb = XLSX.utils.book_new();\n    this.i = 1;\n  }\n\n  editCategorie() {\n    this.matriceDeCompetencesService.editCat(this.editFormCat.value.cat, this.editFormCat.value.newName).subscribe(res => {\n      this.getCategories();\n      this.close();\n    });\n  }\n\n  ngOnInit() {\n    this.Pole = this.route.snapshot.queryParamMap.get(\"pole\");\n    this.Perimetre = this.route.snapshot.queryParamMap.get(\"perimetre\");\n    this.Matrixe = this.route.snapshot.queryParamMap.get(\"name\");\n    this.getCategories();\n    this.getUsers();\n  }\n\n  open(content) {\n    this.modalRef = this.modalService.open(content, {\n      centered: true\n    });\n    console.log(this.modalRef);\n  }\n\n  print() {}\n\n  open2(content, skill) {\n    var _a, _b, _c, _d;\n\n    this.skillForQuest = skill;\n    this.dataSkill.name = this.skillForQuest.name;\n    this.dataSkill.categorie = this.skillForQuest.categorie;\n    (_a = this.editFormSkill.get('name')) === null || _a === void 0 ? void 0 : _a.setValue(this.skillForQuest.name);\n    (_b = this.editFormSkill.get('nvc')) === null || _b === void 0 ? void 0 : _b.setValue(this.skillForQuest.niveauCible);\n    (_c = this.editFormSkill.get('nvm')) === null || _c === void 0 ? void 0 : _c.setValue(this.skillForQuest.niveauMin);\n    (_d = this.editFormSkill.get('criticite')) === null || _d === void 0 ? void 0 : _d.setValue(this.skillForQuest.criticite);\n    console.log(\"shuf\" + JSON.stringify(this.skillForQuest));\n    this.modalRef = this.modalService.open(content, {\n      centered: true\n    });\n    console.log(this.modalRef);\n  }\n\n  delay() {\n    return _asyncToGenerator(function* () {\n      return new Promise(resolve => setTimeout(resolve, 500));\n    })();\n  }\n\n  nextOpen(content) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.addQuestion();\n\n      _this.close();\n\n      yield _this.delay();\n\n      _this.open2(\"addQuestio\", _this.skillForQuest.name);\n\n      _this.cpt++;\n      _this.modalRef = _this.modalService.open(content, {\n        centered: true\n      });\n      console.log(_this.modalRef);\n    })();\n  }\n\n  close() {\n    this.modalManager.close(this.modalRef);\n  }\n\n  openToSee(content, skill) {\n    this.skillForDelAll = skill;\n    this.matriceDeCompetencesService.getQuestions(skill.name).subscribe(res => {\n      this.questions = res;\n      console.log(\"quests :\" + JSON.stringify(this.questions));\n    });\n    this.modalRef = this.modalService.open(content, {\n      centered: true\n    });\n  }\n\n  reset() {\n    var _a, _b, _c, _d, _e;\n\n    (_a = this.addQuestionForm.get('quest')) === null || _a === void 0 ? void 0 : _a.setValue(\"\");\n    (_b = this.addQuestionForm.get('rep1Correcte')) === null || _b === void 0 ? void 0 : _b.setValue(\"\");\n    (_c = this.addQuestionForm.get('rep2')) === null || _c === void 0 ? void 0 : _c.setValue(\"\");\n    (_d = this.addQuestionForm.get('rep3')) === null || _d === void 0 ? void 0 : _d.setValue(\"\");\n    (_e = this.addQuestionForm.get('rep4')) === null || _e === void 0 ? void 0 : _e.setValue(\"\");\n  }\n\n  addQuestDone() {\n    this.addQuestion();\n    this.skillForQuest = null;\n    this.cpt = 1;\n    this.close();\n  }\n\n  addQuestion() {\n    console.log(\"shuf 11\" + JSON.stringify(this.skillForQuest));\n    this.question.skill = this.skillForQuest.name;\n    this.question.quest = this.addQuestionForm.value.quest;\n    this.question.rep1Correcte = this.addQuestionForm.value.rep1Correcte;\n    this.question.rep2 = this.addQuestionForm.value.rep2;\n    this.question.rep3 = this.addQuestionForm.value.rep3;\n    this.question.rep4 = this.addQuestionForm.value.rep4;\n    this.matriceDeCompetencesService.addQuestion(this.question).subscribe(res => {\n      this.reset();\n    }, err => {});\n  }\n\n  deleteAllQuest() {\n    this.matriceDeCompetencesService.deleteQuestions(this.skillForDelAll.name).subscribe(res => {\n      this.reset();\n      this.close();\n    }, err => {});\n  }\n\n  deleteCategorie() {\n    this.catToDel = this.delFormCat.value.cat;\n    this.matriceDeCompetencesService.deleteCategorie(this.catToDel).subscribe(res => {\n      this.catToDel = \"\";\n      this.getCategories();\n      this.close();\n    }, err => {});\n  }\n\n  editSki() {\n    this.dataSkill.newName = this.editFormSkill.value.name;\n    this.dataSkill.criticite = this.editFormSkill.value.criticite;\n    this.dataSkill.niveauMin = this.editFormSkill.value.nvm;\n    this.dataSkill.niveauCible = this.editFormSkill.value.nvc;\n    console.log(\"shuf 2\" + JSON.stringify(this.dataSkill));\n    this.matriceDeCompetencesService.editSkill(this.dataSkill).subscribe(res => {\n      this.getCategories();\n      this.close();\n    });\n  }\n\n  deleteSki(skill) {\n    this.matriceDeCompetencesService.deleteSkill(skill).subscribe(res => {\n      this.getCategories();\n      this.close();\n    });\n  }\n\n  addCategory() {\n    this.dataAddCat.name = this.addFormCat.value.name;\n    this.dataAddCat.matrixe = this.Matrixe;\n    this.addFormCat.value.name = \"\";\n    console.log(JSON.stringify(this.dataAddCat));\n    this.matriceDeCompetencesService.addCategorie(this.dataAddCat).subscribe(res => {\n      this.categories = this.getCategories();\n      this.close();\n    }, err => {});\n  }\n\n  getUsers() {\n    this.matriceDeCompetencesService.getUsers(this.Perimetre, this.Pole).subscribe(res => {\n      this.users = res;\n    });\n  }\n\n  addSki() {\n    this.dataSkill.name = this.addFormSkill.value.name;\n    this.dataSkill.criticite = this.addFormSkill.value.criticite;\n    this.dataSkill.niveauMin = this.addFormSkill.value.nvm;\n    this.dataSkill.categorie = this.addFormSkill.value.cat;\n    this.dataSkill.niveauCible = this.addFormSkill.value.nvc;\n    console.log(this.dataSkill);\n    this.matriceDeCompetencesService.addSkill(this.dataSkill).subscribe(res => {\n      this.getCategories();\n      this.close();\n    });\n  }\n\n  onTabChange(event) {\n    this.matriceDeCompetencesService.getNotes(event.tab.textLabel, this.Perimetre, this.Pole).subscribe(res => {\n      this.listeEtatUsers = res;\n      console.log(JSON.stringify(this.listeEtatUsers) + \"done\");\n    });\n    console.log(event.tab.textLabel + \"hiiii\"); // do something based on selected tab index\n  }\n\n  getSkills() {\n    for (let i = 0; i < this.categories.length; i++) {\n      this.matriceDeCompetencesService.getSkills(this.categories[i].name).subscribe(res => {\n        this.categories[i].skills = res;\n        console.log(\"lol\" + JSON.stringify(this.categories)); // for (let j = 0; j < this.skills.length; j++) {\n        //   this.matriceDeCompetencesService.getNotes(this.categories[i].skills[j].name, this.Perimetre, this.Pole).subscribe(\n        //     (res) => {\n        //       this.categories[i].skills[j].notes = res;\n        //       console.log(\"lol\" + JSON.stringify(this.categories))\n        //     }\n        //   )\n        // }\n      }, err => {});\n    }\n  }\n\n  getCategories() {\n    /*this.matriceDeCompetencesService.getCategories(this.Matrixe).subscribe(\r\n      (res) => {\r\n        this.categories = res;\r\n        this.close()\r\n      },\r\n      (err) => { }\r\n    )\r\n    this.matriceDeCompetencesService.getCategories(this.Matrixe).subscribe(\r\n      (res) => {\r\n        this.categories = res;\r\n      }\r\n    )\r\n    for (let i = 0; i < this.categories.length; i++) {\r\n      this.categories[i].skills = this.getSkills(this.categories[i].name);\r\n    }*/\n    this.matriceDeCompetencesService.getCategories(this.Matrixe).subscribe(result => {\n      // wait for the async response\n      this.categories = result;\n      this.getSkills();\n      console.log('I get some data from asyncCall()');\n    }); // sync code executed, even if the previous async call doesn't respond anything\n\n    console.log('Code executed after the subscription. But not waiting for it to respond');\n  }\n\n  addToExcel() {\n    let element = document.getElementById('infos-excel');\n    const ws = XLSX.utils.table_to_sheet(element);\n    XLSX.utils.book_append_sheet(this.wb, ws, 'Sheet' + this.i);\n    this.i = this.i + 1;\n  }\n\n  exportExcel() {\n    this.addToExcel();\n    XLSX.writeFile(this.wb, this.fileName);\n  }\n\n};\nDetailsSkillsMatrixComponent = __decorate([Component({\n  selector: 'app-details-skills-matrix',\n  templateUrl: './details-skills-matrix.component.html',\n  styleUrls: ['./details-skills-matrix.component.css']\n})], DetailsSkillsMatrixComponent);\nexport { DetailsSkillsMatrixComponent };","map":{"version":3,"mappings":"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","names":["FormGroup","FormControl","Validators","Component","XLSX","DetailsSkillsMatrixComponent","constructor","modalService","data","route","modalManager","matriceDeCompetencesService","name","required","nvc","nvm","cat","criticite","newName","quest","rep1Correcte","rep2","rep3","rep4","start","end","niveauMin","niveauCible","categorie","perimetres","NomConsultant","CatiaV5","VLM","TeamCenter","updated","Date","utils","book_new","editCategorie","editCat","editFormCat","value","subscribe","res","getCategories","close","ngOnInit","Pole","snapshot","queryParamMap","get","Perimetre","Matrixe","getUsers","open","content","modalRef","centered","console","log","print","open2","skill","skillForQuest","dataSkill","editFormSkill","_a","setValue","_b","_c","_d","JSON","stringify","delay","Promise","resolve","setTimeout","nextOpen","addQuestion","cpt","openToSee","skillForDelAll","getQuestions","questions","reset","addQuestionForm","_e","addQuestDone","question","err","deleteAllQuest","deleteQuestions","deleteCategorie","catToDel","delFormCat","editSki","editSkill","deleteSki","deleteSkill","addCategory","dataAddCat","addFormCat","matrixe","addCategorie","categories","users","addSki","addFormSkill","addSkill","onTabChange","event","getNotes","tab","textLabel","listeEtatUsers","getSkills","i","length","skills","result","addToExcel","element","document","getElementById","ws","table_to_sheet","book_append_sheet","wb","exportExcel","writeFile","fileName","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["D:\\StageCap2022\\e-learningProject__frontend\\frontend\\src\\src-app\\details-skills-matrix\\details-skills-matrix.component.ts"],"sourcesContent":["import { Question } from './../../src-api/question/model';\nimport { MatriceDeCompetencesService } from './../services/matrice-de-competences.service';\nimport { ModalManager } from 'ngb-modal';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\n\nimport { AddConsultantComponent } from \"../add-consultant/add-consultant.component\";\nimport { NgbDateStruct, NgbModal } from \"@ng-bootstrap/ng-bootstrap\";\nimport { AddCompetenceComponent } from \"../add-competence/add-competence.component\";\nimport { DataService } from \"../../src-api/Data\";\nimport * as XLSX from \"xlsx\";\nimport { MatTabChangeEvent } from '@angular/material/tabs';\n\n\n\n@Component({\n  selector: 'app-details-skills-matrix',\n  templateUrl: './details-skills-matrix.component.html',\n  styleUrls: ['./details-skills-matrix.component.css']\n})\n\n\n\nexport class DetailsSkillsMatrixComponent implements OnInit {\n\n  constructor(private modalService: NgbModal,\n    public data: DataService,\n    private route: ActivatedRoute,\n    private modalManager: ModalManager,\n    private matriceDeCompetencesService: MatriceDeCompetencesService\n\n  ) {\n  }\n  addFormCat = new FormGroup({\n    name: new FormControl('', [Validators.required])\n  })\n\n  addFormSkill = new FormGroup({\n    name: new FormControl('', [Validators.required]),\n    nvc: new FormControl('1', [Validators.required]),\n    nvm: new FormControl('1', [Validators.required]),\n    cat: new FormControl('', [Validators.required]),\n    criticite: new FormControl('1', [Validators.required]),\n\n  })\n\n  editFormSkill = new FormGroup({\n    name: new FormControl('', [Validators.required]),\n    nvc: new FormControl('', [Validators.required]),\n    nvm: new FormControl('', [Validators.required]),\n    cat: new FormControl('', [Validators.required]),\n    criticite: new FormControl('1', [Validators.required]),\n\n  })\n  delFormCat = new FormGroup({\n    cat: new FormControl('', [Validators.required]),\n\n  })\n\n  editFormCat = new FormGroup({\n    cat: new FormControl('', [Validators.required]),\n    newName: new FormControl('', [Validators.required]),\n\n  })\n\n  addQuestionForm = new FormGroup({\n    quest: new FormControl('', [Validators.required]),\n    rep1Correcte: new FormControl('', [Validators.required]),\n    rep2: new FormControl('', [Validators.required]),\n    rep3: new FormControl('', [Validators.required]),\n    rep4: new FormControl('', [Validators.required]),\n\n  })\n  range = new FormGroup({\n    start: new FormControl<Date | null>(null),\n    end: new FormControl<Date | null>(null),\n  });\n  model: NgbDateStruct;\n\n  editCategorie() {\n    this.matriceDeCompetencesService.editCat(this.editFormCat.value.cat, this.editFormCat.value.newName).subscribe(\n      (res) => {\n        this.getCategories();\n        this.close();\n      }\n\n    )\n  }\n  catToDel: any\n\n  Pole: any;\n  Perimetre: any;\n  Matrixe: any;\n\n  ngOnInit(): void {\n    this.Pole = this.route.snapshot.queryParamMap.get(\"pole\")!\n    this.Perimetre = this.route.snapshot.queryParamMap.get(\"perimetre\")!\n    this.Matrixe = this.route.snapshot.queryParamMap.get(\"name\")!\n    this.getCategories();\n    this.getUsers();\n  }\n  dataAddCat = {\n    \"name\": \"\",\n    \"matrixe\": \"\"\n  }\n  private modalRef = {};\n  categoToDel = \"\";\n  open(content: any) {\n    this.modalRef = this.modalService.open(content, { centered: true });\n    console.log(this.modalRef);\n  }\n\n  skillForQuest: any;\n  cpt: any = 1;\n  print() {\n\n  }\n  open2(content: any, skill: any) {\n    this.skillForQuest = skill;\n    this.dataSkill.name = this.skillForQuest.name!;\n    this.dataSkill.categorie = this.skillForQuest.categorie;\n    this.editFormSkill.get('name')?.setValue(this.skillForQuest.name)\n    this.editFormSkill.get('nvc')?.setValue(this.skillForQuest.niveauCible)\n    this.editFormSkill.get('nvm')?.setValue(this.skillForQuest.niveauMin)\n    this.editFormSkill.get('criticite')?.setValue(this.skillForQuest.criticite)\n    console.log(\"shuf\" + JSON.stringify(this.skillForQuest))\n\n    this.modalRef = this.modalService.open(content, { centered: true });\n    console.log(this.modalRef);\n  }\n  async delay() {\n    return new Promise(resolve => setTimeout(resolve, 500));\n  }\n  async nextOpen(content: any) {\n    this.addQuestion();\n    this.close()\n    await this.delay();\n    this.open2(\"addQuestio\", this.skillForQuest.name);\n    this.cpt++;\n    this.modalRef = this.modalService.open(content, { centered: true });\n    console.log(this.modalRef);\n  }\n  close() {\n    this.modalManager.close(this.modalRef);\n\n  }\n  question = {\n    \"skill\": \"\",\n    \"quest\": \"\",\n    \"rep1Correcte\": \"\",\n    \"rep2\": \"\",\n    \"rep3\": \"\",\n    \"rep4\": \"\"\n  };\n  questions: any;\n  skillForDelAll: any;\n  openToSee(content: any, skill: any) {\n    this.skillForDelAll = skill;\n    this.matriceDeCompetencesService.getQuestions(skill.name).subscribe(\n      (res) => {\n        this.questions = res;\n        console.log(\"quests :\" + JSON.stringify(this.questions))\n      }\n    )\n    this.modalRef = this.modalService.open(content, { centered: true });\n  }\n  reset() {\n    this.addQuestionForm.get('quest')?.setValue(\"\")\n    this.addQuestionForm.get('rep1Correcte')?.setValue(\"\")\n    this.addQuestionForm.get('rep2')?.setValue(\"\")\n    this.addQuestionForm.get('rep3')?.setValue(\"\")\n    this.addQuestionForm.get('rep4')?.setValue(\"\")\n  }\n  addQuestDone() {\n    this.addQuestion();\n    this.skillForQuest = null;\n    this.cpt = 1;\n    this.close();\n\n  }\n  addQuestion() {\n    console.log(\"shuf 11\" + JSON.stringify(this.skillForQuest));\n\n    this.question.skill = this.skillForQuest.name;\n    this.question.quest = this.addQuestionForm.value.quest!;\n    this.question.rep1Correcte = this.addQuestionForm.value.rep1Correcte!;\n    this.question.rep2 = this.addQuestionForm.value.rep2!;\n    this.question.rep3 = this.addQuestionForm.value.rep3!;\n    this.question.rep4 = this.addQuestionForm.value.rep4!;\n\n    this.matriceDeCompetencesService.addQuestion(this.question).subscribe(\n      (res) => {\n        this.reset()\n      },\n      (err) => { }\n    )\n  }\n\n  deleteAllQuest() {\n    this.matriceDeCompetencesService.deleteQuestions(this.skillForDelAll.name).subscribe(\n      (res) => {\n        this.reset()\n        this.close()\n      },\n      (err) => { }\n    )\n  }\n\n  deleteCategorie() {\n    this.catToDel = this.delFormCat.value.cat!;\n    this.matriceDeCompetencesService.deleteCategorie(this.catToDel).subscribe(\n      (res) => {\n        this.catToDel = \"\"\n        this.getCategories()\n        this.close()\n      },\n      (err) => { }\n    )\n  }\n\n  editSki() {\n    this.dataSkill.newName = this.editFormSkill.value.name!;\n    this.dataSkill.criticite = this.editFormSkill.value.criticite!;\n    this.dataSkill.niveauMin = this.editFormSkill.value.nvm!;\n    this.dataSkill.niveauCible = this.editFormSkill.value.nvc!;\n    console.log(\"shuf 2\" + JSON.stringify(this.dataSkill));\n\n    this.matriceDeCompetencesService.editSkill(this.dataSkill).subscribe(\n      (res) => {\n        this.getCategories();\n        this.close()\n      }\n    )\n  }\n  deleteSki(skill: any) {\n    this.matriceDeCompetencesService.deleteSkill(skill).subscribe(\n      (res) => {\n        this.getCategories();\n        this.close()\n      }\n    )\n  }\n  addCategory() {\n\n    this.dataAddCat.name = this.addFormCat.value.name!;\n    this.dataAddCat.matrixe = this.Matrixe;\n    this.addFormCat.value.name = \"\";\n    console.log(JSON.stringify(this.dataAddCat))\n    this.matriceDeCompetencesService.addCategorie(this.dataAddCat).subscribe(\n      (res) => {\n        this.categories = this.getCategories();\n        this.close()\n      },\n      (err) => { }\n    )\n  }\n\n  dataSkill = {\n    newName: \"\",\n    name: \"\",\n    criticite: \"\",\n    niveauMin: \"\",\n    niveauCible: \"\",\n    categorie: \"\"\n  }\n  users: any;\n  getUsers() {\n    this.matriceDeCompetencesService.getUsers(this.Perimetre, this.Pole).subscribe(\n      (res) => {\n        this.users = res;\n      }\n    )\n  }\n\n  addSki() {\n\n    this.dataSkill.name = this.addFormSkill.value.name!;\n    this.dataSkill.criticite = this.addFormSkill.value.criticite!;\n    this.dataSkill.niveauMin = this.addFormSkill.value.nvm!;\n    this.dataSkill.categorie = this.addFormSkill.value.cat!;\n    this.dataSkill.niveauCible = this.addFormSkill.value.nvc!;\n\n    console.log(this.dataSkill)\n    this.matriceDeCompetencesService.addSkill(this.dataSkill).subscribe(\n      (res) => {\n        this.getCategories();\n        this.close()\n      }\n    )\n\n  }\n  categories: any;\n  listeEtatUsers: any;\n  onTabChange(event: MatTabChangeEvent) {\n    this.matriceDeCompetencesService.getNotes(event.tab.textLabel, this.Perimetre, this.Pole).subscribe(\n      (res) => {\n        this.listeEtatUsers = res;\n        console.log(JSON.stringify(this.listeEtatUsers) + \"done\");\n\n      }\n    )\n    console.log(event.tab.textLabel + \"hiiii\");\n\n    // do something based on selected tab index\n  }\n  getSkills(): any {\n    for (let i = 0; i < this.categories.length; i++) {\n\n      this.matriceDeCompetencesService.getSkills(this.categories[i].name).subscribe(\n        (res) => {\n          this.categories[i].skills = res\n          console.log(\"lol\" + JSON.stringify(this.categories))\n          // for (let j = 0; j < this.skills.length; j++) {\n\n          //   this.matriceDeCompetencesService.getNotes(this.categories[i].skills[j].name, this.Perimetre, this.Pole).subscribe(\n          //     (res) => {\n          //       this.categories[i].skills[j].notes = res;\n          //       console.log(\"lol\" + JSON.stringify(this.categories))\n          //     }\n          //   )\n\n          // }\n        },\n        (err) => { }\n      )\n    }\n  }\n  name: any;\n  getCategories() {\n    /*this.matriceDeCompetencesService.getCategories(this.Matrixe).subscribe(\n      (res) => {\n        this.categories = res;\n        this.close()\n      },\n      (err) => { }\n    )\n    this.matriceDeCompetencesService.getCategories(this.Matrixe).subscribe(\n      (res) => {\n        this.categories = res;\n      }\n    )\n    for (let i = 0; i < this.categories.length; i++) {\n      this.categories[i].skills = this.getSkills(this.categories[i].name);\n    }*/\n    this.matriceDeCompetencesService.getCategories(this.Matrixe).subscribe((result) => {\n      // wait for the async response\n      this.categories = result;\n      this.getSkills();\n\n      console.log('I get some data from asyncCall()');\n    });\n    // sync code executed, even if the previous async call doesn't respond anything\n    console.log('Code executed after the subscription. But not waiting for it to respond');\n  }\n\n\n  perimetres = this.data.perimetres;\n\n  fileName = \"SkillsMatrixsheet.xlsx\";\n\n\n  dataoutils: Competence[] = [\n    { NomConsultant: 'Consultant1', CatiaV5: 4, VLM: 3, TeamCenter: 0 },\n    { NomConsultant: 'Consultant2', CatiaV5: 1, VLM: 4, TeamCenter: 1 },\n    { NomConsultant: 'Consultant3', CatiaV5: 0, VLM: 4, TeamCenter: 2 },\n    { NomConsultant: 'Consultant4', CatiaV5: 3, VLM: 4, TeamCenter: 1 },\n  ];\n\n\n  displayedColumns =\n    ['ID consultant', 'fullName', 'Email', 'Pole', 'Perimetre', 'Role'];\n\n  folders: Section[] = [\n    {\n      name: 'Trimestre 1',\n      updated: new Date('1/1/21'),\n    },\n    {\n      name: 'Trimestre 2',\n      updated: new Date('5/1/21'),\n    },\n    {\n      name: 'Trimestre 3',\n      updated: new Date('9/1/21'),\n    }\n  ];\n\n  wb: XLSX.WorkBook = XLSX.utils.book_new();\n  i = 1;\n  addToExcel(): void {\n\n    let element = document.getElementById('infos-excel');\n    const ws: XLSX.WorkSheet = XLSX.utils.table_to_sheet(element);\n    XLSX.utils.book_append_sheet(this.wb, ws, 'Sheet' + this.i);\n    this.i = this.i + 1;\n  }\n\n  exportExcel(): void {\n    this.addToExcel()\n    XLSX.writeFile(this.wb, this.fileName);\n  }\n\n}\n\n\nexport interface Competence {\n  NomConsultant?: string;\n  critique?: string;\n  NiveauMin?: number;\n  NiveauCible?: number;\n  CatiaV5?: number;\n  VLM?: number;\n  TeamCenter: number;\n}\n\nexport interface Section {\n  name: string;\n  updated: Date;\n}\n\n\n"]},"metadata":{},"sourceType":"module"}