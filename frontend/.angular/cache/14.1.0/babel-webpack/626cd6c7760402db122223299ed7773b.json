{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Component } from '@angular/core';\nimport { AddConsultantComponent } from \"../add-consultant/add-consultant.component\";\nimport { AddCompetenceComponent } from \"../add-competence/add-competence.component\";\nimport * as XLSX from \"xlsx\";\nlet DetailsSkillsMatrixComponent = class DetailsSkillsMatrixComponent {\n  constructor(modalService, data, route, modalManager, matriceDeCompetencesService) {\n    this.modalService = modalService;\n    this.data = data;\n    this.route = route;\n    this.modalManager = modalManager;\n    this.matriceDeCompetencesService = matriceDeCompetencesService;\n    this.addFormCat = new FormGroup({\n      name: new FormControl('', [Validators.required])\n    });\n    this.addFormSkill = new FormGroup({\n      name: new FormControl('', [Validators.required])\n    });\n    this.dataAddCat = {\n      \"name\": \"\",\n      \"matrixe\": \"\"\n    };\n    this.modalRef = {};\n    this.categoriesGlobal = {\n      \"name\": \"\",\n      \"skills\": \"\"\n    };\n    this.perimetres = this.data.perimetres;\n    this.fileName = \"SkillsMatrixsheet.xlsx\";\n    this.dataoutils = [{\n      NomConsultant: 'Consultant1',\n      CatiaV5: 4,\n      VLM: 3,\n      TeamCenter: 0\n    }, {\n      NomConsultant: 'Consultant2',\n      CatiaV5: 1,\n      VLM: 4,\n      TeamCenter: 1\n    }, {\n      NomConsultant: 'Consultant3',\n      CatiaV5: 0,\n      VLM: 4,\n      TeamCenter: 2\n    }, {\n      NomConsultant: 'Consultant4',\n      CatiaV5: 3,\n      VLM: 4,\n      TeamCenter: 1\n    }];\n    this.datacom = [{\n      NomConsultant: 'Consultant1',\n      Francais: 4,\n      Anglais: 3,\n      Allemand: 0,\n      critique: 'N'\n    }, {\n      NomConsultant: 'Consultant2',\n      Francais: 1,\n      Anglais: 4,\n      Allemand: 1\n    }, {\n      NomConsultant: 'Consultant3',\n      Francais: 0,\n      Anglais: 4,\n      Allemand: 2\n    }, {\n      NomConsultant: 'Consultant4',\n      Francais: 3,\n      Anglais: 4,\n      Allemand: 1\n    }];\n    this.displayedColumns = ['IDconsultant', 'Pole', 'Activiteactuelle', 'natureactivite', 'IDactivite', 'TLSp', 'NomConsultant'];\n    this.dataSource = [{\n      IDconsultant: '1',\n      Pole: 'DMA',\n      Activiteactuelle: 'activité1',\n      natureactivite: 'nature activite',\n      IDactivite: '1',\n      TLSp: 'superieur',\n      NomConsultant: 'Consultant1',\n      competence: this.dataoutils\n    }, {\n      IDconsultant: '2',\n      Pole: 'DMA',\n      Activiteactuelle: 'activité1',\n      natureactivite: 'nature activite',\n      IDactivite: '1',\n      TLSp: 'superieur',\n      NomConsultant: 'Consultant2',\n      competence: this.dataoutils\n    }, {\n      IDconsultant: '3',\n      Pole: 'DMA',\n      Activiteactuelle: 'activité1',\n      natureactivite: 'nature activite',\n      IDactivite: '1',\n      TLSp: 'superieur',\n      NomConsultant: 'Consultant3',\n      competence: this.dataoutils\n    }, {\n      IDconsultant: '4',\n      Pole: 'DMA',\n      Activiteactuelle: 'activité1',\n      natureactivite: 'nature activite',\n      IDactivite: '1',\n      TLSp: 'superieur',\n      NomConsultant: 'Consultant4',\n      competence: this.dataoutils\n    }];\n    this.columnsToDisplay = this.displayedColumns.slice();\n    this.outilsColumns = [' ', 'CatiaV5', 'VLM', 'TeamCenter'];\n    this.columnsoutilsToDisplay = this.outilsColumns.slice();\n    this.communicationColumns = [' ', 'Francais', 'Anglais', 'Allemand'];\n    this.columnscomToDisplay = this.communicationColumns.slice();\n    this.skills = [{\n      critique: 'O',\n      NiveauMin: 1,\n      NiveauCible: 2\n    }, {\n      critique: 'O',\n      NiveauMin: 2,\n      NiveauCible: 3\n    }, {\n      critique: 'N',\n      NiveauMin: 1,\n      NiveauCible: 3\n    }];\n    this.folders = [{\n      name: 'Trimestre 1',\n      updated: new Date('1/1/21')\n    }, {\n      name: 'Trimestre 2',\n      updated: new Date('5/1/21')\n    }, {\n      name: 'Trimestre 3',\n      updated: new Date('9/1/21')\n    }];\n    this.wb = XLSX.utils.book_new();\n    this.i = 1;\n  }\n\n  ngOnInit() {\n    this.Pole = this.route.snapshot.queryParamMap.get(\"pole\");\n    this.Perimetre = this.route.snapshot.queryParamMap.get(\"perimetre\");\n    this.Matrixe = this.route.snapshot.queryParamMap.get(\"name\");\n    this.getCategories();\n  }\n\n  open(content) {\n    this.modalRef = this.modalService.open(content, {\n      centered: true\n    });\n    console.log(this.modalRef);\n  }\n\n  close() {\n    this.modalManager.close(this.modalRef);\n  }\n\n  addCategory() {\n    this.dataAddCat.name = this.addFormCat.value.name;\n    this.dataAddCat.matrixe = this.Matrixe;\n    this.addFormCat.value.name = \"\";\n    this.matriceDeCompetencesService.addCategorie(this.dataAddCat).subscribe(res => {\n      this.categories = this.getCategories();\n      this.close();\n    }, err => {});\n  }\n\n  getSkills() {\n    for (let i = 0; i < this.categories.length; i++) {\n      this.matriceDeCompetencesService.getSkills(this.categories[i].name).subscribe(res => {\n        this.categories[i].skills = res;\n        console.log(\"lol\" + res);\n        return res;\n      }, err => {});\n    }\n  }\n\n  getCategories() {\n    /*this.matriceDeCompetencesService.getCategories(this.Matrixe).subscribe(\r\n      (res) => {\r\n        this.categories = res;\r\n        this.close()\r\n      },\r\n      (err) => { }\r\n    )\r\n    this.matriceDeCompetencesService.getCategories(this.Matrixe).subscribe(\r\n      (res) => {\r\n        this.categories = res;\r\n      }\r\n    )\r\n    for (let i = 0; i < this.categories.length; i++) {\r\n      this.categories[i].skills = this.getSkills(this.categories[i].name);\r\n    }*/\n    this.matriceDeCompetencesService.getCategories(this.Matrixe).subscribe(result => {\n      // wait for the async response\n      this.categories = result;\n      this.getSkills();\n      console.log('I get some data from asyncCall()');\n    }); // sync code executed, even if the previous async call doesn't respond anything\n\n    console.log('Code executed after the subscription. But not waiting for it to respond');\n  }\n\n  addConsultant() {\n    this.modalService.open(AddConsultantComponent);\n  }\n\n  addCompetence() {\n    this.modalService.open(AddCompetenceComponent);\n  }\n\n  addToExcel() {\n    let element = document.getElementById('infos-excel');\n    const ws = XLSX.utils.table_to_sheet(element);\n    XLSX.utils.book_append_sheet(this.wb, ws, 'Sheet' + this.i);\n    this.i = this.i + 1;\n  }\n\n  exportExcel() {\n    XLSX.writeFile(this.wb, this.fileName);\n  }\n\n};\nDetailsSkillsMatrixComponent = __decorate([Component({\n  selector: 'app-details-skills-matrix',\n  templateUrl: './details-skills-matrix.component.html',\n  styleUrls: ['./details-skills-matrix.component.css']\n})], DetailsSkillsMatrixComponent);\nexport { DetailsSkillsMatrixComponent };","map":{"version":3,"mappings":"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","names":["FormGroup","FormControl","Validators","Component","AddConsultantComponent","AddCompetenceComponent","XLSX","DetailsSkillsMatrixComponent","constructor","modalService","data","route","modalManager","matriceDeCompetencesService","name","required","perimetres","NomConsultant","CatiaV5","VLM","TeamCenter","Francais","Anglais","Allemand","critique","IDconsultant","Pole","Activiteactuelle","natureactivite","IDactivite","TLSp","competence","dataoutils","displayedColumns","slice","outilsColumns","communicationColumns","NiveauMin","NiveauCible","updated","Date","utils","book_new","ngOnInit","snapshot","queryParamMap","get","Perimetre","Matrixe","getCategories","open","content","modalRef","centered","console","log","close","addCategory","dataAddCat","addFormCat","value","matrixe","addCategorie","subscribe","res","categories","err","getSkills","i","length","skills","result","addConsultant","addCompetence","addToExcel","element","document","getElementById","ws","table_to_sheet","book_append_sheet","wb","exportExcel","writeFile","fileName","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["D:\\StageCap2022\\e-learningProject__frontend\\frontend\\src\\src-app\\details-skills-matrix\\details-skills-matrix.component.ts"],"sourcesContent":["import { MatriceDeCompetencesService } from './../services/matrice-de-competences.service';\nimport { ModalManager } from 'ngb-modal';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\n\nimport { AddConsultantComponent } from \"../add-consultant/add-consultant.component\";\nimport { NgbModal } from \"@ng-bootstrap/ng-bootstrap\";\nimport { AddCompetenceComponent } from \"../add-competence/add-competence.component\";\nimport { DataService } from \"../../src-api/Data\";\nimport { Perimetre } from \"../../src-api/perimetre/model\";\nimport { AddCategoryComponent } from \"../add-category/add-category.component\";\nimport * as XLSX from \"xlsx\";\n\n\n\n@Component({\n  selector: 'app-details-skills-matrix',\n  templateUrl: './details-skills-matrix.component.html',\n  styleUrls: ['./details-skills-matrix.component.css']\n})\n\n\n\nexport class DetailsSkillsMatrixComponent implements OnInit {\n\n  constructor(private modalService: NgbModal,\n    public data: DataService,\n    private route: ActivatedRoute,\n    private modalManager: ModalManager,\n    private matriceDeCompetencesService: MatriceDeCompetencesService\n\n  ) {\n  }\n  addFormCat = new FormGroup({\n    name: new FormControl('', [Validators.required])\n  })\n\n  addFormSkill = new FormGroup({\n    name: new FormControl('', [Validators.required])\n  })\n\n  Pole: any;\n  Perimetre: any;\n  Matrixe: any;\n\n  ngOnInit(): void {\n    this.Pole = this.route.snapshot.queryParamMap.get(\"pole\")!\n    this.Perimetre = this.route.snapshot.queryParamMap.get(\"perimetre\")!\n    this.Matrixe = this.route.snapshot.queryParamMap.get(\"name\")!\n    this.getCategories();\n  }\n  dataAddCat = {\n    \"name\": \"\",\n    \"matrixe\": \"\"\n  }\n  private modalRef = {};\n\n  open(content: any) {\n    this.modalRef = this.modalService.open(content, { centered: true });\n    console.log(this.modalRef);\n  }\n\n  close() {\n    this.modalManager.close(this.modalRef);\n  }\n\n  addCategory() {\n\n    this.dataAddCat.name = this.addFormCat.value.name!;\n    this.dataAddCat.matrixe = this.Matrixe;\n    this.addFormCat.value.name = \"\";\n    this.matriceDeCompetencesService.addCategorie(this.dataAddCat).subscribe(\n      (res) => {\n        this.categories = this.getCategories();\n        this.close()\n      },\n      (err) => { }\n    )\n\n  }\n  categories: any;\n  categoriesGlobal = {\n    \"name\": \"\",\n    \"skills\": \"\"\n  }\n\n  getSkills(): any {\n    for (let i = 0; i < this.categories.length; i++) {\n\n      this.matriceDeCompetencesService.getSkills(this.categories[i].name).subscribe(\n        (res) => {\n          this.categories[i].skills = res\n          console.log(\"lol\" + res)\n          return res;\n        },\n        (err) => { }\n      )\n    }\n  }\n  name: any;\n  getCategories() {\n    /*this.matriceDeCompetencesService.getCategories(this.Matrixe).subscribe(\n      (res) => {\n        this.categories = res;\n        this.close()\n      },\n      (err) => { }\n    )\n    this.matriceDeCompetencesService.getCategories(this.Matrixe).subscribe(\n      (res) => {\n        this.categories = res;\n      }\n    )\n    for (let i = 0; i < this.categories.length; i++) {\n      this.categories[i].skills = this.getSkills(this.categories[i].name);\n    }*/\n    this.matriceDeCompetencesService.getCategories(this.Matrixe).subscribe((result) => {\n      // wait for the async response\n      this.categories = result;\n      this.getSkills();\n      console.log('I get some data from asyncCall()');\n    });\n    // sync code executed, even if the previous async call doesn't respond anything\n    console.log('Code executed after the subscription. But not waiting for it to respond');\n  }\n\n\n  perimetres = this.data.perimetres;\n\n  fileName = \"SkillsMatrixsheet.xlsx\";\n\n\n  dataoutils: Competence[] = [\n    { NomConsultant: 'Consultant1', CatiaV5: 4, VLM: 3, TeamCenter: 0 },\n    { NomConsultant: 'Consultant2', CatiaV5: 1, VLM: 4, TeamCenter: 1 },\n    { NomConsultant: 'Consultant3', CatiaV5: 0, VLM: 4, TeamCenter: 2 },\n    { NomConsultant: 'Consultant4', CatiaV5: 3, VLM: 4, TeamCenter: 1 },\n  ];\n\n  datacom: Competence1[] = [\n    { NomConsultant: 'Consultant1', Francais: 4, Anglais: 3, Allemand: 0, critique: 'N' },\n    { NomConsultant: 'Consultant2', Francais: 1, Anglais: 4, Allemand: 1 },\n    { NomConsultant: 'Consultant3', Francais: 0, Anglais: 4, Allemand: 2 },\n    { NomConsultant: 'Consultant4', Francais: 3, Anglais: 4, Allemand: 1 },\n  ];\n\n  displayedColumns =\n    ['IDconsultant', 'Pole', 'Activiteactuelle', 'natureactivite', 'IDactivite', 'TLSp', 'NomConsultant'];\n  dataSource: Personne[] = [\n    {\n      IDconsultant: '1',\n      Pole: 'DMA',\n      Activiteactuelle: 'activité1',\n      natureactivite: 'nature activite',\n      IDactivite: '1',\n      TLSp: 'superieur',\n      NomConsultant: 'Consultant1',\n      competence: this.dataoutils\n    },\n    {\n      IDconsultant: '2',\n      Pole: 'DMA',\n      Activiteactuelle: 'activité1',\n      natureactivite: 'nature activite',\n      IDactivite: '1',\n      TLSp: 'superieur',\n      NomConsultant: 'Consultant2',\n      competence: this.dataoutils\n    },\n    {\n      IDconsultant: '3',\n      Pole: 'DMA',\n      Activiteactuelle: 'activité1',\n      natureactivite: 'nature activite',\n      IDactivite: '1',\n      TLSp: 'superieur',\n      NomConsultant: 'Consultant3',\n      competence: this.dataoutils\n    },\n    {\n      IDconsultant: '4',\n      Pole: 'DMA',\n      Activiteactuelle: 'activité1',\n      natureactivite: 'nature activite',\n      IDactivite: '1',\n      TLSp: 'superieur',\n      NomConsultant: 'Consultant4',\n      competence: this.dataoutils\n    },\n\n  ];\n\n  columnsToDisplay: string[] = this.displayedColumns.slice();\n\n  outilsColumns =\n    [' ', 'CatiaV5', 'VLM', 'TeamCenter'];\n  columnsoutilsToDisplay: string[] = this.outilsColumns.slice();\n\n  communicationColumns =\n    [' ', 'Francais', 'Anglais', 'Allemand'];\n  columnscomToDisplay: string[] = this.communicationColumns.slice();\n\n\n  skills: skill[] =\n    [\n      { critique: 'O', NiveauMin: 1, NiveauCible: 2 },\n      { critique: 'O', NiveauMin: 2, NiveauCible: 3 },\n      { critique: 'N', NiveauMin: 1, NiveauCible: 3 }\n    ]\n\n\n  folders: Section[] = [\n    {\n      name: 'Trimestre 1',\n      updated: new Date('1/1/21'),\n    },\n    {\n      name: 'Trimestre 2',\n      updated: new Date('5/1/21'),\n    },\n    {\n      name: 'Trimestre 3',\n      updated: new Date('9/1/21'),\n    }\n  ];\n\n\n  addConsultant() {\n\n    this.modalService.open(AddConsultantComponent);\n\n  }\n\n  addCompetence() {\n\n    this.modalService.open(AddCompetenceComponent);\n\n  }\n\n\n  wb: XLSX.WorkBook = XLSX.utils.book_new();\n  i = 1;\n  addToExcel(): void {\n\n    let element = document.getElementById('infos-excel');\n    const ws: XLSX.WorkSheet = XLSX.utils.table_to_sheet(element);\n    XLSX.utils.book_append_sheet(this.wb, ws, 'Sheet' + this.i);\n    this.i = this.i + 1;\n  }\n\n  exportExcel(): void {\n    XLSX.writeFile(this.wb, this.fileName);\n  }\n\n}\n\nexport interface Personne {\n  NomConsultant?: string;\n  Pole?: string;\n  Activiteactuelle?: string;\n  natureactivite?: string;\n  IDactivite?: string;\n  TLSp?: string;\n  IDconsultant?: string;\n  competence: Competence[];\n}\n\nexport interface Category {\n  NameCategory: string;\n  Competence: Competence[];\n}\n\nexport interface Competence {\n  NomConsultant?: string;\n  critique?: string;\n  NiveauMin?: number;\n  NiveauCible?: number;\n  CatiaV5?: number;\n  VLM?: number;\n  TeamCenter: number;\n}\nexport interface Competence1 {\n  NomConsultant?: string;\n  critique?: string;\n  NiveauMin?: number;\n  NiveauCible?: number;\n  Francais?: number;\n  Anglais?: number;\n  Allemand: number;\n}\nexport interface skill {\n  critique?: string;\n  NiveauMin?: number;\n  NiveauCible?: number;\n}\nexport interface Section {\n  name: string;\n  updated: Date;\n}\n\n\n"]},"metadata":{},"sourceType":"module"}