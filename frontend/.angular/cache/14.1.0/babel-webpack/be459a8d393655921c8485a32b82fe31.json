{"ast":null,"code":"import { Browser, ChildProperty, Collection, Component, Draggable, Event, EventHandler, NotifyPropertyChanges, Property, SanitizeHtmlHelper, addClass, append, closest, compile, detach, extend, formatUnit, getValue, isNullOrUndefined, isUndefined, removeClass, select, selectAll, setStyleAttribute, setValue } from '@syncfusion/ej2-base';\n\nvar __extends = undefined && undefined.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar ROOT = 'e-splitter';\nvar HORIZONTAL_PANE = 'e-splitter-horizontal';\nvar VERTICAL_PANE = 'e-splitter-vertical';\nvar PANE = 'e-pane';\nvar SPLIT_H_PANE = 'e-pane-horizontal';\nvar SPLIT_V_PANE = 'e-pane-vertical';\nvar SPLIT_BAR = 'e-split-bar';\nvar SPLIT_H_BAR = 'e-split-bar-horizontal';\nvar SPLIT_V_BAR = 'e-split-bar-vertical';\nvar STATIC_PANE = 'e-static-pane';\nvar SCROLL_PANE = 'e-scrollable';\nvar RESIZE_BAR = 'e-resize-handler';\nvar RESIZABLE_BAR = 'e-resizable-split-bar';\nvar SPLIT_BAR_HOVER = 'e-split-bar-hover';\nvar SPLIT_BAR_ACTIVE = 'e-split-bar-active';\nvar HIDE_HANDLER = 'e-hide-handler';\nvar SPLIT_TOUCH = 'e-splitter-touch';\nvar DISABLED = 'e-disabled';\nvar RTL = 'e-rtl';\nvar E_ICONS = 'e-icons';\nvar COLLAPSIBLE = 'e-collapsible';\nvar NAVIGATE_ARROW = 'e-navigate-arrow';\nvar ARROW_RIGHT = 'e-arrow-right';\nvar ARROW_LEFT = 'e-arrow-left';\nvar ARROW_UP = 'e-arrow-up';\nvar ARROW_DOWN = 'e-arrow-down';\nvar HIDE_ICON = 'e-icon-hidden';\nvar EXPAND_PANE = 'e-expanded';\nvar COLLAPSE_PANE = 'e-collapsed';\nvar PANE_HIDDEN = 'e-pane-hidden';\nvar RESIZABLE_PANE = 'e-resizable';\nvar LAST_BAR = 'e-last-bar';\nvar BAR_SIZE_DEFAULT = 1;\n/**\n * Interface to configure pane properties such as its content, size, min, max, resizable, collapsed and collapsible.\n */\n\nvar PaneProperties =\n/** @__PURE__ @class */\nfunction (_super) {\n  __extends(PaneProperties, _super);\n\n  function PaneProperties() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property()], PaneProperties.prototype, \"size\", void 0);\n\n  __decorate([Property(false)], PaneProperties.prototype, \"collapsible\", void 0);\n\n  __decorate([Property(false)], PaneProperties.prototype, \"collapsed\", void 0);\n\n  __decorate([Property(true)], PaneProperties.prototype, \"resizable\", void 0);\n\n  __decorate([Property(null)], PaneProperties.prototype, \"min\", void 0);\n\n  __decorate([Property(null)], PaneProperties.prototype, \"max\", void 0);\n\n  __decorate([Property()], PaneProperties.prototype, \"content\", void 0);\n\n  __decorate([Property('')], PaneProperties.prototype, \"cssClass\", void 0);\n\n  return PaneProperties;\n}(ChildProperty);\n/**\n * Splitter is a layout user interface (UI) control that has resizable and collapsible split panes.\n * The container can be split into multiple panes, which are oriented horizontally or vertically.\n * The separator (divider) splits the panes and resizes and expands/collapses the panes.\n * The splitter is placed inside the split pane to make a nested layout user interface.\n *\n * ```html\n * <div id=\"splitter\">\n *  <div> Left Pane </div>\n *  <div> Center Pane </div>\n *  <div> Right Pane </div>\n * </div>\n * ```\n * ```typescript\n * <script>\n *   var splitterObj = new Splitter({ width: '300px', height: '200px'});\n *   splitterObj.appendTo('#splitter');\n * </script>\n * ```\n */\n\n\nvar Splitter =\n/** @__PURE__ @class */\nfunction (_super) {\n  __extends(Splitter, _super);\n  /**\n   * Initializes a new instance of the Splitter class.\n   *\n   * @param options  - Specifies Splitter model properties as options.\n   * @param element  - Specifies the element that is rendered as an Splitter.\n   */\n\n\n  function Splitter(options, element) {\n    var _this = _super.call(this, options, element) || this;\n\n    _this.needsID = true;\n    return _this;\n  }\n  /**\n   * Gets called when the model property changes.The data that describes the old and new values of the property that changed.\n   *\n   * @param  {SplitterModel} newProp - specifies the new property\n   * @param  {SplitterModel} oldProp - specifies the old property\n   * @returns {void}\n   * @private\n   */\n\n\n  Splitter.prototype.onPropertyChanged = function (newProp, oldProp) {\n    if (!this.element.classList.contains(ROOT)) {\n      return;\n    }\n\n    for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n      var prop = _a[_i];\n\n      switch (prop) {\n        case 'height':\n          this.setSplitterSize(this.element, newProp.height, 'height');\n          break;\n\n        case 'width':\n          this.setSplitterSize(this.element, newProp.width, 'width');\n          break;\n\n        case 'cssClass':\n          this.setCssClass(this.element, newProp.cssClass);\n          break;\n\n        case 'enabled':\n          this.isEnabled(this.enabled);\n          break;\n\n        case 'enableReversePanes':\n          this.setReversePane();\n          break;\n\n        case 'separatorSize':\n          this.setSeparatorSize(newProp.separatorSize);\n          break;\n\n        case 'orientation':\n          this.changeOrientation(newProp.orientation);\n          break;\n\n        case 'paneSettings':\n          {\n            if (!(newProp.paneSettings instanceof Array && oldProp.paneSettings instanceof Array)) {\n              var paneCounts = Object.keys(newProp.paneSettings);\n\n              for (var i = 0; i < paneCounts.length; i++) {\n                var index = parseInt(Object.keys(newProp.paneSettings)[i], 10);\n                var changedPropsCount = Object.keys(newProp.paneSettings[index]).length;\n\n                for (var j = 0; j < changedPropsCount; j++) {\n                  var property = Object.keys(newProp.paneSettings[index])[j];\n\n                  switch (property) {\n                    case 'content':\n                      {\n                        var newValue = Object(newProp.paneSettings[index])[property];\n\n                        if (!isNullOrUndefined(newValue)) {\n                          this.allPanes[index].innerHTML = '';\n                          this.setTemplate(newValue, this.allPanes[index]);\n                        }\n\n                        break;\n                      }\n\n                    case 'resizable':\n                      {\n                        var newVal = Object(newProp.paneSettings[index])[property];\n                        this.resizableModel(index, newVal);\n                        break;\n                      }\n\n                    case 'collapsible':\n                      this.collapsibleModelUpdate(index);\n                      break;\n\n                    case 'collapsed':\n                      // eslint-disable-next-line\n                      newProp.paneSettings[index].collapsed ? this.isCollapsed(index) : this.collapsedOnchange(index);\n                      break;\n\n                    case 'cssClass':\n                      this.setCssClass(this.allPanes[index], newProp.paneSettings[index].cssClass);\n                      break;\n\n                    case 'size':\n                      {\n                        var newValSize = Object(newProp.paneSettings[index])[property];\n\n                        if (newValSize !== '' && !isNullOrUndefined(newValSize)) {\n                          this.updatePaneSize(newValSize, index);\n                        }\n\n                        break;\n                      }\n                  }\n                }\n              }\n            } else {\n              this.destroyPaneSettings();\n              this.allBars = [];\n              this.allPanes = [];\n              this.createSplitPane(this.element);\n              this.addSeparator(this.element);\n              this.getPanesDimensions();\n              this.setRTL(this.enableRtl);\n              this.isCollapsed();\n            }\n\n            break;\n          }\n\n        case 'enableRtl':\n          this.setRTL(newProp.enableRtl);\n          break;\n      }\n    }\n  };\n\n  Splitter.prototype.updatePaneSize = function (newValSize, index) {\n    this.allPanes[index].style.flexBasis = newValSize;\n    var flexPaneIndexes = [];\n    var staticPaneWidth;\n    var flexCount = 0;\n\n    for (var i = 0; i < this.allPanes.length; i++) {\n      if (!this.paneSettings[i].size && !(this.allPanes[i].innerText === '')) {\n        flexPaneIndexes[flexCount] = i;\n        flexCount++;\n      } else if (this.paneSettings[i].size) {\n        staticPaneWidth = this.orientation === 'Horizontal' ? this.allPanes[index].offsetWidth : this.allPanes[index].offsetHeight;\n      }\n    }\n\n    staticPaneWidth = this.orientation === 'Horizontal' ? this.allBars[0].offsetWidth * this.allBars.length + staticPaneWidth : this.allBars[0].offsetHeight * this.allBars.length + staticPaneWidth;\n    var flexPaneWidth = (this.orientation === 'Horizontal' ? this.element.offsetWidth : this.element.offsetHeight) - staticPaneWidth - this.border * 2;\n    var avgDiffWidth = flexPaneWidth / flexPaneIndexes.length;\n\n    for (var j = 0; j < flexPaneIndexes.length; j++) {\n      this.allPanes[flexPaneIndexes[j]].style.flexBasis = avgDiffWidth + 'px';\n    }\n\n    this.allPanes[index].classList.add(STATIC_PANE);\n  };\n\n  Splitter.prototype.initializeValues = function () {\n    this.allPanes = [];\n    this.paneOrder = [];\n    this.separatorOrder = [];\n    this.allBars = [];\n    this.previousCoordinates = {};\n    this.currentCoordinates = {};\n    this.updatePrePaneInPercentage = false;\n    this.updateNextPaneInPercentage = false;\n    this.panesDimensions = [];\n    this.border = 0;\n    this.validDataAttributes = ['data-size', 'data-min', 'data-max', 'data-collapsible', 'data-resizable', 'data-content', 'data-collapsed'];\n    this.validElementAttributes = ['data-orientation', 'data-width', 'data-height'];\n    this.iconsDelay = 300;\n    this.templateElement = [];\n    this.collapseFlag = false;\n    this.expandFlag = true;\n  };\n\n  Splitter.prototype.preRender = function () {\n    this.initializeValues();\n    this.onReportWindowSize = this.reportWindowSize.bind(this);\n    this.onMouseMoveHandler = this.onMouseMove.bind(this);\n    this.onMouseUpHandler = this.onMouseUp.bind(this);\n    this.onTouchMoveHandler = this.onMouseMove.bind(this);\n    this.onTouchEndHandler = this.onMouseUp.bind(this);\n    this.wrapper = this.element.cloneNode(true);\n    this.wrapperParent = this.element.parentElement;\n    removeClass([this.wrapper], ['e-control', 'e-lib', ROOT]);\n    var orientation = this.orientation === 'Horizontal' ? HORIZONTAL_PANE : VERTICAL_PANE;\n    addClass([this.element], orientation);\n    var name = Browser.info.name;\n    var css = name === 'msie' ? 'e-ie' : '';\n    this.setCssClass(this.element, css);\n\n    if (Browser.isDevice) {\n      addClass([this.element], SPLIT_TOUCH);\n    }\n  };\n\n  Splitter.prototype.getPersistData = function () {\n    return this.addOnPersist(['paneSettings']);\n  };\n  /**\n   * Returns the current module name.\n   *\n   * @returns {string} - returns the string value\n   * @private\n   */\n\n\n  Splitter.prototype.getModuleName = function () {\n    return 'splitter';\n  };\n  /**\n   * To Initialize the control rendering\n   *\n   * @returns {void}\n   * @private\n   */\n\n\n  Splitter.prototype.render = function () {\n    this.checkDataAttributes();\n    this.setCssClass(this.element, this.cssClass);\n    this.isEnabled(this.enabled);\n    this.setDimension(this.getHeight(this.element), this.getWidth(this.element));\n    this.createSplitPane(this.element);\n    this.addSeparator(this.element);\n    this.getPanesDimensions();\n    this.setPaneSettings();\n    this.setRTL(this.enableRtl);\n\n    if (this.enableReversePanes) {\n      this.setReversePane();\n    }\n\n    this.collapseFlag = true;\n    this.isCollapsed();\n    this.collapseFlag = false;\n    EventHandler.add(document, 'touchstart click', this.onDocumentClick, this);\n    this.renderComplete();\n    this.element.ownerDocument.defaultView.addEventListener('resize', this.onReportWindowSize, true);\n    EventHandler.add(this.element, 'keydown', this.onMove, this);\n  };\n\n  Splitter.prototype.onDocumentClick = function (e) {\n    if (!e.target.classList.contains(SPLIT_BAR) && !isNullOrUndefined(this.currentSeparator)) {\n      this.currentSeparator.classList.remove(SPLIT_BAR_HOVER);\n      this.currentSeparator.classList.remove(SPLIT_BAR_ACTIVE);\n    }\n  };\n\n  Splitter.prototype.checkPaneSize = function (e) {\n    var prePaneSize = this.orientation === 'Horizontal' ? this.previousPane.offsetWidth : this.previousPane.offsetHeight;\n    var nextPaneSize = this.orientation === 'Horizontal' ? this.nextPane.offsetWidth : this.nextPane.offsetHeight;\n    var splitBarSize = isNullOrUndefined(this.separatorSize) ? BAR_SIZE_DEFAULT : this.separatorSize;\n\n    if (this.previousPane.style.flexBasis.indexOf('%') > 0 || this.nextPane.style.flexBasis.indexOf('%') > 0) {\n      var previousFlexBasis = this.updatePaneFlexBasis(this.previousPane);\n      var nextFlexBasis = this.updatePaneFlexBasis(this.nextPane);\n      this.totalPercent = previousFlexBasis + nextFlexBasis;\n      this.totalWidth = this.convertPercentageToPixel(this.totalPercent + '%');\n\n      if (e.type === 'keydown' && !isNullOrUndefined(e.keyCode)) {\n        if ((e.keyCode === 39 || e.keyCode === 40) && nextPaneSize > 0 && this.getMinInPixel(this.paneSettings[this.nextPaneIndex].min) < this.convertPercentageToPixel(nextFlexBasis - 1 + '%')) {\n          this.previousPane.style.flexBasis = previousFlexBasis + 1 + '%';\n          this.nextPane.style.flexBasis = nextFlexBasis - 1 + '%';\n        } else if ((e.keyCode === 37 || e.keyCode === 38) && prePaneSize > 0 && this.getMinInPixel(this.paneSettings[this.prevPaneIndex].min) < this.convertPercentageToPixel(previousFlexBasis - 1 + '%')) {\n          this.previousPane.style.flexBasis = previousFlexBasis - 1 + '%';\n          this.nextPane.style.flexBasis = nextFlexBasis + 1 + '%';\n        }\n      }\n    } else {\n      this.totalWidth = this.orientation === 'Horizontal' ? this.previousPane.offsetWidth + this.nextPane.offsetWidth : this.previousPane.offsetHeight + this.nextPane.offsetHeight;\n\n      if (e.type === 'keydown' && !isNullOrUndefined(e.keyCode)) {\n        if ((e.keyCode === 39 || e.keyCode === 40) && nextPaneSize > 0 && this.getMinInPixel(this.paneSettings[this.nextPaneIndex].min) < nextPaneSize + splitBarSize) {\n          this.addStaticPaneClass();\n          this.previousPane.style.flexBasis = prePaneSize + splitBarSize + 'px';\n          this.nextPane.style.flexBasis = nextPaneSize < splitBarSize ? '0px' : nextPaneSize - splitBarSize + 'px';\n        } else if ((e.keyCode === 37 || e.keyCode === 38) && prePaneSize > 0 && this.getMinInPixel(this.paneSettings[this.prevPaneIndex].min) < prePaneSize - splitBarSize) {\n          this.addStaticPaneClass();\n          this.previousPane.style.flexBasis = prePaneSize < splitBarSize ? '0px' : prePaneSize - splitBarSize + 'px';\n          this.nextPane.style.flexBasis = nextPaneSize + splitBarSize + 'px';\n        }\n      }\n    }\n  };\n\n  Splitter.prototype.onMove = function (event) {\n    if (this.allPanes.length > 1) {\n      var index = this.getSeparatorIndex(this.currentSeparator);\n      var isPrevpaneCollapsed = this.previousPane.classList.contains(COLLAPSE_PANE);\n      var isPrevpaneExpanded = this.previousPane.classList.contains(EXPAND_PANE);\n      var isNextpaneCollapsed = this.nextPane.classList.contains(COLLAPSE_PANE);\n\n      if ((this.orientation !== 'Horizontal' && event.keyCode === 38 || this.orientation === 'Horizontal' && event.keyCode === 39 || this.orientation === 'Horizontal' && event.keyCode === 37 || this.orientation !== 'Horizontal' && event.keyCode === 40) && (!isPrevpaneExpanded && !isNextpaneCollapsed && !isPrevpaneCollapsed || isPrevpaneExpanded && !isNextpaneCollapsed) && document.activeElement.classList.contains(SPLIT_BAR) && this.paneSettings[index].resizable && this.paneSettings[index + 1].resizable) {\n        event.preventDefault();\n        this.checkPaneSize(event);\n        this.triggerResizing(event);\n      } else if (event.keyCode === 13 && this.paneSettings[index].collapsible && document.activeElement.classList.contains(SPLIT_BAR) && this.currentSeparator.classList.contains(SPLIT_BAR_ACTIVE)) {\n        if (!this.previousPane.classList.contains(COLLAPSE_PANE)) {\n          this.collapse(index);\n          addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        } else {\n          this.expand(index);\n          addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        }\n      }\n    }\n  };\n\n  Splitter.prototype.getMinInPixel = function (minValue) {\n    var min;\n\n    if (isNullOrUndefined(minValue)) {\n      return 0;\n    }\n\n    var paneMinRange = this.convertPixelToNumber(minValue.toString());\n\n    if (minValue.indexOf('%') > 0) {\n      paneMinRange = this.convertPercentageToPixel(minValue);\n    }\n\n    min = this.convertPixelToNumber(paneMinRange.toString());\n    return min;\n  };\n  /**\n   * @param {string} value - specifies the string value\n   * @returns {string} returns the string\n   * @hidden\n   */\n\n\n  Splitter.prototype.sanitizeHelper = function (value) {\n    if (this.enableHtmlSanitizer) {\n      var item = SanitizeHtmlHelper.beforeSanitize();\n      var beforeEvent = {\n        cancel: false,\n        helper: null\n      };\n      extend(item, item, beforeEvent);\n      this.trigger('beforeSanitizeHtml', item);\n\n      if (item.cancel && !isNullOrUndefined(item.helper)) {\n        value = item.helper(value);\n      } else if (!item.cancel) {\n        value = SanitizeHtmlHelper.serializeValue(item, value);\n      }\n    }\n\n    return value;\n  };\n\n  Splitter.prototype.checkDataAttributes = function () {\n    var api;\n    var value; // Element values\n\n    for (var dataIndex = 0; dataIndex < this.validElementAttributes.length; dataIndex++) {\n      value = this.element.getAttribute(this.validElementAttributes[dataIndex]);\n\n      if (!isNullOrUndefined(value)) {\n        api = this.removeDataPrefix(this.validElementAttributes[dataIndex]); // eslint-disable-next-line\n\n        this[api] = value;\n      }\n    } // Pane values\n\n\n    for (var paneIndex = 0; paneIndex < this.element.children.length; paneIndex++) {\n      for (var dataAttr = 0; dataAttr < this.validDataAttributes.length; dataAttr++) {\n        value = this.element.children[paneIndex].getAttribute(this.validDataAttributes[dataAttr]);\n\n        if (!isNullOrUndefined(value)) {\n          api = this.removeDataPrefix(this.validDataAttributes[dataAttr]);\n          value = api === 'collapsible' || api === 'resizable' ? value === 'true' : value;\n\n          if (isNullOrUndefined(this.paneSettings[paneIndex])) {\n            this.paneSettings[paneIndex] = {\n              size: '',\n              min: null,\n              max: null,\n              content: '',\n              resizable: true,\n              collapsible: false,\n              collapsed: false\n            };\n          } // eslint-disable-next-line\n\n\n          var paneAPI = this.paneSettings[paneIndex][api];\n\n          if (api === 'resizable' || api === 'collapsible' || api === 'collapsed') {\n            // eslint-disable-next-line\n            this.paneSettings[paneIndex][api] = value;\n          }\n\n          if (isNullOrUndefined(paneAPI) || paneAPI === '') {\n            // eslint-disable-next-line\n            this.paneSettings[paneIndex][api] = value;\n          }\n        }\n      }\n    }\n  };\n\n  Splitter.prototype.destroyPaneSettings = function () {\n    [].slice.call(this.element.children).forEach(function (el) {\n      detach(el);\n    });\n    this.restoreElem();\n  };\n\n  Splitter.prototype.setPaneSettings = function () {\n    var childCount = this.allPanes.length;\n    var paneCollection = [];\n    var paneValue = {\n      size: '',\n      min: null,\n      max: null,\n      content: '',\n      resizable: true,\n      collapsed: false,\n      collapsible: false,\n      cssClass: ''\n    };\n\n    for (var i = 0; i < childCount; i++) {\n      if (isNullOrUndefined(this.paneSettings[i])) {\n        paneCollection[i] = paneValue;\n      } else {\n        paneCollection[i] = this.paneSettings[i];\n      }\n    }\n\n    this.setProperties({\n      'paneSettings': paneCollection\n    }, true);\n  };\n\n  Splitter.prototype.checkArrow = function (paneIndex, targetArrow) {\n    return this.allBars[paneIndex].querySelector('.' + NAVIGATE_ARROW + '.' + targetArrow);\n  };\n\n  Splitter.prototype.removeDataPrefix = function (attribute) {\n    return attribute.slice(attribute.lastIndexOf('-') + 1);\n  };\n\n  Splitter.prototype.setRTL = function (rtl) {\n    // eslint-disable-next-line\n    rtl ? addClass([this.element], RTL) : removeClass([this.element], RTL);\n  };\n\n  Splitter.prototype.setReversePane = function () {\n    this.allPanes = this.allPanes.reverse();\n    this.allBars = this.allBars.reverse();\n    addClass([this.allBars[this.allBars.length - 1]], LAST_BAR);\n    removeClass([this.allBars[0]], LAST_BAR);\n    this.setProperties({\n      'paneSettings': this.paneSettings.reverse()\n    }, true);\n\n    if (this.enableReversePanes) {\n      this.element.setAttribute('dir', 'rtl');\n    } else {\n      this.element.removeAttribute('dir');\n    }\n  };\n\n  Splitter.prototype.setSplitterSize = function (element, size, property) {\n    var style = property === 'width' ? {\n      'width': formatUnit(size)\n    } : {\n      'height': formatUnit(size)\n    };\n    setStyleAttribute(element, style);\n  };\n\n  Splitter.prototype.getPanesDimensions = function () {\n    for (var index = 0; index < this.allPanes.length; index++) {\n      // eslint-disable-next-line\n      this.orientation === 'Horizontal' ? this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().width) : this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().height);\n    }\n  };\n\n  Splitter.prototype.setCssClass = function (element, className) {\n    if (className) {\n      addClass([element], className.split(className.indexOf(',') > -1 ? ',' : ' '));\n    }\n  };\n\n  Splitter.prototype.hideResizer = function (target) {\n    addClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n  };\n\n  Splitter.prototype.showResizer = function (target) {\n    if (!isNullOrUndefined(this.previousPane) && this.previousPane.classList.contains(RESIZABLE_PANE) && !isNullOrUndefined(this.nextPane) && this.nextPane.classList.contains(RESIZABLE_PANE)) {\n      removeClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n    }\n  };\n\n  Splitter.prototype.resizableModel = function (index, newVal) {\n    var paneIndex = index === this.allBars.length ? index - 1 : index;\n    var i = index;\n    EventHandler.remove(this.allBars[paneIndex], 'mousedown', this.onMouseDown);\n\n    if (newVal) {\n      EventHandler.add(this.allBars[paneIndex], 'mousedown', this.onMouseDown, this);\n\n      if (this.isResizable()) {\n        this.showResizer(this.allBars[paneIndex]);\n        removeClass([select('.' + RESIZE_BAR, this.allBars[paneIndex])], HIDE_HANDLER);\n        this.allBars[paneIndex].classList.add(RESIZABLE_BAR); // eslint-disable-next-line\n\n        index === this.allBars.length ? this.allPanes[index].classList.add(RESIZABLE_PANE) : this.allPanes[paneIndex].classList.add(RESIZABLE_PANE);\n        this.updateResizablePanes(i);\n      }\n    } else {\n      this.updateResizablePanes(i);\n      this.hideResizer(this.allBars[paneIndex]);\n      this.allBars[paneIndex].classList.remove(RESIZABLE_BAR); // eslint-disable-next-line\n\n      index === this.allBars.length ? this.allPanes[index].classList.remove(RESIZABLE_PANE) : this.allPanes[paneIndex].classList.remove(RESIZABLE_PANE);\n    }\n  };\n\n  Splitter.prototype.collapsibleModelUpdate = function (index) {\n    var paneIndex = index === this.allBars.length ? index - 1 : index;\n    var arrow2 = this.orientation === 'Horizontal' ? this.checkArrow(paneIndex, ARROW_LEFT) : this.checkArrow(paneIndex, ARROW_UP);\n    var arrow1 = this.orientation === 'Horizontal' ? this.checkArrow(paneIndex, ARROW_RIGHT) : this.checkArrow(paneIndex, ARROW_DOWN);\n    this.paneCollapsible(this.allPanes[index], index);\n    this.updateCollapseIcons(paneIndex, arrow1, arrow2);\n  };\n\n  Splitter.prototype.collapseArrow = function (barIndex, arrow) {\n    return selectAll('.' + arrow, this.allBars[barIndex])[0];\n  };\n\n  Splitter.prototype.updateIsCollapsed = function (index, collapseArrow, lastBarArrow) {\n    if (!isNullOrUndefined(index)) {\n      var targetEle = void 0;\n      var lastBarIndex = index === this.allBars.length;\n      var barIndex = lastBarIndex ? index - 1 : index;\n\n      if (!lastBarIndex && this.allPanes[index + 1].classList.contains(COLLAPSE_PANE) && index !== 0) {\n        targetEle = this.collapseArrow(barIndex - 1, lastBarArrow);\n      } else {\n        targetEle = lastBarIndex ? this.collapseArrow(barIndex, lastBarArrow) : this.collapseArrow(barIndex, collapseArrow);\n      }\n\n      targetEle.click();\n    }\n  };\n\n  Splitter.prototype.isCollapsed = function (index) {\n    var _this = this;\n\n    if (!isNullOrUndefined(index) && this.paneSettings[index].collapsed && isNullOrUndefined(this.allPanes[index].classList.contains(COLLAPSE_PANE))) {\n      return;\n    }\n\n    this.expandFlag = false;\n\n    if (!isNullOrUndefined(index)) {\n      this.collapseFlag = true;\n      var targetEle = void 0;\n      var lastBarIndex = index === this.allBars.length;\n      var barIndex = lastBarIndex ? index - 1 : index;\n\n      if (!lastBarIndex && this.allPanes[index + 1].classList.contains(COLLAPSE_PANE) && index !== 0) {\n        targetEle = this.collapseArrow(barIndex - 1, this.targetArrows().lastBarArrow);\n      } else {\n        targetEle = lastBarIndex ? this.collapseArrow(barIndex, this.targetArrows().lastBarArrow) : this.collapseArrow(barIndex, this.targetArrows().collapseArrow);\n      }\n\n      var event_1 = {\n        target: targetEle\n      };\n      var eventArgs = this.beforeAction(event_1);\n      this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n        if (!beforeCollapseArgs.cancel) {\n          var collapsedindex = [];\n          collapsedindex[0] = index;\n          var j = 1;\n\n          for (var i = 0; i < _this.allPanes.length; i++) {\n            if (_this.allPanes[i].classList.contains(COLLAPSE_PANE)) {\n              collapsedindex[j] = i;\n              j++;\n            }\n          }\n\n          collapsedindex = collapsedindex.sort();\n\n          _this.updateIsCollapsed(index, _this.targetArrows().collapseArrow, _this.targetArrows().lastBarArrow);\n\n          for (var i = 0; i < collapsedindex.length; i++) {\n            if (!_this.allPanes[collapsedindex[i]].classList.contains(COLLAPSE_PANE)) {\n              _this.updateIsCollapsed(collapsedindex[i], _this.targetArrows().collapseArrow, _this.targetArrows().lastBarArrow);\n            }\n          }\n\n          for (var i = collapsedindex.length; i > 0; i--) {\n            if (!_this.allPanes[collapsedindex[i - 1]].classList.contains(COLLAPSE_PANE)) {\n              var targetArrow = _this.targetArrows();\n\n              _this.updateIsCollapsed(collapsedindex[i - 1], targetArrow.collapseArrow, targetArrow.lastBarArrow);\n            }\n          }\n\n          var collapseEventArgs = _this.afterAction(event_1);\n\n          _this.trigger('collapsed', collapseEventArgs);\n\n          _this.collapseFlag = false;\n        }\n      });\n    } else {\n      for (var m = 0; m < this.allPanes.length; m++) {\n        if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed) {\n          this.updateIsCollapsed(m, this.targetArrows().collapseArrow, this.targetArrows().lastBarArrow);\n        }\n      }\n\n      for (var m = this.allPanes.length - 1; m >= 0; m--) {\n        if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed && !this.allPanes[m].classList.contains(COLLAPSE_PANE)) {\n          var collapseArrow = this.orientation === 'Horizontal' ? ARROW_RIGHT : ARROW_DOWN;\n\n          if (m !== 0) {\n            var targetEle = this.collapseArrow(m - 1, collapseArrow);\n            targetEle.click();\n          }\n\n          if (!this.nextPane.classList.contains(COLLAPSE_PANE)) {\n            var targetEle = this.collapseArrow(m - 1, collapseArrow);\n            targetEle.click();\n          }\n        }\n      }\n    }\n\n    this.expandFlag = true;\n  };\n\n  Splitter.prototype.targetArrows = function () {\n    this.splitterProperty();\n    return {\n      collapseArrow: this.orientation === 'Horizontal' ? ARROW_LEFT : ARROW_UP,\n      lastBarArrow: this.orientation === 'Vertical' ? ARROW_DOWN : ARROW_RIGHT\n    };\n  };\n\n  Splitter.prototype.collapsedOnchange = function (index) {\n    if (!isNullOrUndefined(this.paneSettings[index]) && !isNullOrUndefined(this.paneSettings[index].collapsed) && this.allPanes[index].classList.contains(COLLAPSE_PANE)) {\n      this.updateIsCollapsed(index, this.targetArrows().lastBarArrow, this.targetArrows().collapseArrow);\n    }\n  };\n\n  Splitter.prototype.isEnabled = function (enabled) {\n    // eslint-disable-next-line\n    enabled ? removeClass([this.element], DISABLED) : addClass([this.element], DISABLED);\n  };\n\n  Splitter.prototype.setSeparatorSize = function (size) {\n    var sizeValue = isNullOrUndefined(size) ? 'auto' : size + 'px';\n    var separator = this.orientation === 'Horizontal' ? SPLIT_H_BAR : SPLIT_V_BAR;\n\n    for (var index = 0; index < this.allBars.length; index++) {\n      var splitBar = selectAll('.' + separator, this.element)[index];\n      var resizeBar = selectAll('.' + RESIZE_BAR, splitBar)[0];\n\n      if (this.orientation === 'Horizontal') {\n        splitBar.style.width = sizeValue;\n\n        if (!isNullOrUndefined(resizeBar)) {\n          resizeBar.style.width = sizeValue;\n        }\n      } else {\n        splitBar.style.height = sizeValue;\n\n        if (!isNullOrUndefined(resizeBar)) {\n          resizeBar.style.height = sizeValue;\n        }\n      }\n    }\n  };\n\n  Splitter.prototype.changeOrientation = function (orientation) {\n    var isVertical = orientation === 'Vertical';\n    this.element.classList.remove(isVertical ? HORIZONTAL_PANE : VERTICAL_PANE);\n    this.element.classList.add(isVertical ? VERTICAL_PANE : HORIZONTAL_PANE);\n\n    for (var index = 0; index < this.allPanes.length; index++) {\n      this.allPanes[index].classList.remove(isVertical ? SPLIT_H_PANE : SPLIT_V_PANE);\n      this.allPanes[index].classList.add(isVertical ? SPLIT_V_PANE : SPLIT_H_PANE);\n    }\n\n    for (var index = 0; index < this.allBars.length; index++) {\n      detach(this.allBars[index]);\n    }\n\n    this.allBars = [];\n    this.addSeparator(this.element);\n  };\n\n  Splitter.prototype.checkSplitPane = function (currentBar, elementIndex) {\n    var paneEle = this.collectPanes(currentBar.parentElement.children)[elementIndex];\n    return paneEle;\n  };\n\n  Splitter.prototype.collectPanes = function (childNodes) {\n    var elements = [];\n\n    for (var i = 0; i < childNodes.length; i++) {\n      if (childNodes[i].classList.contains(PANE)) {\n        elements.push(childNodes[i]);\n      }\n    }\n\n    return elements;\n  };\n\n  Splitter.prototype.getPrevPane = function (order) {\n    return this.enableReversePanes ? this.getOrderPane(order + 1) : this.getOrderPane(order - 1);\n  };\n\n  Splitter.prototype.getNextPane = function (order) {\n    return this.enableReversePanes ? this.getOrderPane(order - 1) : this.getOrderPane(order + 1);\n  };\n\n  Splitter.prototype.getOrderPane = function (order) {\n    var pane;\n\n    for (var i = 0; i < this.element.children.length; i++) {\n      if (parseInt(this.element.children[i].style.order, 10) === order) {\n        pane = this.element.children[i];\n      }\n    }\n\n    return pane;\n  };\n\n  Splitter.prototype.getOrderIndex = function (order, type) {\n    var index;\n    var panes;\n\n    if (type === 'pane') {\n      panes = this.allPanes;\n    } else {\n      panes = this.allBars;\n    }\n\n    for (var i = 0; i < panes.length; i++) {\n      if (parseInt(panes[i].style.order, 10) === order) {\n        index = i;\n      }\n    }\n\n    return index;\n  };\n\n  Splitter.prototype.updateSeparatorSize = function (resizeHanlder) {\n    var sizeValue = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px'; // eslint-disable-next-line\n\n    this.orientation === 'Horizontal' ? resizeHanlder.style.width = sizeValue : resizeHanlder.style.height = sizeValue;\n  };\n\n  Splitter.prototype.addResizeHandler = function (currentBar) {\n    var resizeHanlder = this.createElement('div');\n    addClass([resizeHanlder], [RESIZE_BAR, E_ICONS]);\n    this.updateSeparatorSize(resizeHanlder);\n    currentBar.appendChild(resizeHanlder);\n  };\n\n  Splitter.prototype.getHeight = function (target) {\n    var height = this.height;\n    height = target.style.height !== '' && this.height === '100%' ? target.style.height : this.height;\n    return height;\n  };\n\n  Splitter.prototype.getWidth = function (target) {\n    var width = this.width;\n    width = target.style.width !== '' && this.width === '100%' ? target.style.width : this.width;\n    return width;\n  };\n\n  Splitter.prototype.setDimension = function (height, width) {\n    setStyleAttribute(this.element, {\n      'height': height,\n      'width': width\n    });\n  };\n\n  Splitter.prototype.updateCollapseIcons = function (index, arrow1, arrow2) {\n    if (!isNullOrUndefined(this.paneSettings[index])) {\n      if (!isNullOrUndefined(this.paneSettings[index].collapsible)) {\n        // eslint-disable-next-line\n        this.paneSettings[index].collapsible ? removeClass([arrow2], [HIDE_ICON]) : addClass([arrow2], [HIDE_ICON]);\n\n        if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n          // eslint-disable-next-line\n          this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n        }\n\n        if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n          if (this.paneSettings[index + 1].collapsible) {\n            // eslint-disable-next-line\n            this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n          }\n        }\n      }\n    }\n  };\n\n  Splitter.prototype.updateIconClass = function () {\n    if (this.orientation === 'Horizontal') {\n      this.leftArrow = ARROW_LEFT;\n      this.rightArrow = ARROW_RIGHT;\n    } else {\n      this.leftArrow = ARROW_UP;\n      this.rightArrow = ARROW_DOWN;\n    }\n  };\n\n  Splitter.prototype.createSeparator = function (i) {\n    var separator = this.createElement('div');\n    this.allBars.push(separator);\n    var arrow1 = this.createElement('button');\n    var arrow2 = this.createElement('button');\n    arrow1.setAttribute('tabindex', '-1');\n    arrow2.setAttribute('tabindex', '-1');\n    arrow1.setAttribute('aria-label', 'Toggle navigation');\n    arrow2.setAttribute('aria-label', 'Toggle navigation');\n    arrow1.setAttribute('type', 'button');\n    arrow2.setAttribute('type', 'button');\n    var size = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px'; // eslint-disable-next-line\n\n    var proxy = this;\n\n    if (this.orientation === 'Horizontal') {\n      this.updateIconClass();\n      addClass([arrow2], [NAVIGATE_ARROW, ARROW_LEFT, HIDE_ICON]);\n      addClass([arrow1], [NAVIGATE_ARROW, ARROW_RIGHT, HIDE_ICON]);\n      addClass([separator], [SPLIT_BAR, SPLIT_H_BAR]);\n      separator.style.width = size;\n    } else {\n      addClass([arrow1], [NAVIGATE_ARROW, ARROW_DOWN, HIDE_ICON]);\n      addClass([arrow2], [NAVIGATE_ARROW, ARROW_UP, HIDE_ICON]);\n      addClass([separator], [SPLIT_BAR, SPLIT_V_BAR]);\n      this.updateIconClass();\n      separator.style.height = size;\n    }\n\n    this.addMouseActions(separator);\n    separator.appendChild(arrow2);\n    this.addResizeHandler(separator);\n    separator.appendChild(arrow1);\n    this.updateCollapseIcons(i, arrow1, arrow2);\n    separator.setAttribute('tabindex', '0');\n\n    if (this.enableReversePanes) {\n      separator.setAttribute('dir', 'ltr');\n    } else {\n      separator.removeAttribute('dir');\n    }\n\n    separator.addEventListener('focus', function () {\n      separator.classList.add(SPLIT_BAR_ACTIVE);\n      proxy.currentSeparator = separator;\n      proxy.getPaneDetails();\n    });\n    separator.addEventListener('blur', function () {\n      separator.classList.remove(SPLIT_BAR_ACTIVE);\n    });\n    return separator;\n  };\n\n  Splitter.prototype.updateResizablePanes = function (index) {\n    this.getPaneDetails(); // eslint-disable-next-line\n\n    this.isResizable() ? this.allPanes[index].classList.add(RESIZABLE_PANE) : this.allPanes[index].classList.remove(RESIZABLE_PANE);\n  };\n\n  Splitter.prototype.addSeparator = function (target) {\n    var childCount = this.allPanes.length;\n    var clonedEle = target.children;\n    var separator;\n\n    for (var i = 0; i < childCount; i++) {\n      if (i < childCount - 1) {\n        separator = this.createSeparator(i);\n        setStyleAttribute(separator, {\n          'order': i * 2 + 1\n        });\n        this.separatorOrder.push(i * 2 + 1);\n        clonedEle[i].parentNode.appendChild(separator);\n        this.currentSeparator = separator;\n        separator.setAttribute('role', 'separator');\n        separator.setAttribute('aria-orientation', this.orientation.toLowerCase());\n        this.wireClickEvents();\n\n        if (!isNullOrUndefined(separator)) {\n          if (this.isResizable()) {\n            EventHandler.add(separator, 'mousedown', this.onMouseDown, this);\n            var eventName = Browser.info.name === 'msie' ? 'pointerdown' : 'touchstart';\n            EventHandler.add(separator, eventName, this.onMouseDown, this);\n            separator.classList.add(RESIZABLE_BAR);\n            this.updateResizablePanes(i);\n          } else {\n            addClass([select('.' + RESIZE_BAR, separator)], HIDE_HANDLER);\n          }\n        }\n      } else {\n        if (separator) {\n          addClass([separator], LAST_BAR);\n        }\n\n        if (childCount > 1) {\n          this.updateResizablePanes(i);\n        }\n      }\n    }\n\n    if (Browser.info.name === 'msie') {\n      var allBar = this.element.querySelectorAll('.e-splitter .e-resize-handler');\n\n      for (var i = 0; i < allBar.length; i++) {\n        var sepSize = isNullOrUndefined(this.separatorSize) ? 1 : this.separatorSize;\n        allBar[i].style.paddingLeft = sepSize / 2 + 'px';\n        allBar[i].style.paddingRight = sepSize / 2 + 'px';\n      }\n    }\n  };\n\n  Splitter.prototype.isResizable = function () {\n    var resizable = false;\n\n    if (!isNullOrUndefined(this.paneSettings[this.getPreviousPaneIndex()]) && this.paneSettings[this.getPreviousPaneIndex()].resizable && !isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()]) && this.paneSettings[this.getNextPaneIndex()].resizable || isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()])) {\n      resizable = true;\n    }\n\n    return resizable;\n  };\n\n  Splitter.prototype.addMouseActions = function (separator) {\n    var _this = this;\n\n    var sTout;\n    var hoverTimeOut;\n    separator.addEventListener('mouseenter', function () {\n      /* istanbul ignore next */\n      sTout = setTimeout(function () {\n        addClass([separator], [SPLIT_BAR_HOVER]);\n      }, _this.iconsDelay);\n    });\n    separator.addEventListener('mouseleave', function () {\n      clearTimeout(sTout);\n      removeClass([separator], [SPLIT_BAR_HOVER]);\n    });\n    separator.addEventListener('mouseout', function () {\n      clearTimeout(hoverTimeOut);\n    });\n    separator.addEventListener('mouseover', function () {\n      /* istanbul ignore next */\n      hoverTimeOut = setTimeout(function () {\n        addClass([separator], [SPLIT_BAR_HOVER]);\n      }, _this.iconsDelay);\n    });\n  };\n\n  Splitter.prototype.getEventType = function (e) {\n    return e.indexOf('mouse') > -1 ? 'mouse' : 'touch';\n  };\n\n  Splitter.prototype.updateCurrentSeparator = function (target) {\n    this.currentSeparator = this.isSeparator(target) ? target.parentElement : target;\n  };\n\n  Splitter.prototype.isSeparator = function (target) {\n    return target.classList.contains(SPLIT_BAR) ? false : true;\n  };\n\n  Splitter.prototype.isMouseEvent = function (e) {\n    var isMouse = false;\n\n    if (this.getEventType(e.type) === 'mouse' || !isNullOrUndefined(e.pointerType) && this.getEventType(e.pointerType) === 'mouse') {\n      isMouse = true;\n    }\n\n    return isMouse;\n  };\n\n  Splitter.prototype.updateCursorPosition = function (e, type) {\n    if (this.isMouseEvent(e)) {\n      this.changeCoordinates({\n        x: e.pageX,\n        y: e.pageY\n      }, type);\n    } else {\n      var eventType = Browser.info.name !== 'msie' ? e.touches[0] : e;\n      this.changeCoordinates({\n        x: eventType.pageX,\n        y: eventType.pageY\n      }, type);\n    }\n  };\n\n  Splitter.prototype.changeCoordinates = function (coordinates, type) {\n    if (type === 'previous') {\n      this.previousCoordinates = coordinates;\n    } else {\n      this.currentCoordinates = coordinates;\n    }\n  };\n\n  Splitter.prototype.reportWindowSize = function () {\n    var _this = this;\n\n    var paneCount = this.allPanes.length;\n\n    if (!document.body.contains(this.element)) {\n      document.defaultView.removeEventListener('resize', this.onReportWindowSize);\n      return;\n    }\n\n    for (var i = 0; i < paneCount; i++) {\n      if (isNullOrUndefined(this.paneSettings[i].size)) {\n        this.allPanes[i].classList.remove(STATIC_PANE);\n      }\n\n      if (paneCount - 1 === i) {\n        var staticPaneCount = this.element.querySelectorAll('.' + STATIC_PANE).length;\n\n        if (staticPaneCount === paneCount) {\n          removeClass([this.allPanes[i]], STATIC_PANE);\n        }\n      }\n    }\n\n    if (paneCount > 0) {\n      setTimeout(function () {\n        _this.updateSplitterSize(true);\n      }, 200);\n    }\n  };\n\n  Splitter.prototype.updateSplitterSize = function (iswindowResize) {\n    var totalWidth = 0;\n    var flexPaneIndexes = [];\n    var flexCount = 0;\n    var children = this.element.children;\n\n    for (var i = 0, len = children.length; i < len; i++) {\n      totalWidth += this.orientation === 'Horizontal' ? children[i].offsetWidth : children[i].offsetHeight;\n    }\n\n    for (var j = 0, len = this.allBars.length; j < len; j++) {\n      totalWidth += this.orientation === 'Horizontal' ? parseInt(getComputedStyle(this.allBars[j]).marginLeft, 10) + parseInt(getComputedStyle(this.allBars[j]).marginLeft, 10) : parseInt(getComputedStyle(this.allBars[j]).marginTop, 10) + parseInt(getComputedStyle(this.allBars[j]).marginBottom, 10);\n    }\n\n    var diff = this.orientation === 'Horizontal' ? this.element.offsetWidth - (this.border * 2 + totalWidth) : this.element.offsetHeight - (this.border * 2 + totalWidth);\n\n    for (var i = 0, len = this.allPanes.length; i < len; i++) {\n      if (this.allPanes[i].innerText === '' ? !this.paneSettings[i].size || !(this.allPanes[i].innerText === '') : !this.paneSettings[i].size && !(this.allPanes[i].innerText === '')) {\n        flexPaneIndexes[flexCount] = i;\n        flexCount++;\n      }\n    }\n\n    var avgDiffWidth = diff / flexPaneIndexes.length;\n\n    for (var j = 0, len = flexPaneIndexes.length; j < len; j++) {\n      this.allPanes[flexPaneIndexes[j]].style.flexBasis = this.orientation === 'Horizontal' ? this.allPanes[flexPaneIndexes[j]].offsetWidth + avgDiffWidth + 'px' : this.allPanes[flexPaneIndexes[j]].offsetHeight + avgDiffWidth + 'px';\n    }\n\n    if (this.allPanes.length === 2 && iswindowResize) {\n      var paneCount = this.allPanes.length;\n      var minValue = void 0;\n      var paneMinRange = void 0;\n      var paneIndex = 0;\n      var updatePane = void 0;\n      var flexPane = void 0;\n\n      for (var i = 0; i < paneCount; i++) {\n        if (!isNullOrUndefined(this.paneSettings[i].min)) {\n          paneMinRange = this.convertPixelToNumber(this.paneSettings[i].min.toString());\n\n          if (this.paneSettings[i].min.indexOf('%') > 0) {\n            paneMinRange = this.convertPercentageToPixel(this.paneSettings[i].min);\n          }\n\n          minValue = this.convertPixelToNumber(paneMinRange.toString());\n\n          if ((this.orientation === 'Horizontal' ? this.allPanes[i].offsetWidth : this.allPanes[i].offsetHeight) < minValue) {\n            if (i === paneIndex) {\n              updatePane = this.allPanes[i];\n              flexPane = this.allPanes[i + 1];\n            } else {\n              updatePane = this.allPanes[i];\n              flexPane = this.allPanes[i - 1];\n            }\n\n            var sizeDiff = minValue - (this.orientation === 'Horizontal' ? this.allPanes[i].offsetWidth : this.allPanes[i].offsetHeight);\n            var isPercent = updatePane.style.flexBasis.indexOf('%') > -1;\n            var updatePaneOffset = this.orientation === 'Horizontal' ? updatePane.offsetWidth : updatePane.offsetHeight;\n            updatePane.style.flexBasis = isPercent ? this.convertPixelToPercentage(updatePaneOffset + sizeDiff) + '%' : updatePaneOffset + sizeDiff + 'px';\n            var flexPaneOffset = this.orientation === 'Horizontal' ? flexPane.offsetWidth : flexPane.offsetHeight;\n            flexPane.style.flexBasis = flexPane.style.flexBasis.indexOf('%') > -1 ? this.convertPixelToPercentage(flexPaneOffset - sizeDiff) + '%' : flexPaneOffset - sizeDiff + 'px';\n          }\n        }\n      }\n    }\n  };\n\n  Splitter.prototype.wireResizeEvents = function () {\n    document.addEventListener('mousemove', this.onMouseMoveHandler, true);\n    document.addEventListener('mouseup', this.onMouseUpHandler, true);\n    var touchMoveEvent = Browser.info.name === 'msie' ? 'pointermove' : 'touchmove';\n    var touchEndEvent = Browser.info.name === 'msie' ? 'pointerup' : 'touchend';\n    document.addEventListener(touchMoveEvent, this.onTouchMoveHandler, true);\n    document.addEventListener(touchEndEvent, this.onTouchEndHandler, true);\n  };\n\n  Splitter.prototype.unwireResizeEvents = function () {\n    this.element.ownerDocument.defaultView.removeEventListener('resize', this.onReportWindowSize);\n    var touchMoveEvent = Browser.info.name === 'msie' ? 'pointermove' : 'touchmove';\n    var touchEndEvent = Browser.info.name === 'msie' ? 'pointerup' : 'touchend';\n    document.removeEventListener('mousemove', this.onMouseMoveHandler, true);\n    document.removeEventListener('mouseup', this.onMouseUpHandler, true);\n    document.removeEventListener(touchMoveEvent, this.onTouchMoveHandler, true);\n    document.removeEventListener(touchEndEvent, this.onTouchEndHandler, true);\n  };\n\n  Splitter.prototype.wireClickEvents = function () {\n    EventHandler.add(this.currentSeparator, 'touchstart click', this.clickHandler, this);\n  };\n\n  Splitter.prototype.clickHandler = function (e) {\n    if (!e.target.classList.contains(NAVIGATE_ARROW)) {\n      var hoverBars = selectAll('.' + ROOT + ' > .' + SPLIT_BAR + '.' + SPLIT_BAR_HOVER);\n\n      if (hoverBars.length > 0) {\n        removeClass(hoverBars, SPLIT_BAR_HOVER);\n      }\n\n      e.target.classList.add(SPLIT_BAR_HOVER);\n    }\n\n    var icon = e.target;\n\n    if (icon.classList.contains(ARROW_LEFT) || icon.classList.contains(ARROW_UP)) {\n      this.collapseAction(e);\n    }\n\n    if (icon.classList.contains(ARROW_RIGHT) || icon.classList.contains(ARROW_DOWN)) {\n      this.expandAction(e);\n    }\n\n    this.updateSplitterSize();\n  };\n\n  Splitter.prototype.expandAction = function (e) {\n    var _this = this;\n\n    this.splitterDetails(e);\n    var eventArgs = this.beforeAction(e);\n\n    if (this.expandFlag) {\n      this.trigger('beforeExpand', eventArgs, function (beforeExpandArgs) {\n        if (!beforeExpandArgs.cancel) {\n          _this.expandPane(e);\n        }\n\n        var expandEventArgs = _this.afterAction(e);\n\n        _this.trigger('expanded', expandEventArgs);\n      });\n    } else {\n      this.expandPane(e);\n    }\n  };\n\n  Splitter.prototype.expandPane = function (e) {\n    this.removeStaticPanes();\n    var collapseCount = this.element.querySelectorAll('.' + COLLAPSE_PANE).length;\n    var flexStatus = !this.previousPane.classList.contains(COLLAPSE_PANE) && this.previousPane.classList.contains(STATIC_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(EXPAND_PANE) && this.nextPane.nextElementSibling.classList.contains(PANE) && !this.nextPane.nextElementSibling.classList.contains(STATIC_PANE) && !(collapseCount === this.allPanes.length - 2);\n    var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n\n    if (!this.previousPane.classList.contains(COLLAPSE_PANE)) {\n      removeClass([this.nextPane], EXPAND_PANE);\n      removeClass([this.previousPane], collapseClass);\n      addClass([this.previousPane], EXPAND_PANE);\n      addClass([this.nextPane], collapseClass);\n\n      if (this.expandFlag) {\n        this.updatePaneSettings(this.nextPaneIndex, true);\n      }\n    } else {\n      removeClass([this.previousPane], collapseClass);\n      removeClass([this.nextPane], EXPAND_PANE);\n\n      if (this.expandFlag) {\n        this.updatePaneSettings(this.prevPaneIndex, false);\n      }\n    }\n\n    this.updateIconsOnExpand(e);\n    this.previousPane.setAttribute('aria-expanded', 'true');\n    this.nextPane.setAttribute('aria-expanded', 'false');\n    this.updateFlexGrow(this.checkStaticPanes());\n\n    if (flexStatus) {\n      this.previousPane.classList.remove(EXPAND_PANE);\n      this.previousPane.style.flexGrow = '';\n    }\n  };\n\n  Splitter.prototype.checkStaticPanes = function () {\n    var staticPane = true;\n\n    for (var i = 0; i < this.allPanes.length; i++) {\n      if (!this.allPanes[i].classList.contains(COLLAPSE_PANE) && staticPane) {\n        if (this.allPanes[i].classList.contains(STATIC_PANE)) {\n          staticPane = true;\n        } else {\n          staticPane = false;\n        }\n      }\n    }\n\n    return staticPane;\n  };\n\n  Splitter.prototype.updateFlexGrow = function (status) {\n    var collapseCount = 0;\n\n    for (var j = 0; j < this.element.children.length; j++) {\n      if (this.element.children[j].classList.contains(COLLAPSE_PANE)) {\n        collapseCount = collapseCount + 1;\n      }\n    }\n\n    var visiblePane = collapseCount === this.allPanes.length - 2;\n    var panes = this.allPanes;\n\n    for (var i = 0; i < panes.length; i++) {\n      panes[i].style.flexGrow = '';\n\n      if (status && !this.nextPane.classList.contains(COLLAPSE_PANE)) {\n        this.nextPane.style.flexGrow = '1';\n      }\n\n      if (visiblePane && this.allPanes[i].classList.contains(COLLAPSE_PANE) && this.paneSettings[i].size && i !== this.allPanes.length - 1) {\n        panes[i].style.flexGrow = '';\n      }\n\n      if (panes[i].classList.contains(EXPAND_PANE)) {\n        panes[i].style.flexGrow = '1';\n      } else if (panes[i].classList.contains(COLLAPSE_PANE)) {\n        panes[i].style.flexGrow = '0';\n      }\n    }\n  };\n\n  Splitter.prototype.hideTargetBarIcon = function (targetBar, targetArrow) {\n    addClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n  };\n\n  Splitter.prototype.showTargetBarIcon = function (targetBar, targetArrow) {\n    removeClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n  };\n\n  Splitter.prototype.updateIconsOnCollapse = function (e) {\n    this.splitterProperty();\n\n    if (this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE)) {\n      addClass([e.target], HIDE_ICON);\n\n      if (this.paneSettings[this.prevPaneIndex].collapsible) {\n        this.showCurrentBarIcon();\n      }\n\n      this.resizableModel(this.currentBarIndex, false);\n\n      if (this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) && !this.paneSettings[this.prevPaneIndex].collapsible) {\n        this.hideTargetBarIcon(this.prevBar, this.rightArrow);\n      }\n\n      if (this.previousPane.previousElementSibling && !this.previousPane.previousElementSibling.classList.contains(COLLAPSE_PANE)) {\n        if (this.previousPane.classList.contains(COLLAPSE_PANE) && this.paneSettings[this.prevPaneIndex].collapsible) {\n          this.showTargetBarIcon(this.prevBar, this.leftArrow);\n        } else if (!this.paneSettings[this.prevPaneIndex].collapsible) {\n          this.hideTargetBarIcon(this.prevBar, this.leftArrow);\n        }\n      }\n\n      if (!isNullOrUndefined(this.prevBar)) {\n        this.resizableModel(this.currentBarIndex - 1, false);\n        this.hideTargetBarIcon(this.prevBar, this.arrow);\n      }\n\n      if (!this.paneSettings[this.prevPaneIndex].collapsible) {\n        this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n      }\n    } else if (!this.splitInstance.prevPaneCollapsed && !this.splitInstance.nextPaneExpanded) {\n      if (this.paneSettings[this.currentBarIndex].resizable) {\n        this.resizableModel(this.currentBarIndex, true);\n      }\n\n      if (!this.splitInstance.nextPaneNextEle.classList.contains(COLLAPSE_PANE) && this.paneSettings[this.currentBarIndex + 1].resizable) {\n        this.resizableModel(this.currentBarIndex + 1, true);\n      }\n\n      if (!this.paneSettings[this.currentBarIndex].collapsible) {\n        addClass([e.target], HIDE_ICON);\n      }\n\n      if (this.previousPane && this.prevPaneIndex === 0 && this.paneSettings[this.prevPaneIndex].collapsible) {\n        this.showTargetBarIcon(this.currentSeparator, this.leftArrow);\n      }\n\n      if (this.nextPane && this.nextPaneIndex === this.allPanes.length - 1 && this.paneSettings[this.nextPaneIndex].collapsible) {\n        this.showTargetBarIcon(this.getPrevBar(this.nextPaneIndex), this.rightArrow);\n      }\n\n      if (!this.previousPane.classList.contains(COLLAPSE_PANE) && this.paneSettings[this.nextPaneIndex].collapsible) {\n        this.showTargetBarIcon(this.currentSeparator, this.rightArrow);\n      }\n\n      if (!isNullOrUndefined(this.nextBar)) {\n        if (this.nextPane.nextElementSibling && this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) && this.paneSettings[this.nextPaneIndex + 1].collapsible || !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) && this.paneSettings[this.nextPaneIndex].collapsible) {\n          this.showTargetBarIcon(this.nextBar, this.leftArrow);\n        } else if (!this.paneSettings[this.splitInstance.nextPaneIndex + 1].collapsible && this.paneSettings[this.currentBarIndex]) {\n          this.hideTargetBarIcon(this.nextBar, this.arrow);\n        }\n      }\n\n      if (!(this.nextPaneIndex === this.allPanes.length - 1) && this.nextPane.nextElementSibling && !this.nextPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) && !this.paneSettings[this.nextPaneIndex + 1].collapsible) {\n        this.hideTargetBarIcon(this.nextBar, this.rightArrow);\n      }\n    }\n  };\n\n  Splitter.prototype.collapseAction = function (e) {\n    var _this = this;\n\n    this.splitterDetails(e);\n    var eventArgs = this.beforeAction(e);\n\n    if (this.collapseFlag) {\n      this.collapsePane(e);\n    } else {\n      this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n        if (!beforeCollapseArgs.cancel) {\n          _this.collapsePane(e);\n\n          var collapseEventArgs = _this.afterAction(e);\n\n          _this.trigger('collapsed', collapseEventArgs);\n        }\n      });\n    }\n  };\n\n  Splitter.prototype.collapsePane = function (e) {\n    this.removeStaticPanes();\n    var collapseCount = this.element.querySelectorAll('.' + COLLAPSE_PANE).length;\n    var flexStatus = this.previousPane.classList.contains(STATIC_PANE) && !this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) && this.nextPane.nextElementSibling.classList.contains(PANE) && !this.nextPane.nextElementSibling.classList.contains(STATIC_PANE) && !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) && !(collapseCount === this.allPanes.length - 2) || this.nextPane.classList.contains(COLLAPSE_PANE) && !this.previousPane.classList.contains(STATIC_PANE) && this.nextPane.classList.contains(STATIC_PANE);\n    var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n\n    if (this.nextPane.classList.contains(COLLAPSE_PANE)) {\n      removeClass([this.previousPane], EXPAND_PANE);\n      removeClass([this.nextPane], collapseClass);\n\n      if (!this.collapseFlag) {\n        this.updatePaneSettings(this.nextPaneIndex, false);\n      }\n    } else {\n      removeClass([this.previousPane], EXPAND_PANE);\n      removeClass([this.nextPane], collapseClass);\n      addClass([this.nextPane], EXPAND_PANE);\n      addClass([this.previousPane], collapseClass);\n\n      if (!this.collapseFlag) {\n        this.updatePaneSettings(this.prevPaneIndex, true);\n      }\n    }\n\n    this.updateIconsOnCollapse(e);\n    this.previousPane.setAttribute('aria-expanded', 'false');\n    this.nextPane.setAttribute('aria-expanded', 'true');\n    this.updateFlexGrow(this.checkStaticPanes());\n\n    if (flexStatus) {\n      this.nextPane.classList.remove(EXPAND_PANE);\n      this.nextPane.style.flexGrow = '';\n    }\n  };\n\n  Splitter.prototype.removeStaticPanes = function () {\n    for (var i = 0; i < this.allPanes.length; i++) {\n      if (isNullOrUndefined(this.paneSettings[i].size)) {\n        this.allPanes[i].classList.remove(STATIC_PANE);\n      }\n    }\n  };\n\n  Splitter.prototype.beforeAction = function (e) {\n    var eventArgs = {\n      element: this.element,\n      event: e,\n      pane: [this.previousPane, this.nextPane],\n      index: [this.prevPaneIndex, this.nextPaneIndex],\n      separator: this.currentSeparator,\n      cancel: false\n    };\n    return eventArgs;\n  };\n\n  Splitter.prototype.updatePaneSettings = function (index, collapsed) {\n    var paneValues = this.paneSettings;\n    paneValues[index].collapsed = collapsed;\n    this.setProperties({\n      'paneSettings': paneValues\n    }, true);\n  };\n\n  Splitter.prototype.splitterProperty = function () {\n    this.splitInstance = {\n      currentBarIndex: this.currentBarIndex,\n      nextPaneCollapsible: this.nextPane.classList.contains(COLLAPSIBLE),\n      prevPaneCollapsible: this.previousPane.classList.contains(COLLAPSIBLE),\n      prevPaneExpanded: this.previousPane.classList.contains(EXPAND_PANE),\n      nextPaneExpanded: this.nextPane.classList.contains(EXPAND_PANE),\n      nextPaneCollapsed: this.nextPane.classList.contains(COLLAPSE_PANE),\n      prevPaneCollapsed: this.previousPane.classList.contains(COLLAPSE_PANE),\n      nextPaneIndex: this.getNextPaneIndex(),\n      prevPaneIndex: this.getPreviousPaneIndex(),\n      nextPaneNextEle: this.nextPane.nextElementSibling,\n      prevPanePreEle: this.previousPane.previousElementSibling\n    };\n  };\n\n  Splitter.prototype.showCurrentBarIcon = function () {\n    removeClass([select('.' + this.arrow, this.currentSeparator)], HIDE_ICON);\n  };\n\n  Splitter.prototype.updateIconsOnExpand = function (e) {\n    this.splitterProperty();\n    addClass([e.target], HIDE_ICON);\n\n    if (!this.splitInstance.prevPaneExpanded && !this.splitInstance.nextPaneCollapsed) {\n      if (this.paneSettings[this.prevPaneIndex].collapsible) {\n        this.showCurrentBarIcon();\n      }\n\n      if (this.paneSettings[this.nextPaneIndex].collapsible) {\n        removeClass([e.target], HIDE_ICON);\n      }\n\n      if (this.paneSettings[this.currentBarIndex].resizable) {\n        this.resizableModel(this.currentBarIndex, true);\n      }\n\n      if (!isNullOrUndefined(this.prevBar) && !this.splitInstance.prevPanePreEle.classList.contains(COLLAPSE_PANE)) {\n        if (this.paneSettings[this.currentBarIndex - 1].resizable) {\n          this.resizableModel(this.currentBarIndex - 1, true);\n        }\n\n        if (this.paneSettings[this.prevPaneIndex].collapsible) {\n          this.showTargetBarIcon(this.prevBar, this.rightArrow);\n        }\n\n        if (!this.paneSettings[this.currentBarIndex - 1].collapsible) {\n          this.hideTargetBarIcon(this.prevBar, this.arrow);\n\n          if (this.paneSettings[this.currentBarIndex].collapsible && !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n            this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n          }\n        } else if (this.paneSettings[this.currentBarIndex].collapsible && !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n          this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n        }\n      } else {\n        if (this.previousPane.previousElementSibling && this.paneSettings[this.prevPaneIndex].collapsible && this.previousPane.previousElementSibling.classList.contains(COLLAPSE_PANE) && this.paneSettings[this.prevPaneIndex - 1].collapsible) {\n          this.showTargetBarIcon(this.prevBar, this.rightArrow);\n        }\n\n        if (!this.paneSettings[this.currentBarIndex + 1].collapsible) {\n          this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n        }\n      }\n    } else if (this.splitInstance.prevPaneExpanded && this.splitInstance.nextPaneCollapsed) {\n      this.resizableModel(this.currentBarIndex, false);\n      this.resizableModel(this.currentBarIndex + 1, false);\n\n      if (this.paneSettings[this.nextPaneIndex].collapsible) {\n        this.showCurrentBarIcon();\n      }\n\n      if (!isNullOrUndefined(this.nextBar)) {\n        this.hideTargetBarIcon(this.nextBar, this.arrow);\n      }\n\n      if (this.nextPane && this.nextPaneIndex === this.allPanes.length - 1 && !this.paneSettings[this.nextPaneIndex].collapsible && this.splitInstance.nextPaneCollapsed) {\n        this.hideTargetBarIcon(this.currentSeparator, this.arrow);\n      }\n\n      if (!(this.nextPaneIndex === this.allPanes.length - 1) && this.nextPane.nextElementSibling && this.nextPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) && this.paneSettings[this.nextPaneIndex].collapsible) {\n        this.showTargetBarIcon(this.nextBar, this.rightArrow);\n      }\n    }\n  };\n\n  Splitter.prototype.afterAction = function (e) {\n    var eventArgs = {\n      element: this.element,\n      event: e,\n      pane: [this.previousPane, this.nextPane],\n      index: [this.prevPaneIndex, this.nextPaneIndex],\n      separator: this.currentSeparator\n    };\n    return eventArgs;\n  };\n\n  Splitter.prototype.currentIndex = function (e) {\n    this.currentBarIndex = this.getOrderIndex(parseInt(e.target.parentElement.style.order, 10), 'splitbar');\n  };\n\n  Splitter.prototype.getSeparatorIndex = function (target) {\n    var array = [].slice.call(this.allBars);\n    array = this.enableReversePanes ? array.reverse() : array;\n    return array.indexOf(target);\n  };\n\n  Splitter.prototype.getPrevBar = function (currentBar) {\n    var prevbar = this.allBars[currentBar - 1];\n    return prevbar;\n  };\n\n  Splitter.prototype.getNextBar = function (currentBar) {\n    var prevbar = this.allBars[currentBar + 1];\n    return prevbar;\n  };\n\n  Splitter.prototype.updateBars = function (index) {\n    this.prevBar = this.getPrevBar(index);\n    this.nextBar = this.getNextBar(index);\n  };\n\n  Splitter.prototype.splitterDetails = function (e) {\n    if (this.orientation === 'Horizontal') {\n      this.arrow = e.target.classList.contains(ARROW_LEFT) ? ARROW_RIGHT : ARROW_LEFT;\n    } else {\n      this.arrow = e.target.classList.contains(ARROW_UP) ? ARROW_DOWN : ARROW_UP;\n    }\n\n    this.updateCurrentSeparator(e.target);\n    this.currentIndex(e);\n    this.updateBars(this.currentBarIndex);\n    this.getPaneDetails();\n  };\n\n  Splitter.prototype.triggerResizing = function (e) {\n    var eventArgs = {\n      element: this.element,\n      event: e,\n      pane: [this.previousPane, this.nextPane],\n      index: [this.prevPaneIndex, this.nextPaneIndex],\n      paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n      separator: this.currentSeparator\n    };\n    this.trigger('resizing', eventArgs);\n  };\n\n  Splitter.prototype.onMouseDown = function (e) {\n    var _this = this;\n\n    e.preventDefault();\n    var target = e.target;\n\n    if (target.classList.contains(NAVIGATE_ARROW)) {\n      return;\n    }\n\n    this.updateCurrentSeparator(target);\n    addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n    this.updateCursorPosition(e, 'previous');\n    this.getPaneDetails();\n    var eventArgs = {\n      element: this.element,\n      event: e,\n      pane: [this.previousPane, this.nextPane],\n      index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n      separator: this.currentSeparator,\n      cancel: false\n    };\n\n    for (var i = 0; i < this.element.querySelectorAll('iframe').length; i++) {\n      this.element.querySelectorAll('iframe')[i].style.pointerEvents = 'none';\n    }\n\n    this.trigger('resizeStart', eventArgs, function (resizeStartArgs) {\n      if (!resizeStartArgs.cancel) {\n        _this.wireResizeEvents();\n\n        _this.checkPaneSize(e);\n      }\n    });\n  };\n\n  Splitter.prototype.updatePaneFlexBasis = function (pane) {\n    var previous;\n\n    if (pane.style.flexBasis.indexOf('%') > 0) {\n      previous = this.removePercentageUnit(pane.style.flexBasis);\n    } else {\n      if (pane.style.flexBasis !== '') {\n        previous = this.convertPixelToPercentage(this.convertPixelToNumber(pane.style.flexBasis));\n      } else {\n        var offset = this.orientation === 'Horizontal' ? pane.offsetWidth : pane.offsetHeight;\n        previous = this.convertPixelToPercentage(offset);\n      }\n    }\n\n    return previous;\n  };\n\n  Splitter.prototype.removePercentageUnit = function (value) {\n    return parseFloat(value.slice(0, value.indexOf('%')));\n  };\n\n  Splitter.prototype.convertPercentageToPixel = function (value, targetElement) {\n    var percentage = value.toString();\n    var convertedValue;\n\n    if (percentage.indexOf('%') > -1) {\n      convertedValue = parseFloat(percentage.slice(0, percentage.indexOf('%')));\n      var offsetValue = void 0;\n\n      if (!isNullOrUndefined(targetElement)) {\n        offsetValue = this.panesDimensions[this.allPanes.indexOf(targetElement)];\n      } else {\n        offsetValue = this.orientation === 'Horizontal' ? this.element.offsetWidth : this.element.offsetHeight;\n      }\n\n      convertedValue = Math.ceil(offsetValue * (convertedValue / 100));\n    } else {\n      convertedValue = parseInt(percentage, 10);\n    }\n\n    return convertedValue;\n  };\n\n  Splitter.prototype.convertPixelToPercentage = function (value) {\n    var offsetValue = this.orientation === 'Horizontal' ? this.element.offsetWidth : this.element.offsetHeight;\n    return value / offsetValue * 100;\n  };\n\n  Splitter.prototype.convertPixelToNumber = function (value) {\n    if (value.indexOf('p') > -1) {\n      return parseFloat(value.slice(0, value.indexOf('p')));\n    } else {\n      return parseFloat(value);\n    }\n  };\n\n  Splitter.prototype.calcDragPosition = function (rectValue, offsetValue) {\n    var separatorPosition = this.orientation === 'Horizontal' ? this.currentCoordinates.x - rectValue : this.currentCoordinates.y - rectValue;\n    var separator;\n    separator = separatorPosition / offsetValue;\n    separator = separator > 1 ? 1 : separator < 0 ? 0 : separator;\n    return separator * offsetValue;\n  };\n\n  Splitter.prototype.getSeparatorPosition = function (e) {\n    this.updateCursorPosition(e, 'current');\n    var rectBound = this.orientation === 'Horizontal' ? this.element.getBoundingClientRect().left + window.scrollX : this.element.getBoundingClientRect().top + window.scrollY;\n    var offSet = this.orientation === 'Horizontal' ? this.element.offsetWidth : this.element.offsetHeight;\n    return this.calcDragPosition(rectBound, offSet);\n  };\n\n  Splitter.prototype.getMinMax = function (paneIndex, target, selection) {\n    var defaultVal = selection === 'min' ? 0 : null; // eslint-disable-next-line\n\n    var paneValue = null;\n\n    if (selection === 'min') {\n      if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n        paneValue = this.paneSettings[paneIndex].min;\n      }\n    } else {\n      if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n        paneValue = this.paneSettings[paneIndex].max;\n      }\n    }\n\n    if (this.paneSettings.length > 0 && !isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(paneValue)) {\n      if (paneValue.indexOf('%') > 0) {\n        paneValue = this.convertPercentageToPixel(paneValue).toString();\n      }\n\n      return this.convertPixelToNumber(paneValue);\n    } else {\n      return defaultVal;\n    }\n  };\n\n  Splitter.prototype.getPreviousPaneIndex = function () {\n    var separatorIndex = this.enableReversePanes ? parseInt(this.currentSeparator.style.order, 10) + 1 : parseInt(this.currentSeparator.style.order, 10) - 1;\n    return this.getOrderIndex(separatorIndex, 'pane');\n  };\n\n  Splitter.prototype.getNextPaneIndex = function () {\n    var separatorIndex = this.enableReversePanes ? parseInt(this.currentSeparator.style.order, 10) - 1 : parseInt(this.currentSeparator.style.order, 10) + 1;\n    return this.getOrderIndex(separatorIndex, 'pane');\n  };\n\n  Splitter.prototype.getPaneDetails = function () {\n    var prevPane = null;\n    var nextPane = null;\n    this.order = parseInt(this.currentSeparator.style.order, 10);\n\n    if (this.allPanes.length > 1) {\n      prevPane = this.getPrevPane(this.order);\n      nextPane = this.getNextPane(this.order);\n    }\n\n    if (prevPane && nextPane) {\n      this.previousPane = prevPane;\n      this.nextPane = nextPane;\n      this.prevPaneIndex = this.getPreviousPaneIndex();\n      this.nextPaneIndex = this.getNextPaneIndex();\n    } else {\n      return;\n    }\n  };\n\n  Splitter.prototype.getPaneHeight = function (pane) {\n    return this.orientation === 'Horizontal' ? pane.offsetWidth.toString() : pane.offsetHeight.toString();\n  };\n\n  Splitter.prototype.isValidSize = function (paneIndex) {\n    var isValid = false;\n\n    if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].size) && this.paneSettings[paneIndex].size.indexOf('%') > -1) {\n      isValid = true;\n    }\n\n    return isValid;\n  };\n\n  Splitter.prototype.getPaneDimensions = function () {\n    this.previousPaneHeightWidth = this.previousPane.style.flexBasis === '' ? this.getPaneHeight(this.previousPane) : this.previousPane.style.flexBasis;\n    this.nextPaneHeightWidth = this.nextPane.style.flexBasis === '' ? this.getPaneHeight(this.nextPane) : this.nextPane.style.flexBasis;\n\n    if (this.isValidSize(this.prevPaneIndex)) {\n      this.previousPaneHeightWidth = this.convertPercentageToPixel(this.previousPaneHeightWidth).toString();\n      this.updatePrePaneInPercentage = true;\n    }\n\n    if (this.isValidSize(this.nextPaneIndex)) {\n      this.nextPaneHeightWidth = this.convertPercentageToPixel(this.nextPaneHeightWidth).toString();\n      this.updateNextPaneInPercentage = true;\n    }\n\n    this.prePaneDimenson = this.convertPixelToNumber(this.previousPaneHeightWidth.toString());\n    this.nextPaneDimension = this.convertPixelToNumber(this.nextPaneHeightWidth.toString());\n  };\n\n  Splitter.prototype.checkCoordinates = function (pageX, pageY) {\n    var coordinatesChanged = true;\n\n    if (pageX === this.previousCoordinates.x || pageY === this.previousCoordinates.y) {\n      coordinatesChanged = false;\n    }\n\n    return coordinatesChanged;\n  };\n\n  Splitter.prototype.isCursorMoved = function (e) {\n    var cursorMoved = true;\n\n    if (this.getEventType(e.type) === 'mouse' || !isNullOrUndefined(e.pointerType) && this.getEventType(e.pointerType) === 'mouse') {\n      cursorMoved = this.checkCoordinates(e.pageX, e.pageY);\n    } else {\n      cursorMoved = Browser.info.name !== 'msie' ? this.checkCoordinates(e.touches[0].pageX, e.touches[0].pageY) : this.checkCoordinates(e.pageX, e.pageY);\n    }\n\n    return cursorMoved;\n  };\n\n  Splitter.prototype.getBorder = function () {\n    this.border = 0;\n    var border = this.orientation === 'Horizontal' ? (this.element.offsetWidth - this.element.clientWidth) / 2 : (this.element.offsetHeight - this.element.clientHeight) / 2;\n    this.border = Browser.info.name !== 'chrome' ? this.border : border;\n  };\n\n  Splitter.prototype.onMouseMove = function (e) {\n    if (!this.isCursorMoved(e)) {\n      return;\n    }\n\n    this.getPaneDetails();\n    this.getPaneDimensions();\n    this.triggerResizing(e);\n    var left = this.validateDraggedPosition(this.getSeparatorPosition(e), this.prePaneDimenson, this.nextPaneDimension);\n    var separatorNewPosition;\n    this.getBorder();\n\n    if (this.orientation === 'Horizontal') {\n      separatorNewPosition = this.element.getBoundingClientRect().left + left - this.currentSeparator.getBoundingClientRect().left + this.border;\n    } else {\n      separatorNewPosition = this.element.getBoundingClientRect().top + left - this.currentSeparator.getBoundingClientRect().top + this.border;\n    }\n\n    this.nextPaneHeightWidth = typeof this.nextPaneHeightWidth === 'string' && this.nextPaneHeightWidth.indexOf('p') > -1 ? this.convertPixelToNumber(this.nextPaneHeightWidth) : parseInt(this.nextPaneHeightWidth, 10);\n    this.prevPaneCurrentWidth = separatorNewPosition + this.convertPixelToNumber(this.previousPaneHeightWidth);\n    this.nextPaneCurrentWidth = this.nextPaneHeightWidth - separatorNewPosition;\n    this.validateMinMaxValues();\n\n    if (this.nextPaneCurrentWidth < 0) {\n      this.nextPaneCurrentWidth = 0;\n    }\n    /* istanbul ignore next */\n\n\n    if (this.prevPaneCurrentWidth < 0) {\n      this.prevPaneCurrentWidth = 0;\n    }\n\n    if (this.nextPaneCurrentWidth + this.prevPaneCurrentWidth > this.totalWidth) {\n      if (this.nextPaneCurrentWidth < this.prevPaneCurrentWidth) {\n        this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - (this.nextPaneCurrentWidth + this.prevPaneCurrentWidth - this.totalWidth);\n      } else {\n        this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - (this.nextPaneCurrentWidth + this.prevPaneCurrentWidth - this.totalWidth);\n      }\n    }\n    /* istanbul ignore next */\n\n\n    if (this.nextPaneCurrentWidth + this.prevPaneCurrentWidth < this.totalWidth) {\n      var difference = this.totalWidth - (this.nextPaneCurrentWidth + this.prevPaneCurrentWidth);\n      this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + difference;\n    }\n\n    this.calculateCurrentDimensions();\n    this.addStaticPaneClass();\n    this.previousPane.style.flexBasis = this.prevPaneCurrentWidth;\n    this.nextPane.style.flexBasis = this.nextPaneCurrentWidth;\n\n    if (!(this.allPanes.length > 2)) {\n      this.updateSplitterSize();\n    }\n  }; // eslint-disable-next-line\n\n\n  Splitter.prototype.validateMinRange = function (paneIndex, paneCurrentWidth, pane) {\n    var paneMinRange = null;\n    var paneMinDimensions;\n    var difference = 0;\n    var validatedVal;\n\n    if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n      paneMinRange = this.paneSettings[paneIndex].min.toString();\n    }\n\n    if (!isNullOrUndefined(paneMinRange)) {\n      if (paneMinRange.indexOf('%') > 0) {\n        paneMinRange = this.convertPercentageToPixel(paneMinRange).toString();\n      }\n\n      paneMinDimensions = this.convertPixelToNumber(paneMinRange);\n\n      if (paneCurrentWidth < paneMinDimensions) {\n        difference = paneCurrentWidth - paneMinDimensions <= 0 ? 0 : paneCurrentWidth - paneMinDimensions;\n        this.totalWidth = this.totalWidth - difference;\n        this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n        validatedVal = paneMinDimensions;\n      }\n    }\n\n    return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n  }; // eslint-disable-next-line\n\n\n  Splitter.prototype.validateMaxRange = function (paneIndex, paneCurrentWidth, pane) {\n    var paneMaxRange = null;\n    var paneMaxDimensions;\n    var validatedVal;\n\n    if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n      paneMaxRange = this.paneSettings[paneIndex].max.toString();\n    }\n\n    if (!isNullOrUndefined(paneMaxRange)) {\n      if (paneMaxRange.indexOf('%') > 0) {\n        paneMaxRange = this.convertPercentageToPixel(paneMaxRange).toString();\n      }\n\n      paneMaxDimensions = this.convertPixelToNumber(paneMaxRange);\n\n      if (paneCurrentWidth > paneMaxDimensions) {\n        this.totalWidth = this.totalWidth - (paneCurrentWidth - paneMaxDimensions);\n        this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n        validatedVal = paneMaxDimensions;\n      }\n    }\n\n    return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n  };\n\n  Splitter.prototype.validateMinMaxValues = function () {\n    //validate previous pane minimum range\n    this.prevPaneCurrentWidth = this.validateMinRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane); // Validate next pane minimum range\n\n    this.nextPaneCurrentWidth = this.validateMinRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane); // validate previous pane maximum range\n\n    this.prevPaneCurrentWidth = this.validateMaxRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane); // validate next pane maximum range\n\n    this.nextPaneCurrentWidth = this.validateMaxRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n  };\n\n  Splitter.prototype.equatePaneWidths = function () {\n    var difference;\n\n    if (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth > this.totalPercent) {\n      difference = this.prevPaneCurrentWidth + this.nextPaneCurrentWidth - this.totalPercent;\n      this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - difference / 2 + '%';\n      this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - difference / 2 + '%';\n    }\n\n    if (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth < this.totalPercent) {\n      difference = this.totalPercent - (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth);\n      this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + difference / 2 + '%';\n      this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + difference / 2 + '%';\n    }\n  };\n\n  Splitter.prototype.calculateCurrentDimensions = function () {\n    if (this.updatePrePaneInPercentage || this.updateNextPaneInPercentage) {\n      this.prevPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.prevPaneCurrentWidth) * 10) / 10));\n      this.nextPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.nextPaneCurrentWidth) * 10) / 10));\n\n      if (this.prevPaneCurrentWidth === 0) {\n        this.nextPaneCurrentWidth = this.totalPercent;\n      }\n\n      if (this.nextPaneCurrentWidth === 0) {\n        this.prevPaneCurrentWidth = this.totalPercent;\n      }\n\n      if (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth !== this.totalPercent) {\n        this.equatePaneWidths();\n      } else {\n        this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + '%';\n        this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + '%';\n      }\n\n      this.prevPaneCurrentWidth = this.updatePrePaneInPercentage ? this.prevPaneCurrentWidth : this.convertPercentageToPixel(this.prevPaneCurrentWidth) + 'px';\n      this.nextPaneCurrentWidth = this.updateNextPaneInPercentage ? this.nextPaneCurrentWidth : this.convertPercentageToPixel(this.nextPaneCurrentWidth) + 'px';\n      this.updatePrePaneInPercentage = false;\n      this.updateNextPaneInPercentage = false;\n    } else {\n      this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + 'px';\n      this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + 'px';\n    }\n  };\n\n  Splitter.prototype.addStaticPaneClass = function () {\n    if (!this.previousPane.classList.contains(STATIC_PANE)) {\n      this.previousPane.classList.add(STATIC_PANE);\n    }\n\n    if (!this.nextPane.classList.contains(STATIC_PANE)) {\n      this.nextPane.classList.add(STATIC_PANE);\n    }\n  };\n\n  Splitter.prototype.validateDraggedPosition = function (draggedPos, prevPaneHeightWidth, nextPaneHeightWidth) {\n    var separatorTopLeft = this.orientation === 'Horizontal' ? this.currentSeparator.offsetLeft : this.currentSeparator.offsetTop;\n    var prePaneRange = separatorTopLeft - prevPaneHeightWidth;\n    var nextPaneRange = nextPaneHeightWidth + separatorTopLeft;\n    var pane1MinSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'min');\n    var pane2MinSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'min');\n    var pane1MaxSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'max');\n    var pane2MaxSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'max');\n    var validatedSize = draggedPos;\n\n    if (draggedPos > nextPaneRange - pane2MinSize) {\n      validatedSize = nextPaneRange - pane2MinSize;\n    } else if (draggedPos < prePaneRange + pane1MinSize) {\n      validatedSize = prePaneRange + pane1MinSize;\n    }\n\n    if (!isNullOrUndefined(pane1MaxSize)) {\n      if (draggedPos > prePaneRange + pane1MaxSize) {\n        validatedSize = prePaneRange + pane1MaxSize;\n      }\n    } else if (!isNullOrUndefined(pane2MaxSize)) {\n      if (draggedPos < nextPaneRange - pane2MaxSize) {\n        validatedSize = nextPaneRange - pane2MaxSize;\n      }\n    }\n\n    return validatedSize;\n  };\n\n  Splitter.prototype.onMouseUp = function (e) {\n    removeClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n    this.unwireResizeEvents();\n    var eventArgs = {\n      event: e,\n      element: this.element,\n      pane: [this.previousPane, this.nextPane],\n      index: [this.prevPaneIndex, this.nextPaneIndex],\n      separator: this.currentSeparator,\n      paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n    };\n\n    for (var i = 0; i < this.element.querySelectorAll('iframe').length; i++) {\n      this.element.querySelectorAll('iframe')[i].style.pointerEvents = 'auto';\n    }\n\n    this.trigger('resizeStop', eventArgs);\n\n    if (this.enablePersistence) {\n      var paneValues = this.paneSettings;\n      paneValues[this.getPreviousPaneIndex()].size = this.allPanes[this.getPreviousPaneIndex()].style.flexBasis;\n      paneValues[this.getNextPaneIndex()].size = this.allPanes[this.getNextPaneIndex()].style.flexBasis;\n      this.setProperties({\n        'paneSettings': paneValues\n      }, true);\n    }\n  };\n\n  Splitter.prototype.panesDimension = function (index, child) {\n    var childCount = child.length;\n    var size;\n    parseInt(this.getHeight(this.element), 10);\n\n    if (!isNullOrUndefined(this.paneSettings[index])) {\n      if (!isNullOrUndefined(this.paneSettings[index].size)) {\n        size = this.paneSettings[index].size;\n\n        if (index < childCount) {\n          setStyleAttribute(child[index], {\n            'flex-basis': size,\n            'order': index * 2\n          });\n\n          if (index < childCount - 1 && this.paneSettings[index].size !== '') {\n            addClass([child[index]], STATIC_PANE);\n          } else if (!this.sizeFlag) {\n            child[index].style.flexBasis = null;\n          }\n\n          if (index === childCount - 1 && this.sizeFlag && this.paneSettings[index].size !== '') {\n            addClass([child[index]], STATIC_PANE);\n          }\n        }\n      } else {\n        this.sizeFlag = true;\n        setStyleAttribute(child[index], {\n          'order': index * 2\n        });\n      }\n    } else {\n      setStyleAttribute(child[index], {\n        'order': index * 2\n      });\n    }\n\n    this.paneOrder.push(index * 2);\n  };\n\n  Splitter.prototype.setTemplate = function (template, toElement) {\n    toElement.innerHTML = '';\n    template = typeof template === 'string' ? this.sanitizeHelper(template) : template;\n    this.templateCompile(toElement, template); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n    if (this.isReact) {\n      this.renderReactTemplates();\n    }\n  }; // eslint-disable-next-line\n\n\n  Splitter.prototype.templateCompile = function (ele, cnt) {\n    // eslint-disable-next-line\n    var tempEle = this.createElement('div');\n    this.compileElement(tempEle, cnt, 'content');\n\n    if (tempEle.childNodes.length !== 0) {\n      [].slice.call(tempEle.childNodes).forEach(function (childEle) {\n        ele.appendChild(childEle);\n      });\n    }\n  };\n\n  Splitter.prototype.compileElement = function (ele, val, prop) {\n    // eslint-disable-next-line\n    if (typeof val === 'string') {\n      if (val[0] === '.' || val[0] === '#') {\n        var eleVal = document.querySelector(val);\n\n        if (!isNullOrUndefined(eleVal)) {\n          this.templateElement.push(eleVal);\n\n          if (eleVal.style.display === 'none') {\n            eleVal.style.removeProperty('display');\n          }\n\n          if (eleVal.getAttribute('style') === '') {\n            eleVal.removeAttribute('style');\n          }\n\n          ele.appendChild(eleVal);\n          return;\n        } else {\n          val = val.trim();\n        }\n      } else {\n        val = val.trim();\n      }\n    }\n\n    var templateFn;\n\n    if (!isNullOrUndefined(val.outerHTML)) {\n      templateFn = compile(val.outerHTML);\n    } else {\n      templateFn = compile(val);\n    }\n\n    var templateFUN;\n\n    if (!isNullOrUndefined(templateFn)) {\n      templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), true);\n    }\n\n    if (!isNullOrUndefined(templateFn) && templateFUN && templateFUN.length > 0) {\n      [].slice.call(templateFUN).forEach(function (el) {\n        ele.appendChild(el);\n      });\n    }\n  };\n\n  Splitter.prototype.paneCollapsible = function (pane, index) {\n    // eslint-disable-next-line\n    this.paneSettings[index].collapsible ? addClass([pane], COLLAPSIBLE) : removeClass([pane], COLLAPSIBLE);\n  };\n\n  Splitter.prototype.createSplitPane = function (target) {\n    var childCount = target.children.length;\n\n    for (var i = 0; i < this.paneSettings.length; i++) {\n      if (childCount < this.paneSettings.length) {\n        var childElement = this.createElement('div');\n        this.element.appendChild(childElement);\n        childCount = childCount + 1;\n      }\n    }\n\n    childCount = target.children.length;\n    var child = [].slice.call(target.children);\n    this.sizeFlag = false;\n\n    if (childCount > 0) {\n      for (var i = 0; i < childCount; i++) {\n        // To accept only div and span element as pane\n        if (child[i].nodeName === 'DIV' || child[i].nodeName === 'SPAN') {\n          this.allPanes.push(child[i]);\n\n          if (this.orientation === 'Horizontal') {\n            addClass([child[i]], [PANE, SPLIT_H_PANE, SCROLL_PANE]);\n            this.panesDimension(i, child);\n          } else {\n            addClass([child[i]], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n            this.panesDimension(i, child);\n          }\n\n          if (!isNullOrUndefined(this.paneSettings[i]) && !isNullOrUndefined(this.paneSettings[i].content)) {\n            this.setTemplate(this.paneSettings[i].content, child[i]);\n          }\n\n          if (!isNullOrUndefined(this.paneSettings[i]) && this.paneSettings[i].cssClass) {\n            this.setCssClass(child[i], this.paneSettings[i].cssClass);\n          }\n\n          if (!isNullOrUndefined(this.paneSettings[i])) {\n            this.paneCollapsible(child[i], i);\n          }\n        }\n      }\n    }\n  };\n  /**\n   * expands corresponding pane based on the index is passed.\n   *\n   * @param { number } index - Specifies the index value of the corresponding pane to be expanded at initial rendering of splitter.\n   * @returns {void}\n   */\n\n\n  Splitter.prototype.expand = function (index) {\n    this.collapsedOnchange(index);\n    this.updatePaneSettings(index, false);\n  };\n  /**\n   * collapses corresponding pane based on the index is passed.\n   *\n   * @param { number } index - Specifies the index value of the corresponding pane to be collapsed at initial rendering of splitter.\n   * @returns {void}\n   */\n\n\n  Splitter.prototype.collapse = function (index) {\n    this.isCollapsed(index);\n    this.updatePaneSettings(index, true);\n  };\n  /**\n   * Removes the control from the DOM and also removes all its related events.\n   *\n   * @returns {void}\n   */\n\n\n  Splitter.prototype.destroy = function () {\n    if (!this.isDestroyed) {\n      _super.prototype.destroy.call(this);\n\n      EventHandler.remove(document, 'touchstart click', this.onDocumentClick);\n      this.element.ownerDocument.defaultView.removeEventListener('resize', this.onReportWindowSize, true);\n\n      while (this.element.attributes.length > 0) {\n        this.element.removeAttribute(this.element.attributes[0].name);\n      }\n\n      this.element.innerHTML = this.wrapper.innerHTML;\n\n      for (var i = 0; i < this.wrapper.attributes.length; i++) {\n        this.element.setAttribute(this.wrapper.attributes[i].name, this.wrapper.attributes[i].value);\n      }\n\n      if (this.refreshing) {\n        addClass([this.element], ['e-control', 'e-lib', ROOT]);\n        this.allBars = [];\n        this.allPanes = [];\n      }\n\n      this.restoreElem(); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n      if (this.isReact) {\n        this.clearTemplate();\n      }\n    }\n  };\n\n  Splitter.prototype.restoreElem = function () {\n    if (this.templateElement.length > 0) {\n      for (var i = 0; i < this.templateElement.length; i++) {\n        this.templateElement[i].style.display = 'none';\n        document.body.appendChild(this.templateElement[i]);\n      }\n    }\n  };\n\n  Splitter.prototype.addPaneClass = function (pane) {\n    // eslint-disable-next-line\n    this.orientation === 'Horizontal' ? addClass([pane], [PANE, SPLIT_H_PANE, SCROLL_PANE]) : addClass([pane], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n    return pane;\n  };\n\n  Splitter.prototype.removePaneOrders = function (paneClass) {\n    var childNodes = this.element.childNodes;\n    var panes = [];\n\n    for (var i = 0; childNodes.length < 0; i++) {\n      if (childNodes[i].classList.contains(paneClass)) {\n        panes.push(childNodes[i]);\n      }\n    }\n\n    for (var i = 0; i < panes.length; i++) {\n      panes[i].style.removeProperty('order');\n    }\n  };\n\n  Splitter.prototype.setPaneOrder = function () {\n    for (var i = 0; i < this.allPanes.length; i++) {\n      this.panesDimension(i, this.allPanes);\n    }\n  };\n\n  Splitter.prototype.removeSeparator = function () {\n    for (var i = 0; i < this.allBars.length; i++) {\n      detach(this.allBars[i]);\n    }\n\n    this.allBars = [];\n  };\n\n  Splitter.prototype.updatePanes = function () {\n    this.setPaneOrder();\n    this.removeSeparator();\n    this.addSeparator(this.element);\n  };\n  /**\n   * Allows you to add a pane dynamically to the specified index position by passing the pane properties.\n   *\n   * @param { PanePropertiesModel } paneProperties - Specifies the pane’s properties that apply to new pane.\n   * @param { number } index - Specifies the index where the pane will be inserted.\n   * @returns {void}\n   */\n\n\n  Splitter.prototype.addPane = function (paneProperties, index) {\n    var newPane = this.createElement('div');\n    newPane = this.addPaneClass(newPane);\n    index = index > this.allPanes.length + 1 ? this.allPanes.length : index;\n    var paneDetails = {\n      size: isNullOrUndefined(paneProperties.size) ? '' : paneProperties.size,\n      min: isNullOrUndefined(paneProperties.min) ? null : paneProperties.min,\n      max: isNullOrUndefined(paneProperties.max) ? null : paneProperties.max,\n      content: isNullOrUndefined(paneProperties.content) ? '' : paneProperties.content,\n      resizable: isNullOrUndefined(paneProperties.resizable) ? true : paneProperties.resizable,\n      collapsible: isNullOrUndefined(paneProperties.collapsible) ? false : paneProperties.collapsible,\n      collapsed: isNullOrUndefined(paneProperties.collapsed) ? false : paneProperties.collapsed,\n      cssClass: isNullOrUndefined(paneProperties.cssClass) ? '' : paneProperties.cssClass\n    };\n    this.paneSettings.splice(index, 0, paneDetails);\n    this.setProperties({\n      'paneSettings': this.paneSettings\n    }, true);\n\n    if (this.orientation === 'Horizontal') {\n      this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_H_PANE)[index]);\n      this.removePaneOrders(SPLIT_H_PANE);\n    } else {\n      this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_V_PANE)[index]);\n      this.removePaneOrders(SPLIT_V_PANE);\n    }\n\n    this.allPanes.splice(index, 0, newPane);\n    this.updatePanes();\n    this.setTemplate(this.paneSettings[index].content, newPane);\n    this.setCssClass(this.allPanes[index], paneProperties.cssClass);\n    this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n  };\n  /**\n   * Allows you to remove the specified pane dynamically by passing its index value.\n   *\n   * @param { number } index - Specifies the index value to remove the corresponding pane.\n   * @returns {void}\n   */\n\n\n  Splitter.prototype.removePane = function (index) {\n    index = index > this.allPanes.length + 1 ? this.allPanes.length : index;\n    var elementClass = this.orientation === 'Horizontal' ? SPLIT_H_PANE : SPLIT_V_PANE;\n\n    if (isNullOrUndefined(this.element.querySelectorAll('.' + elementClass)[index])) {\n      return;\n    }\n\n    detach(this.element.querySelectorAll('.' + elementClass)[index]);\n    this.allPanes.splice(index, 1);\n    this.removePaneOrders(elementClass);\n    this.updatePanes();\n    this.paneSettings.splice(index, 1);\n    this.setProperties({\n      'paneSettings': this.paneSettings\n    }, true);\n\n    if (this.allPanes.length > 0) {\n      this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n    }\n  };\n\n  __decorate([Property('100%')], Splitter.prototype, \"height\", void 0);\n\n  __decorate([Property(false)], Splitter.prototype, \"enableReversePanes\", void 0);\n\n  __decorate([Property('100%')], Splitter.prototype, \"width\", void 0);\n\n  __decorate([Property(false)], Splitter.prototype, \"enablePersistence\", void 0);\n\n  __decorate([Collection([], PaneProperties)], Splitter.prototype, \"paneSettings\", void 0);\n\n  __decorate([Property('Horizontal')], Splitter.prototype, \"orientation\", void 0);\n\n  __decorate([Property('')], Splitter.prototype, \"cssClass\", void 0);\n\n  __decorate([Property(true)], Splitter.prototype, \"enabled\", void 0);\n\n  __decorate([Property(true)], Splitter.prototype, \"enableHtmlSanitizer\", void 0);\n\n  __decorate([Property(null)], Splitter.prototype, \"separatorSize\", void 0);\n\n  __decorate([Event()], Splitter.prototype, \"beforeSanitizeHtml\", void 0);\n\n  __decorate([Event()], Splitter.prototype, \"created\", void 0);\n\n  __decorate([Event()], Splitter.prototype, \"resizeStart\", void 0);\n\n  __decorate([Event()], Splitter.prototype, \"resizing\", void 0);\n\n  __decorate([Event()], Splitter.prototype, \"resizeStop\", void 0);\n\n  __decorate([Event()], Splitter.prototype, \"beforeCollapse\", void 0);\n\n  __decorate([Event()], Splitter.prototype, \"beforeExpand\", void 0);\n\n  __decorate([Event()], Splitter.prototype, \"collapsed\", void 0);\n\n  __decorate([Event()], Splitter.prototype, \"expanded\", void 0);\n\n  Splitter = __decorate([NotifyPropertyChanges], Splitter);\n  return Splitter;\n}(Component);\n/**\n * splitter modules\n */\n\n\nvar __extends$1 = undefined && undefined.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate$1 = undefined && undefined.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}; // constant class definitions\n\n\nvar preventSelect = 'e-prevent';\nvar dragging = 'e-dragging';\nvar dragRestrict = 'e-drag-restrict';\nvar drag = 'e-drag';\nvar resize = 'e-resize';\nvar resizeicon = 'e-dl-icon';\nvar responsive = 'e-responsive';\nvar east = 'e-east';\nvar west = 'e-west';\nvar north = 'e-north';\nvar south = 'e-south';\nvar single = 'e-single';\nvar double = 'e-double';\nvar northEast = 'e-north-east';\nvar southEast = 'e-south-east';\nvar northWest = 'e-north-west';\nvar southWest = 'e-south-west';\nvar panel = 'e-panel';\nvar panelContent = 'e-panel-content';\nvar panelContainer = 'e-panel-container';\nvar disable = 'e-disabled';\nvar header = 'e-panel-header';\nvar panelTransition = 'e-panel-transition';\n/**\n * Defines the panel of the DashboardLayout component.\n */\n\nvar Panel =\n/** @__PURE__ @class */\nfunction (_super) {\n  __extends$1(Panel, _super);\n\n  function Panel() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate$1([Property('')], Panel.prototype, \"id\", void 0);\n\n  __decorate$1([Property('')], Panel.prototype, \"cssClass\", void 0);\n\n  __decorate$1([Property('')], Panel.prototype, \"header\", void 0);\n\n  __decorate$1([Property('')], Panel.prototype, \"content\", void 0);\n\n  __decorate$1([Property(true)], Panel.prototype, \"enabled\", void 0);\n\n  __decorate$1([Property(0)], Panel.prototype, \"row\", void 0);\n\n  __decorate$1([Property(0)], Panel.prototype, \"col\", void 0);\n\n  __decorate$1([Property(1)], Panel.prototype, \"sizeX\", void 0);\n\n  __decorate$1([Property(1)], Panel.prototype, \"sizeY\", void 0);\n\n  __decorate$1([Property(1)], Panel.prototype, \"minSizeY\", void 0);\n\n  __decorate$1([Property(1)], Panel.prototype, \"minSizeX\", void 0);\n\n  __decorate$1([Property(null)], Panel.prototype, \"maxSizeY\", void 0);\n\n  __decorate$1([Property(null)], Panel.prototype, \"maxSizeX\", void 0);\n\n  __decorate$1([Property(1000)], Panel.prototype, \"zIndex\", void 0);\n\n  return Panel;\n}(ChildProperty);\n/**\n * The DashboardLayout is a grid structured layout control, that helps to create a dashboard with panels.\n * Panels hold the UI components or data to be visualized with flexible options like resize, reorder, drag-n-drop, remove and add,\n * that allows users to easily place the panels at a desired position within the grid layout.\n * ```html\n * <div id=\"default-layout\">\n * ```\n * ```typescript\n * <script>\n *   let dashBoardObject : DashboardLayout = new DashboardLayout();\n *   dashBoardObject.appendTo('#default-layout');\n * </script>\n * ```\n */\n\n\nvar DashboardLayout =\n/** @__PURE__ @class */\nfunction (_super) {\n  __extends$1(DashboardLayout, _super);\n\n  function DashboardLayout(options, element) {\n    var _this = _super.call(this, options, element) || this;\n\n    _this.rows = 1;\n    _this.panelID = 0;\n    _this.movePanelCalled = false;\n    _this.resizeCalled = false;\n    _this.mOffX = 0;\n    _this.mOffY = 0;\n    _this.maxTop = 9999;\n    _this.maxRows = 100;\n    _this.mouseX = 0;\n    _this.mouseY = 0;\n    _this.minTop = 0;\n    _this.minLeft = 0;\n    _this.isInlineRendering = false;\n    _this.removeAllCalled = false; // to check whether removePanel is executed in mobile device\n\n    _this.isPanelRemoved = false; // to maintain sizeY in mobile device\n\n    _this.panelsSizeY = 0;\n    _this.resizeHeight = false;\n    setValue('mergePersistData', _this.mergePersistPanelData, _this);\n    return _this;\n  }\n  /**\n   * Initialize the event handler\n   *\n   * @private\n   */\n\n\n  DashboardLayout.prototype.preRender = function () {\n    this.panelCollection = [];\n    this.sortedArray = [];\n    this.gridPanelCollection = [];\n    this.overlapElement = [];\n    this.overlapElementClone = [];\n    this.overlapSubElementClone = [];\n    this.collisionChecker = {};\n    this.dragCollection = [];\n    this.elementRef = {\n      top: '',\n      left: '',\n      height: '',\n      width: ''\n    };\n    this.dimensions = [];\n    this.allItems = [];\n    this.oldRowCol = {};\n    this.availableClasses = [];\n    this.setOldRowCol();\n    this.calculateCellSize();\n    this.contentTemplateChild = [].slice.call(this.element.children);\n  };\n\n  DashboardLayout.prototype.setOldRowCol = function () {\n    for (var i = 0; i < this.panels.length; i++) {\n      if (!this.panels[i].id) {\n        this.panelPropertyChange(this.panels[i], {\n          id: 'layout_' + this.panelID.toString()\n        });\n        this.panelID = this.panelID + 1;\n      }\n\n      this.oldRowCol[this.panels[i].id] = {\n        row: this.panels[i].row,\n        col: this.panels[i].col\n      };\n    }\n  };\n\n  DashboardLayout.prototype.createPanelElement = function (cssClass, idValue) {\n    var ele = this.createElement('div');\n\n    if (cssClass && cssClass.length > 0) {\n      addClass([ele], cssClass);\n    }\n\n    if (idValue) {\n      ele.setAttribute('id', idValue);\n    }\n\n    return ele;\n  };\n  /**\n   * To Initialize the control rendering.\n   *\n   * @returns void\n   * @private\n   */\n\n\n  DashboardLayout.prototype.render = function () {\n    this.initialize();\n    this.isRenderComplete = true;\n\n    if (this.showGridLines && !this.checkMediaQuery()) {\n      this.initGridLines();\n    }\n\n    this.updateDragArea();\n    this.renderComplete();\n    this.renderReactTemplates();\n  };\n\n  DashboardLayout.prototype.initGridLines = function () {\n    this.table = document.createElement('table');\n    var tbody = document.createElement('tbody');\n    this.table.classList.add('e-dashboard-gridline-table');\n\n    for (var i = 0; i < this.maxRow(); i++) {\n      var tr = document.createElement('tr');\n\n      for (var j = 0; j < this.columns; j++) {\n        var td = document.createElement('td');\n        td.classList.add('e-dashboard-gridline');\n        this.setAttributes({\n          value: {\n            row: i.toString(),\n            col: j.toString(),\n            sizeX: '1',\n            sizeY: '1'\n          }\n        }, td);\n        this.setPanelPosition(td, i, j);\n        this.setHeightAndWidth(td, {\n          row: i,\n          col: j,\n          sizeX: 1,\n          sizeY: 1\n        });\n        tr.appendChild(td);\n      }\n\n      tbody.appendChild(tr);\n    }\n\n    this.table.appendChild(tbody);\n    this.element.appendChild(this.table);\n    this.renderReactTemplates();\n  };\n\n  DashboardLayout.prototype.initialize = function () {\n    this.updateRowHeight();\n\n    if (this.element.childElementCount > 0 && this.element.querySelectorAll('.e-panel').length > 0) {\n      var panelElements = [];\n      this.setProperties({\n        panels: []\n      }, true);\n      this.isInlineRendering = true;\n\n      for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n        panelElements.push(this.element.querySelectorAll('.e-panel')[i]);\n      }\n\n      for (var i = 0; i < panelElements.length; i++) {\n        var panelElement = panelElements[i];\n\n        if (this.enableRtl) {\n          addClass([panelElement], 'e-rtl');\n        }\n\n        this.getInlinePanels(panelElement);\n        this.maxCol();\n        this.maxRow();\n      }\n\n      for (var i = 0; i < this.panels.length; i++) {\n        var panelElement = this.element.querySelector('#' + this.panels[i].id);\n        this.setMinMaxValues(this.panels[i]);\n\n        if (this.maxColumnValue < this.panels[i].col || this.maxColumnValue < this.panels[i].col + this.panels[i].sizeX) {\n          var colValue = this.maxColumnValue - this.panels[i].sizeX;\n          this.panelPropertyChange(this.panels[i], {\n            col: colValue < 0 ? 0 : colValue\n          });\n        }\n\n        this.setXYAttributes(panelElement, this.panels[i]);\n        var panel_1 = this.renderPanels(panelElement, this.panels[i], this.panels[i].id, false);\n        this.panelCollection.push(panel_1);\n        this.setHeightAndWidth(panelElement, this.panels[i]);\n        this.tempObject = this;\n\n        if (this.mediaQuery && !window.matchMedia('(' + this.mediaQuery + ')').matches) {\n          this.setPanelPosition(panelElement, this.panels[i].row, this.panels[i].col);\n          this.mainElement = panelElement;\n          this.updatePanelLayout(panelElement, this.panels[i]);\n          this.mainElement = null;\n        }\n\n        this.setClasses([panelElement]);\n      }\n\n      this.updateOldRowColumn();\n\n      if (this.checkMediaQuery()) {\n        this.checkMediaQuerySizing();\n      }\n    } else {\n      this.renderDashBoardCells(this.panels);\n    }\n\n    if (this.allowDragging && (this.mediaQuery ? !window.matchMedia('(' + this.mediaQuery + ')').matches : true)) {\n      this.enableDraggingContent(this.panelCollection);\n    }\n\n    this.sortedPanel();\n    this.bindEvents();\n    this.updatePanels();\n    this.updateCloneArrayObject();\n    this.checkColumnValue = this.maxColumnValue;\n\n    if (!this.checkMediaQuery()) {\n      this.panelResponsiveUpdate();\n    }\n\n    this.setEnableRtl();\n  };\n\n  DashboardLayout.prototype.checkMediaQuery = function () {\n    return this.mediaQuery && window.matchMedia('(' + this.mediaQuery + ')').matches;\n  };\n\n  DashboardLayout.prototype.calculateCellSize = function () {\n    this.cellSize = [];\n\n    if (this.checkMediaQuery()) {\n      this.cellSize[1] = this.element.parentElement && this.element.parentElement.offsetWidth / this.cellAspectRatio;\n    } else {\n      this.cellSize[0] = this.element.parentElement && this.element.parentElement.offsetWidth;\n      this.cellSize[0] = this.element.parentElement && (this.element.parentElement.offsetWidth - (this.maxCol() - 1) * this.cellSpacing[0]) / this.maxCol();\n      this.cellSize[1] = this.cellSize[0] / this.cellAspectRatio;\n    }\n  };\n\n  DashboardLayout.prototype.maxRow = function (recheck) {\n    var maxRow = 1;\n\n    if (this.rows > 1 && isNullOrUndefined(recheck)) {\n      maxRow = this.rows;\n      return maxRow;\n    }\n\n    for (var i = 0; i < this.panels.length; i++) {\n      if (this.panels[i].sizeY + this.panels[i].row > maxRow) {\n        maxRow = this.panels[i].sizeY + this.panels[i].row;\n      }\n    }\n\n    if (this.panels.length === 0) {\n      maxRow = this.columns;\n    }\n\n    return maxRow;\n  };\n\n  DashboardLayout.prototype.maxCol = function () {\n    var maxCol = 1;\n    maxCol = this.columns;\n    this.maxColumnValue = maxCol;\n    return maxCol;\n  };\n\n  DashboardLayout.prototype.updateOldRowColumn = function () {\n    for (var i = 0; i < this.panels.length; i++) {\n      var id = this.panels[i].id;\n\n      if (document.getElementById(id)) {\n        var row = parseInt(document.getElementById(id).getAttribute('data-row'), 10);\n        var col = parseInt(document.getElementById(id).getAttribute('data-col'), 10);\n        this.oldRowCol[this.panels[i].id] = {\n          row: row,\n          col: col\n        };\n      } else {\n        continue;\n      }\n    }\n  };\n\n  DashboardLayout.prototype.createSubElement = function (cssClass, idValue, className) {\n    var element = this.createElement('div');\n\n    if (className) {\n      addClass([element], [className]);\n    }\n\n    if (cssClass && cssClass.length > 0) {\n      addClass([element], cssClass);\n    }\n\n    if (idValue) {\n      element.setAttribute('id', idValue);\n    }\n\n    return element;\n  }; // eslint-disable-next-line\n\n\n  DashboardLayout.prototype.templateParser = function (template) {\n    if (template) {\n      try {\n        if (document.querySelectorAll(template).length) {\n          return compile(document.querySelector(template).innerHTML.trim());\n        }\n      } catch (error) {\n        var sanitizedValue = SanitizeHtmlHelper.sanitize(template);\n        return compile(this.enableHtmlSanitizer && typeof template === 'string' ? sanitizedValue : template);\n      }\n    }\n\n    return undefined;\n  };\n\n  DashboardLayout.prototype.renderTemplate = function (content, appendElement, type, isStringTemplate, prop) {\n    // eslint-disable-next-line\n    var templateFn = this.templateParser(content);\n    var templateElements = [];\n\n    if ((content[0] === '.' || content[0] === '#') && document.querySelector(content).tagName !== 'SCRIPT') {\n      var eleVal = document.querySelector(content);\n\n      if (!isNullOrUndefined(eleVal)) {\n        if (eleVal.style.display === 'none') {\n          eleVal.style.removeProperty('display');\n        }\n\n        if (eleVal.getAttribute('style') === '') {\n          eleVal.removeAttribute('style');\n        }\n\n        appendElement.appendChild(eleVal);\n        return;\n      } else {\n        content = content.trim();\n      }\n    } else {\n      // eslint-disable-next-line\n      var compilerFn = templateFn({}, this, prop, type, isStringTemplate, null, appendElement);\n\n      if (compilerFn) {\n        for (var _i = 0, compilerFn_1 = compilerFn; _i < compilerFn_1.length; _i++) {\n          var item = compilerFn_1[_i];\n          templateElements.push(item);\n        }\n\n        append([].slice.call(templateElements), appendElement);\n      }\n    }\n  };\n\n  DashboardLayout.prototype.renderPanels = function (cellElement, panelModel, panelId, isStringTemplate) {\n    addClass([cellElement], [panel, panelTransition]);\n    var cssClass = panelModel.cssClass ? panelModel.cssClass.split(' ') : null;\n    this.panelContent = cellElement.querySelector('.e-panel-container') ? cellElement.querySelector('.e-panel-container') : this.createSubElement(cssClass, cellElement.id + '_content', panelContainer);\n    cellElement.appendChild(this.panelContent);\n\n    if (!panelModel.enabled) {\n      this.disablePanel(cellElement);\n    }\n\n    if (panelModel.header) {\n      var headerTemplateElement = cellElement.querySelector('.e-panel-header') ? cellElement.querySelector('.e-panel-header') : this.createSubElement([], cellElement.id + 'template', '');\n      addClass([headerTemplateElement], [header]);\n\n      if (!cellElement.querySelector('.e-panel-header')) {\n        var id = this.element.id + 'HeaderTemplate' + panelId;\n        this.renderTemplate(panelModel.header, headerTemplateElement, id, isStringTemplate, 'header');\n        this.panelContent.appendChild(headerTemplateElement);\n        this.renderReactTemplates();\n      }\n    }\n\n    if (panelModel.content) {\n      var cssClass_1 = panelModel.cssClass ? panelModel.cssClass.split(' ') : null;\n      this.panelBody = cellElement.querySelector('.e-panel-content') ? cellElement.querySelector('.e-panel-content') : this.createSubElement(cssClass_1, cellElement.id + '_body', panelContent);\n      var headerHeight = this.panelContent.querySelector('.e-panel-header') ? window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n      var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n      setStyleAttribute(this.panelBody, {\n        height: contentHeightValue\n      });\n\n      if (!cellElement.querySelector('.e-panel-content')) {\n        var id = this.element.id + 'ContentTemplate' + panelId;\n        this.renderTemplate(panelModel.content, this.panelBody, id, isStringTemplate, 'content');\n        this.panelContent.appendChild(this.panelBody);\n        this.renderReactTemplates();\n      }\n    }\n\n    return cellElement;\n  };\n\n  DashboardLayout.prototype.disablePanel = function (panelElement) {\n    addClass([panelElement], [disable]);\n  };\n\n  DashboardLayout.prototype.getInlinePanels = function (panelElement) {\n    var model = {\n      sizeX: panelElement.hasAttribute('data-sizex') ? parseInt(panelElement.getAttribute('data-sizex'), 10) : 1,\n      sizeY: panelElement.hasAttribute('data-sizey') ? parseInt(panelElement.getAttribute('data-sizey'), 10) : 1,\n      minSizeX: panelElement.hasAttribute('data-minsizex') ? parseInt(panelElement.getAttribute('data-minsizex'), 10) : 1,\n      minSizeY: panelElement.hasAttribute('data-minsizey') ? parseInt(panelElement.getAttribute('data-minsizey'), 10) : 1,\n      maxSizeX: panelElement.hasAttribute('data-maxsizex') ? parseInt(panelElement.getAttribute('data-maxsizex'), 10) : null,\n      maxSizeY: panelElement.hasAttribute('data-maxsizey') ? parseInt(panelElement.getAttribute('data-maxsizey'), 10) : null,\n      row: panelElement.hasAttribute('data-row') ? parseInt(panelElement.getAttribute('data-row'), 10) : 0,\n      col: panelElement.hasAttribute('data-col') ? parseInt(panelElement.getAttribute('data-col'), 10) : 0,\n      id: panelElement.getAttribute('id'),\n      zIndex: panelElement.hasAttribute('data-zindex') ? parseInt(panelElement.getAttribute('data-zIndex'), 10) : 1000,\n      header: panelElement.querySelector('.e-panel-header') && '.e-panel-header',\n      content: panelElement.querySelector('.e-panel-content') && '.e-panel-content'\n    };\n\n    if (!model.id) {\n      model.id = 'layout_' + this.panelID.toString();\n      panelElement.setAttribute('id', model.id);\n      this.panelID = this.panelID + 1;\n    }\n\n    if (isUndefined(model.enabled)) {\n      model.enabled = true;\n    }\n\n    panelElement.style.zIndex = '' + model.zIndex; // eslint-disable-next-line\n\n    var panelProp = new Panel(this, 'panels', model, true);\n    this.panels.push(panelProp);\n  };\n\n  DashboardLayout.prototype.resizeEvents = function () {\n    if (this.allowResizing) {\n      var panelElements = this.element.querySelectorAll('.e-panel .e-panel-container .e-resize');\n\n      for (var i = 0; i < panelElements.length; i++) {\n        var eventName = Browser.info.name === 'msie' ? 'mousedown pointerdown' : 'mousedown';\n        EventHandler.add(panelElements[i], eventName, this.downResizeHandler, this);\n\n        if (Browser.info.name !== 'msie') {\n          EventHandler.add(panelElements[i], 'touchstart', this.touchDownResizeHandler, this);\n        }\n      }\n    }\n  };\n\n  DashboardLayout.prototype.bindEvents = function () {\n    this.refreshListener = this.refresh.bind(this); // eslint-disable-next-line\n\n    EventHandler.add(window, 'resize', this.refreshListener);\n    this.resizeEvents();\n  };\n\n  DashboardLayout.prototype.downResizeHandler = function (e) {\n    this.downHandler(e);\n    this.lastMouseX = e.pageX;\n    this.lastMouseY = e.pageY;\n    var moveEventName = Browser.info.name === 'msie' ? 'mousemove pointermove' : 'mousemove';\n    var upEventName = Browser.info.name === 'msie' ? 'mouseup pointerup' : 'mouseup';\n\n    if (!this.isMouseMoveBound) {\n      EventHandler.add(document, moveEventName, this.moveResizeHandler, this);\n      this.isMouseMoveBound = true;\n    }\n\n    if (!this.isMouseUpBound) {\n      EventHandler.add(document, upEventName, this.upResizeHandler, this);\n      this.isMouseUpBound = true;\n    }\n  };\n\n  DashboardLayout.prototype.downHandler = function (e) {\n    this.resizeCalled = false;\n    this.panelsInitialModel = this.cloneModels(this.panels);\n    var el = closest(e.currentTarget, '.e-panel');\n    var args = {\n      event: e,\n      element: el,\n      isInteracted: true\n    };\n    this.trigger('resizeStart', args);\n    this.downTarget = e.currentTarget;\n    this.shadowEle = document.createElement('div');\n    this.shadowEle.classList.add('e-holder');\n    addClass([this.element], [preventSelect]);\n    this.element.appendChild(this.shadowEle);\n    this.renderReactTemplates();\n    this.elementX = parseFloat(el.style.left);\n    this.elementY = parseFloat(el.style.top);\n    this.elementWidth = el.offsetWidth;\n    this.elementHeight = el.offsetHeight;\n    this.originalWidth = this.getCellInstance(el.id).sizeX;\n    this.originalHeight = this.getCellInstance(el.id).sizeY;\n    this.previousRow = this.getCellInstance(el.id).row;\n  };\n\n  DashboardLayout.prototype.touchDownResizeHandler = function (e) {\n    this.downHandler(e);\n    this.lastMouseX = e.changedTouches[0].pageX;\n    this.lastMouseY = e.changedTouches[0].pageY;\n\n    if (!this.isMouseMoveBound) {\n      EventHandler.add(document, 'touchmove', this.touchMoveResizeHandler, this);\n      this.isMouseMoveBound = true;\n    }\n\n    if (!this.isMouseUpBound) {\n      EventHandler.add(document, 'touchend', this.upResizeHandler, this);\n      this.isMouseUpBound = true;\n    }\n  };\n\n  DashboardLayout.prototype.getCellSize = function () {\n    return [this.cellSize[0], this.cellSize[1]];\n  };\n\n  DashboardLayout.prototype.updateMaxTopLeft = function (e) {\n    this.moveTarget = this.downTarget;\n    var el = closest(this.moveTarget, '.e-panel');\n    var args = {\n      event: e,\n      element: el,\n      isInteracted: true\n    };\n    this.trigger('resize', args);\n  };\n\n  DashboardLayout.prototype.updateResizeElement = function (el) {\n    this.maxLeft = this.element.offsetWidth - 1;\n    this.maxTop = this.cellSize[1] * this.maxRows - 1;\n    removeClass([el], 'e-panel-transition');\n    addClass([el], [dragging]);\n    var handleArray = [east, west, north, south, southEast, northEast, northWest, southWest];\n\n    for (var i = 0; i < this.moveTarget.classList.length; i++) {\n      if (handleArray.indexOf(this.moveTarget.classList[i]) !== -1) {\n        this.handleClass = this.moveTarget.classList[i];\n      }\n    }\n  };\n\n  DashboardLayout.prototype.moveResizeHandler = function (e) {\n    this.updateMaxTopLeft(e);\n    var el = closest(this.moveTarget, '.e-panel');\n\n    if (this.lastMouseX === e.pageX || this.lastMouseY === e.pageY) {\n      return;\n    }\n\n    this.updateResizeElement(el);\n    var panelModel = this.getCellInstance(el.getAttribute('id'));\n    this.mouseX = e.pageX;\n    this.mouseY = e.pageY;\n    var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n    var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n    this.mOffX = this.mOffY = 0;\n    this.lastMouseY = this.mouseY;\n    this.lastMouseX = this.mouseX;\n    this.resizingPanel(el, panelModel, diffX, diffY);\n  };\n\n  DashboardLayout.prototype.touchMoveResizeHandler = function (e) {\n    this.updateMaxTopLeft(e);\n    var el = closest(this.moveTarget, '.e-panel');\n\n    if (this.lastMouseX === e.changedTouches[0].pageX || this.lastMouseY === e.changedTouches[0].pageY) {\n      return;\n    }\n\n    this.updateResizeElement(el);\n    var panelModel = this.getCellInstance(el.getAttribute('id'));\n    this.mouseX = e.changedTouches[0].pageX;\n    this.mouseY = e.changedTouches[0].pageY;\n    var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n    var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n    this.mOffX = this.mOffY = 0;\n    this.lastMouseX = this.mouseX;\n    this.lastMouseY = this.mouseY;\n    this.resizingPanel(el, panelModel, diffX, diffY);\n  };\n  /* istanbul ignore next */\n\n\n  DashboardLayout.prototype.resizingPanel = function (el, panelModel, currentX, currentY) {\n    var oldSizeX = this.getCellInstance(el.id).sizeX;\n    var oldSizeY = this.getCellInstance(el.id).sizeY;\n    var dY = currentY;\n    var dX = currentX;\n\n    if (this.handleClass.indexOf('north') >= 0) {\n      if (this.elementHeight - dY < this.getMinHeight(panelModel)) {\n        currentY = this.elementHeight - this.getMinHeight(panelModel);\n        this.mOffY = dY - currentY;\n      } else if (panelModel.maxSizeY && this.elementHeight - dY > this.getMaxHeight(panelModel)) {\n        currentY = this.elementHeight - this.getMaxHeight(panelModel);\n        this.mOffY = dY - currentY;\n      } else if (this.elementY + dY < this.minTop) {\n        currentY = this.minTop - this.elementY;\n        this.mOffY = dY - currentY;\n      }\n\n      this.elementY += currentY;\n      this.elementHeight -= currentY;\n    }\n\n    if (this.handleClass.indexOf('south') >= 0) {\n      if (this.elementHeight + dY < this.getMinHeight(panelModel)) {\n        currentY = this.getMinHeight(panelModel) - this.elementHeight;\n        this.mOffY = dY - currentY;\n      } else if (panelModel.maxSizeY && this.elementHeight + dY > this.getMaxHeight(panelModel)) {\n        currentY = this.getMaxHeight(panelModel) - this.elementHeight;\n        this.mOffY = dY - currentY;\n      }\n\n      this.elementHeight += currentY;\n    }\n\n    if (this.handleClass.indexOf('west') >= 0) {\n      if (this.elementWidth - dX < this.getMinWidth(panelModel)) {\n        currentX = this.elementWidth - this.getMinWidth(panelModel);\n        this.mOffX = dX - currentX;\n      } else if (panelModel.maxSizeX && this.elementWidth - dX > this.getMaxWidth(panelModel)) {\n        currentX = this.elementWidth - this.getMaxWidth(panelModel);\n        this.mOffX = dX - currentX;\n      } else if (this.elementX + dX < this.minLeft) {\n        currentX = this.minLeft - this.elementX;\n        this.mOffX = dX - currentX;\n      }\n\n      this.elementX += currentX;\n      this.elementWidth -= currentX;\n    }\n\n    if (this.handleClass.indexOf('east') >= 0) {\n      if (this.elementWidth + dX < this.getMinWidth(panelModel)) {\n        currentX = this.getMinWidth(panelModel) - this.elementWidth;\n        this.mOffX = dX - currentX;\n      } else if (panelModel.maxSizeX && this.elementWidth + dX > this.getMaxWidth(panelModel)) {\n        currentX = this.getMaxWidth(panelModel) - this.elementWidth;\n        this.mOffX = dX - currentX;\n      }\n\n      this.elementWidth += currentX;\n    }\n\n    el.style.top = this.elementY + 'px';\n    el.style.left = this.elementX + 'px';\n    el.style.width = this.elementWidth + 'px';\n    el.style.height = this.elementHeight + 'px';\n    var item = this.getResizeRowColumn(panelModel);\n\n    if (item.col + item.sizeX > this.columns) {\n      this.panelPropertyChange(item, {\n        sizeX: item.sizeX - 1\n      });\n    }\n\n    this.shadowEle.style.top = item.row * this.getCellSize()[1] + item.row * this.cellSpacing[1] + 'px';\n    this.shadowEle.style.left = item.col * this.getCellSize()[0] + item.col * this.cellSpacing[0] + 'px';\n    this.shadowEle.style.height = item.sizeY * (this.getCellSize()[1] + this.cellSpacing[1]) + 'px';\n    this.shadowEle.style.width = item.sizeX * (this.getCellSize()[0] + this.cellSpacing[0]) + 'px';\n\n    if (oldSizeX !== item.sizeX || oldSizeY !== item.sizeY) {\n      oldSizeX = item.sizeX;\n      oldSizeY = item.sizeY;\n      var model = this.getCellInstance(el.id);\n      var value = {\n        attributes: {\n          row: model.row.toString(),\n          col: model.col.toString(),\n          sizeX: model.sizeX.toString(),\n          sizeY: model.sizeY.toString()\n        }\n      };\n      this.setAttributes(value, el);\n      this.mainElement = el;\n      this.updatePanelLayout(el, this.getCellInstance(el.id));\n      this.updateOldRowColumn();\n      this.sortedPanel();\n    }\n  };\n\n  DashboardLayout.prototype.upResizeHandler = function (e) {\n    if (isNullOrUndefined(this.downTarget)) {\n      return;\n    }\n\n    this.upTarget = this.downTarget;\n    var el = closest(this.upTarget, '.e-panel');\n    var args = {\n      event: e,\n      element: el,\n      isInteracted: true\n    };\n\n    if (el) {\n      addClass([el], 'e-panel-transition');\n      var moveEventName = Browser.info.name === 'msie' ? 'mousemove pointermove' : 'mousemove';\n      var upEventName = Browser.info.name === 'msie' ? 'mouseup pointerup' : 'mouseup';\n      EventHandler.remove(document, moveEventName, this.moveResizeHandler);\n      EventHandler.remove(document, upEventName, this.upResizeHandler);\n\n      if (Browser.info.name !== 'msie') {\n        EventHandler.remove(document, 'touchmove', this.touchMoveResizeHandler);\n        EventHandler.remove(document, 'touchend', this.upResizeHandler);\n      }\n\n      this.isMouseUpBound = false;\n      this.isMouseMoveBound = false;\n\n      if (this.shadowEle) {\n        detach(this.shadowEle);\n      }\n\n      this.shadowEle = null;\n      var panelModel = this.getCellInstance(el.getAttribute('id'));\n      this.setPanelPosition(el, panelModel.row, panelModel.col);\n      this.setHeightAndWidth(el, panelModel);\n    }\n\n    removeClass([el], [dragging]);\n    this.trigger('resizeStop', args);\n    this.resizeCalled = false;\n    this.lastMouseX = this.lastMouseY = undefined;\n    this.mOffX = this.mOffY = 0;\n    this.mainElement = null;\n\n    if (this.allowFloating) {\n      this.moveItemsUpwards();\n    }\n\n    this.updatePanels();\n    this.updateCloneArrayObject();\n    this.checkForChanges(true);\n  };\n\n  DashboardLayout.prototype.getResizeRowColumn = function (item) {\n    var isChanged = false;\n    var col = item.col;\n\n    if (['e-west', 'e-south-west'].indexOf(this.handleClass) !== -1) {\n      col = this.pixelsToColumns(this.elementX, false);\n    }\n\n    var row = item.row;\n\n    if (['e-north'].indexOf(this.handleClass) !== -1) {\n      row = this.pixelsToRows(this.elementY, false);\n\n      if (this.previousRow !== row) {\n        this.previousRow = row;\n        isChanged = true;\n      }\n    }\n\n    var sizeX = item.sizeX;\n\n    if (['e-north', 'e-south'].indexOf(this.handleClass) === -1) {\n      sizeX = this.pixelsToColumns(this.elementWidth - sizeX * this.cellSpacing[1], true);\n    }\n\n    var sizeY = item.sizeY;\n\n    if (['e-east', 'e-west'].indexOf(this.handleClass) === -1) {\n      if (this.handleClass === 'e-north' ? isChanged : true) {\n        sizeY = this.pixelsToRows(this.elementHeight - sizeY * this.cellSpacing[0], true);\n      }\n    }\n\n    if (item.col + item.sizeX > this.columns) {\n      item.sizeX = item.sizeX - 1;\n    }\n\n    var canOccupy = row > -1 && col > -1 && sizeX + col <= this.maxCol() && sizeY + row <= this.maxRow();\n\n    if (canOccupy && this.collisions(row, col, sizeX, sizeY, this.getPanelBase(item.id)).length === 0 || this.allowPushing !== false) {\n      this.panelPropertyChange(item, {\n        row: row,\n        col: col,\n        sizeX: sizeX,\n        sizeY: sizeY\n      });\n    }\n\n    return item;\n  };\n\n  DashboardLayout.prototype.pixelsToColumns = function (pixels, isCeil) {\n    var curColWidth = this.cellSize[0];\n\n    if (isCeil) {\n      return Math.ceil(pixels / curColWidth);\n    } else {\n      return Math.floor(pixels / curColWidth);\n    }\n  };\n\n  DashboardLayout.prototype.pixelsToRows = function (pixels, isCeil) {\n    if (isCeil) {\n      return Math.round(pixels / this.cellSize[1]);\n    } else {\n      return Math.round(pixels / (this.cellSize[1] + this.cellSpacing[0]));\n    }\n  };\n\n  DashboardLayout.prototype.getMinWidth = function (item) {\n    return item.minSizeX * this.getCellSize()[0] + (item.minSizeX - 1) * this.cellSpacing[0];\n  };\n\n  DashboardLayout.prototype.getMaxWidth = function (item) {\n    return item.maxSizeX * this.getCellSize()[0];\n  };\n\n  DashboardLayout.prototype.getMinHeight = function (item) {\n    return item.minSizeY * this.getCellSize()[1] + (item.minSizeY - 1) * this.cellSpacing[1];\n  };\n\n  DashboardLayout.prototype.getMaxHeight = function (item) {\n    return item.maxSizeY * this.getCellSize()[1];\n  };\n\n  DashboardLayout.prototype.sortedPanel = function () {\n    this.sortedArray = [];\n\n    for (var i = 0, l = this.panelCollection.length; i < l; ++i) {\n      this.sortItem(this.panelCollection[i]);\n    }\n  };\n\n  DashboardLayout.prototype.moveItemsUpwards = function () {\n    if (this.allowFloating === false) {\n      return;\n    }\n\n    for (var rowIndex = 0, l = this.sortedArray.length; rowIndex < l; ++rowIndex) {\n      var columns = this.sortedArray[rowIndex];\n\n      if (!columns) {\n        continue;\n      }\n\n      for (var colIndex = 0, len = columns.length; colIndex < len; ++colIndex) {\n        var item = columns[colIndex];\n\n        if (item) {\n          this.moveItemUpwards(item);\n        }\n      }\n    }\n\n    this.updateGridLines();\n  };\n\n  DashboardLayout.prototype.moveItemUpwards = function (item) {\n    if (this.allowFloating === false || item === this.mainElement) {\n      return;\n    }\n\n    var colIndex = this.getCellInstance(item.id).col;\n    var sizeY = parseInt(item.getAttribute('data-sizeY'), 10);\n    var sizeX = parseInt(item.getAttribute('data-sizeX'), 10);\n    var availableRow = null;\n    var availableColumn = null;\n    var rowIndex = parseInt(item.getAttribute('data-row'), 10) - 1;\n\n    while (rowIndex > -1) {\n      var items = this.collisions(rowIndex, colIndex, sizeX, sizeY, item);\n\n      if (items.length !== 0) {\n        break;\n      }\n\n      availableRow = rowIndex;\n      availableColumn = colIndex;\n      --rowIndex;\n    }\n\n    if (availableRow !== null) {\n      this.sortItem(item, availableRow, availableColumn);\n    }\n  };\n\n  DashboardLayout.prototype.sortItem = function (item, rowValue, columnValue) {\n    this.overlapElement = [];\n    var column = parseInt(item.getAttribute('data-col'), 10);\n    var row = parseInt(item.getAttribute('data-row'), 10);\n\n    if (!this.sortedArray[row]) {\n      this.sortedArray[row] = [];\n    }\n\n    this.sortedArray[row][column] = item;\n\n    if (item !== undefined && rowValue !== undefined && columnValue !== undefined) {\n      if (this.oldRowCol[item.id] !== undefined && this.oldRowCol[item.id].row !== null && typeof this.oldRowCol[item.id].col !== 'undefined') {\n        {\n          var oldRow = this.sortedArray[this.oldRowCol[item.id].row];\n\n          if (this.oldRowCol[item.id] && oldRow[this.oldRowCol[item.id].col] === item) {\n            delete oldRow[this.oldRowCol[item.id].col];\n            this.updateOldRowColumn();\n            this.sortedPanel();\n          }\n        }\n      }\n\n      this.oldRowCol[item.id].row = rowValue;\n      this.oldRowCol[item.id].row = columnValue;\n\n      if (!this.sortedArray[row]) {\n        this.sortedArray[row] = [];\n      }\n\n      this.sortedArray[row][column] = item;\n\n      if (this.allItems.indexOf(item) === -1) {\n        this.allItems.push(item);\n      }\n\n      this.panelPropertyChange(this.getCellInstance(item.id), {\n        row: rowValue,\n        col: columnValue\n      });\n      var panelModel = this.getCellInstance(item.id);\n      this.setAttributes({\n        value: {\n          col: panelModel.col.toString(),\n          row: panelModel.row.toString()\n        }\n      }, item);\n      this.updateLayout(item, this.getCellInstance(item.id));\n    }\n  };\n\n  DashboardLayout.prototype.updateLayout = function (element, panelModel) {\n    this.setPanelPosition(element, panelModel.row, panelModel.col);\n    this.setHeightAndWidth(element, panelModel);\n    this.updateRowHeight();\n    this.sortedPanel();\n  };\n\n  DashboardLayout.prototype.refresh = function () {\n    this.panelsSizeY = 0;\n    this.updateDragArea();\n\n    if (this.checkMediaQuery()) {\n      this.checkMediaQuerySizing();\n    } else {\n      if (this.element.classList.contains(responsive)) {\n        removeClass([this.element], [responsive]);\n        var internalPanels = this.element.querySelectorAll((this.element.id ? '#' + this.element.id + ' > ' : '') + '.e-panel');\n\n        for (var i = 0; i < internalPanels.length; i++) {\n          var ele = internalPanels[i];\n          var cellInstance = this.getCellInstance(ele.id);\n          var row = parseInt(ele.getAttribute('data-row'), 10);\n          var col = parseInt(ele.getAttribute('data-col'), 10);\n          this.panelPropertyChange(cellInstance, {\n            row: row,\n            col: col\n          });\n          this.setHeightAndWidth(ele, this.getCellInstance(ele.id));\n          this.setPanelPosition(ele, row, col);\n          this.updateRowHeight();\n        }\n      }\n\n      this.panelResponsiveUpdate();\n      this.updateGridLines();\n    }\n\n    this.removeResizeClasses(this.panelCollection);\n    this.setClasses(this.panelCollection);\n    this.resizeEvents();\n    this.checkDragging(this.dragCollection);\n  };\n\n  DashboardLayout.prototype.updateGridLines = function () {\n    if (this.element.querySelector('.e-dashboard-gridline-table')) {\n      if (this.table) {\n        detach(this.table);\n      }\n\n      this.initGridLines();\n    }\n  };\n\n  DashboardLayout.prototype.checkDragging = function (dragCollection) {\n    if (this.checkMediaQuery() || !this.allowDragging) {\n      for (var i = 0; i < dragCollection.length; i++) {\n        dragCollection[i].destroy();\n      }\n    } else {\n      for (var i = 0; i < dragCollection.length; i++) {\n        dragCollection[i].destroy();\n      }\n\n      this.enableDraggingContent(this.panelCollection);\n    }\n  };\n\n  DashboardLayout.prototype.sortPanels = function () {\n    var model = [];\n\n    var _loop_1 = function (row) {\n      var _loop_2 = function (col) {\n        this_1.panels.filter(function (panel) {\n          if (panel.row === row && panel.col === col) {\n            model.push(panel);\n          }\n        });\n      };\n\n      for (var col = 0; col < this_1.columns; col++) {\n        _loop_2(col);\n      }\n    };\n\n    var this_1 = this;\n\n    for (var row = 0; row <= this.rows; row++) {\n      _loop_1(row);\n    }\n\n    return model;\n  };\n\n  DashboardLayout.prototype.checkMediaQuerySizing = function () {\n    addClass([this.element], [responsive]);\n    var updatedPanel;\n\n    if (this.isPanelRemoved && this.panels) {\n      updatedPanel = this.panels;\n    } else {\n      updatedPanel = this.sortPanels();\n    }\n\n    this.updatedRows = updatedPanel.length;\n\n    for (var i = 0; i < updatedPanel.length; i++) {\n      var panelElement = document.getElementById(updatedPanel[i].id); // eslint-disable-next-line\n\n      var updatedHeight = void 0;\n\n      if (panelElement) {\n        setStyleAttribute(panelElement, {\n          'width': '100%'\n        });\n        panelElement.style.height = ' ' + (this.element.parentElement && this.element.parentElement.offsetWidth / this.cellAspectRatio) * updatedPanel[i].sizeY + 'px';\n\n        if (updatedPanel[i].sizeY > 1) {\n          updatedHeight = (this.element.parentElement && this.element.parentElement.offsetWidth / this.cellAspectRatio) * updatedPanel[i].sizeY + // eslint-disable-next-line radix\n          parseInt((Math.round(updatedPanel[i].sizeY / 2) * this.cellSpacing[1]).toString(), 0);\n          panelElement.style.height = '' + updatedHeight + 'px';\n        }\n\n        this.resizeHeight = true;\n        this.panelPropertyChange(updatedPanel[i], {\n          row: i,\n          col: 0\n        });\n        this.setPanelPosition(panelElement, updatedPanel[i].row, updatedPanel[i].col);\n        this.panelsSizeY = this.panelsSizeY + updatedPanel[i].sizeY;\n        this.setClasses(this.panelCollection);\n        this.checkDragging(this.dragCollection);\n        this.removeResizeClasses(this.panelCollection);\n      }\n    }\n\n    this.updateRowHeight();\n  };\n\n  DashboardLayout.prototype.panelResponsiveUpdate = function () {\n    this.element.classList.add('e-responsive');\n    this.calculateCellSize();\n\n    for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n      var ele = this.element.querySelectorAll('.e-panel')[i];\n      var panelModel = this.getCellInstance(ele.id);\n      this.setHeightAndWidth(ele, panelModel);\n    }\n\n    for (var i = 0; i < this.panels.length; i++) {\n      this.setPanelPosition(document.getElementById(this.panels[i].id), this.panels[i].row, this.panels[i].col);\n    }\n\n    this.updateRowHeight();\n  };\n\n  DashboardLayout.prototype.updateRowHeight = function () {\n    this.getRowColumn();\n    this.setHeightWidth();\n  };\n\n  DashboardLayout.prototype.setHeightWidth = function () {\n    var heightValue;\n    var widthValue;\n\n    if (this.checkMediaQuery()) {\n      var entirePanelsY = 0;\n\n      for (var i = 0; i < this.panels.length; i++) {\n        if (this.panels[i].sizeY) {\n          entirePanelsY += this.panels[i].sizeY;\n        }\n      }\n\n      heightValue = entirePanelsY * (this.element.parentElement && this.element.parentElement.offsetWidth / this.cellAspectRatio) + (entirePanelsY - 1) * this.cellSpacing[1] + 'px';\n    } else {\n      heightValue = this.maxRow() * (this.cellSize[0] / this.cellAspectRatio) + (this.maxRow() - 1) * this.cellSpacing[1] + 'px';\n    }\n\n    setStyleAttribute(this.element, {\n      'height': heightValue\n    }); // eslint-disable-next-line prefer-const\n\n    widthValue = window.getComputedStyle(this.element).width;\n    setStyleAttribute(this.element, {\n      'width': widthValue\n    });\n  };\n\n  DashboardLayout.prototype.setHeightAndWidth = function (panelElement, panelModel) {\n    setStyleAttribute(panelElement, {\n      'height': formatUnit(this.setXYDimensions(panelModel)[0])\n    });\n    setStyleAttribute(panelElement, {\n      'width': formatUnit(this.setXYDimensions(panelModel)[1])\n    });\n  };\n\n  DashboardLayout.prototype.renderCell = function (panel, isStringTemplate, index) {\n    var cellElement;\n    this.dimensions = this.setXYDimensions(panel);\n\n    if (isUndefined(panel.enabled)) {\n      panel.enabled = true;\n    }\n\n    if (this.contentTemplateChild.length > 0 && !isNullOrUndefined(index)) {\n      cellElement = this.contentTemplateChild[index];\n\n      if (panel.cssClass) {\n        addClass([cellElement], [panel.cssClass]);\n      }\n\n      if (panel.id) {\n        cellElement.setAttribute('id', panel.id);\n      }\n    } else {\n      cellElement = this.createPanelElement(panel.cssClass ? panel.cssClass.split(' ') : null, panel.id);\n    }\n\n    cellElement.style.zIndex = '' + panel.zIndex;\n    this.element.appendChild(cellElement);\n    this.renderReactTemplates();\n    var dashBoardCell = this.renderPanels(cellElement, panel, panel.id, isStringTemplate);\n    this.panelCollection.push(dashBoardCell);\n    this.setXYAttributes(cellElement, panel);\n    this.setHeightAndWidth(cellElement, panel);\n    return cellElement;\n  };\n\n  DashboardLayout.prototype.setPanelPosition = function (cellElement, row, col) {\n    if (!cellElement) {\n      return;\n    }\n\n    if (this.checkMediaQuery()) {\n      this.calculateCellSize();\n    }\n\n    var heightValue = this.getCellSize()[1];\n    var widthValue = this.getCellSize()[0];\n    var left = col === 0 ? 0 : col * (widthValue + this.cellSpacing[0]);\n    var top = row === 0 ? 0 : row * (heightValue + this.cellSpacing[1]);\n\n    if (this.checkMediaQuery()) {\n      top = row === 0 ? 0 : this.panelsSizeY * (heightValue + this.cellSpacing[1]);\n    }\n\n    setStyleAttribute(cellElement, {\n      'left': left + 'px',\n      'top': top + 'px'\n    });\n  };\n\n  DashboardLayout.prototype.getRowColumn = function () {\n    this.rows = null;\n\n    if (this.element.querySelectorAll('.e-panel').length > 0 && !this.updatedRows) {\n      var panelElements = this.element.querySelectorAll('.e-panel');\n\n      for (var i = 0; i < panelElements.length; i++) {\n        var panelElement = panelElements[i];\n        var rowValue = parseInt(panelElement.getAttribute('data-row'), 10);\n        var xValue = parseInt(panelElement.getAttribute('data-sizeY'), 10);\n        this.rows = Math.max(this.rows, rowValue + xValue);\n      }\n    } else {\n      if (this.updatedRows) {\n        this.rows = this.updatedRows;\n        this.updatedRows = null;\n      }\n\n      for (var i = 0; i < this.panels.length; i++) {\n        this.rows = Math.max(this.rows, this.panels[i].row);\n      }\n    }\n  };\n\n  DashboardLayout.prototype.setMinMaxValues = function (panel) {\n    if (!panel.sizeX || panel.sizeX < panel.minSizeX) {\n      this.panelPropertyChange(panel, {\n        sizeX: panel.minSizeX\n      });\n    } else if (panel.maxSizeX && panel.sizeX > panel.maxSizeX) {\n      this.panelPropertyChange(panel, {\n        sizeX: panel.maxSizeX\n      });\n    } else if (panel.sizeX > this.columns) {\n      this.panelPropertyChange(panel, {\n        sizeX: this.columns\n      });\n    } else {\n      this.panelPropertyChange(panel, {\n        sizeX: panel.sizeX\n      });\n    }\n\n    if (!panel.sizeY || panel.sizeY < panel.minSizeY) {\n      this.panelPropertyChange(panel, {\n        sizeY: panel.minSizeY\n      });\n    } else if (panel.maxSizeY && panel.sizeY > panel.maxSizeY) {\n      this.panelPropertyChange(panel, {\n        sizeY: panel.maxSizeY\n      });\n    } else {\n      this.panelPropertyChange(panel, {\n        sizeY: panel.sizeY\n      });\n    }\n  };\n\n  DashboardLayout.prototype.checkMinMaxValues = function (panel) {\n    if (panel.col + panel.sizeX > this.columns) {\n      this.panelPropertyChange(panel, {\n        sizeX: panel.sizeX + (this.columns - (panel.col + panel.sizeX))\n      });\n    }\n  };\n\n  DashboardLayout.prototype.panelPropertyChange = function (panel, value) {\n    // eslint-disable-next-line\n    panel.setProperties(value, true);\n  };\n\n  DashboardLayout.prototype.renderDashBoardCells = function (cells) {\n    if (this.element.querySelectorAll('.e-panel').length > 0 || this.panels.length > 0) {\n      for (var j = 0; j < cells.length; j++) {\n        this.gridPanelCollection.push(cells[j]);\n        this.setMinMaxValues(cells[j]);\n\n        if (this.maxColumnValue < cells[j].col || this.maxColumnValue < cells[j].col + cells[j].sizeX) {\n          this.panelPropertyChange(cells[j], {\n            col: this.maxColumnValue - cells[j].sizeX\n          });\n        }\n\n        var cell = this.renderCell(cells[j], false, j);\n\n        if (this.enableRtl) {\n          addClass([cell], 'e-rtl');\n        }\n\n        this.element.appendChild(cell);\n        this.renderReactTemplates();\n\n        if (this.checkMediaQuery() && j === cells.length - 1) {\n          this.checkMediaQuerySizing();\n        } else {\n          this.setPanelPosition(cell, cells[j].row, cells[j].col);\n          this.mainElement = cell;\n          this.updatePanelLayout(cell, cells[j]);\n          this.mainElement = null;\n        }\n      }\n    }\n\n    this.setClasses(this.panelCollection);\n  };\n\n  DashboardLayout.prototype.collisions = function (row, col, sizeX, sizeY, ignore) {\n    var items = [];\n\n    if (!sizeX || !sizeY) {\n      sizeX = sizeY = 1;\n    }\n\n    if (ignore && !(ignore instanceof Array)) {\n      ignore = [ignore];\n    }\n\n    var item;\n\n    for (var h = 0; h < sizeY; ++h) {\n      for (var w = 0; w < sizeX; ++w) {\n        item = this.getPanel(row + h, col + w, ignore);\n\n        if (item && (!ignore || ignore.indexOf(document.getElementById(item.id)) === -1) && items.indexOf(document.getElementById(item.id)) === -1) {\n          items.push(document.getElementById(item.id));\n        }\n      }\n    }\n\n    return items;\n  };\n\n  DashboardLayout.prototype.rightWardsSpaceChecking = function (rowElements, col, ele) {\n    var _this = this;\n\n    var columns = [];\n    var spacedColumns = [];\n    rowElements.forEach(function (element) {\n      var columnValue = parseInt(element.getAttribute('data-col'), 10);\n      var sizeXValue = parseInt(element.getAttribute('data-sizeX'), 10);\n\n      if (col < _this.columns && columnValue >= col) {\n        if (sizeXValue > 1) {\n          for (var i = columnValue; i < columnValue + sizeXValue; i++) {\n            columns.push(i);\n          }\n        } else {\n          columns.push(columnValue);\n        }\n      }\n    });\n\n    if (columns.length > 0) {\n      for (var i = col + 1; i <= this.columns - 1; i++) {\n        if (columns.indexOf(i) === -1 && i !== col) {\n          if (spacedColumns.indexOf(i) === -1) {\n            spacedColumns.push(i);\n          }\n        }\n      }\n    }\n\n    var occupiedValues = this.getOccupiedColumns(ele);\n    occupiedValues.forEach(function (colValue) {\n      if (colValue > col && spacedColumns.indexOf(colValue) !== -1) {\n        spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n      }\n    });\n    var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement);\n    eleOccupiedValues.forEach(function (col) {\n      if (col > parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 && spacedColumns.indexOf(col) === -1) {\n        spacedColumns.push(col);\n      }\n    });\n    spacedColumns = spacedColumns.sort(function (next, previous) {\n      return next - previous;\n    });\n    return spacedColumns;\n  };\n\n  DashboardLayout.prototype.getOccupiedColumns = function (element) {\n    var occupiedItems = [];\n    var sizeX = parseInt(element.getAttribute('data-sizeX'), 10);\n    var col = parseInt(element.getAttribute('data-col'), 10);\n\n    for (var i = col; i < col + sizeX && i <= this.columns; i++) {\n      occupiedItems.push(i);\n    }\n\n    return occupiedItems;\n  };\n\n  DashboardLayout.prototype.leftWardsSpaceChecking = function (rowElements, col, ele) {\n    var _this = this;\n\n    var spacedColumns = [];\n    var columns = [];\n    rowElements.forEach(function (element) {\n      var colValue = parseInt(element.getAttribute('data-col'), 10);\n      var xValue = parseInt(element.getAttribute('data-sizeX'), 10);\n\n      if (col <= _this.columns && colValue <= col) {\n        if (xValue > 1) {\n          for (var i = colValue; i < colValue + xValue; i++) {\n            columns.push(i);\n          }\n        } else {\n          columns.push(colValue);\n        }\n      }\n    });\n\n    if (columns.length > 0) {\n      for (var j = 0; j <= col; j++) {\n        if (columns.indexOf(j) === -1 && j !== col) {\n          if (spacedColumns.indexOf(j) === -1) {\n            spacedColumns.push(j);\n          }\n        }\n      }\n    }\n\n    var occupiedValues = this.getOccupiedColumns(ele);\n    occupiedValues.forEach(function (colValue) {\n      if (colValue < col && spacedColumns.indexOf(colValue) !== -1) {\n        spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n      }\n    });\n    var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement);\n    eleOccupiedValues.forEach(function (col) {\n      if (col < parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 && spacedColumns.indexOf(col) === -1) {\n        spacedColumns.push(col);\n      }\n    });\n    spacedColumns = spacedColumns.sort(function (next, prev) {\n      return next - prev;\n    });\n    spacedColumns = spacedColumns.reverse();\n    return spacedColumns;\n  };\n\n  DashboardLayout.prototype.adjustmentAvailable = function (row, col, sizeY, sizeX, ele) {\n    this.leftAdjustable = undefined;\n    this.rightAdjustable = undefined;\n    var isAdjustable = false;\n    var rightSpacing;\n    var rowElement = [];\n    this.topAdjustable = undefined;\n    var eleSizeX = parseInt(ele.getAttribute('data-sizeX'), 10);\n    var eleCol = parseInt(ele.getAttribute('data-col'), 10);\n    rowElement = this.getRowElements(this.collisions(row, 0, this.columns, sizeY, []));\n\n    if (rowElement.indexOf(ele) === -1) {\n      rowElement.push(ele);\n    }\n\n    var leftSpacing = this.leftWardsSpaceChecking(rowElement, col, ele);\n\n    if (leftSpacing.length > 0) {\n      this.leftAdjustable = this.isLeftAdjustable(leftSpacing, ele, row, col, sizeX, sizeY);\n\n      if (this.spacedColumnValue !== eleCol - this.getCellInstance(this.checkingElement.id).sizeX) {\n        this.leftAdjustable = false;\n      }\n\n      if (this.leftAdjustable) {\n        this.rightAdjustable = false;\n      } else {\n        this.leftAdjustable = false;\n        rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n        this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n\n        if (this.spacedColumnValue !== eleSizeX + eleCol) {\n          this.rightAdjustable = false;\n        }\n\n        if (!this.rightAdjustable) {\n          this.rightAdjustable = false;\n        }\n      }\n    } else {\n      rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n      this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n\n      if (this.spacedColumnValue !== eleSizeX + eleCol) {\n        this.rightAdjustable = false;\n      }\n\n      if (this.rightAdjustable) {\n        this.leftAdjustable = false;\n      }\n    }\n\n    if (!this.rightAdjustable && !this.leftAdjustable && row > 0) {\n      var endRow = this.getCellInstance(ele.id).row;\n      var topCheck = false;\n\n      if (this.startRow !== endRow) {\n        topCheck = true;\n      }\n\n      for (var rowValue = row; rowValue >= 0; rowValue--) {\n        var element = this.getCellInstance(ele.id).sizeY > 1 && topCheck ? this.checkingElement : ele;\n\n        if (rowValue !== endRow && rowValue === endRow - sizeY && this.collisions(rowValue, col, sizeX, sizeY, element).length === 0) {\n          topCheck = false;\n          this.topAdjustable = true;\n          this.spacedRowValue = isNullOrUndefined(this.spacedRowValue) ? rowValue : this.spacedRowValue;\n          this.spacedColumnValue = col;\n        }\n      }\n    }\n\n    if (this.rightAdjustable || this.leftAdjustable || this.topAdjustable) {\n      isAdjustable = true;\n\n      if (isNullOrUndefined(this.spacedRowValue)) {\n        this.spacedRowValue = row;\n      }\n    }\n\n    return isAdjustable;\n  };\n\n  DashboardLayout.prototype.isXSpacingAvailable = function (spacing, sizeX) {\n    var isSpaceAvailable = false;\n    var subSpacingColumns = [];\n\n    for (var i = 0; i < spacing.length; i++) {\n      if (spacing[i + 1] - spacing[i] === 1 || spacing[i + 1] - spacing[i] === -1) {\n        subSpacingColumns.push(spacing[i]);\n\n        if (sizeX === 2) {\n          subSpacingColumns.push(spacing[i + 1]);\n        }\n\n        if (i === spacing.length - 2) {\n          subSpacingColumns.push(spacing[i + 1]);\n\n          if (subSpacingColumns.length > sizeX) {\n            subSpacingColumns.splice(-1);\n          }\n        }\n\n        if (subSpacingColumns.length === sizeX) {\n          isSpaceAvailable = true;\n          this.spacedColumnValue = subSpacingColumns.sort(function (next, previous) {\n            return next - previous;\n          })[0];\n\n          if (this.spacedColumnValue < 0) {\n            this.spacedColumnValue = 1;\n          }\n\n          return isSpaceAvailable;\n        }\n      } else {\n        subSpacingColumns = [];\n        continue;\n      }\n    }\n\n    return isSpaceAvailable;\n  };\n\n  DashboardLayout.prototype.getRowElements = function (base) {\n    var rowElements = [];\n\n    for (var i = 0; i < base.length; i++) {\n      rowElements.push(base[i]);\n    }\n\n    return rowElements;\n  };\n\n  DashboardLayout.prototype.isLeftAdjustable = function (spaces, ele, row, col, sizeX, sizeY) {\n    var isLeftAdjudtable;\n\n    if (sizeX === 1 && sizeY === 1 && spaces.length > 0) {\n      this.spacedColumnValue = spaces[0];\n      isLeftAdjudtable = true;\n    } else if (sizeX > 1 && sizeY === 1) {\n      isLeftAdjudtable = this.isXSpacingAvailable(spaces, sizeX);\n    } else if (sizeY > 1) {\n      if (sizeX === 1) {\n        var xAdjust = void 0;\n\n        if (spaces.length >= 1) {\n          xAdjust = true;\n        }\n\n        if (xAdjust) {\n          for (var i = 0; i < spaces.length; i++) {\n            var collisionValue = this.collisions(row, spaces[i], sizeX, sizeY, this.checkingElement);\n\n            if (collisionValue.length === 0) {\n              this.spacedColumnValue = spaces[i];\n              isLeftAdjudtable = true;\n              return isLeftAdjudtable;\n            } else {\n              isLeftAdjudtable = false;\n            }\n          }\n        }\n      } else {\n        isLeftAdjudtable = this.replacable(spaces, sizeX, row, sizeY, ele);\n      }\n    }\n\n    return isLeftAdjudtable;\n  };\n\n  DashboardLayout.prototype.isRightAdjustable = function (spacing, ele, row, col, sizeX, sizeY) {\n    var isRightAdjudtable;\n\n    if (sizeX === 1 && sizeY === 1 && spacing.length > 0) {\n      this.spacedColumnValue = spacing[0];\n      isRightAdjudtable = true;\n    } else if (sizeX > 1 && sizeY === 1) {\n      isRightAdjudtable = this.isXSpacingAvailable(spacing, sizeX);\n    } else if (sizeY > 1) {\n      if (sizeX === 1) {\n        var xAdjust = void 0;\n\n        if (spacing.length >= 1) {\n          xAdjust = true;\n        }\n\n        if (xAdjust) {\n          for (var i = 0; i < spacing.length; i++) {\n            var collisionValue = this.collisions(row, spacing[i], sizeX, sizeY, this.checkingElement);\n\n            for (var collision = 0; collision < collisionValue.length; collision++) {\n              if (parseInt(ele.getAttribute('data-col'), 10) !== spacing[i]) {\n                collisionValue.splice(collisionValue.indexOf(collisionValue[collision]), 1);\n              }\n            }\n\n            if (collisionValue.length === 0) {\n              isRightAdjudtable = true;\n              this.spacedColumnValue = spacing[i];\n              return isRightAdjudtable;\n            } else {\n              isRightAdjudtable = false;\n            }\n          }\n        }\n      } else {\n        isRightAdjudtable = this.replacable(spacing, sizeX, row, sizeY, ele);\n      }\n    }\n\n    return isRightAdjudtable;\n  };\n\n  DashboardLayout.prototype.replacable = function (spacing, sizeX, row, sizeY, ele) {\n    var isRightAdjudtable;\n    var updatedCollision = [];\n\n    for (var j = 0; j < spacing.length; j++) {\n      var xAdjust = this.isXSpacingAvailable(spacing, sizeX);\n\n      if (xAdjust) {\n        var exclusions = [];\n        exclusions.push(this.checkingElement);\n        exclusions.push(ele);\n\n        if (updatedCollision.length === 0) {\n          isRightAdjudtable = true; // eslint-disable-next-line no-self-assign\n\n          this.spacedColumnValue = this.spacedColumnValue;\n          return isRightAdjudtable;\n        } else {\n          isRightAdjudtable = false;\n        }\n      }\n    }\n\n    return isRightAdjudtable;\n  };\n\n  DashboardLayout.prototype.sortCollisionItems = function (collisionItems) {\n    var updatedCollision = [];\n    var rowElements;\n\n    var _loop_3 = function (row) {\n      rowElements = [];\n      collisionItems.forEach(function (element) {\n        if (element && element.getAttribute('data-row') === row.toString()) {\n          rowElements.push(element);\n        }\n      });\n\n      var _loop_4 = function (column) {\n        rowElements.forEach(function (item) {\n          if (item && item.getAttribute('data-col') === column.toString()) {\n            updatedCollision.push(item);\n          }\n        });\n      };\n\n      for (var column = this_2.columns - 1; column >= 0; column--) {\n        _loop_4(column);\n      }\n    };\n\n    var this_2 = this;\n\n    for (var row = this.rows - 1; row >= 0; row--) {\n      _loop_3(row);\n    }\n\n    return updatedCollision;\n  };\n\n  DashboardLayout.prototype.updatedModels = function (collisionItems, panelModel, ele) {\n    var _this = this;\n\n    var removeableElement = [];\n\n    if (!this.mainElement) {\n      this.sortedPanel();\n    }\n\n    collisionItems.forEach(function (element) {\n      _this.checkingElement = element;\n\n      var model = _this.getCellInstance(element.id);\n\n      var adjust = !_this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, ele);\n\n      if (model.sizeX > 1 && adjust) {\n        for (var rowValue = model.row; rowValue < panelModel.row + panelModel.sizeY; rowValue++) {\n          var collisions = _this.collisions(rowValue, model.col, model.sizeX, model.sizeY, element);\n\n          collisions.forEach(function (item) {\n            if (collisionItems.indexOf(item) >= 0 && removeableElement.indexOf(item) === -1) {\n              removeableElement.push(item);\n            }\n          });\n        }\n      }\n    });\n    removeableElement.forEach(function (item) {\n      if (removeableElement.indexOf(item) >= 0) {\n        collisionItems.splice(collisionItems.indexOf(item), 1);\n      }\n    });\n    return collisionItems;\n  };\n\n  DashboardLayout.prototype.resetLayout = function (model) {\n    var collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n\n    if (!this.mainElement || this.addPanelCalled || this.resizeCalled || this.movePanelCalled) {\n      return collisions;\n    }\n\n    if (this.mainElement && this.oldRowCol !== this.cloneObject) {\n      for (var i = 0; i < this.panels.length; i++) {\n        var element = document.getElementById(this.panels[i].id);\n\n        if (element === this.mainElement) {\n          continue;\n        }\n\n        var rowValue = this.cloneObject[element.id].row;\n        var colValue = this.cloneObject[element.id].col;\n        this.setPanelPosition(element, rowValue, colValue);\n        this.panelPropertyChange(this.getCellInstance(element.id), {\n          row: rowValue,\n          col: colValue\n        });\n        this.setAttributes({\n          value: {\n            col: colValue.toString(),\n            row: rowValue.toString()\n          }\n        }, element);\n        this.updateOldRowColumn();\n      }\n    }\n\n    this.sortedArray = this.cloneArray;\n    collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n    this.sortedPanel();\n    this.updateOldRowColumn();\n\n    if (this.checkCollision && this.checkCollision.length > 0 && collisions.indexOf(this.checkCollision[0]) === -1 && this.cloneObject[this.checkCollision[0].id].row === model.row) {\n      collisions.push(this.checkCollision[0]);\n    }\n\n    return collisions;\n  };\n\n  DashboardLayout.prototype.swapAvailability = function (collisions, element) {\n    var available = true;\n    var eleModel = this.getCellInstance(element.id);\n\n    for (var count = 0; count < collisions.length; count++) {\n      var collideModel = this.getCellInstance(collisions[count].id);\n\n      for (var i = 1; i < eleModel.sizeY; i++) {\n        var excludeEle = [];\n        excludeEle.push(element);\n        excludeEle.push(collisions[count]);\n        var collision = this.collisions(eleModel.row + i, collideModel.col, collideModel.sizeX, collideModel.sizeY, excludeEle);\n\n        if (collision.length > 0) {\n          available = false;\n          return false;\n        } else {\n          continue;\n        }\n      }\n    }\n\n    return available;\n  };\n\n  DashboardLayout.prototype.checkForSwapping = function (collisions, element) {\n    if (!this.mainElement || collisions.length === 0) {\n      return false;\n    }\n\n    var direction;\n    var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n\n    if (this.startRow < eleSwapRow) {\n      direction = 1;\n    } else if (this.startRow > eleSwapRow) {\n      direction = 0;\n    }\n\n    if (!this.swapAvailability(collisions, element)) {\n      return false;\n    }\n\n    var isSwappable = false;\n\n    for (var count1 = 0; count1 < collisions.length; count1++) {\n      if (collisions.length >= 1 && this.cloneObject[this.mainElement.id] && this.cloneObject[this.mainElement.id].row === this.oldRowCol[this.mainElement.id].row) {\n        return false;\n      }\n    }\n\n    var updatedRow = direction === 0 ? this.getCellInstance(this.mainElement.id).row + this.getCellInstance(this.mainElement.id).sizeY : this.startRow;\n\n    for (var count = 0; count < collisions.length; count++) {\n      var collideInstance = this.getCellInstance(collisions[count].id);\n      var elementinstance = this.getCellInstance(element.id);\n      var ignore = [];\n\n      if (collideInstance.sizeY === 1 && ignore.indexOf(collisions[count]) === -1) {\n        ignore.push(collisions[count]);\n      } else if (collideInstance.sizeY > 1 && ignore.indexOf(collisions[count]) === -1) {\n        if (direction === 1 && elementinstance.row === this.cloneObject[collideInstance.id].row + collideInstance.sizeY - 1) {\n          ignore.push(collisions[count]);\n        } else if (direction === 0 && elementinstance.row === this.cloneObject[collideInstance.id].row) {\n          ignore.push(collisions[count]);\n        } else {\n          return false;\n        }\n      }\n\n      if (collideInstance.sizeY <= elementinstance.sizeY && ignore.indexOf(collisions[count]) === -1) {\n        ignore.push(collisions[count]);\n      }\n\n      ignore.push(this.mainElement);\n      var swapCollision = this.collisions(updatedRow, collideInstance.col, collideInstance.sizeX, collideInstance.sizeY, ignore);\n\n      if (swapCollision.length > 0) {\n        isSwappable = false;\n        return isSwappable;\n      } else {\n        if (count === collisions.length - 1) {\n          isSwappable = true;\n        }\n\n        continue;\n      }\n    }\n\n    return isSwappable;\n  };\n\n  DashboardLayout.prototype.swapItems = function (collisions, element, panelModel) {\n    var _this = this;\n\n    var direction;\n    var swappedElements = [];\n    swappedElements.push(element);\n    var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n\n    if (this.startRow < eleSwapRow) {\n      direction = 1;\n    } else if (this.startRow > eleSwapRow) {\n      direction = 0;\n    }\n\n    var collisionItemsRow = direction === 0 ? eleSwapRow + panelModel.sizeY : this.startRow;\n\n    if (!this.movePanelCalled) {\n      var collisionInstance = this.getCellInstance(collisions[0].id);\n      this.panelPropertyChange(panelModel, {\n        row: direction === 0 ? eleSwapRow : collisionItemsRow + collisionInstance.sizeY\n      });\n    }\n\n    for (var count = 0; count < collisions.length; count++) {\n      swappedElements.push(collisions[count]);\n      this.setPanelPosition(collisions[count], collisionItemsRow, this.getCellInstance(collisions[count].id).col);\n      this.panelPropertyChange(this.getCellInstance(collisions[count].id), {\n        row: collisionItemsRow\n      });\n      collisions[count].setAttribute('data-row', collisionItemsRow.toString());\n    }\n\n    element.setAttribute('data-row', panelModel.row.toString());\n    this.setPanelPosition(this.shadowEle, panelModel.row, panelModel.col);\n\n    for (var i = 0; i < this.panels.length; i++) {\n      this.oldRowCol[this.panels[i].id] = {\n        row: this.panels[i].row,\n        col: this.panels[i].col\n      };\n    }\n\n    this.startRow = panelModel.row;\n    this.updateOldRowColumn();\n    swappedElements.forEach(function (item) {\n      _this.cloneObject[item.id] = _this.oldRowCol[item.id];\n\n      var itemModel = _this.getCellInstance(item.id);\n\n      for (var i = 0; i < _this.sortedArray.length; i++) {\n        if (!_this.sortedArray[i]) {\n          continue;\n        }\n\n        for (var j = 0; j < _this.sortedArray[i].length; j++) {\n          if (_this.sortedArray[i][j] === item) {\n            _this.sortedArray[i][j] = undefined;\n          }\n        }\n      }\n\n      if (!_this.sortedArray[itemModel.row]) {\n        _this.sortedArray[itemModel.row] = [];\n      }\n\n      _this.sortedArray[itemModel.row][itemModel.col] = item;\n      _this.cloneArray = _this.sortedArray;\n    });\n  };\n\n  DashboardLayout.prototype.updatePanelLayout = function (element, panelModel) {\n    this.collisionChecker = {};\n    var initialModel = [];\n    var checkForAdjustment;\n    var collisionModels = [];\n    var swappingAvailable;\n\n    if (this.mainElement && this.isRenderComplete) {\n      initialModel = this.resetLayout(panelModel);\n    } else {\n      initialModel = this.collisions(panelModel.row, panelModel.col, panelModel.sizeX, panelModel.sizeY, element);\n    }\n\n    if (initialModel.length > 0) {\n      initialModel = this.sortCollisionItems(initialModel);\n      initialModel = this.updatedModels(initialModel, panelModel, element);\n      swappingAvailable = !isNullOrUndefined(this.startRow) ? this.checkForSwapping(initialModel, element) : false;\n\n      if (swappingAvailable) {\n        this.swapItems(initialModel, element, panelModel);\n      } else {\n        for (var i = 0; i < initialModel.length; i++) {\n          var model = this.getCellInstance(initialModel[i].id);\n          this.checkingElement = initialModel[i];\n          this.spacedRowValue = null;\n          this.spacedColumnValue = null;\n          checkForAdjustment = this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, element);\n\n          if (checkForAdjustment && !isNullOrUndefined(this.spacedColumnValue)) {\n            this.setPanelPosition(initialModel[i], this.spacedRowValue, this.spacedColumnValue);\n            this.oldRowCol[initialModel[i].id] = {\n              row: this.spacedRowValue,\n              col: this.spacedColumnValue\n            };\n            var value = {\n              attributes: {\n                row: this.spacedRowValue.toString(),\n                col: this.spacedColumnValue.toString()\n              }\n            };\n            this.setAttributes(value, initialModel[i]);\n            this.panelPropertyChange(model, {\n              col: this.spacedColumnValue,\n              row: this.spacedRowValue\n            }); // updated the panel model array as inTopAdjustable case with floating enabled instead of dragging and extra row\n\n            if (this.topAdjustable && this.allowFloating) {\n              this.updatePanels();\n              this.updateCloneArrayObject();\n            }\n\n            this.spacedRowValue = null;\n\n            if (i < initialModel.length) {\n              continue;\n            }\n          } else {\n            collisionModels.push(initialModel[i]);\n          }\n        }\n      }\n    }\n\n    if (collisionModels.length > 0) {\n      // eslint-disable-next-line\n      var proxy_1 = this;\n      collisionModels.forEach(function (item1) {\n        if (proxy_1.overlapElement.indexOf(item1) === -1) {\n          proxy_1.overlapElement.push(item1);\n        }\n      });\n\n      if (this.overlapElement && this.overlapElement.indexOf(element) !== -1) {\n        this.overlapElement.splice(this.overlapElement.indexOf(element), 1);\n      }\n\n      if (collisionModels.length > 0) {\n        this.updateRowColumn(panelModel.row, this.overlapElement, element);\n        this.checkForCompletePushing();\n      }\n    }\n\n    if (!this.isSubValue) {\n      this.sortedPanel();\n    }\n\n    this.updateRowHeight();\n    this.updateGridLines();\n  };\n\n  DashboardLayout.prototype.checkForCompletePushing = function () {\n    for (var i = 0; i < this.panels.length; i++) {\n      if (this.collisionChecker[this.panels[i].id] && this.collisionChecker[this.panels[i].id] !== null) {\n        this.overlapElement = [this.collisionChecker[this.panels[i].id].ele];\n        var key = this.panels[i].id;\n        this.updateRowColumn(this.collisionChecker[key].row, this.overlapElement, this.collisionChecker[key].srcEle);\n      }\n    }\n  };\n\n  DashboardLayout.prototype.updateCollisionChecked = function (item) {\n    for (var count = 0; count < Object.keys(this.collisionChecker).length; count++) {\n      this.collisionChecker[item.id] = null;\n    }\n  };\n\n  DashboardLayout.prototype.updateRowColumn = function (row, ele, srcEle) {\n    if (!srcEle) {\n      return;\n    }\n\n    var eleSizeY = parseInt(srcEle.getAttribute('data-sizeY'), 10);\n    var eleRow = parseInt(srcEle.getAttribute('data-row'), 10);\n    this.overlapElementClone = this.overlapElement && !this.shouldRestrict ? this.overlapElement : this.overlapElement;\n\n    for (var i = 0; i < this.overlapElementClone.length; i++) {\n      if (this.overlapElementClone.length === 0) {\n        return;\n      }\n\n      for (var i_1 = 0; i_1 < this.overlapElementClone.length; i_1++) {\n        this.collisionChecker[this.overlapElementClone[i_1].id] = {\n          ele: this.overlapElementClone[i_1],\n          row: row,\n          srcEle: srcEle\n        };\n      }\n\n      var updatedRow = eleRow + eleSizeY;\n      var collisionY = parseInt(this.overlapElementClone[i].getAttribute('data-sizeY'), 10);\n      var collisionCol = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n      var collisionX = parseInt(this.overlapElementClone[i].getAttribute('data-sizeX'), 10);\n      var colValue = void 0;\n      var collisionModels = void 0;\n\n      if (this.overlapSubElementClone.indexOf(srcEle) === -1) {\n        this.overlapSubElementClone.push(srcEle);\n      }\n\n      if (this.overlapSubElementClone.indexOf(this.overlapElementClone[i]) === -1) {\n        this.overlapSubElementClone.push(this.overlapElementClone[i]);\n      }\n\n      if (collisionY > 1 || collisionX > 1) {\n        var overlapElementModel = this.getCellInstance(this.overlapElementClone[i].id);\n        colValue = overlapElementModel.col;\n        var ele_1 = document.getElementById(overlapElementModel.id);\n\n        for (var k = overlapElementModel.row; k < eleRow + eleSizeY; k++) {\n          this.isSubValue = true;\n          this.panelPropertyChange(overlapElementModel, {\n            row: overlapElementModel.row + 1\n          });\n          ele_1.setAttribute('data-row', overlapElementModel.row.toString());\n          this.setPanelPosition(ele_1, overlapElementModel.row, colValue);\n          this.updateCollisionChecked(ele_1);\n          this.oldRowCol[ele_1.id] = {\n            row: overlapElementModel.row,\n            col: colValue\n          };\n          var panelModel = this.getCellInstance(ele_1.id);\n          this.panelPropertyChange(panelModel, {\n            col: colValue,\n            row: overlapElementModel.row\n          });\n          var eleRow_1 = parseInt(ele_1.getAttribute('data-row'), 10);\n          var eleCol = parseInt(ele_1.getAttribute('data-col'), 10);\n          var sizeX = parseInt(ele_1.getAttribute('data-sizeX'), 10);\n          var sizeY = parseInt(ele_1.getAttribute('data-sizeY'), 10);\n          var excludeElements = [];\n          excludeElements.push(ele_1);\n          excludeElements.push(srcEle);\n          collisionModels = this.collisions(eleRow_1, eleCol, sizeX, sizeY, excludeElements);\n\n          if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n            collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n          }\n\n          this.collisionPanel(collisionModels, eleCol, eleRow_1, ele_1);\n        }\n\n        this.isSubValue = false;\n      } else {\n        if (this.addPanelCalled) {\n          this.addPanelCalled = false;\n        }\n\n        this.overlapElementClone[i].setAttribute('data-row', updatedRow.toString());\n        var excludeEle = [];\n        excludeEle.push(this.overlapElementClone[i]);\n        excludeEle.push(srcEle);\n        collisionModels = this.collisions(updatedRow, collisionCol, collisionX, collisionY, excludeEle);\n\n        if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n          collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n        }\n\n        colValue = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n        this.setPanelPosition(this.overlapElementClone[i], updatedRow, colValue);\n        this.updateCollisionChecked(this.overlapElementClone[i]);\n        this.oldRowCol[this.overlapElementClone[i].id] = {\n          row: updatedRow,\n          col: colValue\n        };\n        var panelModel = this.getCellInstance(this.overlapElementClone[i].id);\n        this.panelPropertyChange(panelModel, {\n          col: colValue,\n          row: updatedRow\n        });\n        this.collisionPanel(collisionModels, colValue, updatedRow, this.overlapElementClone[i]);\n      }\n    }\n  };\n\n  DashboardLayout.prototype.collisionPanel = function (collisionModels, colValue, updatedRow, clone) {\n    var panelModel = this.getCellInstance(clone.id);\n    this.panelPropertyChange(panelModel, {\n      row: updatedRow,\n      col: colValue\n    });\n\n    if (collisionModels.length > 0) {\n      // eslint-disable-next-line\n      var proxy_2 = this;\n      this.overlapElement = [];\n      this.shouldRestrict = true;\n      collisionModels.forEach(function (item1) {\n        proxy_2.overlapElement.push(item1);\n      });\n      var overlapElementRow1 = parseInt(clone.getAttribute('data-row'), 10);\n\n      for (var m = 0; m < this.overlapElement.length; m++) {\n        this.updateRowColumn(overlapElementRow1, this.overlapElement, clone);\n      }\n\n      this.shouldRestrict = false;\n    } else {\n      if (!this.addPanelCalled) {\n        this.sortedPanel();\n      }\n\n      if (this.overlapSubElementClone.length > 0) {\n        var _loop_5 = function (p) {\n          var rowVal = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-row'), 10);\n          var colValue_1 = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-col'), 10);\n          var sizeX = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeX'), 10);\n          var sizeY = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeY'), 10);\n          var collisionModels1 = this_3.collisions(rowVal, colValue_1, sizeX, sizeY, this_3.overlapSubElementClone);\n\n          if (this_3.mainElement && collisionModels1.indexOf(this_3.mainElement) !== -1) {\n            collisionModels1.splice(collisionModels1.indexOf(this_3.mainElement), 1);\n          } // eslint-disable-next-line\n\n\n          var proxy = this_3;\n          collisionModels1.forEach(function (item1) {\n            proxy.overlapElement.push(item1);\n          });\n\n          if (collisionModels1.length > 0) {\n            this_3.updateRowColumn(rowVal, this_3.overlapElement, this_3.overlapSubElementClone[p]);\n          }\n        };\n\n        var this_3 = this;\n\n        for (var p = 0; p < this.overlapSubElementClone.length; p++) {\n          _loop_5(p);\n        }\n      }\n\n      this.overlapSubElementClone = [];\n    }\n  };\n\n  DashboardLayout.prototype.removeResizeClasses = function (panelElements) {\n    for (var i = 0; i < panelElements.length; i++) {\n      var element = panelElements[i];\n      var resizerElements = element.querySelectorAll('.e-resize');\n\n      for (var i_2 = 0; i_2 < resizerElements.length; i_2++) {\n        detach(resizerElements[i_2]);\n      }\n    }\n  };\n\n  DashboardLayout.prototype.ensureDrag = function () {\n    this.checkDragging(this.dragCollection);\n    var dragPanels = this.element.querySelectorAll('.' + drag);\n    removeClass(dragPanels, [drag]);\n    this.setClasses(this.panelCollection);\n  };\n\n  DashboardLayout.prototype.setClasses = function (panelCollection) {\n    for (var i = 0; i < panelCollection.length; i++) {\n      var element = panelCollection[i];\n      var containerEle = panelCollection[i].querySelector('.e-panel-container');\n\n      if (this.allowDragging) {\n        if (this.draggableHandle && element.querySelectorAll(this.draggableHandle)[0]) {\n          addClass([element.querySelectorAll(this.draggableHandle)[0]], [drag]);\n        } else {\n          addClass([element], [drag]);\n        }\n      }\n\n      if (this.allowResizing && this.mediaQuery ? !this.checkMediaQuery() : false) {\n        this.setResizingClass(element, containerEle);\n      }\n    }\n  };\n\n  DashboardLayout.prototype.setResizingClass = function (ele, container) {\n    this.availableClasses = this.resizableHandles;\n\n    if (!ele.querySelector(\".e-resize\")) {\n      for (var j = 0; j < this.availableClasses.length; j++) {\n        var spanEle = this.createElement('span');\n        var addClassValue = void 0;\n        container.appendChild(spanEle);\n\n        if (this.availableClasses[j] === 'e-east' || this.availableClasses[j] === 'e-west' || this.availableClasses[j] === 'e-north' || this.availableClasses[j] === 'e-south') {\n          addClassValue = single;\n        } else {\n          addClassValue = double;\n        }\n\n        addClass([spanEle], [addClassValue, this.availableClasses[j], resize, resizeicon]);\n      }\n    }\n  };\n\n  DashboardLayout.prototype.setXYAttributes = function (element, panelModel) {\n    var value = {\n      value: {\n        sizeX: panelModel.sizeX.toString(),\n        sizeY: panelModel.sizeY.toString(),\n        minSizeX: panelModel.minSizeX.toString(),\n        minSizeY: panelModel.minSizeY.toString(),\n        maxSizeX: !isNullOrUndefined(panelModel.maxSizeX) ? panelModel.maxSizeX.toString() : undefined,\n        maxSizeY: !isNullOrUndefined(panelModel.maxSizeY) ? panelModel.maxSizeY.toString() : undefined,\n        row: panelModel.row.toString(),\n        col: panelModel.col.toString()\n      }\n    };\n    this.setAttributes(value, element);\n  };\n\n  DashboardLayout.prototype.setXYDimensions = function (panelModel) {\n    var cellHeight = this.getCellSize()[1];\n    var cellWidth = this.getCellSize()[0];\n    var widthValue;\n    var heigthValue;\n\n    if (panelModel && typeof cellWidth === 'number' && typeof panelModel.sizeX === 'number' && panelModel.sizeX > 1) {\n      widthValue = panelModel.sizeX * cellWidth + (panelModel.sizeX - 1) * this.cellSpacing[0];\n    } else {\n      widthValue = cellWidth;\n    }\n\n    if (panelModel && typeof cellHeight === 'number' && panelModel.sizeY > 1 && typeof panelModel.sizeY === 'number') {\n      heigthValue = panelModel.sizeY * cellHeight + (panelModel.sizeY - 1) * this.cellSpacing[1];\n    } else {\n      heigthValue = formatUnit(cellHeight);\n    }\n\n    return [heigthValue, widthValue];\n  };\n\n  DashboardLayout.prototype.getRowColumnDragValues = function (args) {\n    var value = [];\n    var elementTop = parseFloat(args.element.style.top);\n    var elementLeft = parseFloat(args.element.style.left);\n    var row = Math.round(elementTop / (this.getCellSize()[1] + this.cellSpacing[1]));\n    var col = Math.round(elementLeft / (this.getCellSize()[0] + +this.cellSpacing[0]));\n    value = [row, col];\n    return value;\n  };\n\n  DashboardLayout.prototype.checkForChanges = function (isInteracted, added, removed) {\n    var changedPanels = [];\n\n    if (this.removeAllCalled) {\n      changedPanels = [];\n    } else {\n      for (var i = 0; i < this.panels.length; i++) {\n        if ((!isNullOrUndefined(added) ? this.panels[i].id !== added[0].id : true) && (!isNullOrUndefined(removed) ? this.panels[i].id !== removed[0].id : true) && (this.panels[i].row !== this.panelsInitialModel[i].row || this.panels[i].col !== this.panelsInitialModel[i].col)) {\n          changedPanels.push(this.panels[i]);\n        }\n      }\n    }\n\n    if (changedPanels.length > 0 || this.removeAllCalled) {\n      var changedArgs = {\n        changedPanels: changedPanels,\n        isInteracted: isInteracted,\n        addedPanels: !isNullOrUndefined(added) ? added : [],\n        removedPanels: !isNullOrUndefined(removed) ? removed : []\n      };\n      this.trigger('change', changedArgs);\n    }\n  };\n\n  DashboardLayout.prototype.enableDraggingContent = function (collections) {\n    var _this = this;\n\n    for (var i = 0; i < collections.length; i++) {\n      var abortArray = ['.e-resize', '.' + dragRestrict];\n      var cellElement = collections[i];\n      {\n        this.dragobj = new Draggable(cellElement, {\n          preventDefault: false,\n          clone: false,\n          dragArea: this.element,\n          isDragScroll: true,\n          handle: this.draggableHandle ? this.draggableHandle : '.e-panel',\n          abort: abortArray,\n          dragStart: this.onDraggingStart.bind(this),\n          dragStop: function (args) {\n            var model = _this.getCellInstance(_this.mainElement.id);\n\n            if (_this.allowPushing && _this.collisions(model.row, model.col, model.sizeX, model.sizeY, _this.mainElement).length > 0) {\n              _this.setHolderPosition(args);\n\n              _this.setPanelPosition(_this.mainElement, model.row, model.col);\n\n              _this.updatePanelLayout(_this.mainElement, model);\n            } else {\n              _this.setPanelPosition(_this.mainElement, model.row, model.col);\n            }\n\n            _this.mainElement = null;\n\n            var item = _this.getPanelBase(args);\n\n            if (_this.shadowEle) {\n              detach(_this.shadowEle);\n            }\n\n            removeClass([_this.element], [preventSelect]);\n            removeClass([args.element], [dragging]);\n            _this.shadowEle = null;\n            args.element.classList.remove('e-dragging');\n\n            var row = _this.getRowColumnDragValues(args)[0];\n\n            var col = _this.getRowColumnDragValues(args)[1];\n\n            var panelModel = _this.getCellInstance(args.element.id);\n\n            if (_this.allowPushing && _this.collisions(row, col, panelModel.sizeX, panelModel.sizeY, document.getElementById(item.id)).length === 0) {\n              _this.panelPropertyChange(_this.getCellInstance(args.element.id), {\n                row: row,\n                col: col\n              });\n\n              _this.oldRowCol[args.element.id].row = row;\n              _this.oldRowCol[args.element.id].col = col;\n\n              _this.setAttributes({\n                value: {\n                  col: col.toString(),\n                  row: row.toString()\n                }\n              }, args.element);\n\n              _this.sortedPanel();\n            } else {\n              _this.panelPropertyChange(_this.getCellInstance(args.element.id), {\n                row: _this.oldRowCol[args.element.id].row,\n                col: _this.oldRowCol[args.element.id].col\n              });\n\n              args.element.setAttribute('data-col', _this.getCellInstance(args.element.id).col.toString());\n              args.element.setAttribute('data-row', _this.getCellInstance(args.element.id).row.toString());\n\n              _this.sortedPanel();\n            }\n\n            var panelInstance = _this.getCellInstance(args.element.id);\n\n            _this.setPanelPosition(args.element, panelInstance.row, panelInstance.col);\n\n            _this.updatePanels();\n\n            _this.updateCloneArrayObject();\n\n            _this.checkForChanges(true);\n\n            _this.dragStopEventArgs = {\n              event: args.event,\n              element: args.element\n            };\n\n            _this.trigger('dragStop', args);\n\n            _this.resizeEvents();\n\n            _this.rows = _this.maxRow(true);\n\n            _this.setHeightWidth();\n\n            _this.updateDragArea();\n          },\n          drag: function (args) {\n            _this.draggedEventArgs = {\n              event: args.event,\n              element: args.element,\n              target: closest(args.target, '.e-panel')\n            };\n\n            _this.trigger('drag', _this.draggedEventArgs);\n\n            _this.onDragStart(args);\n          }\n        });\n\n        if (this.dragCollection.indexOf(this.dragobj) === -1) {\n          this.dragCollection.push(this.dragobj);\n        }\n      }\n    }\n  };\n\n  DashboardLayout.prototype.updatePanels = function () {\n    this.moveItemsUpwards();\n    this.updateOldRowColumn();\n    this.sortedPanel();\n  };\n\n  DashboardLayout.prototype.updateDragArea = function () {\n    this.dragCollection.forEach(function (dragobj) {\n      // eslint-disable-next-line\n      dragobj.setDragArea();\n    });\n  };\n\n  DashboardLayout.prototype.updateRowsHeight = function (row, sizeY, addRows) {\n    if (row + sizeY >= this.rows) {\n      this.rows = this.rows + addRows;\n      this.setHeightWidth();\n    }\n  };\n\n  DashboardLayout.prototype.onDraggingStart = function (args) {\n    var dragArgs = args;\n    this.trigger('dragStart', dragArgs, function (dragArgs) {});\n    this.panelsInitialModel = this.cloneModels(this.panels);\n    this.mainElement = args.element;\n    this.cloneObject = JSON.parse(JSON.stringify(this.cloneObject));\n    var eleRowValue = this.startRow = parseInt(args.element.getAttribute('data-row'), 10);\n    this.startCol = parseInt(args.element.getAttribute('data-col'), 10);\n    var eleSizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n    this.updateRowsHeight(eleRowValue, eleSizeY, eleSizeY);\n    this.updateDragArea();\n    this.shadowEle = document.createElement('div');\n    this.shadowEle.classList.add('e-holder');\n    this.shadowEle.classList.add('e-holder-transition');\n    setStyleAttribute(this.shadowEle, {\n      'position': 'absolute'\n    });\n    addClass([this.element], [preventSelect]);\n    addClass([args.element], [dragging]);\n    this.element.appendChild(this.shadowEle);\n    this.renderReactTemplates();\n    this.shadowEle = document.querySelector('.e-holder');\n    this.shadowEle.style.height = this.getCellInstance(args.element.id).sizeY * this.cellSize[1] + 'px';\n    this.shadowEle.style.width = this.getCellInstance(args.element.id).sizeX * this.cellSize[0] + 'px';\n    var panelInstance = this.getCellInstance(args.element.id);\n    this.setPanelPosition(this.shadowEle, panelInstance.row, panelInstance.col);\n  }; // eslint-disable-next-line\n\n\n  DashboardLayout.prototype.cloneModels = function (source, target) {\n    if (target === undefined) {\n      target = [];\n    }\n\n    for (var i = 0; i < source.length; i++) {\n      // tslint:disable-next-line\n      if (!target[i]) {\n        target[i] = {};\n      } // eslint-disable-next-line guard-for-in\n\n\n      for (var k in source[i]) {\n        target[i][k] = source[i][k];\n      }\n    }\n\n    return target;\n  };\n\n  DashboardLayout.prototype.onDragStart = function (args) {\n    var endCol;\n    var endRow;\n    var dragCol;\n    var col = dragCol = this.getRowColumnDragValues(args)[1];\n    var row = this.getRowColumnDragValues(args)[0];\n\n    if (col < 0 || row < 0) {\n      return;\n    }\n\n    this.panelPropertyChange(this.getCellInstance(args.element.id), {\n      row: row,\n      col: col\n    });\n    var panelModel = this.getCellInstance(args.element.id);\n    this.updateRowsHeight(panelModel.row, panelModel.sizeY, 1);\n    this.updateDragArea();\n\n    if (this.allowPushing) {\n      this.setAttributes({\n        value: {\n          col: col.toString(),\n          row: row.toString()\n        }\n      }, args.element);\n      this.panelPropertyChange(this.getCellInstance(args.element.id), {\n        row: row,\n        col: col\n      });\n      endCol = this.oldRowCol[args.element.id].col;\n      endRow = this.oldRowCol[args.element.id].row;\n      this.oldRowCol[args.element.id] = {\n        row: row,\n        col: col\n      };\n      this.updateOldRowColumn();\n\n      if (this.startCol !== endCol || this.startRow !== endRow) {\n        this.setHolderPosition(args);\n\n        if (this.startCol !== endCol) {\n          this.startRow = endRow;\n        }\n\n        if (this.startRow !== endRow) {\n          this.startCol = endCol;\n        }\n\n        if (this.allowPushing) {\n          this.mainElement = args.element;\n          var model = panelModel;\n          this.checkCollision = this.collisions(model.row, model.col, model.sizeX, model.sizeY, args.element);\n\n          if (panelModel.col >= this.checkColumnValue) {\n            this.checkCollision = [];\n          }\n\n          this.updatePanelLayout(args.element, panelModel);\n          this.moveItemsUpwards();\n        }\n      }\n    }\n\n    if (this.allowPushing !== false) {\n      this.panelPropertyChange(this.getCellInstance(args.element.id), {\n        row: row,\n        col: col\n      });\n    }\n\n    if (this.oldRowCol[args.element.id].row !== row || this.oldRowCol[args.element.id].col !== col) {\n      this.panelPropertyChange(this.getCellInstance(args.element.id), {\n        row: row,\n        col: col\n      });\n      this.setAttributes({\n        value: {\n          col: col.toString(),\n          row: row.toString()\n        }\n      }, args.element);\n    }\n\n    if (this.startCol !== dragCol) {\n      this.startCol = endCol;\n      this.moveItemsUpwards();\n    }\n\n    if (!this.allowPushing) {\n      this.setHolderPosition(args);\n    }\n\n    this.removeResizeClasses(this.panelCollection);\n    this.setClasses(this.panelCollection);\n\n    if (this.allowPushing === false) {\n      return;\n    }\n  };\n\n  DashboardLayout.prototype.getPanelBase = function (args) {\n    var item;\n\n    for (var i = 0; i < this.panelCollection.length; i++) {\n      if (this.panelCollection[i].id === (args.element && args.element.id || args)) {\n        item = this.panelCollection[i];\n      }\n    }\n\n    return item;\n  };\n\n  DashboardLayout.prototype.getPanel = function (row, column, excludeItems) {\n    if (excludeItems && !(excludeItems instanceof Array)) {\n      excludeItems = [excludeItems];\n    }\n\n    var sizeY = 1;\n\n    while (row > -1) {\n      var sizeX = 1;\n      var col = column;\n\n      while (col > -1) {\n        var items = this.sortedArray[row];\n\n        if (items) {\n          var item = items[col];\n\n          if (item && (!excludeItems || excludeItems.indexOf(item) === -1) && parseInt(item.getAttribute('data-sizeX'), 10) >= sizeX && parseInt(item.getAttribute('data-sizeY'), 10) >= sizeY) {\n            return item;\n          }\n        }\n\n        ++sizeX;\n        --col;\n      }\n\n      --row;\n      ++sizeY;\n    }\n\n    return null;\n  };\n\n  DashboardLayout.prototype.setHolderPosition = function (args) {\n    var sizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n    var col = parseInt(args.element.getAttribute('data-col'), 10);\n    var row = parseInt(args.element.getAttribute('data-row'), 10);\n    var sizeX = parseInt(args.element.getAttribute('data-sizeX'), 10);\n    var widthValue = this.getCellSize()[0];\n    var heightValue = this.getCellSize()[1];\n    var top = row === 0 ? 0 : row * (heightValue + this.cellSpacing[1]);\n    var left = col === 0 ? 0 : col * (widthValue + this.cellSpacing[0]);\n    var cellSizeOne = this.getCellSize()[1];\n    var cellSizeZero = this.getCellSize()[0];\n    this.elementRef.top = this.shadowEle.style.top = top + 'px';\n    this.elementRef.left = this.shadowEle.style.left = left + 'px';\n    this.elementRef.height = this.shadowEle.style.height = sizeY * cellSizeOne + (sizeY - 1) * this.cellSpacing[1] + 'px';\n    this.elementRef.width = this.shadowEle.style.width = sizeX * cellSizeZero + (sizeX - 1) * this.cellSpacing[0] + 'px';\n  };\n\n  DashboardLayout.prototype.getCellInstance = function (idValue) {\n    var currentCellInstance;\n\n    for (var i = 0; i < this.panels.length; i++) {\n      if (this.panels[i].id === idValue) {\n        currentCellInstance = this.panels[i];\n      }\n    }\n\n    return currentCellInstance;\n  };\n  /**\n   * Allows to add a panel to the Dashboardlayout.\n   *\n   * @param {panel} panel -  Defines the panel element.\n   *\n   * @returns void\n   * @deprecated\n   */\n\n\n  DashboardLayout.prototype.addPanel = function (panel) {\n    this.panelsSizeY = 0;\n    this.maxCol();\n\n    if (!panel.minSizeX) {\n      panel.minSizeX = 1;\n    }\n\n    if (!panel.minSizeY) {\n      panel.minSizeY = 1;\n    }\n\n    if (!panel.id) {\n      panel.id = 'layout_' + this.panelID.toString();\n      this.panelID = this.panelID + 1;\n    } // eslint-disable-next-line\n\n\n    var panelProp = new Panel(this, 'panels', panel, true);\n    this.panels.push(panelProp);\n    this.panelsInitialModel = this.cloneModels(this.panels);\n    this.setMinMaxValues(panelProp);\n\n    if (this.maxColumnValue < panelProp.col || this.maxColumnValue < panelProp.col + panelProp.sizeX) {\n      this.panelPropertyChange(panelProp, {\n        col: this.maxColumnValue - panelProp.sizeX\n      });\n    }\n\n    var cell = this.renderCell(panelProp, true, null);\n    this.oldRowCol[panelProp.id] = {\n      row: panelProp.row,\n      col: panelProp.col\n    };\n    this.cloneObject[panelProp.id] = {\n      row: panelProp.row,\n      col: panelProp.col\n    };\n    this.updateOldRowColumn();\n    this.element.insertAdjacentElement('afterbegin', cell);\n    this.addPanelCalled = true;\n\n    if (this.checkMediaQuery()) {\n      this.checkMediaQuerySizing();\n      this.removeResizeClasses(this.panelCollection);\n    } else {\n      this.mainElement = cell;\n\n      if (!this.checkCollision) {\n        this.checkCollision = [];\n      }\n\n      this.setPanelPosition(cell, panelProp.row, panelProp.col);\n      this.updatePanelLayout(cell, panelProp);\n    }\n\n    this.addPanelCalled = false;\n\n    if (this.allowDragging && this.mediaQuery ? !this.checkMediaQuery() : false) {\n      this.enableDraggingContent([document.getElementById(panelProp.id)]);\n    }\n\n    this.setClasses([cell]);\n\n    if (this.allowFloating) {\n      this.mainElement = null;\n      this.moveItemsUpwards();\n    }\n\n    this.updateOldRowColumn();\n    this.sortedPanel();\n    this.updateCloneArrayObject();\n\n    if (this.allowResizing) {\n      for (var i = 0; i < cell.querySelectorAll('.e-resize').length; i++) {\n        var eventName = Browser.info.name === 'msie' ? 'mousedown pointerdown' : 'mousedown';\n        EventHandler.add(cell.querySelectorAll('.e-resize')[i], eventName, this.downResizeHandler, this);\n\n        if (Browser.info.name !== 'msie') {\n          EventHandler.add(cell.querySelectorAll('.e-resize')[i], 'touchstart', this.touchDownResizeHandler, this);\n        }\n      }\n    }\n\n    this.checkForChanges(false, [panelProp]);\n  };\n  /**\n   * Allows to update a panel in the DashboardLayout.\n   *\n   * @param {panel} panel - Defines the panel element.\n   *\n   * @returns void\n   * @deprecated\n   */\n\n\n  DashboardLayout.prototype.updatePanel = function (panel) {\n    this.panelsSizeY = 0;\n\n    if (!panel.id) {\n      return;\n    }\n\n    var panelInstance = this.getCellInstance(panel.id);\n\n    if (!panelInstance) {\n      return;\n    }\n\n    this.maxCol();\n    panel.col = panel.col < 1 ? 0 : panel.col > this.columns ? this.columns - 1 : panel.col;\n\n    if (isNullOrUndefined(panel.col)) {\n      panel.col = panelInstance.col;\n    }\n\n    this.panelPropertyChange(panelInstance, panel);\n    this.setMinMaxValues(panelInstance);\n    var cell = document.getElementById(panel.id);\n    this.mainElement = cell;\n    var cssClass = panelInstance.cssClass ? panelInstance.cssClass.split(' ') : null;\n    this.panelContent = cell.querySelector('.e-panel-container') ? cell.querySelector('.e-panel-container') : this.createSubElement(cssClass, cell.id + '_content', panelContainer);\n    cell.appendChild(this.panelContent);\n\n    if (panelInstance.header) {\n      var headerTemplateElement = cell.querySelector('.e-panel-header') ? cell.querySelector('.e-panel-header') : this.createSubElement([], cell.id + 'template', '');\n      addClass([headerTemplateElement], [header]);\n      headerTemplateElement.innerHTML = '';\n      var id = this.element.id + 'HeaderTemplate' + panelInstance.id;\n      this.renderTemplate(panelInstance.header, headerTemplateElement, id, true, 'header');\n      this.panelContent.appendChild(headerTemplateElement);\n      this.renderReactTemplates();\n    } else {\n      if (cell.querySelector('.e-panel-header')) {\n        detach(cell.querySelector('.e-panel-header'));\n      }\n    }\n\n    if (panelInstance.content) {\n      var cssClass_2 = panelInstance.cssClass ? panelInstance.cssClass.split(' ') : null;\n      this.panelBody = cell.querySelector('.e-panel-content') ? cell.querySelector('.e-panel-content') : this.createSubElement(cssClass_2, cell.id + '_body', panelContent);\n      this.panelBody.innerHTML = '';\n      var headerHeight = this.panelContent.querySelector('.e-panel-header') ? window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n      var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n      setStyleAttribute(this.panelBody, {\n        height: contentHeightValue\n      });\n      var id = this.element.id + 'ContentTemplate' + panelInstance.id;\n      this.renderTemplate(panelInstance.content, this.panelBody, id, true, 'content');\n      this.panelContent.appendChild(this.panelBody);\n      this.renderReactTemplates();\n    } else {\n      if (cell.querySelector('.e-panel-content')) {\n        detach(cell.querySelector('.e-panel-content'));\n      }\n    }\n\n    this.setXYAttributes(cell, panelInstance);\n    this.setHeightAndWidth(cell, panelInstance);\n    this.setPanelPosition(cell, panelInstance.row, panelInstance.col);\n    this.updatePanelLayout(cell, panelInstance);\n\n    if (this.checkMediaQuery()) {\n      this.checkMediaQuerySizing();\n    }\n\n    this.mainElement = null;\n    this.updatePanels();\n    this.updateCloneArrayObject();\n  };\n\n  DashboardLayout.prototype.updateCloneArrayObject = function () {\n    this.cloneArray = this.sortedArray;\n    this.cloneObject = JSON.parse(JSON.stringify(this.oldRowCol));\n  };\n  /**\n   * Returns the panels object of the DashboardLayout.\n   *\n   * @returns [`PanelModel[]`](./panelModel)\n   */\n\n\n  DashboardLayout.prototype.serialize = function () {\n    var cloneModel = this.cloneModels(this.panels);\n    var customObject = [];\n\n    for (var i = 0; i < cloneModel.length; i++) {\n      customObject.push({\n        id: cloneModel[i].id,\n        row: cloneModel[i].row,\n        col: cloneModel[i].col,\n        sizeX: cloneModel[i].sizeX,\n        sizeY: cloneModel[i].sizeY,\n        minSizeX: cloneModel[i].minSizeX,\n        minSizeY: cloneModel[i].minSizeY,\n        maxSizeX: cloneModel[i].maxSizeX,\n        maxSizeY: cloneModel[i].maxSizeY\n      });\n    }\n\n    return customObject;\n  };\n  /**\n   * Removes all the panels from the DashboardLayout.\n   */\n\n\n  DashboardLayout.prototype.removeAll = function () {\n    this.removeAllCalled = true;\n\n    for (var i = 0; i < this.panelCollection.length; i++) {\n      detach(this.panelCollection[i]);\n      this.clearTemplate();\n    }\n\n    this.removeAllPanel();\n    this.rows = 0;\n    this.gridPanelCollection = [];\n    this.setHeightWidth();\n    this.sortedPanel();\n    this.sortedArray = [];\n    this.overlapElementClone = [];\n    this.overlapElement = [];\n    this.overlapSubElementClone = [];\n    this.panelCollection = [];\n    this.oldRowCol = {};\n    this.cloneObject = {};\n    var clonedPanels = this.cloneModels(this.panels);\n    this.setProperties({\n      panels: []\n    }, true);\n    this.updatePanels();\n    this.updateCloneArrayObject();\n    this.checkForChanges(false, null, clonedPanels);\n    this.removeAllCalled = false;\n  };\n  /**\n   * Removes the panel from the DashboardLayout.\n   *\n   * @param {string} id -  Defines the panel ID.\n   *\n   * @returns void\n   */\n\n\n  DashboardLayout.prototype.removePanel = function (id) {\n    var _this = this;\n\n    this.panelsSizeY = 0;\n    this.panelsInitialModel = this.cloneModels(this.panels);\n    var removedPanel;\n\n    for (var i = 0; i < this.panelCollection.length; i++) {\n      if (this.panelCollection[i].id === id) {\n        detach(this.panelCollection[i]);\n        this.panelCollection.splice(i, 1);\n      }\n\n      if (this.panels[i].id === id) {\n        removedPanel = this.panels[i];\n        this.panels.splice(i, 1);\n        this.panelsInitialModel.splice(i, 1);\n        this.updateOldRowColumn();\n        this.sortedPanel();\n      }\n    }\n\n    this.updatePanels();\n\n    if (this.checkMediaQuery()) {\n      this.isPanelRemoved = true;\n      this.checkMediaQuerySizing();\n      this.isPanelRemoved = false;\n    }\n\n    this.gridPanelCollection.forEach(function (item) {\n      if (item.id === id) {\n        _this.gridPanelCollection.splice(_this.gridPanelCollection.indexOf(item), 1);\n      }\n    });\n    this.updateCloneArrayObject();\n    this.checkForChanges(false, null, [removedPanel]);\n  };\n  /**\n   *Moves the panel in the DashboardLayout.\n   *\n   * @param {string} id - Defines the panel ID.\n   *\n   * @param  {number} row - Defines the row of dashboard layout.\n   *\n   * @param {number} col - Defines the column of dashboard layout.\n   *\n   * @returns void\n   */\n\n\n  DashboardLayout.prototype.movePanel = function (id, row, col) {\n    this.movePanelCalled = true;\n    this.panelsInitialModel = this.cloneModels(this.panels);\n    var panelInstance = this.getCellInstance(id);\n\n    if (isNaN(row) || row === null || isNaN(col) || col === null || !panelInstance) {\n      return;\n    }\n\n    if (col < 0) {\n      col = 0;\n    } else if (col > this.columns) {\n      col = this.columns - panelInstance.sizeX;\n    }\n\n    this.panelPropertyChange(panelInstance, {\n      row: row,\n      col: col\n    });\n    var ele = document.getElementById(id);\n    this.mainElement = ele;\n    this.startRow = parseInt(ele.getAttribute('data-row'), 10);\n    this.startCol = parseInt(ele.getAttribute('data-col'), 10);\n    this.setAttributes({\n      value: {\n        col: col.toString(),\n        row: row.toString()\n      }\n    }, ele);\n    this.updateOldRowColumn();\n    this.setPanelPosition(ele, row, col);\n    this.updatePanelLayout(ele, panelInstance);\n    this.updateRowHeight();\n    this.updatePanels();\n    this.updateCloneArrayObject();\n    this.mainElement = null;\n\n    if (this.allowFloating) {\n      this.moveItemsUpwards();\n    }\n\n    this.movePanelCalled = false;\n    this.checkForChanges(false);\n  };\n\n  DashboardLayout.prototype.setAttributes = function (value, ele) {\n    for (var i = 0; i < Object.keys(value).length; i++) {\n      if (Object.keys(value)) {\n        if (value[Object.keys(value)[i]].col) {\n          ele.setAttribute('data-col', value[Object.keys(value)[i]].col.toString());\n        }\n\n        if (value[Object.keys(value)[i]].row) {\n          ele.setAttribute('data-row', value[Object.keys(value)[i]].row.toString());\n        }\n\n        if (value[Object.keys(value)[i]].sizeX) {\n          ele.setAttribute('data-sizeX', value[Object.keys(value)[i]].sizeX.toString());\n        }\n\n        if (value[Object.keys(value)[i]].sizeY) {\n          ele.setAttribute('data-sizeY', value[Object.keys(value)[i]].sizeY.toString());\n        }\n\n        if (value[Object.keys(value)[i]].minSizeX) {\n          ele.setAttribute('data-minSizeX', value[Object.keys(value)[i]].minSizeX.toString());\n        }\n\n        if (value[Object.keys(value)[i]].minSizeY) {\n          ele.setAttribute('data-minSizeY', value[Object.keys(value)[i]].minSizeY.toString());\n        }\n\n        if (value[Object.keys(value)[i]].maxSizeX) {\n          ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeX.toString());\n        }\n\n        if (value[Object.keys(value)[i]].maxSizeY) {\n          ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeY.toString());\n        }\n      }\n    }\n  };\n  /**\n   * Resize the panel in the DashboardLayout.\n   *\n   * @param {string} id - Defines the panel ID.\n   *\n   * @param {number} sizeX - Defines the sizeX of dashboard layout.\n   *\n   * @param {number} sizeY - Defines the sizeY of dashboard layout.\n   */\n\n\n  DashboardLayout.prototype.resizePanel = function (id, sizeX, sizeY) {\n    this.panelsInitialModel = this.cloneModels(this.panels);\n    var panelInstance = this.getCellInstance(id);\n    this.resizeCalled = true;\n    var ele = document.getElementById(id);\n    var args = {\n      event: null,\n      element: ele,\n      isInteracted: false\n    };\n    this.trigger('resizeStart', args);\n    this.panelPropertyChange(panelInstance, {\n      sizeX: sizeX,\n      sizeY: sizeY\n    });\n    this.setMinMaxValues(panelInstance);\n    this.checkMinMaxValues(panelInstance);\n    this.mainElement = ele;\n    this.setAttributes({\n      value: {\n        sizeX: panelInstance.sizeX.toString(),\n        sizeY: panelInstance.sizeY.toString()\n      }\n    }, ele);\n    this.setHeightAndWidth(ele, panelInstance);\n    this.updatePanelLayout(ele, panelInstance);\n    this.updatePanels();\n    this.updateRowHeight();\n    this.resizeCalled = false;\n    this.trigger('resizeStop', args);\n    this.checkForChanges(false);\n  };\n  /**\n   * Destroys the DashboardLayout component\n   *\n   * @returns void\n   */\n\n\n  DashboardLayout.prototype.destroy = function () {\n    // eslint-disable-next-line\n    EventHandler.remove(window, 'resize', this.refreshListener);\n    removeClass([this.element], ['e-dashboardlayout', 'e-lib', 'e-responsive', 'e-control']);\n    this.element.removeAttribute('style');\n\n    for (var i = 0; i < this.dragCollection.length; i++) {\n      this.dragCollection[i].destroy();\n    }\n\n    this.removeAllPanel();\n\n    _super.prototype.destroy.call(this);\n\n    this.clearTemplate();\n    this.renderReactTemplates();\n  };\n\n  DashboardLayout.prototype.removeAllPanel = function () {\n    while (this.element.firstElementChild) {\n      detach(this.element.firstElementChild);\n      this.clearTemplate();\n    }\n  };\n\n  DashboardLayout.prototype.setEnableRtl = function () {\n    if (this.enableRtl === true) {\n      addClass([this.element], 'e-rtl');\n    } else {\n      removeClass([this.element], 'e-rtl');\n    }\n  };\n  /**\n   * Called internally if any of the property value changed.\n   * returns void\n   *\n   * @private\n   */\n\n\n  DashboardLayout.prototype.updateCellSizeAndSpacing = function () {\n    this.panelResponsiveUpdate();\n    this.setHeightWidth();\n    this.getRowColumn();\n\n    for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n      var ele = this.element.querySelectorAll('.e-panel')[i];\n      var panelModel = this.getCellInstance(ele.id);\n      this.setHeightAndWidth(ele, panelModel);\n      this.setPanelPosition(ele, panelModel.row, panelModel.col);\n    }\n  };\n\n  DashboardLayout.prototype.updatePanelsDynamically = function (panels) {\n    this.removeAll();\n    this.setProperties({\n      panels: panels\n    }, true);\n    this.setOldRowCol();\n\n    if (this.table) {\n      this.table.remove();\n    }\n\n    this.initialize();\n\n    if (this.checkMediaQuery()) {\n      this.refresh();\n    }\n\n    if (this.showGridLines) {\n      this.initGridLines();\n    }\n  };\n\n  DashboardLayout.prototype.checkForIDValues = function (panels) {\n    var _this = this;\n\n    if (!isNullOrUndefined(panels) && panels.length > 0) {\n      this.panelID = 0;\n      panels.forEach(function (panel) {\n        if (!panel.id) {\n          _this.panelPropertyChange(panel, {\n            id: 'layout_' + _this.panelID.toString()\n          });\n\n          _this.panelID = _this.panelID + 1;\n        }\n      });\n    } else {\n      this.restrictDynamicUpdate = true;\n    }\n  };\n  /**\n   * Called internally if any of the property value changed.\n   *\n   * returns void\n   *\n   * @private\n   */\n  // eslint-disable-next-line\n\n\n  DashboardLayout.prototype.onPropertyChanged = function (newProp, oldProp) {\n    var _this = this;\n\n    if (newProp.panels && newProp.panels.length > 0 && newProp.panels[0] instanceof Panel) {\n      this.checkForIDValues(newProp.panels);\n    }\n\n    for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n      var prop = _a[_i];\n\n      switch (prop) {\n        case 'enableRtl':\n          this.setProperties({\n            enableRtl: newProp.enableRtl\n          }, true);\n          this.setEnableRtl();\n          break;\n\n        case 'mediaQuery':\n          this.setProperties({\n            mediaQuery: newProp.mediaQuery\n          }, true);\n\n          if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n          }\n\n          break;\n\n        case 'allowDragging':\n          this.setProperties({\n            allowDragging: newProp.allowDragging\n          }, true);\n          this.ensureDrag();\n          break;\n\n        case 'allowResizing':\n          this.setProperties({\n            allowResizing: newProp.allowResizing\n          }, true);\n\n          if (this.allowResizing) {\n            this.setClasses(this.panelCollection);\n            this.resizeEvents();\n          } else {\n            var panelElements = this.element.querySelectorAll('.e-panel .e-panel-container .e-resize');\n\n            for (var i = 0; i < panelElements.length; i++) {\n              var eventName = Browser.info.name === 'msie' ? 'mousedown pointerdown' : 'mousedown';\n              var element = panelElements[i];\n              EventHandler.remove(element, eventName, this.downResizeHandler);\n\n              if (Browser.info.name !== 'msie') {\n                EventHandler.remove(element, 'touchstart', this.touchDownResizeHandler);\n              }\n            }\n\n            this.removeResizeClasses(this.panelCollection);\n          }\n\n          break;\n\n        case 'cellSpacing':\n          this.setProperties({\n            cellSpacing: newProp.cellSpacing\n          }, true);\n          this.updateCellSizeAndSpacing();\n          this.updateGridLines();\n          break;\n\n        case 'draggableHandle':\n          this.setProperties({\n            draggableHandle: newProp.draggableHandle\n          }, true);\n          this.ensureDrag();\n          break;\n\n        case 'allowFloating':\n          this.setProperties({\n            allowFloating: newProp.allowFloating\n          }, true);\n          this.moveItemsUpwards();\n          break;\n\n        case 'showGridLines':\n          if (this.showGridLines) {\n            this.setProperties({\n              showGridLines: newProp.showGridLines\n            }, true);\n            this.initGridLines();\n          } else {\n            if (this.table) {\n              detach(this.table);\n            }\n          }\n\n          break;\n\n        case 'allowPushing':\n          this.setProperties({\n            allowPushing: newProp.allowPushing\n          }, true);\n          break;\n\n        case 'panels':\n          if (!newProp.columns && !this.restrictDynamicUpdate && newProp.panels[0] && newProp.panels.length > 0) {\n            this.isRenderComplete = false;\n            this.updatePanelsDynamically(newProp.panels);\n            this.isRenderComplete = true;\n          } else if (!(newProp.panels[0] && newProp.panels.length)) {\n            this.isRenderComplete = false;\n            this.updatePanelsDynamically(this.panels);\n            this.isRenderComplete = true;\n          } else {\n            this.restrictDynamicUpdate = false;\n          }\n\n          break;\n\n        case 'columns':\n          this.isRenderComplete = false;\n\n          if (newProp.panels) {\n            this.updatePanelsDynamically(newProp.panels);\n          }\n\n          this.setProperties({\n            columns: newProp.columns\n          }, true);\n          this.panelCollection = [];\n          this.maxColumnValue = this.columns;\n          this.calculateCellSize();\n          this.panels.forEach(function (panel) {\n            _this.setMinMaxValues(panel);\n\n            if (_this.maxColumnValue < panel.col || _this.maxColumnValue < panel.col + panel.sizeX) {\n              var colValue = _this.maxColumnValue - panel.sizeX;\n\n              _this.panelPropertyChange(panel, {\n                col: colValue < 0 ? 0 : colValue\n              });\n\n              _this.setXYAttributes(document.getElementById(panel.id), panel);\n            }\n\n            _this.setHeightAndWidth(document.getElementById(panel.id), panel);\n\n            _this.panelCollection.push(document.getElementById(panel.id));\n\n            _this.setPanelPosition(document.getElementById(panel.id), panel.row, panel.col);\n\n            _this.mainElement = document.getElementById(panel.id);\n\n            _this.updatePanelLayout(document.getElementById(panel.id), panel);\n\n            _this.mainElement = null;\n          });\n          this.updatePanels();\n          this.updateCloneArrayObject();\n          this.isRenderComplete = true;\n          this.updateGridLines();\n          break;\n      }\n    }\n  };\n  /**\n   * Gets the properties to be maintained upon browser refresh.\n   *\n   * @returns string\n   * @private\n   */\n\n\n  DashboardLayout.prototype.getPersistData = function () {\n    var keyEntity = ['panels'];\n    return this.addOnPersist(keyEntity);\n  };\n  /* istanbul ignore next */\n\n\n  DashboardLayout.prototype.mergePersistPanelData = function (persistedData) {\n    var data = window.localStorage.getItem(this.getModuleName() + this.element.id);\n\n    if (!(isNullOrUndefined(data) || data === '') || !isNullOrUndefined(persistedData)) {\n      var dataObj = !isNullOrUndefined(persistedData) ? persistedData : JSON.parse(data);\n      var keys = Object.keys(dataObj);\n      this.isProtectedOnChange = true;\n\n      for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n        var key = keys_1[_i];\n\n        if (typeof getValue(key, this) === 'object' && !isNullOrUndefined(getValue(key, this))) {\n          if (Array.isArray(getValue(key, this)) && key === 'panels') {\n            this.mergePanels(dataObj[key], this[key]);\n          }\n        }\n      }\n\n      this.isProtectedOnChange = false;\n    }\n  };\n  /* istanbul ignore next */\n\n\n  DashboardLayout.prototype.mergePanels = function (sortedPanels, panels) {\n    var storedColumns = sortedPanels;\n\n    var _loop_6 = function (i) {\n      this_4.checkForIDValues(panels);\n      var localPanel = panels.filter(function (pan) {\n        return pan.id === storedColumns[i].id;\n      })[0];\n\n      if (!isNullOrUndefined(localPanel)) {\n        storedColumns[i] = extend(localPanel, storedColumns[i], {}, true);\n      }\n    };\n\n    var this_4 = this;\n\n    for (var i = 0; i < storedColumns.length; i++) {\n      _loop_6(i);\n    }\n  };\n  /**\n   * Returns the current module name.\n   *\n   * @returns string\n   *\n   * @private\n   */\n\n\n  DashboardLayout.prototype.getModuleName = function () {\n    return 'DashboardLayout';\n  };\n\n  __decorate$1([Property(true)], DashboardLayout.prototype, \"allowDragging\", void 0);\n\n  __decorate$1([Property(false)], DashboardLayout.prototype, \"allowResizing\", void 0);\n\n  __decorate$1([Property(true)], DashboardLayout.prototype, \"allowPushing\", void 0);\n\n  __decorate$1([Property(true)], DashboardLayout.prototype, \"enableHtmlSanitizer\", void 0);\n\n  __decorate$1([Property(true)], DashboardLayout.prototype, \"allowFloating\", void 0);\n\n  __decorate$1([Property(1)], DashboardLayout.prototype, \"cellAspectRatio\", void 0);\n\n  __decorate$1([Property([5, 5])], DashboardLayout.prototype, \"cellSpacing\", void 0);\n\n  __decorate$1([Property(1)], DashboardLayout.prototype, \"columns\", void 0);\n\n  __decorate$1([Property(false)], DashboardLayout.prototype, \"showGridLines\", void 0);\n\n  __decorate$1([Property(null)], DashboardLayout.prototype, \"draggableHandle\", void 0);\n\n  __decorate$1([Property('en-US')], DashboardLayout.prototype, \"locale\", void 0);\n\n  __decorate$1([Property('max-width: 600px')], DashboardLayout.prototype, \"mediaQuery\", void 0);\n\n  __decorate$1([Collection([], Panel)], DashboardLayout.prototype, \"panels\", void 0);\n\n  __decorate$1([Property(['e-south-east'])], DashboardLayout.prototype, \"resizableHandles\", void 0);\n\n  __decorate$1([Event()], DashboardLayout.prototype, \"change\", void 0);\n\n  __decorate$1([Event()], DashboardLayout.prototype, \"dragStart\", void 0);\n\n  __decorate$1([Event()], DashboardLayout.prototype, \"drag\", void 0);\n\n  __decorate$1([Event()], DashboardLayout.prototype, \"dragStop\", void 0);\n\n  __decorate$1([Event()], DashboardLayout.prototype, \"resizeStart\", void 0);\n\n  __decorate$1([Event()], DashboardLayout.prototype, \"resize\", void 0);\n\n  __decorate$1([Event()], DashboardLayout.prototype, \"resizeStop\", void 0);\n\n  __decorate$1([Event()], DashboardLayout.prototype, \"created\", void 0);\n\n  __decorate$1([Event()], DashboardLayout.prototype, \"destroyed\", void 0);\n\n  DashboardLayout = __decorate$1([NotifyPropertyChanges], DashboardLayout);\n  return DashboardLayout;\n}(Component);\n/**\n * dashboardlayout modules\n */\n\n/**\n *     Layout all modules\n */\n\n\nexport { PaneProperties, Splitter, Panel, DashboardLayout };","map":{"version":3,"names":["Browser","ChildProperty","Collection","Component","Draggable","Event","EventHandler","NotifyPropertyChanges","Property","SanitizeHtmlHelper","addClass","append","closest","compile","detach","extend","formatUnit","getValue","isNullOrUndefined","isUndefined","removeClass","select","selectAll","setStyleAttribute","setValue","__extends","undefined","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","ROOT","HORIZONTAL_PANE","VERTICAL_PANE","PANE","SPLIT_H_PANE","SPLIT_V_PANE","SPLIT_BAR","SPLIT_H_BAR","SPLIT_V_BAR","STATIC_PANE","SCROLL_PANE","RESIZE_BAR","RESIZABLE_BAR","SPLIT_BAR_HOVER","SPLIT_BAR_ACTIVE","HIDE_HANDLER","SPLIT_TOUCH","DISABLED","RTL","E_ICONS","COLLAPSIBLE","NAVIGATE_ARROW","ARROW_RIGHT","ARROW_LEFT","ARROW_UP","ARROW_DOWN","HIDE_ICON","EXPAND_PANE","COLLAPSE_PANE","PANE_HIDDEN","RESIZABLE_PANE","LAST_BAR","BAR_SIZE_DEFAULT","PaneProperties","_super","apply","Splitter","options","element","_this","call","needsID","onPropertyChanged","newProp","oldProp","classList","contains","_i","_a","keys","prop","setSplitterSize","height","width","setCssClass","cssClass","isEnabled","enabled","setReversePane","setSeparatorSize","separatorSize","changeOrientation","orientation","paneSettings","paneCounts","index","parseInt","changedPropsCount","j","property","newValue","allPanes","innerHTML","setTemplate","newVal","resizableModel","collapsibleModelUpdate","collapsed","isCollapsed","collapsedOnchange","newValSize","updatePaneSize","destroyPaneSettings","allBars","createSplitPane","addSeparator","getPanesDimensions","setRTL","enableRtl","style","flexBasis","flexPaneIndexes","staticPaneWidth","flexCount","size","innerText","offsetWidth","offsetHeight","flexPaneWidth","border","avgDiffWidth","add","initializeValues","paneOrder","separatorOrder","previousCoordinates","currentCoordinates","updatePrePaneInPercentage","updateNextPaneInPercentage","panesDimensions","validDataAttributes","validElementAttributes","iconsDelay","templateElement","collapseFlag","expandFlag","preRender","onReportWindowSize","reportWindowSize","bind","onMouseMoveHandler","onMouseMove","onMouseUpHandler","onMouseUp","onTouchMoveHandler","onTouchEndHandler","wrapper","cloneNode","wrapperParent","parentElement","name","info","css","isDevice","getPersistData","addOnPersist","getModuleName","render","checkDataAttributes","setDimension","getHeight","getWidth","setPaneSettings","enableReversePanes","document","onDocumentClick","renderComplete","ownerDocument","defaultView","addEventListener","onMove","e","currentSeparator","remove","checkPaneSize","prePaneSize","previousPane","nextPaneSize","nextPane","splitBarSize","indexOf","previousFlexBasis","updatePaneFlexBasis","nextFlexBasis","totalPercent","totalWidth","convertPercentageToPixel","type","keyCode","getMinInPixel","nextPaneIndex","min","prevPaneIndex","addStaticPaneClass","event","getSeparatorIndex","isPrevpaneCollapsed","isPrevpaneExpanded","isNextpaneCollapsed","activeElement","resizable","preventDefault","triggerResizing","collapsible","collapse","expand","minValue","paneMinRange","convertPixelToNumber","toString","sanitizeHelper","value","enableHtmlSanitizer","item","beforeSanitize","beforeEvent","cancel","helper","trigger","serializeValue","api","dataIndex","getAttribute","removeDataPrefix","paneIndex","children","dataAttr","max","content","paneAPI","slice","forEach","el","restoreElem","childCount","paneCollection","paneValue","setProperties","checkArrow","targetArrow","querySelector","attribute","lastIndexOf","rtl","reverse","setAttribute","removeAttribute","push","getBoundingClientRect","className","split","hideResizer","showResizer","onMouseDown","isResizable","updateResizablePanes","arrow2","arrow1","paneCollapsible","updateCollapseIcons","collapseArrow","barIndex","arrow","updateIsCollapsed","lastBarArrow","targetEle","lastBarIndex","click","targetArrows","event_1","eventArgs","beforeAction","beforeCollapseArgs","collapsedindex","sort","collapseEventArgs","afterAction","m","splitterProperty","sizeValue","separator","splitBar","resizeBar","isVertical","checkSplitPane","currentBar","elementIndex","paneEle","collectPanes","childNodes","elements","getPrevPane","order","getOrderPane","getNextPane","pane","getOrderIndex","panes","updateSeparatorSize","resizeHanlder","addResizeHandler","createElement","appendChild","updateIconClass","leftArrow","rightArrow","createSeparator","proxy","addMouseActions","getPaneDetails","clonedEle","parentNode","toLowerCase","wireClickEvents","eventName","allBar","querySelectorAll","sepSize","paddingLeft","paddingRight","getPreviousPaneIndex","getNextPaneIndex","sTout","hoverTimeOut","setTimeout","clearTimeout","getEventType","updateCurrentSeparator","isSeparator","isMouseEvent","isMouse","pointerType","updateCursorPosition","changeCoordinates","x","pageX","y","pageY","eventType","touches","coordinates","paneCount","body","removeEventListener","staticPaneCount","updateSplitterSize","iswindowResize","len","getComputedStyle","marginLeft","marginTop","marginBottom","diff","updatePane","flexPane","sizeDiff","isPercent","updatePaneOffset","convertPixelToPercentage","flexPaneOffset","wireResizeEvents","touchMoveEvent","touchEndEvent","unwireResizeEvents","clickHandler","hoverBars","icon","collapseAction","expandAction","splitterDetails","beforeExpandArgs","expandPane","expandEventArgs","removeStaticPanes","collapseCount","flexStatus","nextElementSibling","collapseClass","updatePaneSettings","updateIconsOnExpand","updateFlexGrow","checkStaticPanes","flexGrow","staticPane","status","visiblePane","hideTargetBarIcon","targetBar","showTargetBarIcon","updateIconsOnCollapse","showCurrentBarIcon","currentBarIndex","prevBar","previousElementSibling","splitInstance","prevPaneCollapsed","nextPaneExpanded","nextPaneNextEle","getPrevBar","nextBar","collapsePane","paneValues","nextPaneCollapsible","prevPaneCollapsible","prevPaneExpanded","nextPaneCollapsed","prevPanePreEle","currentIndex","array","prevbar","getNextBar","updateBars","paneSize","prePaneDimenson","nextPaneDimension","pointerEvents","resizeStartArgs","previous","removePercentageUnit","offset","parseFloat","targetElement","percentage","convertedValue","offsetValue","Math","ceil","calcDragPosition","rectValue","separatorPosition","getSeparatorPosition","rectBound","left","window","scrollX","top","scrollY","offSet","getMinMax","selection","defaultVal","separatorIndex","prevPane","getPaneHeight","isValidSize","isValid","getPaneDimensions","previousPaneHeightWidth","nextPaneHeightWidth","checkCoordinates","coordinatesChanged","isCursorMoved","cursorMoved","getBorder","clientWidth","clientHeight","validateDraggedPosition","separatorNewPosition","prevPaneCurrentWidth","nextPaneCurrentWidth","validateMinMaxValues","difference","calculateCurrentDimensions","validateMinRange","paneCurrentWidth","paneMinDimensions","validatedVal","validateMaxRange","paneMaxRange","paneMaxDimensions","equatePaneWidths","round","Number","draggedPos","prevPaneHeightWidth","separatorTopLeft","offsetLeft","offsetTop","prePaneRange","nextPaneRange","pane1MinSize","pane2MinSize","pane1MaxSize","pane2MaxSize","validatedSize","enablePersistence","panesDimension","child","sizeFlag","template","toElement","templateCompile","isReact","renderReactTemplates","ele","cnt","tempEle","compileElement","childEle","val","eleVal","display","removeProperty","trim","templateFn","outerHTML","templateFUN","id","childElement","nodeName","destroy","isDestroyed","attributes","refreshing","clearTemplate","addPaneClass","removePaneOrders","paneClass","setPaneOrder","removeSeparator","updatePanes","addPane","paneProperties","newPane","paneDetails","splice","insertBefore","removePane","elementClass","__extends$1","__decorate$1","preventSelect","dragging","dragRestrict","drag","resize","resizeicon","responsive","east","west","north","south","single","double","northEast","southEast","northWest","southWest","panel","panelContent","panelContainer","disable","header","panelTransition","Panel","DashboardLayout","rows","panelID","movePanelCalled","resizeCalled","mOffX","mOffY","maxTop","maxRows","mouseX","mouseY","minTop","minLeft","isInlineRendering","removeAllCalled","isPanelRemoved","panelsSizeY","resizeHeight","mergePersistPanelData","panelCollection","sortedArray","gridPanelCollection","overlapElement","overlapElementClone","overlapSubElementClone","collisionChecker","dragCollection","elementRef","dimensions","allItems","oldRowCol","availableClasses","setOldRowCol","calculateCellSize","contentTemplateChild","panels","panelPropertyChange","row","col","createPanelElement","idValue","initialize","isRenderComplete","showGridLines","checkMediaQuery","initGridLines","updateDragArea","table","tbody","maxRow","tr","columns","td","setAttributes","sizeX","sizeY","setPanelPosition","setHeightAndWidth","updateRowHeight","childElementCount","panelElements","panelElement","getInlinePanels","maxCol","setMinMaxValues","maxColumnValue","colValue","setXYAttributes","panel_1","renderPanels","tempObject","mediaQuery","matchMedia","matches","mainElement","updatePanelLayout","setClasses","updateOldRowColumn","checkMediaQuerySizing","renderDashBoardCells","allowDragging","enableDraggingContent","sortedPanel","bindEvents","updatePanels","updateCloneArrayObject","checkColumnValue","panelResponsiveUpdate","setEnableRtl","cellSize","cellAspectRatio","cellSpacing","recheck","getElementById","createSubElement","templateParser","error","sanitizedValue","sanitize","renderTemplate","appendElement","isStringTemplate","templateElements","tagName","compilerFn","compilerFn_1","cellElement","panelModel","panelId","disablePanel","headerTemplateElement","cssClass_1","panelBody","headerHeight","contentHeightValue","model","hasAttribute","minSizeX","minSizeY","maxSizeX","maxSizeY","zIndex","panelProp","resizeEvents","allowResizing","downResizeHandler","touchDownResizeHandler","refreshListener","refresh","downHandler","lastMouseX","lastMouseY","moveEventName","upEventName","isMouseMoveBound","moveResizeHandler","isMouseUpBound","upResizeHandler","panelsInitialModel","cloneModels","currentTarget","args","isInteracted","downTarget","shadowEle","elementX","elementY","elementWidth","elementHeight","originalWidth","getCellInstance","originalHeight","previousRow","changedTouches","touchMoveResizeHandler","getCellSize","updateMaxTopLeft","moveTarget","updateResizeElement","maxLeft","handleArray","handleClass","diffY","diffX","resizingPanel","currentX","currentY","oldSizeX","oldSizeY","dY","dX","getMinHeight","getMaxHeight","getMinWidth","getMaxWidth","getResizeRowColumn","upTarget","allowFloating","moveItemsUpwards","checkForChanges","isChanged","pixelsToColumns","pixelsToRows","canOccupy","collisions","getPanelBase","allowPushing","pixels","isCeil","curColWidth","floor","l","sortItem","rowIndex","colIndex","moveItemUpwards","updateGridLines","availableRow","availableColumn","items","rowValue","columnValue","column","oldRow","updateLayout","internalPanels","cellInstance","removeResizeClasses","checkDragging","sortPanels","_loop_1","_loop_2","this_1","filter","updatedPanel","updatedRows","updatedHeight","getRowColumn","setHeightWidth","heightValue","widthValue","entirePanelsY","setXYDimensions","renderCell","dashBoardCell","xValue","checkMinMaxValues","cells","cell","ignore","h","w","getPanel","rightWardsSpaceChecking","rowElements","spacedColumns","sizeXValue","occupiedValues","getOccupiedColumns","eleOccupiedValues","checkingElement","next","occupiedItems","leftWardsSpaceChecking","prev","adjustmentAvailable","leftAdjustable","rightAdjustable","isAdjustable","rightSpacing","rowElement","topAdjustable","eleSizeX","eleCol","getRowElements","leftSpacing","isLeftAdjustable","spacedColumnValue","isRightAdjustable","endRow","topCheck","startRow","spacedRowValue","isXSpacingAvailable","spacing","isSpaceAvailable","subSpacingColumns","base","spaces","isLeftAdjudtable","xAdjust","collisionValue","replacable","isRightAdjudtable","collision","updatedCollision","exclusions","sortCollisionItems","collisionItems","_loop_3","_loop_4","this_2","updatedModels","removeableElement","adjust","resetLayout","addPanelCalled","cloneObject","cloneArray","checkCollision","swapAvailability","available","eleModel","count","collideModel","excludeEle","checkForSwapping","direction","eleSwapRow","isSwappable","count1","updatedRow","collideInstance","elementinstance","swapCollision","swapItems","swappedElements","collisionItemsRow","collisionInstance","itemModel","initialModel","checkForAdjustment","collisionModels","swappingAvailable","proxy_1","item1","updateRowColumn","checkForCompletePushing","isSubValue","srcEle","updateCollisionChecked","eleSizeY","eleRow","shouldRestrict","i_1","collisionY","collisionCol","collisionX","overlapElementModel","ele_1","k","eleRow_1","excludeElements","collisionPanel","clone","proxy_2","overlapElementRow1","_loop_5","rowVal","this_3","colValue_1","collisionModels1","resizerElements","i_2","ensureDrag","dragPanels","containerEle","draggableHandle","setResizingClass","container","resizableHandles","spanEle","addClassValue","cellHeight","cellWidth","heigthValue","getRowColumnDragValues","elementTop","elementLeft","added","removed","changedPanels","changedArgs","addedPanels","removedPanels","collections","abortArray","dragobj","dragArea","isDragScroll","handle","abort","dragStart","onDraggingStart","dragStop","setHolderPosition","panelInstance","dragStopEventArgs","draggedEventArgs","onDragStart","setDragArea","updateRowsHeight","addRows","dragArgs","JSON","parse","stringify","eleRowValue","startCol","source","endCol","dragCol","excludeItems","cellSizeOne","cellSizeZero","currentCellInstance","addPanel","insertAdjacentElement","updatePanel","cssClass_2","serialize","cloneModel","customObject","removeAll","removeAllPanel","clonedPanels","removePanel","removedPanel","movePanel","isNaN","resizePanel","firstElementChild","updateCellSizeAndSpacing","updatePanelsDynamically","checkForIDValues","restrictDynamicUpdate","keyEntity","persistedData","data","localStorage","getItem","dataObj","isProtectedOnChange","keys_1","isArray","mergePanels","sortedPanels","storedColumns","_loop_6","this_4","localPanel","pan"],"sources":["C:/Users/High Tech Assistance/Desktop/e-learningProject__frontend - Copie/e-learningProject__frontend - Copie/frontend/node_modules/@syncfusion/ej2-layouts/dist/es6/ej2-layouts.es5.js"],"sourcesContent":["import { Browser, ChildProperty, Collection, Component, Draggable, Event, EventHandler, NotifyPropertyChanges, Property, SanitizeHtmlHelper, addClass, append, closest, compile, detach, extend, formatUnit, getValue, isNullOrUndefined, isUndefined, removeClass, select, selectAll, setStyleAttribute, setValue } from '@syncfusion/ej2-base';\n\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar ROOT = 'e-splitter';\nvar HORIZONTAL_PANE = 'e-splitter-horizontal';\nvar VERTICAL_PANE = 'e-splitter-vertical';\nvar PANE = 'e-pane';\nvar SPLIT_H_PANE = 'e-pane-horizontal';\nvar SPLIT_V_PANE = 'e-pane-vertical';\nvar SPLIT_BAR = 'e-split-bar';\nvar SPLIT_H_BAR = 'e-split-bar-horizontal';\nvar SPLIT_V_BAR = 'e-split-bar-vertical';\nvar STATIC_PANE = 'e-static-pane';\nvar SCROLL_PANE = 'e-scrollable';\nvar RESIZE_BAR = 'e-resize-handler';\nvar RESIZABLE_BAR = 'e-resizable-split-bar';\nvar SPLIT_BAR_HOVER = 'e-split-bar-hover';\nvar SPLIT_BAR_ACTIVE = 'e-split-bar-active';\nvar HIDE_HANDLER = 'e-hide-handler';\nvar SPLIT_TOUCH = 'e-splitter-touch';\nvar DISABLED = 'e-disabled';\nvar RTL = 'e-rtl';\nvar E_ICONS = 'e-icons';\nvar COLLAPSIBLE = 'e-collapsible';\nvar NAVIGATE_ARROW = 'e-navigate-arrow';\nvar ARROW_RIGHT = 'e-arrow-right';\nvar ARROW_LEFT = 'e-arrow-left';\nvar ARROW_UP = 'e-arrow-up';\nvar ARROW_DOWN = 'e-arrow-down';\nvar HIDE_ICON = 'e-icon-hidden';\nvar EXPAND_PANE = 'e-expanded';\nvar COLLAPSE_PANE = 'e-collapsed';\nvar PANE_HIDDEN = 'e-pane-hidden';\nvar RESIZABLE_PANE = 'e-resizable';\nvar LAST_BAR = 'e-last-bar';\nvar BAR_SIZE_DEFAULT = 1;\n/**\n * Interface to configure pane properties such as its content, size, min, max, resizable, collapsed and collapsible.\n */\nvar PaneProperties = /** @__PURE__ @class */ (function (_super) {\n    __extends(PaneProperties, _super);\n    function PaneProperties() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"size\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsible\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsed\", void 0);\n    __decorate([\n        Property(true)\n    ], PaneProperties.prototype, \"resizable\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"min\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"max\", void 0);\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], PaneProperties.prototype, \"cssClass\", void 0);\n    return PaneProperties;\n}(ChildProperty));\n/**\n * Splitter is a layout user interface (UI) control that has resizable and collapsible split panes.\n * The container can be split into multiple panes, which are oriented horizontally or vertically.\n * The separator (divider) splits the panes and resizes and expands/collapses the panes.\n * The splitter is placed inside the split pane to make a nested layout user interface.\n *\n * ```html\n * <div id=\"splitter\">\n *  <div> Left Pane </div>\n *  <div> Center Pane </div>\n *  <div> Right Pane </div>\n * </div>\n * ```\n * ```typescript\n * <script>\n *   var splitterObj = new Splitter({ width: '300px', height: '200px'});\n *   splitterObj.appendTo('#splitter');\n * </script>\n * ```\n */\nvar Splitter = /** @__PURE__ @class */ (function (_super) {\n    __extends(Splitter, _super);\n    /**\n     * Initializes a new instance of the Splitter class.\n     *\n     * @param options  - Specifies Splitter model properties as options.\n     * @param element  - Specifies the element that is rendered as an Splitter.\n     */\n    function Splitter(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.needsID = true;\n        return _this;\n    }\n    /**\n     * Gets called when the model property changes.The data that describes the old and new values of the property that changed.\n     *\n     * @param  {SplitterModel} newProp - specifies the new property\n     * @param  {SplitterModel} oldProp - specifies the old property\n     * @returns {void}\n     * @private\n     */\n    Splitter.prototype.onPropertyChanged = function (newProp, oldProp) {\n        if (!this.element.classList.contains(ROOT)) {\n            return;\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'height':\n                    this.setSplitterSize(this.element, newProp.height, 'height');\n                    break;\n                case 'width':\n                    this.setSplitterSize(this.element, newProp.width, 'width');\n                    break;\n                case 'cssClass':\n                    this.setCssClass(this.element, newProp.cssClass);\n                    break;\n                case 'enabled':\n                    this.isEnabled(this.enabled);\n                    break;\n                case 'enableReversePanes':\n                    this.setReversePane();\n                    break;\n                case 'separatorSize':\n                    this.setSeparatorSize(newProp.separatorSize);\n                    break;\n                case 'orientation':\n                    this.changeOrientation(newProp.orientation);\n                    break;\n                case 'paneSettings': {\n                    if (!(newProp.paneSettings instanceof Array && oldProp.paneSettings instanceof Array)) {\n                        var paneCounts = Object.keys(newProp.paneSettings);\n                        for (var i = 0; i < paneCounts.length; i++) {\n                            var index = parseInt(Object.keys(newProp.paneSettings)[i], 10);\n                            var changedPropsCount = Object.keys(newProp.paneSettings[index]).length;\n                            for (var j = 0; j < changedPropsCount; j++) {\n                                var property = Object.keys(newProp.paneSettings[index])[j];\n                                switch (property) {\n                                    case 'content': {\n                                        var newValue = Object(newProp.paneSettings[index])[property];\n                                        if (!isNullOrUndefined(newValue)) {\n                                            this.allPanes[index].innerHTML = '';\n                                            this.setTemplate(newValue, this.allPanes[index]);\n                                        }\n                                        break;\n                                    }\n                                    case 'resizable': {\n                                        var newVal = Object(newProp.paneSettings[index])[property];\n                                        this.resizableModel(index, newVal);\n                                        break;\n                                    }\n                                    case 'collapsible':\n                                        this.collapsibleModelUpdate(index);\n                                        break;\n                                    case 'collapsed':\n                                        // eslint-disable-next-line\n                                        newProp.paneSettings[index].collapsed ? this.isCollapsed(index) : this.collapsedOnchange(index);\n                                        break;\n                                    case 'cssClass':\n                                        this.setCssClass(this.allPanes[index], newProp.paneSettings[index].cssClass);\n                                        break;\n                                    case 'size': {\n                                        var newValSize = Object(newProp.paneSettings[index])[property];\n                                        if (newValSize !== '' && !isNullOrUndefined(newValSize)) {\n                                            this.updatePaneSize(newValSize, index);\n                                        }\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        this.destroyPaneSettings();\n                        this.allBars = [];\n                        this.allPanes = [];\n                        this.createSplitPane(this.element);\n                        this.addSeparator(this.element);\n                        this.getPanesDimensions();\n                        this.setRTL(this.enableRtl);\n                        this.isCollapsed();\n                    }\n                    break;\n                }\n                case 'enableRtl':\n                    this.setRTL(newProp.enableRtl);\n                    break;\n            }\n        }\n    };\n    Splitter.prototype.updatePaneSize = function (newValSize, index) {\n        this.allPanes[index].style.flexBasis = newValSize;\n        var flexPaneIndexes = [];\n        var staticPaneWidth;\n        var flexCount = 0;\n        for (var i = 0; i < this.allPanes.length; i++) {\n            if (!this.paneSettings[i].size && !(this.allPanes[i].innerText === '')) {\n                flexPaneIndexes[flexCount] = i;\n                flexCount++;\n            }\n            else if (this.paneSettings[i].size) {\n                staticPaneWidth = this.orientation === 'Horizontal' ? this.allPanes[index].offsetWidth : this.allPanes[index].offsetHeight;\n            }\n        }\n        staticPaneWidth = this.orientation === 'Horizontal' ? (this.allBars[0].offsetWidth * this.allBars.length) + staticPaneWidth :\n            (this.allBars[0].offsetHeight * this.allBars.length) + staticPaneWidth;\n        var flexPaneWidth = (this.orientation === 'Horizontal' ? this.element.offsetWidth : this.element.offsetHeight)\n            - staticPaneWidth - (this.border * 2);\n        var avgDiffWidth = flexPaneWidth / flexPaneIndexes.length;\n        for (var j = 0; j < flexPaneIndexes.length; j++) {\n            this.allPanes[flexPaneIndexes[j]].style.flexBasis = avgDiffWidth + 'px';\n        }\n        this.allPanes[index].classList.add(STATIC_PANE);\n    };\n    Splitter.prototype.initializeValues = function () {\n        this.allPanes = [];\n        this.paneOrder = [];\n        this.separatorOrder = [];\n        this.allBars = [];\n        this.previousCoordinates = {};\n        this.currentCoordinates = {};\n        this.updatePrePaneInPercentage = false;\n        this.updateNextPaneInPercentage = false;\n        this.panesDimensions = [];\n        this.border = 0;\n        this.validDataAttributes = ['data-size', 'data-min', 'data-max', 'data-collapsible',\n            'data-resizable', 'data-content', 'data-collapsed'];\n        this.validElementAttributes = ['data-orientation', 'data-width', 'data-height'];\n        this.iconsDelay = 300;\n        this.templateElement = [];\n        this.collapseFlag = false;\n        this.expandFlag = true;\n    };\n    Splitter.prototype.preRender = function () {\n        this.initializeValues();\n        this.onReportWindowSize = this.reportWindowSize.bind(this);\n        this.onMouseMoveHandler = this.onMouseMove.bind(this);\n        this.onMouseUpHandler = this.onMouseUp.bind(this);\n        this.onTouchMoveHandler = this.onMouseMove.bind(this);\n        this.onTouchEndHandler = this.onMouseUp.bind(this);\n        this.wrapper = this.element.cloneNode(true);\n        this.wrapperParent = this.element.parentElement;\n        removeClass([this.wrapper], ['e-control', 'e-lib', ROOT]);\n        var orientation = this.orientation === 'Horizontal' ? HORIZONTAL_PANE : VERTICAL_PANE;\n        addClass([this.element], orientation);\n        var name = Browser.info.name;\n        var css = (name === 'msie') ? 'e-ie' : '';\n        this.setCssClass(this.element, css);\n        if (Browser.isDevice) {\n            addClass([this.element], SPLIT_TOUCH);\n        }\n    };\n    Splitter.prototype.getPersistData = function () {\n        return this.addOnPersist(['paneSettings']);\n    };\n    /**\n     * Returns the current module name.\n     *\n     * @returns {string} - returns the string value\n     * @private\n     */\n    Splitter.prototype.getModuleName = function () {\n        return 'splitter';\n    };\n    /**\n     * To Initialize the control rendering\n     *\n     * @returns {void}\n     * @private\n     */\n    Splitter.prototype.render = function () {\n        this.checkDataAttributes();\n        this.setCssClass(this.element, this.cssClass);\n        this.isEnabled(this.enabled);\n        this.setDimension(this.getHeight(this.element), this.getWidth(this.element));\n        this.createSplitPane(this.element);\n        this.addSeparator(this.element);\n        this.getPanesDimensions();\n        this.setPaneSettings();\n        this.setRTL(this.enableRtl);\n        if (this.enableReversePanes) {\n            this.setReversePane();\n        }\n        this.collapseFlag = true;\n        this.isCollapsed();\n        this.collapseFlag = false;\n        EventHandler.add(document, 'touchstart click', this.onDocumentClick, this);\n        this.renderComplete();\n        this.element.ownerDocument.defaultView.addEventListener('resize', this.onReportWindowSize, true);\n        EventHandler.add(this.element, 'keydown', this.onMove, this);\n    };\n    Splitter.prototype.onDocumentClick = function (e) {\n        if (!e.target.classList.contains(SPLIT_BAR) && !isNullOrUndefined(this.currentSeparator)) {\n            this.currentSeparator.classList.remove(SPLIT_BAR_HOVER);\n            this.currentSeparator.classList.remove(SPLIT_BAR_ACTIVE);\n        }\n    };\n    Splitter.prototype.checkPaneSize = function (e) {\n        var prePaneSize = this.orientation === 'Horizontal' ? this.previousPane.offsetWidth : this.previousPane.offsetHeight;\n        var nextPaneSize = this.orientation === 'Horizontal' ? this.nextPane.offsetWidth : this.nextPane.offsetHeight;\n        var splitBarSize = isNullOrUndefined(this.separatorSize) ? BAR_SIZE_DEFAULT : this.separatorSize;\n        if ((this.previousPane.style.flexBasis.indexOf('%') > 0 || this.nextPane.style.flexBasis.indexOf('%') > 0)) {\n            var previousFlexBasis = this.updatePaneFlexBasis(this.previousPane);\n            var nextFlexBasis = this.updatePaneFlexBasis(this.nextPane);\n            this.totalPercent = previousFlexBasis + nextFlexBasis;\n            this.totalWidth = this.convertPercentageToPixel(this.totalPercent + '%');\n            if (e.type === 'keydown' && (!isNullOrUndefined(e.keyCode))) {\n                if ((e.keyCode === 39 || (e.keyCode === 40)) && nextPaneSize > 0 &&\n                    (this.getMinInPixel(this.paneSettings[this.nextPaneIndex].min) <\n                        this.convertPercentageToPixel((nextFlexBasis - 1) + '%'))) {\n                    this.previousPane.style.flexBasis = (previousFlexBasis + 1) + '%';\n                    this.nextPane.style.flexBasis = (nextFlexBasis - 1) + '%';\n                }\n                else if ((e.keyCode === 37 || (e.keyCode === 38)) && prePaneSize > 0 &&\n                    (this.getMinInPixel(this.paneSettings[this.prevPaneIndex].min) <\n                        this.convertPercentageToPixel((previousFlexBasis - 1) + '%'))) {\n                    this.previousPane.style.flexBasis = (previousFlexBasis - 1) + '%';\n                    this.nextPane.style.flexBasis = (nextFlexBasis + 1) + '%';\n                }\n            }\n        }\n        else {\n            this.totalWidth = (this.orientation === 'Horizontal') ? this.previousPane.offsetWidth + this.nextPane.offsetWidth :\n                this.previousPane.offsetHeight + this.nextPane.offsetHeight;\n            if (e.type === 'keydown' && (!isNullOrUndefined(e.keyCode))) {\n                if ((e.keyCode === 39 || (e.keyCode === 40)) && nextPaneSize > 0 &&\n                    (this.getMinInPixel(this.paneSettings[this.nextPaneIndex].min) < (nextPaneSize + splitBarSize))) {\n                    this.addStaticPaneClass();\n                    this.previousPane.style.flexBasis = (prePaneSize + splitBarSize) + 'px';\n                    this.nextPane.style.flexBasis = (nextPaneSize < splitBarSize) ? '0px' :\n                        (nextPaneSize - splitBarSize) + 'px';\n                }\n                else if ((e.keyCode === 37 || (e.keyCode === 38)) && prePaneSize > 0 &&\n                    (this.getMinInPixel(this.paneSettings[this.prevPaneIndex].min) < (prePaneSize - splitBarSize))) {\n                    this.addStaticPaneClass();\n                    this.previousPane.style.flexBasis = (prePaneSize < splitBarSize) ? '0px' :\n                        (prePaneSize - splitBarSize) + 'px';\n                    this.nextPane.style.flexBasis = (nextPaneSize + splitBarSize) + 'px';\n                }\n            }\n        }\n    };\n    Splitter.prototype.onMove = function (event) {\n        if (this.allPanes.length > 1) {\n            var index = this.getSeparatorIndex(this.currentSeparator);\n            var isPrevpaneCollapsed = this.previousPane.classList.contains(COLLAPSE_PANE);\n            var isPrevpaneExpanded = this.previousPane.classList.contains(EXPAND_PANE);\n            var isNextpaneCollapsed = this.nextPane.classList.contains(COLLAPSE_PANE);\n            if (((this.orientation !== 'Horizontal' && event.keyCode === 38) || (this.orientation === 'Horizontal' &&\n                event.keyCode === 39) ||\n                (this.orientation === 'Horizontal' && event.keyCode === 37) || (this.orientation !== 'Horizontal' && event.keyCode === 40))\n                && (!isPrevpaneExpanded && !isNextpaneCollapsed && !isPrevpaneCollapsed || (isPrevpaneExpanded) && !isNextpaneCollapsed) &&\n                document.activeElement.classList.contains(SPLIT_BAR) && (this.paneSettings[index].resizable &&\n                this.paneSettings[index + 1].resizable)) {\n                event.preventDefault();\n                this.checkPaneSize(event);\n                this.triggerResizing(event);\n            }\n            else if (event.keyCode === 13 && this.paneSettings[index].collapsible &&\n                document.activeElement.classList.contains(SPLIT_BAR) && this.currentSeparator.classList.contains(SPLIT_BAR_ACTIVE)) {\n                if (!this.previousPane.classList.contains(COLLAPSE_PANE)) {\n                    this.collapse(index);\n                    addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n                }\n                else {\n                    this.expand(index);\n                    addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n                }\n            }\n        }\n    };\n    Splitter.prototype.getMinInPixel = function (minValue) {\n        var min;\n        if (isNullOrUndefined(minValue)) {\n            return 0;\n        }\n        var paneMinRange = this.convertPixelToNumber(minValue.toString());\n        if (minValue.indexOf('%') > 0) {\n            paneMinRange = this.convertPercentageToPixel(minValue);\n        }\n        min = this.convertPixelToNumber((paneMinRange).toString());\n        return min;\n    };\n    /**\n     * @param {string} value - specifies the string value\n     * @returns {string} returns the string\n     * @hidden\n     */\n    Splitter.prototype.sanitizeHelper = function (value) {\n        if (this.enableHtmlSanitizer) {\n            var item = SanitizeHtmlHelper.beforeSanitize();\n            var beforeEvent = {\n                cancel: false,\n                helper: null\n            };\n            extend(item, item, beforeEvent);\n            this.trigger('beforeSanitizeHtml', item);\n            if (item.cancel && !isNullOrUndefined(item.helper)) {\n                value = item.helper(value);\n            }\n            else if (!item.cancel) {\n                value = SanitizeHtmlHelper.serializeValue(item, value);\n            }\n        }\n        return value;\n    };\n    Splitter.prototype.checkDataAttributes = function () {\n        var api;\n        var value;\n        // Element values\n        for (var dataIndex = 0; dataIndex < this.validElementAttributes.length; dataIndex++) {\n            value = this.element.getAttribute(this.validElementAttributes[dataIndex]);\n            if (!isNullOrUndefined(value)) {\n                api = this.removeDataPrefix(this.validElementAttributes[dataIndex]);\n                // eslint-disable-next-line\n                this[api] = value;\n            }\n        }\n        // Pane values\n        for (var paneIndex = 0; paneIndex < this.element.children.length; paneIndex++) {\n            for (var dataAttr = 0; dataAttr < this.validDataAttributes.length; dataAttr++) {\n                value = this.element.children[paneIndex].getAttribute(this.validDataAttributes[dataAttr]);\n                if (!isNullOrUndefined(value)) {\n                    api = this.removeDataPrefix(this.validDataAttributes[dataAttr]);\n                    value = (api === 'collapsible' || api === 'resizable') ? (value === 'true') : value;\n                    if (isNullOrUndefined(this.paneSettings[paneIndex])) {\n                        this.paneSettings[paneIndex] = {\n                            size: '',\n                            min: null,\n                            max: null,\n                            content: '',\n                            resizable: true,\n                            collapsible: false,\n                            collapsed: false\n                        };\n                    }\n                    // eslint-disable-next-line\n                    var paneAPI = this.paneSettings[paneIndex][api];\n                    if (api === 'resizable' || api === 'collapsible' || api === 'collapsed') {\n                        // eslint-disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                    if (isNullOrUndefined(paneAPI) || paneAPI === '') {\n                        // eslint-disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.destroyPaneSettings = function () {\n        [].slice.call(this.element.children).forEach(function (el) {\n            detach(el);\n        });\n        this.restoreElem();\n    };\n    Splitter.prototype.setPaneSettings = function () {\n        var childCount = this.allPanes.length;\n        var paneCollection = [];\n        var paneValue = {\n            size: '',\n            min: null,\n            max: null,\n            content: '',\n            resizable: true,\n            collapsed: false,\n            collapsible: false,\n            cssClass: ''\n        };\n        for (var i = 0; i < childCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i])) {\n                paneCollection[i] = paneValue;\n            }\n            else {\n                paneCollection[i] = this.paneSettings[i];\n            }\n        }\n        this.setProperties({ 'paneSettings': paneCollection }, true);\n    };\n    Splitter.prototype.checkArrow = function (paneIndex, targetArrow) {\n        return (this.allBars[paneIndex].querySelector('.' + NAVIGATE_ARROW + '.' + targetArrow));\n    };\n    Splitter.prototype.removeDataPrefix = function (attribute) {\n        return attribute.slice(attribute.lastIndexOf('-') + 1);\n    };\n    Splitter.prototype.setRTL = function (rtl) {\n        // eslint-disable-next-line\n        rtl ? addClass([this.element], RTL) : removeClass([this.element], RTL);\n    };\n    Splitter.prototype.setReversePane = function () {\n        this.allPanes = this.allPanes.reverse();\n        this.allBars = this.allBars.reverse();\n        addClass([this.allBars[this.allBars.length - 1]], LAST_BAR);\n        removeClass([this.allBars[0]], LAST_BAR);\n        this.setProperties({ 'paneSettings': this.paneSettings.reverse() }, true);\n        if (this.enableReversePanes) {\n            this.element.setAttribute('dir', 'rtl');\n        }\n        else {\n            this.element.removeAttribute('dir');\n        }\n    };\n    Splitter.prototype.setSplitterSize = function (element, size, property) {\n        var style = property === 'width' ? { 'width': formatUnit(size) } : { 'height': formatUnit(size) };\n        setStyleAttribute(element, style);\n    };\n    Splitter.prototype.getPanesDimensions = function () {\n        for (var index = 0; index < this.allPanes.length; index++) {\n            // eslint-disable-next-line\n            this.orientation === 'Horizontal' ? this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().width) :\n                this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().height);\n        }\n    };\n    Splitter.prototype.setCssClass = function (element, className) {\n        if (className) {\n            addClass([element], className.split(className.indexOf(',') > -1 ? ',' : ' '));\n        }\n    };\n    Splitter.prototype.hideResizer = function (target) {\n        addClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n    };\n    Splitter.prototype.showResizer = function (target) {\n        if (!isNullOrUndefined(this.previousPane) && this.previousPane.classList.contains(RESIZABLE_PANE) &&\n            !isNullOrUndefined(this.nextPane) && this.nextPane.classList.contains(RESIZABLE_PANE)) {\n            removeClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n        }\n    };\n    Splitter.prototype.resizableModel = function (index, newVal) {\n        var paneIndex = (index === (this.allBars.length)) ? (index - 1) : index;\n        var i = index;\n        EventHandler.remove(this.allBars[paneIndex], 'mousedown', this.onMouseDown);\n        if (newVal) {\n            EventHandler.add(this.allBars[paneIndex], 'mousedown', this.onMouseDown, this);\n            if (this.isResizable()) {\n                this.showResizer(this.allBars[paneIndex]);\n                removeClass([select('.' + RESIZE_BAR, this.allBars[paneIndex])], HIDE_HANDLER);\n                this.allBars[paneIndex].classList.add(RESIZABLE_BAR);\n                // eslint-disable-next-line\n                (index === (this.allBars.length)) ? this.allPanes[index].classList.add(RESIZABLE_PANE) :\n                    this.allPanes[paneIndex].classList.add(RESIZABLE_PANE);\n                this.updateResizablePanes(i);\n            }\n        }\n        else {\n            this.updateResizablePanes(i);\n            this.hideResizer(this.allBars[paneIndex]);\n            this.allBars[paneIndex].classList.remove(RESIZABLE_BAR);\n            // eslint-disable-next-line\n            (index === (this.allBars.length)) ? this.allPanes[index].classList.remove(RESIZABLE_PANE) :\n                this.allPanes[paneIndex].classList.remove(RESIZABLE_PANE);\n        }\n    };\n    Splitter.prototype.collapsibleModelUpdate = function (index) {\n        var paneIndex = index === (this.allBars.length) ? (index - 1) : index;\n        var arrow2 = (this.orientation === 'Horizontal')\n            ? this.checkArrow(paneIndex, ARROW_LEFT) : this.checkArrow(paneIndex, ARROW_UP);\n        var arrow1 = (this.orientation === 'Horizontal')\n            ? this.checkArrow(paneIndex, ARROW_RIGHT) : this.checkArrow(paneIndex, ARROW_DOWN);\n        this.paneCollapsible(this.allPanes[index], index);\n        this.updateCollapseIcons(paneIndex, arrow1, arrow2);\n    };\n    Splitter.prototype.collapseArrow = function (barIndex, arrow) {\n        return selectAll('.' + arrow, this.allBars[barIndex])[0];\n    };\n    Splitter.prototype.updateIsCollapsed = function (index, collapseArrow, lastBarArrow) {\n        if (!isNullOrUndefined(index)) {\n            var targetEle = void 0;\n            var lastBarIndex = (index === this.allBars.length);\n            var barIndex = lastBarIndex ? index - 1 : index;\n            if (!lastBarIndex && this.allPanes[index + 1].classList.contains(COLLAPSE_PANE) && index !== 0) {\n                targetEle = this.collapseArrow(barIndex - 1, lastBarArrow);\n            }\n            else {\n                targetEle = (lastBarIndex) ? this.collapseArrow(barIndex, lastBarArrow) : this.collapseArrow(barIndex, collapseArrow);\n            }\n            targetEle.click();\n        }\n    };\n    Splitter.prototype.isCollapsed = function (index) {\n        var _this = this;\n        if (!isNullOrUndefined(index) && this.paneSettings[index].collapsed\n            && isNullOrUndefined(this.allPanes[index].classList.contains(COLLAPSE_PANE))) {\n            return;\n        }\n        this.expandFlag = false;\n        if (!isNullOrUndefined(index)) {\n            this.collapseFlag = true;\n            var targetEle = void 0;\n            var lastBarIndex = (index === this.allBars.length);\n            var barIndex = lastBarIndex ? index - 1 : index;\n            if (!lastBarIndex && this.allPanes[index + 1].classList.contains(COLLAPSE_PANE) && index !== 0) {\n                targetEle = this.collapseArrow(barIndex - 1, this.targetArrows().lastBarArrow);\n            }\n            else {\n                targetEle = (lastBarIndex) ? this.collapseArrow(barIndex, this.targetArrows().lastBarArrow) :\n                    this.collapseArrow(barIndex, this.targetArrows().collapseArrow);\n            }\n            var event_1 = { target: targetEle };\n            var eventArgs = this.beforeAction(event_1);\n            this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n                if (!beforeCollapseArgs.cancel) {\n                    var collapsedindex = [];\n                    collapsedindex[0] = index;\n                    var j = 1;\n                    for (var i = 0; i < _this.allPanes.length; i++) {\n                        if (_this.allPanes[i].classList.contains(COLLAPSE_PANE)) {\n                            collapsedindex[j] = i;\n                            j++;\n                        }\n                    }\n                    collapsedindex = collapsedindex.sort();\n                    _this.updateIsCollapsed(index, _this.targetArrows().collapseArrow, _this.targetArrows().lastBarArrow);\n                    for (var i = 0; i < collapsedindex.length; i++) {\n                        if (!_this.allPanes[collapsedindex[i]].classList.contains(COLLAPSE_PANE)) {\n                            _this.updateIsCollapsed(collapsedindex[i], _this.targetArrows().collapseArrow, _this.targetArrows().lastBarArrow);\n                        }\n                    }\n                    for (var i = collapsedindex.length; i > 0; i--) {\n                        if (!_this.allPanes[collapsedindex[i - 1]].classList.contains(COLLAPSE_PANE)) {\n                            var targetArrow = _this.targetArrows();\n                            _this.updateIsCollapsed(collapsedindex[i - 1], targetArrow.collapseArrow, targetArrow.lastBarArrow);\n                        }\n                    }\n                    var collapseEventArgs = _this.afterAction(event_1);\n                    _this.trigger('collapsed', collapseEventArgs);\n                    _this.collapseFlag = false;\n                }\n            });\n        }\n        else {\n            for (var m = 0; m < this.allPanes.length; m++) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed) {\n                    this.updateIsCollapsed(m, this.targetArrows().collapseArrow, this.targetArrows().lastBarArrow);\n                }\n            }\n            for (var m = this.allPanes.length - 1; m >= 0; m--) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed &&\n                    !this.allPanes[m].classList.contains(COLLAPSE_PANE)) {\n                    var collapseArrow = this.orientation === 'Horizontal' ? ARROW_RIGHT : ARROW_DOWN;\n                    if (m !== 0) {\n                        var targetEle = this.collapseArrow(m - 1, collapseArrow);\n                        targetEle.click();\n                    }\n                    if (!this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                        var targetEle = this.collapseArrow(m - 1, collapseArrow);\n                        targetEle.click();\n                    }\n                }\n            }\n        }\n        this.expandFlag = true;\n    };\n    Splitter.prototype.targetArrows = function () {\n        this.splitterProperty();\n        return {\n            collapseArrow: (this.orientation === 'Horizontal') ? ARROW_LEFT : ARROW_UP,\n            lastBarArrow: (this.orientation === 'Vertical') ? ARROW_DOWN : ARROW_RIGHT\n        };\n    };\n    Splitter.prototype.collapsedOnchange = function (index) {\n        if (!isNullOrUndefined(this.paneSettings[index]) && !isNullOrUndefined(this.paneSettings[index].collapsed)\n            && this.allPanes[index].classList.contains(COLLAPSE_PANE)) {\n            this.updateIsCollapsed(index, this.targetArrows().lastBarArrow, this.targetArrows().collapseArrow);\n        }\n    };\n    Splitter.prototype.isEnabled = function (enabled) {\n        // eslint-disable-next-line\n        enabled ? removeClass([this.element], DISABLED) : addClass([this.element], DISABLED);\n    };\n    Splitter.prototype.setSeparatorSize = function (size) {\n        var sizeValue = isNullOrUndefined(size) ? 'auto' : size + 'px';\n        var separator = this.orientation === 'Horizontal' ? SPLIT_H_BAR : SPLIT_V_BAR;\n        for (var index = 0; index < this.allBars.length; index++) {\n            var splitBar = selectAll('.' + separator, this.element)[index];\n            var resizeBar = selectAll('.' + RESIZE_BAR, splitBar)[0];\n            if (this.orientation === 'Horizontal') {\n                splitBar.style.width = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.width = sizeValue;\n                }\n            }\n            else {\n                splitBar.style.height = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.height = sizeValue;\n                }\n            }\n        }\n    };\n    Splitter.prototype.changeOrientation = function (orientation) {\n        var isVertical = orientation === 'Vertical';\n        this.element.classList.remove(isVertical ? HORIZONTAL_PANE : VERTICAL_PANE);\n        this.element.classList.add(isVertical ? VERTICAL_PANE : HORIZONTAL_PANE);\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.allPanes[index].classList.remove(isVertical ? SPLIT_H_PANE : SPLIT_V_PANE);\n            this.allPanes[index].classList.add(isVertical ? SPLIT_V_PANE : SPLIT_H_PANE);\n        }\n        for (var index = 0; index < this.allBars.length; index++) {\n            detach(this.allBars[index]);\n        }\n        this.allBars = [];\n        this.addSeparator(this.element);\n    };\n    Splitter.prototype.checkSplitPane = function (currentBar, elementIndex) {\n        var paneEle = this.collectPanes(currentBar.parentElement.children)[elementIndex];\n        return paneEle;\n    };\n    Splitter.prototype.collectPanes = function (childNodes) {\n        var elements = [];\n        for (var i = 0; i < childNodes.length; i++) {\n            if (childNodes[i].classList.contains(PANE)) {\n                elements.push(childNodes[i]);\n            }\n        }\n        return elements;\n    };\n    Splitter.prototype.getPrevPane = function (order) {\n        return this.enableReversePanes ? this.getOrderPane(order + 1) : this.getOrderPane(order - 1);\n    };\n    Splitter.prototype.getNextPane = function (order) {\n        return this.enableReversePanes ? this.getOrderPane(order - 1) : this.getOrderPane(order + 1);\n    };\n    Splitter.prototype.getOrderPane = function (order) {\n        var pane;\n        for (var i = 0; i < this.element.children.length; i++) {\n            if (parseInt(this.element.children[i].style.order, 10) === order) {\n                pane = this.element.children[i];\n            }\n        }\n        return pane;\n    };\n    Splitter.prototype.getOrderIndex = function (order, type) {\n        var index;\n        var panes;\n        if (type === 'pane') {\n            panes = this.allPanes;\n        }\n        else {\n            panes = this.allBars;\n        }\n        for (var i = 0; i < panes.length; i++) {\n            if (parseInt(panes[i].style.order, 10) === order) {\n                index = i;\n            }\n        }\n        return index;\n    };\n    Splitter.prototype.updateSeparatorSize = function (resizeHanlder) {\n        var sizeValue = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        // eslint-disable-next-line\n        this.orientation === 'Horizontal' ? (resizeHanlder.style.width = sizeValue) : resizeHanlder.style.height = sizeValue;\n    };\n    Splitter.prototype.addResizeHandler = function (currentBar) {\n        var resizeHanlder = this.createElement('div');\n        addClass([resizeHanlder], [RESIZE_BAR, E_ICONS]);\n        this.updateSeparatorSize(resizeHanlder);\n        currentBar.appendChild(resizeHanlder);\n    };\n    Splitter.prototype.getHeight = function (target) {\n        var height = this.height;\n        height = target.style.height !== '' && this.height === '100%' ? target.style.height : this.height;\n        return height;\n    };\n    Splitter.prototype.getWidth = function (target) {\n        var width = this.width;\n        width = target.style.width !== '' && this.width === '100%' ? target.style.width : this.width;\n        return width;\n    };\n    Splitter.prototype.setDimension = function (height, width) {\n        setStyleAttribute(this.element, { 'height': height, 'width': width });\n    };\n    Splitter.prototype.updateCollapseIcons = function (index, arrow1, arrow2) {\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].collapsible)) {\n                // eslint-disable-next-line\n                this.paneSettings[index].collapsible ? removeClass([arrow2], [HIDE_ICON]) : addClass([arrow2], [HIDE_ICON]);\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    // eslint-disable-next-line\n                    this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                }\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    if ((this.paneSettings[index + 1].collapsible)) {\n                        // eslint-disable-next-line\n                        this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.updateIconClass = function () {\n        if (this.orientation === 'Horizontal') {\n            this.leftArrow = ARROW_LEFT;\n            this.rightArrow = ARROW_RIGHT;\n        }\n        else {\n            this.leftArrow = ARROW_UP;\n            this.rightArrow = ARROW_DOWN;\n        }\n    };\n    Splitter.prototype.createSeparator = function (i) {\n        var separator = this.createElement('div');\n        this.allBars.push(separator);\n        var arrow1 = this.createElement('button');\n        var arrow2 = this.createElement('button');\n        arrow1.setAttribute('tabindex', '-1');\n        arrow2.setAttribute('tabindex', '-1');\n        arrow1.setAttribute('aria-label', 'Toggle navigation');\n        arrow2.setAttribute('aria-label', 'Toggle navigation');\n        arrow1.setAttribute('type', 'button');\n        arrow2.setAttribute('type', 'button');\n        var size = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        // eslint-disable-next-line\n        var proxy = this;\n        if (this.orientation === 'Horizontal') {\n            this.updateIconClass();\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_LEFT, HIDE_ICON]);\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_RIGHT, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_H_BAR]);\n            separator.style.width = size;\n        }\n        else {\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_DOWN, HIDE_ICON]);\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_UP, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_V_BAR]);\n            this.updateIconClass();\n            separator.style.height = size;\n        }\n        this.addMouseActions(separator);\n        separator.appendChild(arrow2);\n        this.addResizeHandler(separator);\n        separator.appendChild(arrow1);\n        this.updateCollapseIcons(i, arrow1, arrow2);\n        separator.setAttribute('tabindex', '0');\n        if (this.enableReversePanes) {\n            separator.setAttribute('dir', 'ltr');\n        }\n        else {\n            separator.removeAttribute('dir');\n        }\n        separator.addEventListener('focus', function () {\n            separator.classList.add(SPLIT_BAR_ACTIVE);\n            proxy.currentSeparator = separator;\n            proxy.getPaneDetails();\n        });\n        separator.addEventListener('blur', function () {\n            separator.classList.remove(SPLIT_BAR_ACTIVE);\n        });\n        return separator;\n    };\n    Splitter.prototype.updateResizablePanes = function (index) {\n        this.getPaneDetails();\n        // eslint-disable-next-line\n        this.isResizable() ? this.allPanes[index].classList.add(RESIZABLE_PANE) : this.allPanes[index].classList.remove(RESIZABLE_PANE);\n    };\n    Splitter.prototype.addSeparator = function (target) {\n        var childCount = this.allPanes.length;\n        var clonedEle = target.children;\n        var separator;\n        for (var i = 0; i < childCount; i++) {\n            if (i < childCount - 1) {\n                separator = this.createSeparator(i);\n                setStyleAttribute(separator, { 'order': (i * 2) + 1 });\n                this.separatorOrder.push((i * 2) + 1);\n                clonedEle[i].parentNode.appendChild(separator);\n                this.currentSeparator = separator;\n                separator.setAttribute('role', 'separator');\n                separator.setAttribute('aria-orientation', this.orientation.toLowerCase());\n                this.wireClickEvents();\n                if (!isNullOrUndefined(separator)) {\n                    if (this.isResizable()) {\n                        EventHandler.add(separator, 'mousedown', this.onMouseDown, this);\n                        var eventName = (Browser.info.name === 'msie') ? 'pointerdown' : 'touchstart';\n                        EventHandler.add(separator, eventName, this.onMouseDown, this);\n                        separator.classList.add(RESIZABLE_BAR);\n                        this.updateResizablePanes(i);\n                    }\n                    else {\n                        addClass([select('.' + RESIZE_BAR, separator)], HIDE_HANDLER);\n                    }\n                }\n            }\n            else {\n                if (separator) {\n                    addClass([separator], LAST_BAR);\n                }\n                if (childCount > 1) {\n                    this.updateResizablePanes(i);\n                }\n            }\n        }\n        if (Browser.info.name === 'msie') {\n            var allBar = this.element.querySelectorAll('.e-splitter .e-resize-handler');\n            for (var i = 0; i < allBar.length; i++) {\n                var sepSize = isNullOrUndefined(this.separatorSize) ? 1 : this.separatorSize;\n                allBar[i].style.paddingLeft = sepSize / 2 + 'px';\n                allBar[i].style.paddingRight = sepSize / 2 + 'px';\n            }\n        }\n    };\n    Splitter.prototype.isResizable = function () {\n        var resizable = false;\n        if ((!isNullOrUndefined(this.paneSettings[this.getPreviousPaneIndex()]) &&\n            this.paneSettings[this.getPreviousPaneIndex()].resizable &&\n            !isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()]) &&\n            this.paneSettings[this.getNextPaneIndex()].resizable) ||\n            isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()])) {\n            resizable = true;\n        }\n        return resizable;\n    };\n    Splitter.prototype.addMouseActions = function (separator) {\n        var _this = this;\n        var sTout;\n        var hoverTimeOut;\n        separator.addEventListener('mouseenter', function () {\n            /* istanbul ignore next */\n            sTout = setTimeout(function () {\n                addClass([separator], [SPLIT_BAR_HOVER]);\n            }, _this.iconsDelay);\n        });\n        separator.addEventListener('mouseleave', function () {\n            clearTimeout(sTout);\n            removeClass([separator], [SPLIT_BAR_HOVER]);\n        });\n        separator.addEventListener('mouseout', function () {\n            clearTimeout(hoverTimeOut);\n        });\n        separator.addEventListener('mouseover', function () {\n            /* istanbul ignore next */\n            hoverTimeOut = setTimeout(function () {\n                addClass([separator], [SPLIT_BAR_HOVER]);\n            }, _this.iconsDelay);\n        });\n    };\n    Splitter.prototype.getEventType = function (e) {\n        return (e.indexOf('mouse') > -1) ? 'mouse' : 'touch';\n    };\n    Splitter.prototype.updateCurrentSeparator = function (target) {\n        this.currentSeparator = this.isSeparator(target) ? target.parentElement : target;\n    };\n    Splitter.prototype.isSeparator = function (target) {\n        return (target.classList.contains(SPLIT_BAR) ? false : true);\n    };\n    Splitter.prototype.isMouseEvent = function (e) {\n        var isMouse = false;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType) &&\n            this.getEventType(e.pointerType) === 'mouse')) {\n            isMouse = true;\n        }\n        return isMouse;\n    };\n    Splitter.prototype.updateCursorPosition = function (e, type) {\n        if (this.isMouseEvent(e)) {\n            this.changeCoordinates({ x: e.pageX, y: e.pageY }, type);\n        }\n        else {\n            var eventType = Browser.info.name !== 'msie' ? e.touches[0] : e;\n            this.changeCoordinates({ x: eventType.pageX, y: eventType.pageY }, type);\n        }\n    };\n    Splitter.prototype.changeCoordinates = function (coordinates, type) {\n        if (type === 'previous') {\n            this.previousCoordinates = coordinates;\n        }\n        else {\n            this.currentCoordinates = coordinates;\n        }\n    };\n    Splitter.prototype.reportWindowSize = function () {\n        var _this = this;\n        var paneCount = this.allPanes.length;\n        if (!document.body.contains(this.element)) {\n            document.defaultView.removeEventListener('resize', this.onReportWindowSize);\n            return;\n        }\n        for (var i = 0; i < paneCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i].size)) {\n                this.allPanes[i].classList.remove(STATIC_PANE);\n            }\n            if (paneCount - 1 === i) {\n                var staticPaneCount = this.element.querySelectorAll('.' + STATIC_PANE).length;\n                if (staticPaneCount === paneCount) {\n                    removeClass([this.allPanes[i]], STATIC_PANE);\n                }\n            }\n        }\n        if (paneCount > 0) {\n            setTimeout(function () {\n                _this.updateSplitterSize(true);\n            }, 200);\n        }\n    };\n    Splitter.prototype.updateSplitterSize = function (iswindowResize) {\n        var totalWidth = 0;\n        var flexPaneIndexes = [];\n        var flexCount = 0;\n        var children = this.element.children;\n        for (var i = 0, len = children.length; i < len; i++) {\n            totalWidth += this.orientation === 'Horizontal' ? children[i].offsetWidth :\n                children[i].offsetHeight;\n        }\n        for (var j = 0, len = this.allBars.length; j < len; j++) {\n            totalWidth += this.orientation === 'Horizontal' ? parseInt(getComputedStyle(this.allBars[j]).marginLeft, 10) +\n                parseInt(getComputedStyle(this.allBars[j]).marginLeft, 10) : parseInt(getComputedStyle(this.allBars[j]).marginTop, 10) +\n                parseInt(getComputedStyle(this.allBars[j]).marginBottom, 10);\n        }\n        var diff = this.orientation === 'Horizontal' ? this.element.offsetWidth -\n            ((this.border * 2) + totalWidth) :\n            this.element.offsetHeight - ((this.border * 2) + totalWidth);\n        for (var i = 0, len = this.allPanes.length; i < len; i++) {\n            if (this.allPanes[i].innerText === '' ? !(this.paneSettings[i].size) || !(this.allPanes[i].innerText === '')\n                : !(this.paneSettings[i].size) && !(this.allPanes[i].innerText === '')) {\n                flexPaneIndexes[flexCount] = i;\n                flexCount++;\n            }\n        }\n        var avgDiffWidth = diff / flexPaneIndexes.length;\n        for (var j = 0, len = flexPaneIndexes.length; j < len; j++) {\n            this.allPanes[flexPaneIndexes[j]].style.flexBasis = this.orientation === 'Horizontal' ?\n                (this.allPanes[flexPaneIndexes[j]].offsetWidth + avgDiffWidth) + 'px' :\n                (this.allPanes[flexPaneIndexes[j]].offsetHeight + avgDiffWidth) + 'px';\n        }\n        if (this.allPanes.length === 2 && iswindowResize) {\n            var paneCount = this.allPanes.length;\n            var minValue = void 0;\n            var paneMinRange = void 0;\n            var paneIndex = 0;\n            var updatePane = void 0;\n            var flexPane = void 0;\n            for (var i = 0; i < paneCount; i++) {\n                if (!isNullOrUndefined(this.paneSettings[i].min)) {\n                    paneMinRange = this.convertPixelToNumber((this.paneSettings[i].min).toString());\n                    if (this.paneSettings[i].min.indexOf('%') > 0) {\n                        paneMinRange = this.convertPercentageToPixel(this.paneSettings[i].min);\n                    }\n                    minValue = this.convertPixelToNumber((paneMinRange).toString());\n                    if ((this.orientation === 'Horizontal' ? this.allPanes[i].offsetWidth : this.allPanes[i].offsetHeight) < minValue) {\n                        if (i === paneIndex) {\n                            updatePane = this.allPanes[i];\n                            flexPane = this.allPanes[i + 1];\n                        }\n                        else {\n                            updatePane = this.allPanes[i];\n                            flexPane = this.allPanes[i - 1];\n                        }\n                        var sizeDiff = minValue - (this.orientation === 'Horizontal' ?\n                            this.allPanes[i].offsetWidth : this.allPanes[i].offsetHeight);\n                        var isPercent = updatePane.style.flexBasis.indexOf('%') > -1;\n                        var updatePaneOffset = this.orientation === 'Horizontal' ? updatePane.offsetWidth : updatePane.offsetHeight;\n                        updatePane.style.flexBasis = isPercent ? this.convertPixelToPercentage(updatePaneOffset + sizeDiff) + '%'\n                            : (updatePaneOffset + sizeDiff) + 'px';\n                        var flexPaneOffset = this.orientation === 'Horizontal' ? flexPane.offsetWidth : flexPane.offsetHeight;\n                        flexPane.style.flexBasis = flexPane.style.flexBasis.indexOf('%') > -1 ?\n                            this.convertPixelToPercentage(flexPaneOffset - sizeDiff) + '%' : (flexPaneOffset - sizeDiff) + 'px';\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.wireResizeEvents = function () {\n        document.addEventListener('mousemove', this.onMouseMoveHandler, true);\n        document.addEventListener('mouseup', this.onMouseUpHandler, true);\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        document.addEventListener(touchMoveEvent, this.onTouchMoveHandler, true);\n        document.addEventListener(touchEndEvent, this.onTouchEndHandler, true);\n    };\n    Splitter.prototype.unwireResizeEvents = function () {\n        this.element.ownerDocument.defaultView.removeEventListener('resize', this.onReportWindowSize);\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        document.removeEventListener('mousemove', this.onMouseMoveHandler, true);\n        document.removeEventListener('mouseup', this.onMouseUpHandler, true);\n        document.removeEventListener(touchMoveEvent, this.onTouchMoveHandler, true);\n        document.removeEventListener(touchEndEvent, this.onTouchEndHandler, true);\n    };\n    Splitter.prototype.wireClickEvents = function () {\n        EventHandler.add(this.currentSeparator, 'touchstart click', this.clickHandler, this);\n    };\n    Splitter.prototype.clickHandler = function (e) {\n        if (!e.target.classList.contains(NAVIGATE_ARROW)) {\n            var hoverBars = selectAll('.' + ROOT + ' > .' + SPLIT_BAR + '.' + SPLIT_BAR_HOVER);\n            if (hoverBars.length > 0) {\n                removeClass(hoverBars, SPLIT_BAR_HOVER);\n            }\n            e.target.classList.add(SPLIT_BAR_HOVER);\n        }\n        var icon = e.target;\n        if (icon.classList.contains(ARROW_LEFT) || icon.classList.contains(ARROW_UP)) {\n            this.collapseAction(e);\n        }\n        if (icon.classList.contains(ARROW_RIGHT) || icon.classList.contains(ARROW_DOWN)) {\n            this.expandAction(e);\n        }\n        this.updateSplitterSize();\n    };\n    Splitter.prototype.expandAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var eventArgs = this.beforeAction(e);\n        if (this.expandFlag) {\n            this.trigger('beforeExpand', eventArgs, function (beforeExpandArgs) {\n                if (!beforeExpandArgs.cancel) {\n                    _this.expandPane(e);\n                }\n                var expandEventArgs = _this.afterAction(e);\n                _this.trigger('expanded', expandEventArgs);\n            });\n        }\n        else {\n            this.expandPane(e);\n        }\n    };\n    Splitter.prototype.expandPane = function (e) {\n        this.removeStaticPanes();\n        var collapseCount = this.element.querySelectorAll('.' + COLLAPSE_PANE).length;\n        var flexStatus = (!this.previousPane.classList.contains(COLLAPSE_PANE) &&\n            this.previousPane.classList.contains(STATIC_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n            !this.nextPane.classList.contains(EXPAND_PANE) && this.nextPane.nextElementSibling.classList.contains(PANE) &&\n            !this.nextPane.nextElementSibling.classList.contains(STATIC_PANE) && !(collapseCount === this.allPanes.length - 2));\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        if (!this.previousPane.classList.contains(COLLAPSE_PANE)) {\n            removeClass([this.nextPane], EXPAND_PANE);\n            removeClass([this.previousPane], collapseClass);\n            addClass([this.previousPane], EXPAND_PANE);\n            addClass([this.nextPane], collapseClass);\n            if (this.expandFlag) {\n                this.updatePaneSettings(this.nextPaneIndex, true);\n            }\n        }\n        else {\n            removeClass([this.previousPane], collapseClass);\n            removeClass([this.nextPane], EXPAND_PANE);\n            if (this.expandFlag) {\n                this.updatePaneSettings(this.prevPaneIndex, false);\n            }\n        }\n        this.updateIconsOnExpand(e);\n        this.previousPane.setAttribute('aria-expanded', 'true');\n        this.nextPane.setAttribute('aria-expanded', 'false');\n        this.updateFlexGrow(this.checkStaticPanes());\n        if (flexStatus) {\n            this.previousPane.classList.remove(EXPAND_PANE);\n            this.previousPane.style.flexGrow = '';\n        }\n    };\n    Splitter.prototype.checkStaticPanes = function () {\n        var staticPane = true;\n        for (var i = 0; i < this.allPanes.length; i++) {\n            if (!this.allPanes[i].classList.contains(COLLAPSE_PANE) && staticPane) {\n                if (this.allPanes[i].classList.contains(STATIC_PANE)) {\n                    staticPane = true;\n                }\n                else {\n                    staticPane = false;\n                }\n            }\n        }\n        return staticPane;\n    };\n    Splitter.prototype.updateFlexGrow = function (status) {\n        var collapseCount = 0;\n        for (var j = 0; j < this.element.children.length; j++) {\n            if (this.element.children[j].classList.contains(COLLAPSE_PANE)) {\n                collapseCount = collapseCount + 1;\n            }\n        }\n        var visiblePane = collapseCount === this.allPanes.length - 2;\n        var panes = this.allPanes;\n        for (var i = 0; i < panes.length; i++) {\n            panes[i].style.flexGrow = '';\n            if (status && !this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                this.nextPane.style.flexGrow = '1';\n            }\n            if (visiblePane && this.allPanes[i].classList.contains(COLLAPSE_PANE) && this.paneSettings[i].size &&\n                i !== this.allPanes.length - 1) {\n                panes[i].style.flexGrow = '';\n            }\n            if (panes[i].classList.contains(EXPAND_PANE)) {\n                panes[i].style.flexGrow = '1';\n            }\n            else if (panes[i].classList.contains(COLLAPSE_PANE)) {\n                panes[i].style.flexGrow = '0';\n            }\n        }\n    };\n    Splitter.prototype.hideTargetBarIcon = function (targetBar, targetArrow) {\n        addClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.showTargetBarIcon = function (targetBar, targetArrow) {\n        removeClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnCollapse = function (e) {\n        this.splitterProperty();\n        if (this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE)) {\n            addClass([e.target], HIDE_ICON);\n            if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            this.resizableModel(this.currentBarIndex, false);\n            if (this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n                !this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.hideTargetBarIcon(this.prevBar, this.rightArrow);\n            }\n            if (this.previousPane.previousElementSibling && !this.previousPane.previousElementSibling.classList.contains(COLLAPSE_PANE)) {\n                if (this.previousPane.classList.contains(COLLAPSE_PANE) && this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.showTargetBarIcon(this.prevBar, this.leftArrow);\n                }\n                else if (!this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.leftArrow);\n                }\n            }\n            if (!isNullOrUndefined(this.prevBar)) {\n                this.resizableModel(this.currentBarIndex - 1, false);\n                this.hideTargetBarIcon(this.prevBar, this.arrow);\n            }\n            if (!this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n            }\n        }\n        else if (!this.splitInstance.prevPaneCollapsed && !this.splitInstance.nextPaneExpanded) {\n            if (this.paneSettings[this.currentBarIndex].resizable) {\n                this.resizableModel(this.currentBarIndex, true);\n            }\n            if (!this.splitInstance.nextPaneNextEle.classList.contains(COLLAPSE_PANE) &&\n                this.paneSettings[this.currentBarIndex + 1].resizable) {\n                this.resizableModel(this.currentBarIndex + 1, true);\n            }\n            if (!this.paneSettings[this.currentBarIndex].collapsible) {\n                addClass([e.target], HIDE_ICON);\n            }\n            if (this.previousPane && this.prevPaneIndex === 0 && (this.paneSettings[this.prevPaneIndex].collapsible)) {\n                this.showTargetBarIcon(this.currentSeparator, this.leftArrow);\n            }\n            if (this.nextPane && this.nextPaneIndex === this.allPanes.length - 1 && (this.paneSettings[this.nextPaneIndex].collapsible)) {\n                this.showTargetBarIcon(this.getPrevBar(this.nextPaneIndex), this.rightArrow);\n            }\n            if (!(this.previousPane.classList.contains(COLLAPSE_PANE)) && this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showTargetBarIcon(this.currentSeparator, this.rightArrow);\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                if (this.nextPane.nextElementSibling && (this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) &&\n                    this.paneSettings[this.nextPaneIndex + 1].collapsible) ||\n                    (!this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) &&\n                        this.paneSettings[this.nextPaneIndex].collapsible)) {\n                    this.showTargetBarIcon(this.nextBar, this.leftArrow);\n                }\n                else if (!this.paneSettings[this.splitInstance.nextPaneIndex + 1].collapsible &&\n                    this.paneSettings[this.currentBarIndex]) {\n                    this.hideTargetBarIcon(this.nextBar, this.arrow);\n                }\n            }\n            if (!(this.nextPaneIndex === this.allPanes.length - 1) && this.nextPane.nextElementSibling &&\n                !this.nextPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE)\n                && !this.paneSettings[this.nextPaneIndex + 1].collapsible) {\n                this.hideTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.collapseAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var eventArgs = this.beforeAction(e);\n        if (this.collapseFlag) {\n            this.collapsePane(e);\n        }\n        else {\n            this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n                if (!beforeCollapseArgs.cancel) {\n                    _this.collapsePane(e);\n                    var collapseEventArgs = _this.afterAction(e);\n                    _this.trigger('collapsed', collapseEventArgs);\n                }\n            });\n        }\n    };\n    Splitter.prototype.collapsePane = function (e) {\n        this.removeStaticPanes();\n        var collapseCount = this.element.querySelectorAll('.' + COLLAPSE_PANE).length;\n        var flexStatus = (this.previousPane.classList.contains(STATIC_PANE) &&\n            !this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n            this.nextPane.nextElementSibling.classList.contains(PANE) &&\n            !this.nextPane.nextElementSibling.classList.contains(STATIC_PANE) &&\n            !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) &&\n            !(collapseCount === this.allPanes.length - 2)) || (this.nextPane.classList.contains(COLLAPSE_PANE) &&\n            !this.previousPane.classList.contains(STATIC_PANE) && this.nextPane.classList.contains(STATIC_PANE));\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        if (this.nextPane.classList.contains(COLLAPSE_PANE)) {\n            removeClass([this.previousPane], EXPAND_PANE);\n            removeClass([this.nextPane], collapseClass);\n            if (!this.collapseFlag) {\n                this.updatePaneSettings(this.nextPaneIndex, false);\n            }\n        }\n        else {\n            removeClass([this.previousPane], EXPAND_PANE);\n            removeClass([this.nextPane], collapseClass);\n            addClass([this.nextPane], EXPAND_PANE);\n            addClass([this.previousPane], collapseClass);\n            if (!this.collapseFlag) {\n                this.updatePaneSettings(this.prevPaneIndex, true);\n            }\n        }\n        this.updateIconsOnCollapse(e);\n        this.previousPane.setAttribute('aria-expanded', 'false');\n        this.nextPane.setAttribute('aria-expanded', 'true');\n        this.updateFlexGrow(this.checkStaticPanes());\n        if (flexStatus) {\n            this.nextPane.classList.remove(EXPAND_PANE);\n            this.nextPane.style.flexGrow = '';\n        }\n    };\n    Splitter.prototype.removeStaticPanes = function () {\n        for (var i = 0; i < this.allPanes.length; i++) {\n            if (isNullOrUndefined(this.paneSettings[i].size)) {\n                this.allPanes[i].classList.remove(STATIC_PANE);\n            }\n        }\n    };\n    Splitter.prototype.beforeAction = function (e) {\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.updatePaneSettings = function (index, collapsed) {\n        var paneValues = this.paneSettings;\n        paneValues[index].collapsed = collapsed;\n        this.setProperties({ 'paneSettings': paneValues }, true);\n    };\n    Splitter.prototype.splitterProperty = function () {\n        this.splitInstance = {\n            currentBarIndex: this.currentBarIndex,\n            nextPaneCollapsible: this.nextPane.classList.contains(COLLAPSIBLE),\n            prevPaneCollapsible: this.previousPane.classList.contains(COLLAPSIBLE),\n            prevPaneExpanded: this.previousPane.classList.contains(EXPAND_PANE),\n            nextPaneExpanded: this.nextPane.classList.contains(EXPAND_PANE),\n            nextPaneCollapsed: this.nextPane.classList.contains(COLLAPSE_PANE),\n            prevPaneCollapsed: this.previousPane.classList.contains(COLLAPSE_PANE),\n            nextPaneIndex: this.getNextPaneIndex(),\n            prevPaneIndex: this.getPreviousPaneIndex(),\n            nextPaneNextEle: this.nextPane.nextElementSibling,\n            prevPanePreEle: this.previousPane.previousElementSibling\n        };\n    };\n    Splitter.prototype.showCurrentBarIcon = function () {\n        removeClass([select('.' + this.arrow, this.currentSeparator)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnExpand = function (e) {\n        this.splitterProperty();\n        addClass([e.target], HIDE_ICON);\n        if (!this.splitInstance.prevPaneExpanded && !this.splitInstance.nextPaneCollapsed) {\n            if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            if (this.paneSettings[this.nextPaneIndex].collapsible) {\n                removeClass([e.target], HIDE_ICON);\n            }\n            if (this.paneSettings[this.currentBarIndex].resizable) {\n                this.resizableModel(this.currentBarIndex, true);\n            }\n            if (!isNullOrUndefined(this.prevBar) &&\n                !this.splitInstance.prevPanePreEle.classList.contains(COLLAPSE_PANE)) {\n                if (this.paneSettings[this.currentBarIndex - 1].resizable) {\n                    this.resizableModel(this.currentBarIndex - 1, true);\n                }\n                if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n                if (!this.paneSettings[this.currentBarIndex - 1].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.arrow);\n                    if (this.paneSettings[this.currentBarIndex].collapsible &&\n                        !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                        this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                    }\n                }\n                else if (this.paneSettings[this.currentBarIndex].collapsible &&\n                    !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n            else {\n                if (this.previousPane.previousElementSibling && this.paneSettings[this.prevPaneIndex].collapsible &&\n                    (this.previousPane.previousElementSibling.classList.contains(COLLAPSE_PANE) &&\n                        this.paneSettings[this.prevPaneIndex - 1].collapsible)) {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n                if (!this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n        }\n        else if (this.splitInstance.prevPaneExpanded && this.splitInstance.nextPaneCollapsed) {\n            this.resizableModel(this.currentBarIndex, false);\n            this.resizableModel(this.currentBarIndex + 1, false);\n            if (this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                this.hideTargetBarIcon(this.nextBar, this.arrow);\n            }\n            if (this.nextPane && this.nextPaneIndex === this.allPanes.length - 1 && (!this.paneSettings[this.nextPaneIndex].collapsible &&\n                this.splitInstance.nextPaneCollapsed)) {\n                this.hideTargetBarIcon(this.currentSeparator, this.arrow);\n            }\n            if (!(this.nextPaneIndex === this.allPanes.length - 1) && this.nextPane.nextElementSibling &&\n                this.nextPane.classList.contains(COLLAPSE_PANE) &&\n                !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE)\n                && this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.afterAction = function (e) {\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.currentIndex = function (e) {\n        this.currentBarIndex = this.getOrderIndex(parseInt(e.target.parentElement.style.order, 10), 'splitbar');\n    };\n    Splitter.prototype.getSeparatorIndex = function (target) {\n        var array = [].slice.call(this.allBars);\n        array = this.enableReversePanes ? array.reverse() : array;\n        return array.indexOf(target);\n    };\n    Splitter.prototype.getPrevBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar - 1)];\n        return prevbar;\n    };\n    Splitter.prototype.getNextBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar + 1)];\n        return prevbar;\n    };\n    Splitter.prototype.updateBars = function (index) {\n        this.prevBar = this.getPrevBar(index);\n        this.nextBar = this.getNextBar(index);\n    };\n    Splitter.prototype.splitterDetails = function (e) {\n        if (this.orientation === 'Horizontal') {\n            this.arrow = e.target.classList.contains(ARROW_LEFT) ? ARROW_RIGHT : ARROW_LEFT;\n        }\n        else {\n            this.arrow = e.target.classList.contains(ARROW_UP) ? ARROW_DOWN : ARROW_UP;\n        }\n        this.updateCurrentSeparator(e.target);\n        this.currentIndex(e);\n        this.updateBars(this.currentBarIndex);\n        this.getPaneDetails();\n    };\n    Splitter.prototype.triggerResizing = function (e) {\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        };\n        this.trigger('resizing', eventArgs);\n    };\n    Splitter.prototype.onMouseDown = function (e) {\n        var _this = this;\n        e.preventDefault();\n        var target = e.target;\n        if (target.classList.contains(NAVIGATE_ARROW)) {\n            return;\n        }\n        this.updateCurrentSeparator(target);\n        addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.updateCursorPosition(e, 'previous');\n        this.getPaneDetails();\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        for (var i = 0; i < this.element.querySelectorAll('iframe').length; i++) {\n            this.element.querySelectorAll('iframe')[i].style.pointerEvents = 'none';\n        }\n        this.trigger('resizeStart', eventArgs, function (resizeStartArgs) {\n            if (!resizeStartArgs.cancel) {\n                _this.wireResizeEvents();\n                _this.checkPaneSize(e);\n            }\n        });\n    };\n    Splitter.prototype.updatePaneFlexBasis = function (pane) {\n        var previous;\n        if (pane.style.flexBasis.indexOf('%') > 0) {\n            previous = this.removePercentageUnit(pane.style.flexBasis);\n        }\n        else {\n            if (pane.style.flexBasis !== '') {\n                previous = this.convertPixelToPercentage(this.convertPixelToNumber(pane.style.flexBasis));\n            }\n            else {\n                var offset = (this.orientation === 'Horizontal') ? (pane.offsetWidth) : (pane.offsetHeight);\n                previous = this.convertPixelToPercentage(offset);\n            }\n        }\n        return previous;\n    };\n    Splitter.prototype.removePercentageUnit = function (value) {\n        return parseFloat(value.slice(0, value.indexOf('%')));\n    };\n    Splitter.prototype.convertPercentageToPixel = function (value, targetElement) {\n        var percentage = value.toString();\n        var convertedValue;\n        if (percentage.indexOf('%') > -1) {\n            convertedValue = parseFloat(percentage.slice(0, percentage.indexOf('%')));\n            var offsetValue = void 0;\n            if (!isNullOrUndefined(targetElement)) {\n                offsetValue = this.panesDimensions[this.allPanes.indexOf(targetElement)];\n            }\n            else {\n                offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n            }\n            convertedValue = Math.ceil(offsetValue * (convertedValue / 100));\n        }\n        else {\n            convertedValue = parseInt(percentage, 10);\n        }\n        return convertedValue;\n    };\n    Splitter.prototype.convertPixelToPercentage = function (value) {\n        var offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return (value / offsetValue) * 100;\n    };\n    Splitter.prototype.convertPixelToNumber = function (value) {\n        if (value.indexOf('p') > -1) {\n            return parseFloat(value.slice(0, value.indexOf('p')));\n        }\n        else {\n            return parseFloat(value);\n        }\n    };\n    Splitter.prototype.calcDragPosition = function (rectValue, offsetValue) {\n        var separatorPosition = this.orientation === 'Horizontal' ? (this.currentCoordinates.x - rectValue) :\n            (this.currentCoordinates.y - rectValue);\n        var separator;\n        separator = separatorPosition / offsetValue;\n        separator = (separator > 1) ? 1 : (separator < 0) ? 0 : separator;\n        return separator * offsetValue;\n    };\n    Splitter.prototype.getSeparatorPosition = function (e) {\n        this.updateCursorPosition(e, 'current');\n        var rectBound = (this.orientation === 'Horizontal') ? this.element.getBoundingClientRect().left + window.scrollX :\n            this.element.getBoundingClientRect().top + window.scrollY;\n        var offSet = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return this.calcDragPosition(rectBound, offSet);\n    };\n    Splitter.prototype.getMinMax = function (paneIndex, target, selection) {\n        var defaultVal = selection === 'min' ? 0 : null;\n        // eslint-disable-next-line\n        var paneValue = null;\n        if (selection === 'min') {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n                paneValue = this.paneSettings[paneIndex].min;\n            }\n        }\n        else {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n                paneValue = this.paneSettings[paneIndex].max;\n            }\n        }\n        if (this.paneSettings.length > 0 && !isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(paneValue)) {\n            if (paneValue.indexOf('%') > 0) {\n                paneValue = this.convertPercentageToPixel(paneValue).toString();\n            }\n            return this.convertPixelToNumber(paneValue);\n        }\n        else {\n            return defaultVal;\n        }\n    };\n    Splitter.prototype.getPreviousPaneIndex = function () {\n        var separatorIndex = this.enableReversePanes ? parseInt(this.currentSeparator.style.order, 10) + 1 :\n            parseInt(this.currentSeparator.style.order, 10) - 1;\n        return this.getOrderIndex(separatorIndex, 'pane');\n    };\n    Splitter.prototype.getNextPaneIndex = function () {\n        var separatorIndex = this.enableReversePanes ? parseInt(this.currentSeparator.style.order, 10) - 1 :\n            parseInt(this.currentSeparator.style.order, 10) + 1;\n        return this.getOrderIndex(separatorIndex, 'pane');\n    };\n    Splitter.prototype.getPaneDetails = function () {\n        var prevPane = null;\n        var nextPane = null;\n        this.order = parseInt(this.currentSeparator.style.order, 10);\n        if (this.allPanes.length > 1) {\n            prevPane = this.getPrevPane(this.order);\n            nextPane = this.getNextPane(this.order);\n        }\n        if (prevPane && nextPane) {\n            this.previousPane = prevPane;\n            this.nextPane = nextPane;\n            this.prevPaneIndex = this.getPreviousPaneIndex();\n            this.nextPaneIndex = this.getNextPaneIndex();\n        }\n        else {\n            return;\n        }\n    };\n    Splitter.prototype.getPaneHeight = function (pane) {\n        return ((this.orientation === 'Horizontal') ? pane.offsetWidth.toString() :\n            pane.offsetHeight.toString());\n    };\n    Splitter.prototype.isValidSize = function (paneIndex) {\n        var isValid = false;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(this.paneSettings[paneIndex].size) &&\n            this.paneSettings[paneIndex].size.indexOf('%') > -1) {\n            isValid = true;\n        }\n        return isValid;\n    };\n    Splitter.prototype.getPaneDimensions = function () {\n        this.previousPaneHeightWidth = (this.previousPane.style.flexBasis === '') ? this.getPaneHeight(this.previousPane) :\n            this.previousPane.style.flexBasis;\n        this.nextPaneHeightWidth = (this.nextPane.style.flexBasis === '') ? this.getPaneHeight(this.nextPane) :\n            this.nextPane.style.flexBasis;\n        if (this.isValidSize(this.prevPaneIndex)) {\n            this.previousPaneHeightWidth = this.convertPercentageToPixel(this.previousPaneHeightWidth).toString();\n            this.updatePrePaneInPercentage = true;\n        }\n        if (this.isValidSize(this.nextPaneIndex)) {\n            this.nextPaneHeightWidth = this.convertPercentageToPixel(this.nextPaneHeightWidth).toString();\n            this.updateNextPaneInPercentage = true;\n        }\n        this.prePaneDimenson = this.convertPixelToNumber(this.previousPaneHeightWidth.toString());\n        this.nextPaneDimension = this.convertPixelToNumber(this.nextPaneHeightWidth.toString());\n    };\n    Splitter.prototype.checkCoordinates = function (pageX, pageY) {\n        var coordinatesChanged = true;\n        if ((pageX === this.previousCoordinates.x || pageY === this.previousCoordinates.y)) {\n            coordinatesChanged = false;\n        }\n        return coordinatesChanged;\n    };\n    Splitter.prototype.isCursorMoved = function (e) {\n        var cursorMoved = true;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType)) &&\n            this.getEventType(e.pointerType) === 'mouse') {\n            cursorMoved = this.checkCoordinates(e.pageX, e.pageY);\n        }\n        else {\n            cursorMoved = (Browser.info.name !== 'msie') ?\n                this.checkCoordinates(e.touches[0].pageX, e.touches[0].pageY) :\n                this.checkCoordinates(e.pageX, e.pageY);\n        }\n        return cursorMoved;\n    };\n    Splitter.prototype.getBorder = function () {\n        this.border = 0;\n        var border = this.orientation === 'Horizontal' ? ((this.element.offsetWidth - this.element.clientWidth) / 2) :\n            (this.element.offsetHeight - this.element.clientHeight) / 2;\n        this.border = Browser.info.name !== 'chrome' ? this.border : border;\n    };\n    Splitter.prototype.onMouseMove = function (e) {\n        if (!this.isCursorMoved(e)) {\n            return;\n        }\n        this.getPaneDetails();\n        this.getPaneDimensions();\n        this.triggerResizing(e);\n        var left = this.validateDraggedPosition(this.getSeparatorPosition(e), this.prePaneDimenson, this.nextPaneDimension);\n        var separatorNewPosition;\n        this.getBorder();\n        if (this.orientation === 'Horizontal') {\n            separatorNewPosition = (this.element.getBoundingClientRect().left + left) -\n                this.currentSeparator.getBoundingClientRect().left + this.border;\n        }\n        else {\n            separatorNewPosition = (this.element.getBoundingClientRect().top + left) -\n                this.currentSeparator.getBoundingClientRect().top + this.border;\n        }\n        this.nextPaneHeightWidth =\n            (typeof (this.nextPaneHeightWidth) === 'string' && this.nextPaneHeightWidth.indexOf('p') > -1) ?\n                this.convertPixelToNumber(this.nextPaneHeightWidth) : parseInt(this.nextPaneHeightWidth, 10);\n        this.prevPaneCurrentWidth = separatorNewPosition + this.convertPixelToNumber(this.previousPaneHeightWidth);\n        this.nextPaneCurrentWidth = this.nextPaneHeightWidth - separatorNewPosition;\n        this.validateMinMaxValues();\n        if (this.nextPaneCurrentWidth < 0) {\n            this.nextPaneCurrentWidth = 0;\n        }\n        /* istanbul ignore next */\n        if (this.prevPaneCurrentWidth < 0) {\n            this.prevPaneCurrentWidth = 0;\n        }\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) > this.totalWidth) {\n            if (this.nextPaneCurrentWidth < this.prevPaneCurrentWidth) {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n            else {\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n        }\n        /* istanbul ignore next */\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) < this.totalWidth) {\n            var difference = this.totalWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth));\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + difference;\n        }\n        this.calculateCurrentDimensions();\n        this.addStaticPaneClass();\n        this.previousPane.style.flexBasis = this.prevPaneCurrentWidth;\n        this.nextPane.style.flexBasis = this.nextPaneCurrentWidth;\n        if (!(this.allPanes.length > 2)) {\n            this.updateSplitterSize();\n        }\n    };\n    // eslint-disable-next-line\n    Splitter.prototype.validateMinRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMinRange = null;\n        var paneMinDimensions;\n        var difference = 0;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n            paneMinRange = this.paneSettings[paneIndex].min.toString();\n        }\n        if (!isNullOrUndefined(paneMinRange)) {\n            if (paneMinRange.indexOf('%') > 0) {\n                paneMinRange = this.convertPercentageToPixel(paneMinRange).toString();\n            }\n            paneMinDimensions = this.convertPixelToNumber(paneMinRange);\n            if (paneCurrentWidth < paneMinDimensions) {\n                difference = (paneCurrentWidth - paneMinDimensions) <= 0 ? 0 :\n                    (paneCurrentWidth - paneMinDimensions);\n                this.totalWidth = this.totalWidth - difference;\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMinDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    // eslint-disable-next-line\n    Splitter.prototype.validateMaxRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMaxRange = null;\n        var paneMaxDimensions;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n            paneMaxRange = this.paneSettings[paneIndex].max.toString();\n        }\n        if (!isNullOrUndefined(paneMaxRange)) {\n            if (paneMaxRange.indexOf('%') > 0) {\n                paneMaxRange = this.convertPercentageToPixel(paneMaxRange).toString();\n            }\n            paneMaxDimensions = this.convertPixelToNumber(paneMaxRange);\n            if (paneCurrentWidth > paneMaxDimensions) {\n                this.totalWidth = this.totalWidth - (paneCurrentWidth - paneMaxDimensions);\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMaxDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMinMaxValues = function () {\n        //validate previous pane minimum range\n        this.prevPaneCurrentWidth = this.validateMinRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // Validate next pane minimum range\n        this.nextPaneCurrentWidth = this.validateMinRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n        // validate previous pane maximum range\n        this.prevPaneCurrentWidth = this.validateMaxRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // validate next pane maximum range\n        this.nextPaneCurrentWidth = this.validateMaxRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n    };\n    Splitter.prototype.equatePaneWidths = function () {\n        var difference;\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) > this.totalPercent) {\n            difference = (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) - this.totalPercent;\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - (difference / 2) + '%';\n        }\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) < this.totalPercent) {\n            difference = this.totalPercent - (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth);\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + (difference / 2) + '%';\n        }\n    };\n    Splitter.prototype.calculateCurrentDimensions = function () {\n        if (this.updatePrePaneInPercentage || this.updateNextPaneInPercentage) {\n            this.prevPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.prevPaneCurrentWidth)\n                * 10) / 10));\n            this.nextPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.nextPaneCurrentWidth)\n                * 10) / 10));\n            if (this.prevPaneCurrentWidth === 0) {\n                this.nextPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.nextPaneCurrentWidth === 0) {\n                this.prevPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth !== this.totalPercent) {\n                this.equatePaneWidths();\n            }\n            else {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + '%';\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + '%';\n            }\n            this.prevPaneCurrentWidth = (this.updatePrePaneInPercentage) ? this.prevPaneCurrentWidth :\n                this.convertPercentageToPixel(this.prevPaneCurrentWidth) + 'px';\n            this.nextPaneCurrentWidth = (this.updateNextPaneInPercentage) ? this.nextPaneCurrentWidth :\n                this.convertPercentageToPixel(this.nextPaneCurrentWidth) + 'px';\n            this.updatePrePaneInPercentage = false;\n            this.updateNextPaneInPercentage = false;\n        }\n        else {\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + 'px';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + 'px';\n        }\n    };\n    Splitter.prototype.addStaticPaneClass = function () {\n        if (!this.previousPane.classList.contains(STATIC_PANE)) {\n            this.previousPane.classList.add(STATIC_PANE);\n        }\n        if (!this.nextPane.classList.contains(STATIC_PANE)) {\n            this.nextPane.classList.add(STATIC_PANE);\n        }\n    };\n    Splitter.prototype.validateDraggedPosition = function (draggedPos, prevPaneHeightWidth, nextPaneHeightWidth) {\n        var separatorTopLeft = (this.orientation === 'Horizontal') ? this.currentSeparator.offsetLeft :\n            this.currentSeparator.offsetTop;\n        var prePaneRange = separatorTopLeft - prevPaneHeightWidth;\n        var nextPaneRange = nextPaneHeightWidth + separatorTopLeft;\n        var pane1MinSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'min');\n        var pane2MinSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'min');\n        var pane1MaxSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'max');\n        var pane2MaxSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'max');\n        var validatedSize = draggedPos;\n        if (draggedPos > nextPaneRange - pane2MinSize) {\n            validatedSize = nextPaneRange - pane2MinSize;\n        }\n        else if (draggedPos < prePaneRange + pane1MinSize) {\n            validatedSize = prePaneRange + pane1MinSize;\n        }\n        if (!isNullOrUndefined(pane1MaxSize)) {\n            if (draggedPos > prePaneRange + pane1MaxSize) {\n                validatedSize = prePaneRange + pane1MaxSize;\n            }\n        }\n        else if (!isNullOrUndefined(pane2MaxSize)) {\n            if (draggedPos < nextPaneRange - pane2MaxSize) {\n                validatedSize = nextPaneRange - pane2MaxSize;\n            }\n        }\n        return validatedSize;\n    };\n    Splitter.prototype.onMouseUp = function (e) {\n        removeClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.unwireResizeEvents();\n        var eventArgs = {\n            event: e,\n            element: this.element,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        };\n        for (var i = 0; i < this.element.querySelectorAll('iframe').length; i++) {\n            this.element.querySelectorAll('iframe')[i].style.pointerEvents = 'auto';\n        }\n        this.trigger('resizeStop', eventArgs);\n        if (this.enablePersistence) {\n            var paneValues = this.paneSettings;\n            paneValues[this.getPreviousPaneIndex()].size = this.allPanes[this.getPreviousPaneIndex()].style.flexBasis;\n            paneValues[this.getNextPaneIndex()].size = this.allPanes[this.getNextPaneIndex()].style.flexBasis;\n            this.setProperties({ 'paneSettings': paneValues }, true);\n        }\n    };\n    Splitter.prototype.panesDimension = function (index, child) {\n        var childCount = child.length;\n        var size;\n        parseInt(this.getHeight(this.element), 10);\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].size)) {\n                size = this.paneSettings[index].size;\n                if (index < childCount) {\n                    setStyleAttribute(child[index], { 'flex-basis': size, 'order': index * 2 });\n                    if (index < childCount - 1 && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                    else if (!this.sizeFlag) {\n                        child[index].style.flexBasis = null;\n                    }\n                    if ((index === childCount - 1) && this.sizeFlag && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                }\n            }\n            else {\n                this.sizeFlag = true;\n                setStyleAttribute(child[index], { 'order': index * 2 });\n            }\n        }\n        else {\n            setStyleAttribute(child[index], { 'order': index * 2 });\n        }\n        this.paneOrder.push(index * 2);\n    };\n    Splitter.prototype.setTemplate = function (template, toElement) {\n        toElement.innerHTML = '';\n        template = typeof (template) === 'string' ? this.sanitizeHelper(template) : template;\n        this.templateCompile(toElement, template);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        if (this.isReact) {\n            this.renderReactTemplates();\n        }\n    };\n    // eslint-disable-next-line\n    Splitter.prototype.templateCompile = function (ele, cnt) {\n        // eslint-disable-next-line\n        var tempEle = this.createElement('div');\n        this.compileElement(tempEle, cnt, 'content');\n        if (tempEle.childNodes.length !== 0) {\n            [].slice.call(tempEle.childNodes).forEach(function (childEle) {\n                ele.appendChild(childEle);\n            });\n        }\n    };\n    Splitter.prototype.compileElement = function (ele, val, prop) {\n        // eslint-disable-next-line\n        if (typeof (val) === 'string') {\n            if (val[0] === '.' || val[0] === '#') {\n                var eleVal = document.querySelector(val);\n                if (!isNullOrUndefined(eleVal)) {\n                    this.templateElement.push(eleVal);\n                    if (eleVal.style.display === 'none') {\n                        eleVal.style.removeProperty('display');\n                    }\n                    if (eleVal.getAttribute('style') === '') {\n                        eleVal.removeAttribute('style');\n                    }\n                    ele.appendChild(eleVal);\n                    return;\n                }\n                else {\n                    val = val.trim();\n                }\n            }\n            else {\n                val = val.trim();\n            }\n        }\n        var templateFn;\n        if (!isNullOrUndefined(val.outerHTML)) {\n            templateFn = compile(val.outerHTML);\n        }\n        else {\n            templateFn = compile(val);\n        }\n        var templateFUN;\n        if (!isNullOrUndefined(templateFn)) {\n            templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), true);\n        }\n        if (!isNullOrUndefined(templateFn) && templateFUN && templateFUN.length > 0) {\n            [].slice.call(templateFUN).forEach(function (el) {\n                ele.appendChild(el);\n            });\n        }\n    };\n    Splitter.prototype.paneCollapsible = function (pane, index) {\n        // eslint-disable-next-line\n        this.paneSettings[index].collapsible ? addClass([pane], COLLAPSIBLE) : removeClass([pane], COLLAPSIBLE);\n    };\n    Splitter.prototype.createSplitPane = function (target) {\n        var childCount = target.children.length;\n        for (var i = 0; i < this.paneSettings.length; i++) {\n            if (childCount < this.paneSettings.length) {\n                var childElement = this.createElement('div');\n                this.element.appendChild(childElement);\n                childCount = childCount + 1;\n            }\n        }\n        childCount = target.children.length;\n        var child = [].slice.call(target.children);\n        this.sizeFlag = false;\n        if (childCount > 0) {\n            for (var i = 0; i < childCount; i++) {\n                // To accept only div and span element as pane\n                if (child[i].nodeName === 'DIV' || child[i].nodeName === 'SPAN') {\n                    this.allPanes.push(child[i]);\n                    if (this.orientation === 'Horizontal') {\n                        addClass([child[i]], [PANE, SPLIT_H_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    else {\n                        addClass([child[i]], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i]) && !isNullOrUndefined(this.paneSettings[i].content)) {\n                        this.setTemplate(this.paneSettings[i].content, child[i]);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i]) && this.paneSettings[i].cssClass) {\n                        this.setCssClass(child[i], this.paneSettings[i].cssClass);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i])) {\n                        this.paneCollapsible(child[i], i);\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * expands corresponding pane based on the index is passed.\n     *\n     * @param { number } index - Specifies the index value of the corresponding pane to be expanded at initial rendering of splitter.\n     * @returns {void}\n     */\n    Splitter.prototype.expand = function (index) {\n        this.collapsedOnchange(index);\n        this.updatePaneSettings(index, false);\n    };\n    /**\n     * collapses corresponding pane based on the index is passed.\n     *\n     * @param { number } index - Specifies the index value of the corresponding pane to be collapsed at initial rendering of splitter.\n     * @returns {void}\n     */\n    Splitter.prototype.collapse = function (index) {\n        this.isCollapsed(index);\n        this.updatePaneSettings(index, true);\n    };\n    /**\n     * Removes the control from the DOM and also removes all its related events.\n     *\n     * @returns {void}\n     */\n    Splitter.prototype.destroy = function () {\n        if (!this.isDestroyed) {\n            _super.prototype.destroy.call(this);\n            EventHandler.remove(document, 'touchstart click', this.onDocumentClick);\n            this.element.ownerDocument.defaultView.removeEventListener('resize', this.onReportWindowSize, true);\n            while (this.element.attributes.length > 0) {\n                this.element.removeAttribute(this.element.attributes[0].name);\n            }\n            this.element.innerHTML = this.wrapper.innerHTML;\n            for (var i = 0; i < this.wrapper.attributes.length; i++) {\n                this.element.setAttribute(this.wrapper.attributes[i].name, this.wrapper.attributes[i].value);\n            }\n            if (this.refreshing) {\n                addClass([this.element], ['e-control', 'e-lib', ROOT]);\n                this.allBars = [];\n                this.allPanes = [];\n            }\n            this.restoreElem();\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            if (this.isReact) {\n                this.clearTemplate();\n            }\n        }\n    };\n    Splitter.prototype.restoreElem = function () {\n        if (this.templateElement.length > 0) {\n            for (var i = 0; i < this.templateElement.length; i++) {\n                this.templateElement[i].style.display = 'none';\n                document.body.appendChild(this.templateElement[i]);\n            }\n        }\n    };\n    Splitter.prototype.addPaneClass = function (pane) {\n        // eslint-disable-next-line\n        this.orientation === 'Horizontal' ? addClass([pane], [PANE, SPLIT_H_PANE, SCROLL_PANE]) :\n            addClass([pane], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n        return pane;\n    };\n    Splitter.prototype.removePaneOrders = function (paneClass) {\n        var childNodes = this.element.childNodes;\n        var panes = [];\n        for (var i = 0; childNodes.length < 0; i++) {\n            if (childNodes[i].classList.contains(paneClass)) {\n                panes.push(childNodes[i]);\n            }\n        }\n        for (var i = 0; i < panes.length; i++) {\n            panes[i].style.removeProperty('order');\n        }\n    };\n    Splitter.prototype.setPaneOrder = function () {\n        for (var i = 0; i < this.allPanes.length; i++) {\n            this.panesDimension(i, this.allPanes);\n        }\n    };\n    Splitter.prototype.removeSeparator = function () {\n        for (var i = 0; i < this.allBars.length; i++) {\n            detach(this.allBars[i]);\n        }\n        this.allBars = [];\n    };\n    Splitter.prototype.updatePanes = function () {\n        this.setPaneOrder();\n        this.removeSeparator();\n        this.addSeparator(this.element);\n    };\n    /**\n     * Allows you to add a pane dynamically to the specified index position by passing the pane properties.\n     *\n     * @param { PanePropertiesModel } paneProperties - Specifies the pane’s properties that apply to new pane.\n     * @param { number } index - Specifies the index where the pane will be inserted.\n     * @returns {void}\n     */\n    Splitter.prototype.addPane = function (paneProperties, index) {\n        var newPane = this.createElement('div');\n        newPane = this.addPaneClass(newPane);\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var paneDetails = {\n            size: isNullOrUndefined(paneProperties.size) ? '' : paneProperties.size,\n            min: isNullOrUndefined(paneProperties.min) ? null : paneProperties.min,\n            max: isNullOrUndefined(paneProperties.max) ? null : paneProperties.max,\n            content: isNullOrUndefined(paneProperties.content) ? '' : paneProperties.content,\n            resizable: isNullOrUndefined(paneProperties.resizable) ? true : paneProperties.resizable,\n            collapsible: isNullOrUndefined(paneProperties.collapsible) ? false : paneProperties.collapsible,\n            collapsed: isNullOrUndefined(paneProperties.collapsed) ? false : paneProperties.collapsed,\n            cssClass: isNullOrUndefined(paneProperties.cssClass) ? '' : paneProperties.cssClass\n        };\n        this.paneSettings.splice(index, 0, paneDetails);\n        this.setProperties({ 'paneSettings': this.paneSettings }, true);\n        if (this.orientation === 'Horizontal') {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_H_PANE)[index]);\n            this.removePaneOrders(SPLIT_H_PANE);\n        }\n        else {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_V_PANE)[index]);\n            this.removePaneOrders(SPLIT_V_PANE);\n        }\n        this.allPanes.splice(index, 0, newPane);\n        this.updatePanes();\n        this.setTemplate(this.paneSettings[index].content, newPane);\n        this.setCssClass(this.allPanes[index], paneProperties.cssClass);\n        this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n    };\n    /**\n     * Allows you to remove the specified pane dynamically by passing its index value.\n     *\n     * @param { number } index - Specifies the index value to remove the corresponding pane.\n     * @returns {void}\n     */\n    Splitter.prototype.removePane = function (index) {\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var elementClass = (this.orientation === 'Horizontal') ? SPLIT_H_PANE : SPLIT_V_PANE;\n        if (isNullOrUndefined(this.element.querySelectorAll('.' + elementClass)[index])) {\n            return;\n        }\n        detach(this.element.querySelectorAll('.' + elementClass)[index]);\n        this.allPanes.splice(index, 1);\n        this.removePaneOrders(elementClass);\n        this.updatePanes();\n        this.paneSettings.splice(index, 1);\n        this.setProperties({ 'paneSettings': this.paneSettings }, true);\n        if (this.allPanes.length > 0) {\n            this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n        }\n    };\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"height\", void 0);\n    __decorate([\n        Property(false)\n    ], Splitter.prototype, \"enableReversePanes\", void 0);\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"width\", void 0);\n    __decorate([\n        Property(false)\n    ], Splitter.prototype, \"enablePersistence\", void 0);\n    __decorate([\n        Collection([], PaneProperties)\n    ], Splitter.prototype, \"paneSettings\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Splitter.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('')\n    ], Splitter.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enableHtmlSanitizer\", void 0);\n    __decorate([\n        Property(null)\n    ], Splitter.prototype, \"separatorSize\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeSanitizeHtml\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeCollapse\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeExpand\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"expanded\", void 0);\n    Splitter = __decorate([\n        NotifyPropertyChanges\n    ], Splitter);\n    return Splitter;\n}(Component));\n\n/**\n * splitter modules\n */\n\nvar __extends$1 = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate$1 = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n// constant class definitions\nvar preventSelect = 'e-prevent';\nvar dragging = 'e-dragging';\nvar dragRestrict = 'e-drag-restrict';\nvar drag = 'e-drag';\nvar resize = 'e-resize';\nvar resizeicon = 'e-dl-icon';\nvar responsive = 'e-responsive';\nvar east = 'e-east';\nvar west = 'e-west';\nvar north = 'e-north';\nvar south = 'e-south';\nvar single = 'e-single';\nvar double = 'e-double';\nvar northEast = 'e-north-east';\nvar southEast = 'e-south-east';\nvar northWest = 'e-north-west';\nvar southWest = 'e-south-west';\nvar panel = 'e-panel';\nvar panelContent = 'e-panel-content';\nvar panelContainer = 'e-panel-container';\nvar disable = 'e-disabled';\nvar header = 'e-panel-header';\nvar panelTransition = 'e-panel-transition';\n/**\n * Defines the panel of the DashboardLayout component.\n */\nvar Panel = /** @__PURE__ @class */ (function (_super) {\n    __extends$1(Panel, _super);\n    function Panel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate$1([\n        Property('')\n    ], Panel.prototype, \"id\", void 0);\n    __decorate$1([\n        Property('')\n    ], Panel.prototype, \"cssClass\", void 0);\n    __decorate$1([\n        Property('')\n    ], Panel.prototype, \"header\", void 0);\n    __decorate$1([\n        Property('')\n    ], Panel.prototype, \"content\", void 0);\n    __decorate$1([\n        Property(true)\n    ], Panel.prototype, \"enabled\", void 0);\n    __decorate$1([\n        Property(0)\n    ], Panel.prototype, \"row\", void 0);\n    __decorate$1([\n        Property(0)\n    ], Panel.prototype, \"col\", void 0);\n    __decorate$1([\n        Property(1)\n    ], Panel.prototype, \"sizeX\", void 0);\n    __decorate$1([\n        Property(1)\n    ], Panel.prototype, \"sizeY\", void 0);\n    __decorate$1([\n        Property(1)\n    ], Panel.prototype, \"minSizeY\", void 0);\n    __decorate$1([\n        Property(1)\n    ], Panel.prototype, \"minSizeX\", void 0);\n    __decorate$1([\n        Property(null)\n    ], Panel.prototype, \"maxSizeY\", void 0);\n    __decorate$1([\n        Property(null)\n    ], Panel.prototype, \"maxSizeX\", void 0);\n    __decorate$1([\n        Property(1000)\n    ], Panel.prototype, \"zIndex\", void 0);\n    return Panel;\n}(ChildProperty));\n/**\n * The DashboardLayout is a grid structured layout control, that helps to create a dashboard with panels.\n * Panels hold the UI components or data to be visualized with flexible options like resize, reorder, drag-n-drop, remove and add,\n * that allows users to easily place the panels at a desired position within the grid layout.\n * ```html\n * <div id=\"default-layout\">\n * ```\n * ```typescript\n * <script>\n *   let dashBoardObject : DashboardLayout = new DashboardLayout();\n *   dashBoardObject.appendTo('#default-layout');\n * </script>\n * ```\n */\nvar DashboardLayout = /** @__PURE__ @class */ (function (_super) {\n    __extends$1(DashboardLayout, _super);\n    function DashboardLayout(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.rows = 1;\n        _this.panelID = 0;\n        _this.movePanelCalled = false;\n        _this.resizeCalled = false;\n        _this.mOffX = 0;\n        _this.mOffY = 0;\n        _this.maxTop = 9999;\n        _this.maxRows = 100;\n        _this.mouseX = 0;\n        _this.mouseY = 0;\n        _this.minTop = 0;\n        _this.minLeft = 0;\n        _this.isInlineRendering = false;\n        _this.removeAllCalled = false;\n        // to check whether removePanel is executed in mobile device\n        _this.isPanelRemoved = false;\n        // to maintain sizeY in mobile device\n        _this.panelsSizeY = 0;\n        _this.resizeHeight = false;\n        setValue('mergePersistData', _this.mergePersistPanelData, _this);\n        return _this;\n    }\n    /**\n     * Initialize the event handler\n     *\n     * @private\n     */\n    DashboardLayout.prototype.preRender = function () {\n        this.panelCollection = [];\n        this.sortedArray = [];\n        this.gridPanelCollection = [];\n        this.overlapElement = [];\n        this.overlapElementClone = [];\n        this.overlapSubElementClone = [];\n        this.collisionChecker = {};\n        this.dragCollection = [];\n        this.elementRef = { top: '', left: '', height: '', width: '' };\n        this.dimensions = [];\n        this.allItems = [];\n        this.oldRowCol = {};\n        this.availableClasses = [];\n        this.setOldRowCol();\n        this.calculateCellSize();\n        this.contentTemplateChild = [].slice.call(this.element.children);\n    };\n    DashboardLayout.prototype.setOldRowCol = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (!this.panels[i].id) {\n                this.panelPropertyChange(this.panels[i], { id: 'layout_' + this.panelID.toString() });\n                this.panelID = this.panelID + 1;\n            }\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n    };\n    DashboardLayout.prototype.createPanelElement = function (cssClass, idValue) {\n        var ele = this.createElement('div');\n        if (cssClass && cssClass.length > 0) {\n            addClass([ele], cssClass);\n        }\n        if (idValue) {\n            ele.setAttribute('id', idValue);\n        }\n        return ele;\n    };\n    /**\n     * To Initialize the control rendering.\n     *\n     * @returns void\n     * @private\n     */\n    DashboardLayout.prototype.render = function () {\n        this.initialize();\n        this.isRenderComplete = true;\n        if (this.showGridLines && !this.checkMediaQuery()) {\n            this.initGridLines();\n        }\n        this.updateDragArea();\n        this.renderComplete();\n        this.renderReactTemplates();\n    };\n    DashboardLayout.prototype.initGridLines = function () {\n        this.table = document.createElement('table');\n        var tbody = document.createElement('tbody');\n        this.table.classList.add('e-dashboard-gridline-table');\n        for (var i = 0; i < this.maxRow(); i++) {\n            var tr = document.createElement('tr');\n            for (var j = 0; j < this.columns; j++) {\n                var td = document.createElement('td');\n                td.classList.add('e-dashboard-gridline');\n                this.setAttributes({ value: { row: i.toString(), col: j.toString(), sizeX: '1', sizeY: '1' } }, td);\n                this.setPanelPosition(td, i, j);\n                this.setHeightAndWidth(td, { row: i, col: j, sizeX: 1, sizeY: 1 });\n                tr.appendChild(td);\n            }\n            tbody.appendChild(tr);\n        }\n        this.table.appendChild(tbody);\n        this.element.appendChild(this.table);\n        this.renderReactTemplates();\n    };\n    DashboardLayout.prototype.initialize = function () {\n        this.updateRowHeight();\n        if (this.element.childElementCount > 0 && this.element.querySelectorAll('.e-panel').length > 0) {\n            var panelElements = [];\n            this.setProperties({ panels: [] }, true);\n            this.isInlineRendering = true;\n            for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                panelElements.push((this.element.querySelectorAll('.e-panel')[i]));\n            }\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                if (this.enableRtl) {\n                    addClass([panelElement], 'e-rtl');\n                }\n                this.getInlinePanels(panelElement);\n                this.maxCol();\n                this.maxRow();\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                var panelElement = this.element.querySelector('#' + this.panels[i].id);\n                this.setMinMaxValues(this.panels[i]);\n                if (this.maxColumnValue < this.panels[i].col || this.maxColumnValue < (this.panels[i].col + this.panels[i].sizeX)) {\n                    var colValue = this.maxColumnValue - this.panels[i].sizeX;\n                    this.panelPropertyChange(this.panels[i], { col: colValue < 0 ? 0 : colValue });\n                }\n                this.setXYAttributes(panelElement, this.panels[i]);\n                var panel_1 = this.renderPanels(panelElement, this.panels[i], this.panels[i].id, false);\n                this.panelCollection.push(panel_1);\n                this.setHeightAndWidth(panelElement, this.panels[i]);\n                this.tempObject = this;\n                if (this.mediaQuery && !window.matchMedia('(' + this.mediaQuery + ')').matches) {\n                    this.setPanelPosition(panelElement, this.panels[i].row, this.panels[i].col);\n                    this.mainElement = panelElement;\n                    this.updatePanelLayout(panelElement, this.panels[i]);\n                    this.mainElement = null;\n                }\n                this.setClasses([panelElement]);\n            }\n            this.updateOldRowColumn();\n            if (this.checkMediaQuery()) {\n                this.checkMediaQuerySizing();\n            }\n        }\n        else {\n            this.renderDashBoardCells(this.panels);\n        }\n        if (this.allowDragging && (this.mediaQuery ? !window.matchMedia('(' + this.mediaQuery + ')').matches : true)) {\n            this.enableDraggingContent(this.panelCollection);\n        }\n        this.sortedPanel();\n        this.bindEvents();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkColumnValue = this.maxColumnValue;\n        if (!(this.checkMediaQuery())) {\n            this.panelResponsiveUpdate();\n        }\n        this.setEnableRtl();\n    };\n    DashboardLayout.prototype.checkMediaQuery = function () {\n        return (this.mediaQuery && window.matchMedia('(' + this.mediaQuery + ')').matches);\n    };\n    DashboardLayout.prototype.calculateCellSize = function () {\n        this.cellSize = [];\n        if ((this.checkMediaQuery())) {\n            this.cellSize[1] = this.element.parentElement\n                && ((this.element.parentElement.offsetWidth)) / this.cellAspectRatio;\n        }\n        else {\n            this.cellSize[0] = this.element.parentElement &&\n                ((this.element.parentElement.offsetWidth));\n            this.cellSize[0] = this.element.parentElement\n                && ((this.element.parentElement.offsetWidth - ((this.maxCol() - 1) * this.cellSpacing[0]))\n                    / (this.maxCol()));\n            this.cellSize[1] = this.cellSize[0] / this.cellAspectRatio;\n        }\n    };\n    DashboardLayout.prototype.maxRow = function (recheck) {\n        var maxRow = 1;\n        if (this.rows > 1 && isNullOrUndefined(recheck)) {\n            maxRow = this.rows;\n            return maxRow;\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].sizeY + this.panels[i].row > maxRow) {\n                maxRow = this.panels[i].sizeY + this.panels[i].row;\n            }\n        }\n        if (this.panels.length === 0) {\n            maxRow = this.columns;\n        }\n        return maxRow;\n    };\n    DashboardLayout.prototype.maxCol = function () {\n        var maxCol = 1;\n        maxCol = this.columns;\n        this.maxColumnValue = maxCol;\n        return maxCol;\n    };\n    DashboardLayout.prototype.updateOldRowColumn = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            var id = this.panels[i].id;\n            if (document.getElementById(id)) {\n                var row = parseInt(document.getElementById(id).getAttribute('data-row'), 10);\n                var col = parseInt(document.getElementById(id).getAttribute('data-col'), 10);\n                this.oldRowCol[this.panels[i].id] = { row: row, col: col };\n            }\n            else {\n                continue;\n            }\n        }\n    };\n    DashboardLayout.prototype.createSubElement = function (cssClass, idValue, className) {\n        var element = this.createElement('div');\n        if (className) {\n            addClass([element], [className]);\n        }\n        if (cssClass && cssClass.length > 0) {\n            addClass([element], cssClass);\n        }\n        if (idValue) {\n            element.setAttribute('id', idValue);\n        }\n        return element;\n    };\n    // eslint-disable-next-line\n    DashboardLayout.prototype.templateParser = function (template) {\n        if (template) {\n            try {\n                if (document.querySelectorAll(template).length) {\n                    return compile(document.querySelector(template).innerHTML.trim());\n                }\n            }\n            catch (error) {\n                var sanitizedValue = SanitizeHtmlHelper.sanitize(template);\n                return compile((this.enableHtmlSanitizer && typeof (template) === 'string') ? sanitizedValue : template);\n            }\n        }\n        return undefined;\n    };\n    DashboardLayout.prototype.renderTemplate = function (content, appendElement, type, isStringTemplate, prop) {\n        // eslint-disable-next-line\n        var templateFn = this.templateParser(content);\n        var templateElements = [];\n        if ((content[0] === '.' || content[0] === '#') &&\n            document.querySelector(content).tagName !== 'SCRIPT') {\n            var eleVal = document.querySelector(content);\n            if (!isNullOrUndefined(eleVal)) {\n                if (eleVal.style.display === 'none') {\n                    eleVal.style.removeProperty('display');\n                }\n                if (eleVal.getAttribute('style') === '') {\n                    eleVal.removeAttribute('style');\n                }\n                appendElement.appendChild(eleVal);\n                return;\n            }\n            else {\n                content = content.trim();\n            }\n        }\n        else {\n            // eslint-disable-next-line\n            var compilerFn = templateFn({}, this, prop, type, isStringTemplate, null, appendElement);\n            if (compilerFn) {\n                for (var _i = 0, compilerFn_1 = compilerFn; _i < compilerFn_1.length; _i++) {\n                    var item = compilerFn_1[_i];\n                    templateElements.push(item);\n                }\n                append([].slice.call(templateElements), appendElement);\n            }\n        }\n    };\n    DashboardLayout.prototype.renderPanels = function (cellElement, panelModel, panelId, isStringTemplate) {\n        addClass([cellElement], [panel, panelTransition]);\n        var cssClass = panelModel.cssClass ? panelModel.cssClass.split(' ') : null;\n        this.panelContent = cellElement.querySelector('.e-panel-container') ?\n            cellElement.querySelector('.e-panel-container') :\n            this.createSubElement(cssClass, cellElement.id + '_content', panelContainer);\n        cellElement.appendChild(this.panelContent);\n        if (!panelModel.enabled) {\n            this.disablePanel(cellElement);\n        }\n        if (panelModel.header) {\n            var headerTemplateElement = cellElement.querySelector('.e-panel-header') ?\n                cellElement.querySelector('.e-panel-header') : this.createSubElement([], cellElement.id + 'template', '');\n            addClass([headerTemplateElement], [header]);\n            if (!cellElement.querySelector('.e-panel-header')) {\n                var id = this.element.id + 'HeaderTemplate' + panelId;\n                this.renderTemplate(panelModel.header, headerTemplateElement, id, isStringTemplate, 'header');\n                this.panelContent.appendChild(headerTemplateElement);\n                this.renderReactTemplates();\n            }\n        }\n        if (panelModel.content) {\n            var cssClass_1 = panelModel.cssClass ? panelModel.cssClass.split(' ') : null;\n            this.panelBody = cellElement.querySelector('.e-panel-content') ? cellElement.querySelector('.e-panel-content') :\n                this.createSubElement(cssClass_1, cellElement.id + '_body', panelContent);\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyleAttribute(this.panelBody, { height: contentHeightValue });\n            if (!cellElement.querySelector('.e-panel-content')) {\n                var id = this.element.id + 'ContentTemplate' + panelId;\n                this.renderTemplate(panelModel.content, this.panelBody, id, isStringTemplate, 'content');\n                this.panelContent.appendChild(this.panelBody);\n                this.renderReactTemplates();\n            }\n        }\n        return cellElement;\n    };\n    DashboardLayout.prototype.disablePanel = function (panelElement) {\n        addClass([panelElement], [disable]);\n    };\n    DashboardLayout.prototype.getInlinePanels = function (panelElement) {\n        var model = {\n            sizeX: panelElement.hasAttribute('data-sizex') ? parseInt(panelElement.getAttribute('data-sizex'), 10) : 1,\n            sizeY: panelElement.hasAttribute('data-sizey') ? parseInt(panelElement.getAttribute('data-sizey'), 10) : 1,\n            minSizeX: panelElement.hasAttribute('data-minsizex') ? parseInt(panelElement.getAttribute('data-minsizex'), 10) : 1,\n            minSizeY: panelElement.hasAttribute('data-minsizey') ? parseInt(panelElement.getAttribute('data-minsizey'), 10) : 1,\n            maxSizeX: panelElement.hasAttribute('data-maxsizex') ? parseInt(panelElement.getAttribute('data-maxsizex'), 10) : null,\n            maxSizeY: panelElement.hasAttribute('data-maxsizey') ? parseInt(panelElement.getAttribute('data-maxsizey'), 10) : null,\n            row: panelElement.hasAttribute('data-row') ? parseInt(panelElement.getAttribute('data-row'), 10) : 0,\n            col: panelElement.hasAttribute('data-col') ? parseInt(panelElement.getAttribute('data-col'), 10) : 0,\n            id: panelElement.getAttribute('id'),\n            zIndex: panelElement.hasAttribute('data-zindex') ? parseInt(panelElement.getAttribute('data-zIndex'), 10) : 1000,\n            header: panelElement.querySelector('.e-panel-header') && '.e-panel-header',\n            content: panelElement.querySelector('.e-panel-content') && '.e-panel-content'\n        };\n        if (!model.id) {\n            model.id = 'layout_' + this.panelID.toString();\n            panelElement.setAttribute('id', model.id);\n            this.panelID = this.panelID + 1;\n        }\n        if (isUndefined(model.enabled)) {\n            model.enabled = true;\n        }\n        panelElement.style.zIndex = '' + model.zIndex;\n        // eslint-disable-next-line\n        var panelProp = new Panel(this, 'panels', model, true);\n        this.panels.push(panelProp);\n    };\n    DashboardLayout.prototype.resizeEvents = function () {\n        if (this.allowResizing) {\n            var panelElements = this.element.querySelectorAll('.e-panel .e-panel-container .e-resize');\n            for (var i = 0; i < panelElements.length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(panelElements[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'msie') {\n                    EventHandler.add(panelElements[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n    };\n    DashboardLayout.prototype.bindEvents = function () {\n        this.refreshListener = this.refresh.bind(this);\n        // eslint-disable-next-line\n        EventHandler.add(window, 'resize', this.refreshListener);\n        this.resizeEvents();\n    };\n    DashboardLayout.prototype.downResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.pageX;\n        this.lastMouseY = e.pageY;\n        var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n        var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n        if (!this.isMouseMoveBound) {\n            EventHandler.add(document, moveEventName, this.moveResizeHandler, this);\n            this.isMouseMoveBound = true;\n        }\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, upEventName, this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    DashboardLayout.prototype.downHandler = function (e) {\n        this.resizeCalled = false;\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var el = closest((e.currentTarget), '.e-panel');\n        var args = { event: e, element: el, isInteracted: true };\n        this.trigger('resizeStart', args);\n        this.downTarget = e.currentTarget;\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        addClass([this.element], [preventSelect]);\n        this.element.appendChild(this.shadowEle);\n        this.renderReactTemplates();\n        this.elementX = parseFloat(el.style.left);\n        this.elementY = parseFloat(el.style.top);\n        this.elementWidth = el.offsetWidth;\n        this.elementHeight = el.offsetHeight;\n        this.originalWidth = this.getCellInstance(el.id).sizeX;\n        this.originalHeight = this.getCellInstance(el.id).sizeY;\n        this.previousRow = this.getCellInstance(el.id).row;\n    };\n    DashboardLayout.prototype.touchDownResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.changedTouches[0].pageX;\n        this.lastMouseY = e.changedTouches[0].pageY;\n        if (!this.isMouseMoveBound) {\n            EventHandler.add(document, 'touchmove', this.touchMoveResizeHandler, this);\n            this.isMouseMoveBound = true;\n        }\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, 'touchend', this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    DashboardLayout.prototype.getCellSize = function () {\n        return [this.cellSize[0], this.cellSize[1]];\n    };\n    DashboardLayout.prototype.updateMaxTopLeft = function (e) {\n        this.moveTarget = this.downTarget;\n        var el = closest((this.moveTarget), '.e-panel');\n        var args = { event: e, element: el, isInteracted: true };\n        this.trigger('resize', args);\n    };\n    DashboardLayout.prototype.updateResizeElement = function (el) {\n        this.maxLeft = this.element.offsetWidth - 1;\n        this.maxTop = this.cellSize[1] * this.maxRows - 1;\n        removeClass([el], 'e-panel-transition');\n        addClass([el], [dragging]);\n        var handleArray = [east, west, north, south, southEast, northEast, northWest, southWest];\n        for (var i = 0; i < this.moveTarget.classList.length; i++) {\n            if (handleArray.indexOf(this.moveTarget.classList[i]) !== -1) {\n                this.handleClass = (this.moveTarget.classList[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.moveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.pageX || this.lastMouseY === e.pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.pageX;\n        this.mouseY = e.pageY;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseY = this.mouseY;\n        this.lastMouseX = this.mouseX;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    DashboardLayout.prototype.touchMoveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.changedTouches[0].pageX || this.lastMouseY === e.changedTouches[0].pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.changedTouches[0].pageX;\n        this.mouseY = e.changedTouches[0].pageY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseX = this.mouseX;\n        this.lastMouseY = this.mouseY;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    /* istanbul ignore next */\n    DashboardLayout.prototype.resizingPanel = function (el, panelModel, currentX, currentY) {\n        var oldSizeX = this.getCellInstance(el.id).sizeX;\n        var oldSizeY = this.getCellInstance(el.id).sizeY;\n        var dY = currentY;\n        var dX = currentX;\n        if (this.handleClass.indexOf('north') >= 0) {\n            if (this.elementHeight - dY < this.getMinHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMinHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight - dY > this.getMaxHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMaxHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + dY < this.minTop) {\n                currentY = this.minTop - this.elementY;\n                this.mOffY = dY - currentY;\n            }\n            this.elementY += currentY;\n            this.elementHeight -= currentY;\n        }\n        if (this.handleClass.indexOf('south') >= 0) {\n            if (this.elementHeight + dY < this.getMinHeight(panelModel)) {\n                currentY = this.getMinHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight + dY > this.getMaxHeight(panelModel)) {\n                currentY = this.getMaxHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            this.elementHeight += currentY;\n        }\n        if (this.handleClass.indexOf('west') >= 0) {\n            if (this.elementWidth - dX < this.getMinWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMinWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth - dX > this.getMaxWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMaxWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + dX < this.minLeft) {\n                currentX = this.minLeft - this.elementX;\n                this.mOffX = dX - currentX;\n            }\n            this.elementX += currentX;\n            this.elementWidth -= currentX;\n        }\n        if (this.handleClass.indexOf('east') >= 0) {\n            if (this.elementWidth + dX < this.getMinWidth(panelModel)) {\n                currentX = this.getMinWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth + dX > this.getMaxWidth(panelModel)) {\n                currentX = this.getMaxWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            this.elementWidth += currentX;\n        }\n        el.style.top = this.elementY + 'px';\n        el.style.left = this.elementX + 'px';\n        el.style.width = this.elementWidth + 'px';\n        el.style.height = this.elementHeight + 'px';\n        var item = this.getResizeRowColumn(panelModel);\n        if (item.col + item.sizeX > this.columns) {\n            this.panelPropertyChange(item, { sizeX: item.sizeX - 1 });\n        }\n        this.shadowEle.style.top = ((item.row * this.getCellSize()[1] + (item.row * this.cellSpacing[1]))) + 'px';\n        this.shadowEle.style.left = ((item.col * this.getCellSize()[0]) + ((item.col) * this.cellSpacing[0])) + 'px';\n        this.shadowEle.style.height = ((item.sizeY * (this.getCellSize()[1] + (this.cellSpacing[1])))) + 'px';\n        this.shadowEle.style.width = ((item.sizeX * (this.getCellSize()[0] + (this.cellSpacing[0])))) + 'px';\n        if (oldSizeX !== item.sizeX || oldSizeY !== item.sizeY) {\n            oldSizeX = item.sizeX;\n            oldSizeY = item.sizeY;\n            var model = this.getCellInstance(el.id);\n            var value = {\n                attributes: {\n                    row: model.row.toString(),\n                    col: model.col.toString(),\n                    sizeX: model.sizeX.toString(),\n                    sizeY: model.sizeY.toString()\n                }\n            };\n            this.setAttributes(value, el);\n            this.mainElement = el;\n            this.updatePanelLayout(el, this.getCellInstance(el.id));\n            this.updateOldRowColumn();\n            this.sortedPanel();\n        }\n    };\n    DashboardLayout.prototype.upResizeHandler = function (e) {\n        if (isNullOrUndefined(this.downTarget)) {\n            return;\n        }\n        this.upTarget = this.downTarget;\n        var el = closest((this.upTarget), '.e-panel');\n        var args = { event: e, element: el, isInteracted: true };\n        if (el) {\n            addClass([el], 'e-panel-transition');\n            var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n            var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n            EventHandler.remove(document, moveEventName, this.moveResizeHandler);\n            EventHandler.remove(document, upEventName, this.upResizeHandler);\n            if (Browser.info.name !== 'msie') {\n                EventHandler.remove(document, 'touchmove', this.touchMoveResizeHandler);\n                EventHandler.remove(document, 'touchend', this.upResizeHandler);\n            }\n            this.isMouseUpBound = false;\n            this.isMouseMoveBound = false;\n            if (this.shadowEle) {\n                detach(this.shadowEle);\n            }\n            this.shadowEle = null;\n            var panelModel = this.getCellInstance(el.getAttribute('id'));\n            this.setPanelPosition(el, panelModel.row, panelModel.col);\n            this.setHeightAndWidth(el, panelModel);\n        }\n        removeClass([el], [dragging]);\n        this.trigger('resizeStop', args);\n        this.resizeCalled = false;\n        this.lastMouseX = this.lastMouseY = undefined;\n        this.mOffX = this.mOffY = 0;\n        this.mainElement = null;\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkForChanges(true);\n    };\n    DashboardLayout.prototype.getResizeRowColumn = function (item) {\n        var isChanged = false;\n        var col = item.col;\n        if (['e-west', 'e-south-west'].indexOf(this.handleClass) !== -1) {\n            col = this.pixelsToColumns(this.elementX, false);\n        }\n        var row = item.row;\n        if (['e-north'].indexOf(this.handleClass) !== -1) {\n            row = this.pixelsToRows(this.elementY, false);\n            if (this.previousRow !== row) {\n                this.previousRow = row;\n                isChanged = true;\n            }\n        }\n        var sizeX = item.sizeX;\n        if (['e-north', 'e-south'].indexOf(this.handleClass) === -1) {\n            sizeX = this.pixelsToColumns(this.elementWidth - (sizeX) * this.cellSpacing[1], true);\n        }\n        var sizeY = item.sizeY;\n        if (['e-east', 'e-west'].indexOf(this.handleClass) === -1) {\n            if (this.handleClass === 'e-north' ? isChanged : true) {\n                sizeY = this.pixelsToRows(this.elementHeight - (sizeY) * this.cellSpacing[0], true);\n            }\n        }\n        if (item.col + item.sizeX > this.columns) {\n            item.sizeX = item.sizeX - 1;\n        }\n        var canOccupy = row > -1 && col > -1 && sizeX + col <= this.maxCol() && sizeY + row <= this.maxRow();\n        if (canOccupy && (this.collisions(row, col, sizeX, sizeY, this.getPanelBase(item.id)).length === 0)\n            || this.allowPushing !== false) {\n            this.panelPropertyChange(item, { row: row, col: col, sizeX: sizeX, sizeY: sizeY });\n        }\n        return item;\n    };\n    DashboardLayout.prototype.pixelsToColumns = function (pixels, isCeil) {\n        var curColWidth = this.cellSize[0];\n        if (isCeil) {\n            return Math.ceil(pixels / curColWidth);\n        }\n        else {\n            return Math.floor(pixels / curColWidth);\n        }\n    };\n    DashboardLayout.prototype.pixelsToRows = function (pixels, isCeil) {\n        if (isCeil) {\n            return Math.round(pixels / this.cellSize[1]);\n        }\n        else {\n            return Math.round(pixels / (this.cellSize[1] + this.cellSpacing[0]));\n        }\n    };\n    DashboardLayout.prototype.getMinWidth = function (item) {\n        return (((item.minSizeX) * this.getCellSize()[0]) + (item.minSizeX - 1) * this.cellSpacing[0]);\n    };\n    DashboardLayout.prototype.getMaxWidth = function (item) {\n        return (item.maxSizeX) * this.getCellSize()[0];\n    };\n    DashboardLayout.prototype.getMinHeight = function (item) {\n        return (((item.minSizeY) * this.getCellSize()[1]) + (item.minSizeY - 1) * this.cellSpacing[1]);\n    };\n    DashboardLayout.prototype.getMaxHeight = function (item) {\n        return (item.maxSizeY) * this.getCellSize()[1];\n    };\n    DashboardLayout.prototype.sortedPanel = function () {\n        this.sortedArray = [];\n        for (var i = 0, l = this.panelCollection.length; i < l; ++i) {\n            this.sortItem(this.panelCollection[i]);\n        }\n    };\n    DashboardLayout.prototype.moveItemsUpwards = function () {\n        if (this.allowFloating === false) {\n            return;\n        }\n        for (var rowIndex = 0, l = this.sortedArray.length; rowIndex < l; ++rowIndex) {\n            var columns = this.sortedArray[rowIndex];\n            if (!columns) {\n                continue;\n            }\n            for (var colIndex = 0, len = columns.length; colIndex < len; ++colIndex) {\n                var item = columns[colIndex];\n                if (item) {\n                    this.moveItemUpwards(item);\n                }\n            }\n        }\n        this.updateGridLines();\n    };\n    DashboardLayout.prototype.moveItemUpwards = function (item) {\n        if (this.allowFloating === false || item === this.mainElement) {\n            return;\n        }\n        var colIndex = this.getCellInstance(item.id).col;\n        var sizeY = parseInt(item.getAttribute('data-sizeY'), 10);\n        var sizeX = parseInt(item.getAttribute('data-sizeX'), 10);\n        var availableRow = null;\n        var availableColumn = null;\n        var rowIndex = parseInt(item.getAttribute('data-row'), 10) - 1;\n        while (rowIndex > -1) {\n            var items = this.collisions(rowIndex, colIndex, sizeX, sizeY, item);\n            if (items.length !== 0) {\n                break;\n            }\n            availableRow = rowIndex;\n            availableColumn = colIndex;\n            --rowIndex;\n        }\n        if (availableRow !== null) {\n            this.sortItem(item, availableRow, availableColumn);\n        }\n    };\n    DashboardLayout.prototype.sortItem = function (item, rowValue, columnValue) {\n        this.overlapElement = [];\n        var column = parseInt(item.getAttribute('data-col'), 10);\n        var row = parseInt(item.getAttribute('data-row'), 10);\n        if (!this.sortedArray[row]) {\n            this.sortedArray[row] = [];\n        }\n        this.sortedArray[row][column] = item;\n        if (item !== undefined && rowValue !== undefined && columnValue !== undefined) {\n            if (this.oldRowCol[item.id] !== undefined && this.oldRowCol[item.id].row !== null &&\n                typeof this.oldRowCol[item.id].col !== 'undefined') {\n                {\n                    var oldRow = this.sortedArray[this.oldRowCol[item.id].row];\n                    if (this.oldRowCol[item.id] && oldRow[this.oldRowCol[item.id].col] === item) {\n                        delete oldRow[this.oldRowCol[item.id].col];\n                        this.updateOldRowColumn();\n                        this.sortedPanel();\n                    }\n                }\n            }\n            this.oldRowCol[item.id].row = rowValue;\n            this.oldRowCol[item.id].row = columnValue;\n            if (!this.sortedArray[row]) {\n                this.sortedArray[row] = [];\n            }\n            this.sortedArray[row][column] = item;\n            if (this.allItems.indexOf(item) === -1) {\n                this.allItems.push(item);\n            }\n            this.panelPropertyChange(this.getCellInstance(item.id), { row: rowValue, col: columnValue });\n            var panelModel = this.getCellInstance(item.id);\n            this.setAttributes({ value: { col: panelModel.col.toString(), row: panelModel.row.toString() } }, item);\n            this.updateLayout(item, this.getCellInstance(item.id));\n        }\n    };\n    DashboardLayout.prototype.updateLayout = function (element, panelModel) {\n        this.setPanelPosition(element, panelModel.row, panelModel.col);\n        this.setHeightAndWidth(element, panelModel);\n        this.updateRowHeight();\n        this.sortedPanel();\n    };\n    DashboardLayout.prototype.refresh = function () {\n        this.panelsSizeY = 0;\n        this.updateDragArea();\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n        }\n        else {\n            if (this.element.classList.contains(responsive)) {\n                removeClass([this.element], [responsive]);\n                var internalPanels = this.element.querySelectorAll(((this.element.id) ? '#' + this.element.id + ' > ' : '') + '.e-panel');\n                for (var i = 0; i < internalPanels.length; i++) {\n                    var ele = internalPanels[i];\n                    var cellInstance = this.getCellInstance(ele.id);\n                    var row = parseInt(ele.getAttribute('data-row'), 10);\n                    var col = parseInt(ele.getAttribute('data-col'), 10);\n                    this.panelPropertyChange(cellInstance, { row: row, col: col });\n                    this.setHeightAndWidth(ele, this.getCellInstance(ele.id));\n                    this.setPanelPosition(ele, row, col);\n                    this.updateRowHeight();\n                }\n            }\n            this.panelResponsiveUpdate();\n            this.updateGridLines();\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        this.resizeEvents();\n        this.checkDragging(this.dragCollection);\n    };\n    DashboardLayout.prototype.updateGridLines = function () {\n        if (this.element.querySelector('.e-dashboard-gridline-table')) {\n            if (this.table) {\n                detach(this.table);\n            }\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkDragging = function (dragCollection) {\n        if (this.checkMediaQuery() || !this.allowDragging) {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n        }\n        else {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n            this.enableDraggingContent(this.panelCollection);\n        }\n    };\n    DashboardLayout.prototype.sortPanels = function () {\n        var model = [];\n        var _loop_1 = function (row) {\n            var _loop_2 = function (col) {\n                this_1.panels.filter(function (panel) {\n                    if (panel.row === row && panel.col === col) {\n                        model.push(panel);\n                    }\n                });\n            };\n            for (var col = 0; col < this_1.columns; col++) {\n                _loop_2(col);\n            }\n        };\n        var this_1 = this;\n        for (var row = 0; row <= this.rows; row++) {\n            _loop_1(row);\n        }\n        return model;\n    };\n    DashboardLayout.prototype.checkMediaQuerySizing = function () {\n        addClass([this.element], [responsive]);\n        var updatedPanel;\n        if (this.isPanelRemoved && this.panels) {\n            updatedPanel = this.panels;\n        }\n        else {\n            updatedPanel = this.sortPanels();\n        }\n        this.updatedRows = updatedPanel.length;\n        for (var i = 0; i < updatedPanel.length; i++) {\n            var panelElement = document.getElementById(updatedPanel[i].id);\n            // eslint-disable-next-line\n            var updatedHeight = void 0;\n            if (panelElement) {\n                setStyleAttribute(panelElement, { 'width': '100%' });\n                panelElement.style.height = ' ' + ((this.element.parentElement\n                    && this.element.parentElement.offsetWidth / this.cellAspectRatio) * updatedPanel[i].sizeY) + 'px';\n                if (updatedPanel[i].sizeY > 1) {\n                    updatedHeight = ((this.element.parentElement\n                        && this.element.parentElement.offsetWidth / this.cellAspectRatio) * updatedPanel[i].sizeY) +\n                        // eslint-disable-next-line radix\n                        parseInt((Math.round(updatedPanel[i].sizeY / 2) * this.cellSpacing[1]).toString(), 0);\n                    panelElement.style.height = '' + updatedHeight + 'px';\n                }\n                this.resizeHeight = true;\n                this.panelPropertyChange(updatedPanel[i], { row: i, col: 0 });\n                this.setPanelPosition(panelElement, updatedPanel[i].row, updatedPanel[i].col);\n                this.panelsSizeY = this.panelsSizeY + updatedPanel[i].sizeY;\n                this.setClasses(this.panelCollection);\n                this.checkDragging(this.dragCollection);\n                this.removeResizeClasses(this.panelCollection);\n            }\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.panelResponsiveUpdate = function () {\n        this.element.classList.add('e-responsive');\n        this.calculateCellSize();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            this.setPanelPosition(document.getElementById(this.panels[i].id), this.panels[i].row, this.panels[i].col);\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.updateRowHeight = function () {\n        this.getRowColumn();\n        this.setHeightWidth();\n    };\n    DashboardLayout.prototype.setHeightWidth = function () {\n        var heightValue;\n        var widthValue;\n        if (this.checkMediaQuery()) {\n            var entirePanelsY = 0;\n            for (var i = 0; i < this.panels.length; i++) {\n                if (this.panels[i].sizeY) {\n                    entirePanelsY += this.panels[i].sizeY;\n                }\n            }\n            heightValue = ((entirePanelsY) *\n                (this.element.parentElement && ((this.element.parentElement.offsetWidth)) / this.cellAspectRatio) +\n                (entirePanelsY - 1) * this.cellSpacing[1]) + 'px';\n        }\n        else {\n            heightValue = ((this.maxRow()) *\n                (this.cellSize[0] / this.cellAspectRatio) + (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        setStyleAttribute(this.element, { 'height': heightValue });\n        // eslint-disable-next-line prefer-const\n        widthValue = window.getComputedStyle(this.element).width;\n        setStyleAttribute(this.element, { 'width': widthValue });\n    };\n    DashboardLayout.prototype.setHeightAndWidth = function (panelElement, panelModel) {\n        setStyleAttribute(panelElement, { 'height': formatUnit(this.setXYDimensions(panelModel)[0]) });\n        setStyleAttribute(panelElement, { 'width': formatUnit(this.setXYDimensions(panelModel)[1]) });\n    };\n    DashboardLayout.prototype.renderCell = function (panel, isStringTemplate, index) {\n        var cellElement;\n        this.dimensions = this.setXYDimensions(panel);\n        if (isUndefined(panel.enabled)) {\n            panel.enabled = true;\n        }\n        if (this.contentTemplateChild.length > 0 && !isNullOrUndefined(index)) {\n            cellElement = this.contentTemplateChild[index];\n            if (panel.cssClass) {\n                addClass([cellElement], [panel.cssClass]);\n            }\n            if (panel.id) {\n                cellElement.setAttribute('id', panel.id);\n            }\n        }\n        else {\n            cellElement = this.createPanelElement(panel.cssClass ? panel.cssClass.split(' ') : null, panel.id);\n        }\n        cellElement.style.zIndex = '' + panel.zIndex;\n        this.element.appendChild(cellElement);\n        this.renderReactTemplates();\n        var dashBoardCell = this.renderPanels(cellElement, panel, panel.id, isStringTemplate);\n        this.panelCollection.push(dashBoardCell);\n        this.setXYAttributes(cellElement, panel);\n        this.setHeightAndWidth(cellElement, panel);\n        return cellElement;\n    };\n    DashboardLayout.prototype.setPanelPosition = function (cellElement, row, col) {\n        if (!cellElement) {\n            return;\n        }\n        if (this.checkMediaQuery()) {\n            this.calculateCellSize();\n        }\n        var heightValue = this.getCellSize()[1];\n        var widthValue = this.getCellSize()[0];\n        var left = col === 0 ? 0 : (((col) * ((widthValue) + this.cellSpacing[0])));\n        var top = row === 0 ? 0 : (((row) * ((heightValue) + this.cellSpacing[1])));\n        if (this.checkMediaQuery()) {\n            top = row === 0 ? 0 : ((this.panelsSizeY) * ((heightValue) + this.cellSpacing[1]));\n        }\n        setStyleAttribute(cellElement, { 'left': left + 'px', 'top': top + 'px' });\n    };\n    DashboardLayout.prototype.getRowColumn = function () {\n        this.rows = null;\n        if (this.element.querySelectorAll('.e-panel').length > 0 && !this.updatedRows) {\n            var panelElements = this.element.querySelectorAll('.e-panel');\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                var rowValue = parseInt(panelElement.getAttribute('data-row'), 10);\n                var xValue = parseInt(panelElement.getAttribute('data-sizeY'), 10);\n                this.rows = Math.max(this.rows, (rowValue + xValue));\n            }\n        }\n        else {\n            if (this.updatedRows) {\n                this.rows = this.updatedRows;\n                this.updatedRows = null;\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                this.rows = Math.max(this.rows, this.panels[i].row);\n            }\n        }\n    };\n    DashboardLayout.prototype.setMinMaxValues = function (panel) {\n        if (!panel.sizeX || panel.sizeX < panel.minSizeX) {\n            this.panelPropertyChange(panel, { sizeX: panel.minSizeX });\n        }\n        else if ((panel.maxSizeX && panel.sizeX > panel.maxSizeX)) {\n            this.panelPropertyChange(panel, { sizeX: panel.maxSizeX });\n        }\n        else if (panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: this.columns });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX });\n        }\n        if (!panel.sizeY || panel.sizeY < panel.minSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.minSizeY });\n        }\n        else if (panel.maxSizeY && panel.sizeY > panel.maxSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.maxSizeY });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeY: panel.sizeY });\n        }\n    };\n    DashboardLayout.prototype.checkMinMaxValues = function (panel) {\n        if (panel.col + panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX + (this.columns - (panel.col + panel.sizeX)) });\n        }\n    };\n    DashboardLayout.prototype.panelPropertyChange = function (panel, value) {\n        // eslint-disable-next-line\n        panel.setProperties(value, true);\n    };\n    DashboardLayout.prototype.renderDashBoardCells = function (cells) {\n        if (this.element.querySelectorAll('.e-panel').length > 0 || this.panels.length > 0) {\n            for (var j = 0; j < cells.length; j++) {\n                this.gridPanelCollection.push(cells[j]);\n                this.setMinMaxValues(cells[j]);\n                if (this.maxColumnValue < cells[j].col || this.maxColumnValue < (cells[j].col + cells[j].sizeX)) {\n                    this.panelPropertyChange(cells[j], { col: this.maxColumnValue - cells[j].sizeX });\n                }\n                var cell = this.renderCell(cells[j], false, j);\n                if (this.enableRtl) {\n                    addClass([cell], 'e-rtl');\n                }\n                this.element.appendChild(cell);\n                this.renderReactTemplates();\n                if (this.checkMediaQuery() && j === cells.length - 1) {\n                    this.checkMediaQuerySizing();\n                }\n                else {\n                    this.setPanelPosition(cell, cells[j].row, cells[j].col);\n                    this.mainElement = cell;\n                    this.updatePanelLayout(cell, cells[j]);\n                    this.mainElement = null;\n                }\n            }\n        }\n        this.setClasses(this.panelCollection);\n    };\n    DashboardLayout.prototype.collisions = function (row, col, sizeX, sizeY, ignore) {\n        var items = [];\n        if (!sizeX || !sizeY) {\n            sizeX = sizeY = 1;\n        }\n        if (ignore && !(ignore instanceof Array)) {\n            ignore = [ignore];\n        }\n        var item;\n        for (var h = 0; h < sizeY; ++h) {\n            for (var w = 0; w < sizeX; ++w) {\n                item = this.getPanel(row + h, col + w, ignore);\n                if (item && (!ignore || ignore.indexOf(document.getElementById(item.id)) === -1) &&\n                    items.indexOf(document.getElementById(item.id)) === -1) {\n                    items.push(document.getElementById(item.id));\n                }\n            }\n        }\n        return items;\n    };\n    DashboardLayout.prototype.rightWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var columns = [];\n        var spacedColumns = [];\n        rowElements.forEach(function (element) {\n            var columnValue = parseInt(element.getAttribute('data-col'), 10);\n            var sizeXValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col < _this.columns && columnValue >= col) {\n                if (sizeXValue > 1) {\n                    for (var i = columnValue; i < columnValue + sizeXValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(columnValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = col + 1; i <= this.columns - 1; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele);\n        occupiedValues.forEach(function (colValue) {\n            if (colValue > col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement);\n        eleOccupiedValues.forEach(function (col) {\n            if (col > parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, previous) { return next - previous; });\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.getOccupiedColumns = function (element) {\n        var occupiedItems = [];\n        var sizeX = parseInt(element.getAttribute('data-sizeX'), 10);\n        var col = parseInt(element.getAttribute('data-col'), 10);\n        for (var i = col; (i < col + sizeX && i <= this.columns); i++) {\n            occupiedItems.push(i);\n        }\n        return occupiedItems;\n    };\n    DashboardLayout.prototype.leftWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var spacedColumns = [];\n        var columns = [];\n        rowElements.forEach(function (element) {\n            var colValue = parseInt(element.getAttribute('data-col'), 10);\n            var xValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col <= _this.columns && colValue <= col) {\n                if (xValue > 1) {\n                    for (var i = colValue; i < colValue + xValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(colValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var j = 0; j <= col; j++) {\n                if (columns.indexOf(j) === -1 && j !== col) {\n                    if (spacedColumns.indexOf(j) === -1) {\n                        spacedColumns.push(j);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele);\n        occupiedValues.forEach(function (colValue) {\n            if (colValue < col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement);\n        eleOccupiedValues.forEach(function (col) {\n            if (col < parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, prev) { return next - prev; });\n        spacedColumns = spacedColumns.reverse();\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.adjustmentAvailable = function (row, col, sizeY, sizeX, ele) {\n        this.leftAdjustable = undefined;\n        this.rightAdjustable = undefined;\n        var isAdjustable = false;\n        var rightSpacing;\n        var rowElement = [];\n        this.topAdjustable = undefined;\n        var eleSizeX = parseInt(ele.getAttribute('data-sizeX'), 10);\n        var eleCol = parseInt(ele.getAttribute('data-col'), 10);\n        rowElement = this.getRowElements(this.collisions(row, 0, this.columns, sizeY, []));\n        if (rowElement.indexOf(ele) === -1) {\n            rowElement.push(ele);\n        }\n        var leftSpacing = this.leftWardsSpaceChecking(rowElement, col, ele);\n        if (leftSpacing.length > 0) {\n            this.leftAdjustable = this.isLeftAdjustable(leftSpacing, ele, row, col, sizeX, sizeY);\n            if (this.spacedColumnValue !== eleCol - this.getCellInstance(this.checkingElement.id).sizeX) {\n                this.leftAdjustable = false;\n            }\n            if (this.leftAdjustable) {\n                this.rightAdjustable = false;\n            }\n            else {\n                this.leftAdjustable = false;\n                rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n                this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n                if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                    this.rightAdjustable = false;\n                }\n                if (!this.rightAdjustable) {\n                    this.rightAdjustable = false;\n                }\n            }\n        }\n        else {\n            rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n            this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n            if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                this.rightAdjustable = false;\n            }\n            if (this.rightAdjustable) {\n                this.leftAdjustable = false;\n            }\n        }\n        if (!this.rightAdjustable && !this.leftAdjustable && row > 0) {\n            var endRow = this.getCellInstance(ele.id).row;\n            var topCheck = false;\n            if (this.startRow !== endRow) {\n                topCheck = true;\n            }\n            for (var rowValue = row; rowValue >= 0; rowValue--) {\n                var element = (this.getCellInstance(ele.id).sizeY > 1 && topCheck) ? this.checkingElement : ele;\n                if ((rowValue !== endRow) && (rowValue === endRow - sizeY) &&\n                    this.collisions(rowValue, col, sizeX, sizeY, element).length === 0) {\n                    topCheck = false;\n                    this.topAdjustable = true;\n                    this.spacedRowValue = isNullOrUndefined(this.spacedRowValue) ? rowValue : this.spacedRowValue;\n                    this.spacedColumnValue = col;\n                }\n            }\n        }\n        if (this.rightAdjustable || this.leftAdjustable || this.topAdjustable) {\n            isAdjustable = true;\n            if (isNullOrUndefined(this.spacedRowValue)) {\n                this.spacedRowValue = row;\n            }\n        }\n        return isAdjustable;\n    };\n    DashboardLayout.prototype.isXSpacingAvailable = function (spacing, sizeX) {\n        var isSpaceAvailable = false;\n        var subSpacingColumns = [];\n        for (var i = 0; i < spacing.length; i++) {\n            if (spacing[i + 1] - spacing[i] === 1 || spacing[i + 1] - spacing[i] === -1) {\n                subSpacingColumns.push(spacing[i]);\n                if (sizeX === 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                }\n                if (i === spacing.length - 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                    if (subSpacingColumns.length > sizeX) {\n                        subSpacingColumns.splice(-1);\n                    }\n                }\n                if (subSpacingColumns.length === sizeX) {\n                    isSpaceAvailable = true;\n                    this.spacedColumnValue = subSpacingColumns.sort(function (next, previous) { return next - previous; })[0];\n                    if (this.spacedColumnValue < 0) {\n                        this.spacedColumnValue = 1;\n                    }\n                    return isSpaceAvailable;\n                }\n            }\n            else {\n                subSpacingColumns = [];\n                continue;\n            }\n        }\n        return isSpaceAvailable;\n    };\n    DashboardLayout.prototype.getRowElements = function (base) {\n        var rowElements = [];\n        for (var i = 0; i < base.length; i++) {\n            rowElements.push(base[i]);\n        }\n        return rowElements;\n    };\n    DashboardLayout.prototype.isLeftAdjustable = function (spaces, ele, row, col, sizeX, sizeY) {\n        var isLeftAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spaces.length > 0) {\n            this.spacedColumnValue = spaces[0];\n            isLeftAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isLeftAdjudtable = this.isXSpacingAvailable(spaces, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spaces.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spaces.length; i++) {\n                        var collisionValue = this.collisions(row, spaces[i], sizeX, sizeY, this.checkingElement);\n                        if (collisionValue.length === 0) {\n                            this.spacedColumnValue = spaces[i];\n                            isLeftAdjudtable = true;\n                            return isLeftAdjudtable;\n                        }\n                        else {\n                            isLeftAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isLeftAdjudtable = this.replacable(spaces, sizeX, row, sizeY, ele);\n            }\n        }\n        return isLeftAdjudtable;\n    };\n    DashboardLayout.prototype.isRightAdjustable = function (spacing, ele, row, col, sizeX, sizeY) {\n        var isRightAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spacing.length > 0) {\n            this.spacedColumnValue = spacing[0];\n            isRightAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isRightAdjudtable = this.isXSpacingAvailable(spacing, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spacing.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spacing.length; i++) {\n                        var collisionValue = this.collisions(row, spacing[i], sizeX, sizeY, this.checkingElement);\n                        for (var collision = 0; collision < collisionValue.length; collision++) {\n                            if (parseInt(ele.getAttribute('data-col'), 10) !== spacing[i]) {\n                                collisionValue.splice(collisionValue.indexOf(collisionValue[collision]), 1);\n                            }\n                        }\n                        if (collisionValue.length === 0) {\n                            isRightAdjudtable = true;\n                            this.spacedColumnValue = spacing[i];\n                            return isRightAdjudtable;\n                        }\n                        else {\n                            isRightAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isRightAdjudtable = this.replacable(spacing, sizeX, row, sizeY, ele);\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.replacable = function (spacing, sizeX, row, sizeY, ele) {\n        var isRightAdjudtable;\n        var updatedCollision = [];\n        for (var j = 0; j < spacing.length; j++) {\n            var xAdjust = this.isXSpacingAvailable(spacing, sizeX);\n            if (xAdjust) {\n                var exclusions = [];\n                exclusions.push(this.checkingElement);\n                exclusions.push(ele);\n                if (updatedCollision.length === 0) {\n                    isRightAdjudtable = true;\n                    // eslint-disable-next-line no-self-assign\n                    this.spacedColumnValue = this.spacedColumnValue;\n                    return isRightAdjudtable;\n                }\n                else {\n                    isRightAdjudtable = false;\n                }\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.sortCollisionItems = function (collisionItems) {\n        var updatedCollision = [];\n        var rowElements;\n        var _loop_3 = function (row) {\n            rowElements = [];\n            collisionItems.forEach(function (element) {\n                if (element && element.getAttribute('data-row') === row.toString()) {\n                    rowElements.push(element);\n                }\n            });\n            var _loop_4 = function (column) {\n                rowElements.forEach(function (item) {\n                    if (item && item.getAttribute('data-col') === column.toString()) {\n                        updatedCollision.push(item);\n                    }\n                });\n            };\n            for (var column = this_2.columns - 1; column >= 0; column--) {\n                _loop_4(column);\n            }\n        };\n        var this_2 = this;\n        for (var row = this.rows - 1; row >= 0; row--) {\n            _loop_3(row);\n        }\n        return updatedCollision;\n    };\n    DashboardLayout.prototype.updatedModels = function (collisionItems, panelModel, ele) {\n        var _this = this;\n        var removeableElement = [];\n        if (!this.mainElement) {\n            this.sortedPanel();\n        }\n        collisionItems.forEach(function (element) {\n            _this.checkingElement = element;\n            var model = _this.getCellInstance(element.id);\n            var adjust = !_this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, ele);\n            if (model.sizeX > 1 && adjust) {\n                for (var rowValue = model.row; rowValue < panelModel.row + panelModel.sizeY; rowValue++) {\n                    var collisions = _this.collisions(rowValue, model.col, model.sizeX, model.sizeY, element);\n                    collisions.forEach(function (item) {\n                        if (collisionItems.indexOf(item) >= 0 && removeableElement.indexOf(item) === -1) {\n                            removeableElement.push(item);\n                        }\n                    });\n                }\n            }\n        });\n        removeableElement.forEach(function (item) {\n            if (removeableElement.indexOf(item) >= 0) {\n                collisionItems.splice(collisionItems.indexOf(item), 1);\n            }\n        });\n        return collisionItems;\n    };\n    DashboardLayout.prototype.resetLayout = function (model) {\n        var collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        if (!this.mainElement || this.addPanelCalled || this.resizeCalled || this.movePanelCalled) {\n            return collisions;\n        }\n        if (this.mainElement && this.oldRowCol !== this.cloneObject) {\n            for (var i = 0; i < this.panels.length; i++) {\n                var element = document.getElementById(this.panels[i].id);\n                if (element === this.mainElement) {\n                    continue;\n                }\n                var rowValue = this.cloneObject[element.id].row;\n                var colValue = this.cloneObject[element.id].col;\n                this.setPanelPosition(element, rowValue, colValue);\n                this.panelPropertyChange(this.getCellInstance(element.id), { row: rowValue, col: colValue });\n                this.setAttributes({ value: { col: colValue.toString(), row: rowValue.toString() } }, element);\n                this.updateOldRowColumn();\n            }\n        }\n        this.sortedArray = this.cloneArray;\n        collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        this.sortedPanel();\n        this.updateOldRowColumn();\n        if (this.checkCollision && this.checkCollision.length > 0 && collisions.indexOf(this.checkCollision[0]) === -1 &&\n            this.cloneObject[this.checkCollision[0].id].row === model.row) {\n            collisions.push(this.checkCollision[0]);\n        }\n        return collisions;\n    };\n    DashboardLayout.prototype.swapAvailability = function (collisions, element) {\n        var available = true;\n        var eleModel = this.getCellInstance(element.id);\n        for (var count = 0; count < collisions.length; count++) {\n            var collideModel = this.getCellInstance(collisions[count].id);\n            for (var i = 1; i < eleModel.sizeY; i++) {\n                var excludeEle = [];\n                excludeEle.push(element);\n                excludeEle.push(collisions[count]);\n                var collision = this.collisions(eleModel.row + i, collideModel.col, collideModel.sizeX, collideModel.sizeY, excludeEle);\n                if (collision.length > 0) {\n                    available = false;\n                    return false;\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return available;\n    };\n    DashboardLayout.prototype.checkForSwapping = function (collisions, element) {\n        if (!this.mainElement || collisions.length === 0) {\n            return false;\n        }\n        var direction;\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        if (!this.swapAvailability(collisions, element)) {\n            return false;\n        }\n        var isSwappable = false;\n        for (var count1 = 0; count1 < collisions.length; count1++) {\n            if (collisions.length >= 1 && this.cloneObject[this.mainElement.id] && this.cloneObject[this.mainElement.id].row === this.oldRowCol[this.mainElement.id].row) {\n                return false;\n            }\n        }\n        var updatedRow = direction === 0 ?\n            this.getCellInstance(this.mainElement.id).row + this.getCellInstance(this.mainElement.id).sizeY\n            : this.startRow;\n        for (var count = 0; count < collisions.length; count++) {\n            var collideInstance = this.getCellInstance(collisions[count].id);\n            var elementinstance = this.getCellInstance(element.id);\n            var ignore = [];\n            if (collideInstance.sizeY === 1 && ignore.indexOf(collisions[count]) === -1) {\n                ignore.push(collisions[count]);\n            }\n            else if (collideInstance.sizeY > 1 && ignore.indexOf(collisions[count]) === -1) {\n                if (direction === 1 && elementinstance.row === (this.cloneObject[collideInstance.id].row + collideInstance.sizeY - 1)) {\n                    ignore.push(collisions[count]);\n                }\n                else if (direction === 0 && elementinstance.row === (this.cloneObject[collideInstance.id].row)) {\n                    ignore.push(collisions[count]);\n                }\n                else {\n                    return false;\n                }\n            }\n            if (collideInstance.sizeY <= elementinstance.sizeY && ignore.indexOf(collisions[count]) === -1) {\n                ignore.push(collisions[count]);\n            }\n            ignore.push(this.mainElement);\n            var swapCollision = this.collisions(updatedRow, collideInstance.col, collideInstance.sizeX, collideInstance.sizeY, ignore);\n            if (swapCollision.length > 0) {\n                isSwappable = false;\n                return isSwappable;\n            }\n            else {\n                if (count === collisions.length - 1) {\n                    isSwappable = true;\n                }\n                continue;\n            }\n        }\n        return isSwappable;\n    };\n    DashboardLayout.prototype.swapItems = function (collisions, element, panelModel) {\n        var _this = this;\n        var direction;\n        var swappedElements = [];\n        swappedElements.push(element);\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        var collisionItemsRow = direction === 0 ? eleSwapRow + panelModel.sizeY : this.startRow;\n        if (!this.movePanelCalled) {\n            var collisionInstance = this.getCellInstance(collisions[0].id);\n            this.panelPropertyChange(panelModel, { row: direction === 0 ? eleSwapRow : collisionItemsRow + collisionInstance.sizeY });\n        }\n        for (var count = 0; count < collisions.length; count++) {\n            swappedElements.push(collisions[count]);\n            this.setPanelPosition(collisions[count], collisionItemsRow, (this.getCellInstance(collisions[count].id)).col);\n            this.panelPropertyChange(this.getCellInstance(collisions[count].id), { row: collisionItemsRow });\n            collisions[count].setAttribute('data-row', collisionItemsRow.toString());\n        }\n        element.setAttribute('data-row', panelModel.row.toString());\n        this.setPanelPosition(this.shadowEle, panelModel.row, panelModel.col);\n        for (var i = 0; i < this.panels.length; i++) {\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n        this.startRow = panelModel.row;\n        this.updateOldRowColumn();\n        swappedElements.forEach(function (item) {\n            _this.cloneObject[item.id] = _this.oldRowCol[item.id];\n            var itemModel = _this.getCellInstance(item.id);\n            for (var i = 0; i < _this.sortedArray.length; i++) {\n                if (!_this.sortedArray[i]) {\n                    continue;\n                }\n                for (var j = 0; j < _this.sortedArray[i].length; j++) {\n                    if (_this.sortedArray[i][j] === item) {\n                        _this.sortedArray[i][j] = undefined;\n                    }\n                }\n            }\n            if (!_this.sortedArray[itemModel.row]) {\n                _this.sortedArray[itemModel.row] = [];\n            }\n            _this.sortedArray[itemModel.row][itemModel.col] = item;\n            _this.cloneArray = _this.sortedArray;\n        });\n    };\n    DashboardLayout.prototype.updatePanelLayout = function (element, panelModel) {\n        this.collisionChecker = {};\n        var initialModel = [];\n        var checkForAdjustment;\n        var collisionModels = [];\n        var swappingAvailable;\n        if (this.mainElement && this.isRenderComplete) {\n            initialModel = this.resetLayout(panelModel);\n        }\n        else {\n            initialModel = this.collisions(panelModel.row, panelModel.col, panelModel.sizeX, panelModel.sizeY, element);\n        }\n        if (initialModel.length > 0) {\n            initialModel = this.sortCollisionItems(initialModel);\n            initialModel = this.updatedModels(initialModel, panelModel, element);\n            swappingAvailable = !isNullOrUndefined(this.startRow) ? this.checkForSwapping(initialModel, element) : false;\n            if (swappingAvailable) {\n                this.swapItems(initialModel, element, panelModel);\n            }\n            else {\n                for (var i = 0; i < initialModel.length; i++) {\n                    var model = this.getCellInstance(initialModel[i].id);\n                    this.checkingElement = initialModel[i];\n                    this.spacedRowValue = null;\n                    this.spacedColumnValue = null;\n                    checkForAdjustment = this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, element);\n                    if (checkForAdjustment && !isNullOrUndefined(this.spacedColumnValue)) {\n                        this.setPanelPosition(initialModel[i], this.spacedRowValue, this.spacedColumnValue);\n                        this.oldRowCol[(initialModel[i].id)] = { row: this.spacedRowValue, col: this.spacedColumnValue };\n                        var value = {\n                            attributes: {\n                                row: this.spacedRowValue.toString(),\n                                col: this.spacedColumnValue.toString()\n                            }\n                        };\n                        this.setAttributes(value, initialModel[i]);\n                        this.panelPropertyChange(model, { col: this.spacedColumnValue, row: this.spacedRowValue });\n                        // updated the panel model array as inTopAdjustable case with floating enabled instead of dragging and extra row\n                        if (this.topAdjustable && this.allowFloating) {\n                            this.updatePanels();\n                            this.updateCloneArrayObject();\n                        }\n                        this.spacedRowValue = null;\n                        if (i < initialModel.length) {\n                            continue;\n                        }\n                    }\n                    else {\n                        collisionModels.push(initialModel[i]);\n                    }\n                }\n            }\n        }\n        if (collisionModels.length > 0) {\n            // eslint-disable-next-line\n            var proxy_1 = this;\n            collisionModels.forEach(function (item1) {\n                if (proxy_1.overlapElement.indexOf(item1) === -1) {\n                    proxy_1.overlapElement.push(item1);\n                }\n            });\n            if (this.overlapElement && this.overlapElement.indexOf(element) !== -1) {\n                this.overlapElement.splice(this.overlapElement.indexOf(element), 1);\n            }\n            if (collisionModels.length > 0) {\n                this.updateRowColumn(panelModel.row, this.overlapElement, element);\n                this.checkForCompletePushing();\n            }\n        }\n        if (!this.isSubValue) {\n            this.sortedPanel();\n        }\n        this.updateRowHeight();\n        this.updateGridLines();\n    };\n    DashboardLayout.prototype.checkForCompletePushing = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.collisionChecker[this.panels[i].id] && this.collisionChecker[this.panels[i].id] !== null) {\n                this.overlapElement = [this.collisionChecker[this.panels[i].id].ele];\n                var key = this.panels[i].id;\n                this.updateRowColumn(this.collisionChecker[key].row, this.overlapElement, this.collisionChecker[key].srcEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.updateCollisionChecked = function (item) {\n        for (var count = 0; count < Object.keys(this.collisionChecker).length; count++) {\n            this.collisionChecker[item.id] = null;\n        }\n    };\n    DashboardLayout.prototype.updateRowColumn = function (row, ele, srcEle) {\n        if (!srcEle) {\n            return;\n        }\n        var eleSizeY = parseInt(srcEle.getAttribute('data-sizeY'), 10);\n        var eleRow = parseInt(srcEle.getAttribute('data-row'), 10);\n        this.overlapElementClone = this.overlapElement && !this.shouldRestrict ? this.overlapElement : this.overlapElement;\n        for (var i = 0; i < this.overlapElementClone.length; i++) {\n            if (this.overlapElementClone.length === 0) {\n                return;\n            }\n            for (var i_1 = 0; i_1 < this.overlapElementClone.length; i_1++) {\n                this.collisionChecker[this.overlapElementClone[i_1].id] = {\n                    ele: this.overlapElementClone[i_1],\n                    row: row,\n                    srcEle: srcEle\n                };\n            }\n            var updatedRow = eleRow + eleSizeY;\n            var collisionY = parseInt(this.overlapElementClone[i].getAttribute('data-sizeY'), 10);\n            var collisionCol = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n            var collisionX = parseInt(this.overlapElementClone[i].getAttribute('data-sizeX'), 10);\n            var colValue = void 0;\n            var collisionModels = void 0;\n            if (this.overlapSubElementClone.indexOf(srcEle) === -1) {\n                this.overlapSubElementClone.push(srcEle);\n            }\n            if (this.overlapSubElementClone.indexOf(this.overlapElementClone[i]) === -1) {\n                this.overlapSubElementClone.push(this.overlapElementClone[i]);\n            }\n            if (collisionY > 1 || collisionX > 1) {\n                var overlapElementModel = this.getCellInstance(this.overlapElementClone[i].id);\n                colValue = overlapElementModel.col;\n                var ele_1 = document.getElementById(overlapElementModel.id);\n                for (var k = overlapElementModel.row; k < eleRow + eleSizeY; k++) {\n                    this.isSubValue = true;\n                    this.panelPropertyChange(overlapElementModel, { row: overlapElementModel.row + 1 });\n                    ele_1.setAttribute('data-row', overlapElementModel.row.toString());\n                    this.setPanelPosition(ele_1, overlapElementModel.row, colValue);\n                    this.updateCollisionChecked(ele_1);\n                    this.oldRowCol[(ele_1.id)] = { row: overlapElementModel.row, col: colValue };\n                    var panelModel = this.getCellInstance(ele_1.id);\n                    this.panelPropertyChange(panelModel, { col: colValue, row: overlapElementModel.row });\n                    var eleRow_1 = parseInt(ele_1.getAttribute('data-row'), 10);\n                    var eleCol = parseInt(ele_1.getAttribute('data-col'), 10);\n                    var sizeX = parseInt(ele_1.getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(ele_1.getAttribute('data-sizeY'), 10);\n                    var excludeElements = [];\n                    excludeElements.push(ele_1);\n                    excludeElements.push(srcEle);\n                    collisionModels = this.collisions(eleRow_1, eleCol, sizeX, sizeY, excludeElements);\n                    if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                        collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                    }\n                    this.collisionPanel(collisionModels, eleCol, eleRow_1, ele_1);\n                }\n                this.isSubValue = false;\n            }\n            else {\n                if (this.addPanelCalled) {\n                    this.addPanelCalled = false;\n                }\n                this.overlapElementClone[i].setAttribute('data-row', updatedRow.toString());\n                var excludeEle = [];\n                excludeEle.push(this.overlapElementClone[i]);\n                excludeEle.push(srcEle);\n                collisionModels = this.collisions(updatedRow, collisionCol, collisionX, collisionY, excludeEle);\n                if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                    collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                }\n                colValue = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n                this.setPanelPosition(this.overlapElementClone[i], updatedRow, colValue);\n                this.updateCollisionChecked(this.overlapElementClone[i]);\n                this.oldRowCol[(this.overlapElementClone[i].id)] = { row: updatedRow, col: colValue };\n                var panelModel = this.getCellInstance(this.overlapElementClone[i].id);\n                this.panelPropertyChange(panelModel, { col: colValue, row: updatedRow });\n                this.collisionPanel(collisionModels, colValue, updatedRow, this.overlapElementClone[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.collisionPanel = function (collisionModels, colValue, updatedRow, clone) {\n        var panelModel = this.getCellInstance(clone.id);\n        this.panelPropertyChange(panelModel, { row: updatedRow, col: colValue });\n        if (collisionModels.length > 0) {\n            // eslint-disable-next-line\n            var proxy_2 = this;\n            this.overlapElement = [];\n            this.shouldRestrict = true;\n            collisionModels.forEach(function (item1) {\n                proxy_2.overlapElement.push(item1);\n            });\n            var overlapElementRow1 = parseInt(clone.getAttribute('data-row'), 10);\n            for (var m = 0; m < this.overlapElement.length; m++) {\n                this.updateRowColumn(overlapElementRow1, this.overlapElement, clone);\n            }\n            this.shouldRestrict = false;\n        }\n        else {\n            if (!this.addPanelCalled) {\n                this.sortedPanel();\n            }\n            if (this.overlapSubElementClone.length > 0) {\n                var _loop_5 = function (p) {\n                    var rowVal = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-row'), 10);\n                    var colValue_1 = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-col'), 10);\n                    var sizeX = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeY'), 10);\n                    var collisionModels1 = this_3.collisions(rowVal, colValue_1, sizeX, sizeY, this_3.overlapSubElementClone);\n                    if (this_3.mainElement && collisionModels1.indexOf(this_3.mainElement) !== -1) {\n                        collisionModels1.splice(collisionModels1.indexOf(this_3.mainElement), 1);\n                    }\n                    // eslint-disable-next-line\n                    var proxy = this_3;\n                    collisionModels1.forEach(function (item1) {\n                        proxy.overlapElement.push(item1);\n                    });\n                    if (collisionModels1.length > 0) {\n                        this_3.updateRowColumn(rowVal, this_3.overlapElement, this_3.overlapSubElementClone[p]);\n                    }\n                };\n                var this_3 = this;\n                for (var p = 0; p < this.overlapSubElementClone.length; p++) {\n                    _loop_5(p);\n                }\n            }\n            this.overlapSubElementClone = [];\n        }\n    };\n    DashboardLayout.prototype.removeResizeClasses = function (panelElements) {\n        for (var i = 0; i < panelElements.length; i++) {\n            var element = panelElements[i];\n            var resizerElements = element.querySelectorAll('.e-resize');\n            for (var i_2 = 0; i_2 < resizerElements.length; i_2++) {\n                detach(resizerElements[i_2]);\n            }\n        }\n    };\n    DashboardLayout.prototype.ensureDrag = function () {\n        this.checkDragging(this.dragCollection);\n        var dragPanels = this.element.querySelectorAll('.' + drag);\n        removeClass(dragPanels, [drag]);\n        this.setClasses(this.panelCollection);\n    };\n    DashboardLayout.prototype.setClasses = function (panelCollection) {\n        for (var i = 0; i < panelCollection.length; i++) {\n            var element = panelCollection[i];\n            var containerEle = panelCollection[i].querySelector('.e-panel-container');\n            if (this.allowDragging) {\n                if (this.draggableHandle && element.querySelectorAll(this.draggableHandle)[0]) {\n                    addClass([element.querySelectorAll(this.draggableHandle)[0]], [drag]);\n                }\n                else {\n                    addClass([element], [drag]);\n                }\n            }\n            if (this.allowResizing &&\n                this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n                this.setResizingClass(element, containerEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.setResizingClass = function (ele, container) {\n        this.availableClasses = this.resizableHandles;\n        if (!ele.querySelector(\".e-resize\")) {\n            for (var j = 0; j < this.availableClasses.length; j++) {\n                var spanEle = this.createElement('span');\n                var addClassValue = void 0;\n                container.appendChild(spanEle);\n                if (this.availableClasses[j] === 'e-east' || this.availableClasses[j] === 'e-west' ||\n                    this.availableClasses[j] === 'e-north' || this.availableClasses[j] === 'e-south') {\n                    addClassValue = single;\n                }\n                else {\n                    addClassValue = double;\n                }\n                addClass([spanEle], [addClassValue, this.availableClasses[j], resize, resizeicon]);\n            }\n        }\n    };\n    DashboardLayout.prototype.setXYAttributes = function (element, panelModel) {\n        var value = {\n            value: {\n                sizeX: panelModel.sizeX.toString(),\n                sizeY: panelModel.sizeY.toString(),\n                minSizeX: panelModel.minSizeX.toString(),\n                minSizeY: panelModel.minSizeY.toString(),\n                maxSizeX: !isNullOrUndefined(panelModel.maxSizeX) ? panelModel.maxSizeX.toString() : undefined,\n                maxSizeY: !isNullOrUndefined(panelModel.maxSizeY) ? panelModel.maxSizeY.toString() : undefined,\n                row: panelModel.row.toString(),\n                col: panelModel.col.toString()\n            }\n        };\n        this.setAttributes(value, element);\n    };\n    DashboardLayout.prototype.setXYDimensions = function (panelModel) {\n        var cellHeight = this.getCellSize()[1];\n        var cellWidth = this.getCellSize()[0];\n        var widthValue;\n        var heigthValue;\n        if (panelModel && typeof (cellWidth) === 'number' && typeof (panelModel.sizeX) === 'number' && panelModel.sizeX > 1) {\n            widthValue = (panelModel.sizeX * cellWidth) + (panelModel.sizeX - 1) * this.cellSpacing[0];\n        }\n        else {\n            widthValue = cellWidth;\n        }\n        if (panelModel && typeof (cellHeight) === 'number' && panelModel.sizeY > 1 && typeof (panelModel.sizeY) === 'number') {\n            heigthValue = (panelModel.sizeY * cellHeight) + (panelModel.sizeY - 1) * this.cellSpacing[1];\n        }\n        else {\n            heigthValue = formatUnit(cellHeight);\n        }\n        return [heigthValue, widthValue];\n    };\n    DashboardLayout.prototype.getRowColumnDragValues = function (args) {\n        var value = [];\n        var elementTop = parseFloat(args.element.style.top);\n        var elementLeft = parseFloat(args.element.style.left);\n        var row = Math.round(elementTop / (this.getCellSize()[1] + this.cellSpacing[1]));\n        var col = Math.round(elementLeft / (this.getCellSize()[0] + +this.cellSpacing[0]));\n        value = [row, col];\n        return value;\n    };\n    DashboardLayout.prototype.checkForChanges = function (isInteracted, added, removed) {\n        var changedPanels = [];\n        if (this.removeAllCalled) {\n            changedPanels = [];\n        }\n        else {\n            for (var i = 0; i < this.panels.length; i++) {\n                if (((!isNullOrUndefined(added) ? (this.panels[i].id !== added[0].id) : true) &&\n                    (!isNullOrUndefined(removed) ? (this.panels[i].id !== removed[0].id) : true)) &&\n                    (this.panels[i].row !== this.panelsInitialModel[i].row || this.panels[i].col !== this.panelsInitialModel[i].col)) {\n                    changedPanels.push(this.panels[i]);\n                }\n            }\n        }\n        if (changedPanels.length > 0 || this.removeAllCalled) {\n            var changedArgs = {\n                changedPanels: changedPanels, isInteracted: isInteracted,\n                addedPanels: !isNullOrUndefined(added) ? added : [], removedPanels: !isNullOrUndefined(removed) ? removed : []\n            };\n            this.trigger('change', changedArgs);\n        }\n    };\n    DashboardLayout.prototype.enableDraggingContent = function (collections) {\n        var _this = this;\n        for (var i = 0; i < collections.length; i++) {\n            var abortArray = ['.e-resize', '.' + dragRestrict];\n            var cellElement = collections[i];\n            {\n                this.dragobj = new Draggable(cellElement, {\n                    preventDefault: false,\n                    clone: false,\n                    dragArea: this.element,\n                    isDragScroll: true,\n                    handle: this.draggableHandle ? this.draggableHandle : '.e-panel',\n                    abort: abortArray,\n                    dragStart: this.onDraggingStart.bind(this),\n                    dragStop: function (args) {\n                        var model = _this.getCellInstance(_this.mainElement.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(model.row, model.col, model.sizeX, model.sizeY, _this.mainElement).length > 0) {\n                            _this.setHolderPosition(args);\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                            _this.updatePanelLayout(_this.mainElement, model);\n                        }\n                        else {\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                        }\n                        _this.mainElement = null;\n                        var item = _this.getPanelBase(args);\n                        if (_this.shadowEle) {\n                            detach(_this.shadowEle);\n                        }\n                        removeClass([_this.element], [preventSelect]);\n                        removeClass([args.element], [dragging]);\n                        _this.shadowEle = null;\n                        args.element.classList.remove('e-dragging');\n                        var row = _this.getRowColumnDragValues(args)[0];\n                        var col = _this.getRowColumnDragValues(args)[1];\n                        var panelModel = _this.getCellInstance(args.element.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(row, col, panelModel.sizeX, panelModel.sizeY, document.getElementById(item.id)).length === 0) {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), { row: row, col: col });\n                            _this.oldRowCol[args.element.id].row = row;\n                            _this.oldRowCol[args.element.id].col = col;\n                            _this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n                            _this.sortedPanel();\n                        }\n                        else {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), {\n                                row: _this.oldRowCol[args.element.id].row,\n                                col: _this.oldRowCol[args.element.id].col\n                            });\n                            args.element.setAttribute('data-col', _this.getCellInstance(args.element.id).col.toString());\n                            args.element.setAttribute('data-row', _this.getCellInstance(args.element.id).row.toString());\n                            _this.sortedPanel();\n                        }\n                        var panelInstance = _this.getCellInstance(args.element.id);\n                        _this.setPanelPosition(args.element, panelInstance.row, panelInstance.col);\n                        _this.updatePanels();\n                        _this.updateCloneArrayObject();\n                        _this.checkForChanges(true);\n                        _this.dragStopEventArgs = { event: args.event, element: args.element };\n                        _this.trigger('dragStop', args);\n                        _this.resizeEvents();\n                        _this.rows = _this.maxRow(true);\n                        _this.setHeightWidth();\n                        _this.updateDragArea();\n                    },\n                    drag: function (args) {\n                        _this.draggedEventArgs = {\n                            event: args.event,\n                            element: args.element,\n                            target: closest((args.target), '.e-panel')\n                        };\n                        _this.trigger('drag', _this.draggedEventArgs);\n                        _this.onDragStart(args);\n                    }\n                });\n                if (this.dragCollection.indexOf(this.dragobj) === -1) {\n                    this.dragCollection.push(this.dragobj);\n                }\n            }\n        }\n    };\n    DashboardLayout.prototype.updatePanels = function () {\n        this.moveItemsUpwards();\n        this.updateOldRowColumn();\n        this.sortedPanel();\n    };\n    DashboardLayout.prototype.updateDragArea = function () {\n        this.dragCollection.forEach(function (dragobj) {\n            // eslint-disable-next-line\n            dragobj.setDragArea();\n        });\n    };\n    DashboardLayout.prototype.updateRowsHeight = function (row, sizeY, addRows) {\n        if (row + sizeY >= this.rows) {\n            this.rows = this.rows + addRows;\n            this.setHeightWidth();\n        }\n    };\n    DashboardLayout.prototype.onDraggingStart = function (args) {\n        var dragArgs = args;\n        this.trigger('dragStart', dragArgs, function (dragArgs) {\n        });\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        this.mainElement = args.element;\n        this.cloneObject = JSON.parse(JSON.stringify(this.cloneObject));\n        var eleRowValue = this.startRow = parseInt(args.element.getAttribute('data-row'), 10);\n        this.startCol = parseInt(args.element.getAttribute('data-col'), 10);\n        var eleSizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        this.updateRowsHeight(eleRowValue, eleSizeY, eleSizeY);\n        this.updateDragArea();\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        this.shadowEle.classList.add('e-holder-transition');\n        setStyleAttribute(this.shadowEle, { 'position': 'absolute' });\n        addClass([this.element], [preventSelect]);\n        addClass([args.element], [dragging]);\n        this.element.appendChild(this.shadowEle);\n        this.renderReactTemplates();\n        this.shadowEle = document.querySelector('.e-holder');\n        this.shadowEle.style.height = (this.getCellInstance(args.element.id).sizeY * this.cellSize[1]) + 'px';\n        this.shadowEle.style.width = (this.getCellInstance(args.element.id).sizeX * this.cellSize[0]) + 'px';\n        var panelInstance = this.getCellInstance(args.element.id);\n        this.setPanelPosition(this.shadowEle, panelInstance.row, panelInstance.col);\n    };\n    // eslint-disable-next-line\n    DashboardLayout.prototype.cloneModels = function (source, target) {\n        if (target === undefined) {\n            target = [];\n        }\n        for (var i = 0; i < source.length; i++) {\n            // tslint:disable-next-line\n            if (!target[i]) {\n                target[i] = {};\n            }\n            // eslint-disable-next-line guard-for-in\n            for (var k in source[i]) {\n                target[i][k] = source[i][k];\n            }\n        }\n        return target;\n    };\n    DashboardLayout.prototype.onDragStart = function (args) {\n        var endCol;\n        var endRow;\n        var dragCol;\n        var col = dragCol = this.getRowColumnDragValues(args)[1];\n        var row = this.getRowColumnDragValues(args)[0];\n        if (col < 0 || row < 0) {\n            return;\n        }\n        this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        var panelModel = this.getCellInstance(args.element.id);\n        this.updateRowsHeight(panelModel.row, panelModel.sizeY, 1);\n        this.updateDragArea();\n        if (this.allowPushing) {\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            endCol = this.oldRowCol[(args.element.id)].col;\n            endRow = this.oldRowCol[(args.element.id)].row;\n            this.oldRowCol[(args.element.id)] = { row: row, col: col };\n            this.updateOldRowColumn();\n            if (this.startCol !== endCol || this.startRow !== endRow) {\n                this.setHolderPosition(args);\n                if (this.startCol !== endCol) {\n                    this.startRow = endRow;\n                }\n                if (this.startRow !== endRow) {\n                    this.startCol = endCol;\n                }\n                if (this.allowPushing) {\n                    this.mainElement = args.element;\n                    var model = panelModel;\n                    this.checkCollision = this.collisions(model.row, model.col, model.sizeX, model.sizeY, args.element);\n                    if (panelModel.col >= this.checkColumnValue) {\n                        this.checkCollision = [];\n                    }\n                    this.updatePanelLayout(args.element, panelModel);\n                    this.moveItemsUpwards();\n                }\n            }\n        }\n        if (this.allowPushing !== false) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        }\n        if (this.oldRowCol[args.element.id].row !== row || this.oldRowCol[args.element.id].col !== col) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n        }\n        if (this.startCol !== dragCol) {\n            this.startCol = endCol;\n            this.moveItemsUpwards();\n        }\n        if (!this.allowPushing) {\n            this.setHolderPosition(args);\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        if (this.allowPushing === false) {\n            return;\n        }\n    };\n    DashboardLayout.prototype.getPanelBase = function (args) {\n        var item;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === ((args.element\n                && args.element.id) || args)) {\n                item = this.panelCollection[i];\n            }\n        }\n        return item;\n    };\n    DashboardLayout.prototype.getPanel = function (row, column, excludeItems) {\n        if (excludeItems && !(excludeItems instanceof Array)) {\n            excludeItems = [excludeItems];\n        }\n        var sizeY = 1;\n        while (row > -1) {\n            var sizeX = 1;\n            var col = column;\n            while (col > -1) {\n                var items = this.sortedArray[row];\n                if (items) {\n                    var item = items[col];\n                    if (item && (!excludeItems ||\n                        excludeItems.indexOf(item) === -1) && parseInt(item.getAttribute('data-sizeX'), 10) >= sizeX\n                        && parseInt(item.getAttribute('data-sizeY'), 10) >= sizeY) {\n                        return item;\n                    }\n                }\n                ++sizeX;\n                --col;\n            }\n            --row;\n            ++sizeY;\n        }\n        return null;\n    };\n    DashboardLayout.prototype.setHolderPosition = function (args) {\n        var sizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        var col = parseInt(args.element.getAttribute('data-col'), 10);\n        var row = parseInt(args.element.getAttribute('data-row'), 10);\n        var sizeX = parseInt(args.element.getAttribute('data-sizeX'), 10);\n        var widthValue = this.getCellSize()[0];\n        var heightValue = this.getCellSize()[1];\n        var top = row === 0 ? 0 : (((row) * (heightValue + this.cellSpacing[1])));\n        var left = col === 0 ? 0 : (((col) * (widthValue + this.cellSpacing[0])));\n        var cellSizeOne = this.getCellSize()[1];\n        var cellSizeZero = this.getCellSize()[0];\n        this.elementRef.top = this.shadowEle.style.top = top + 'px';\n        this.elementRef.left = this.shadowEle.style.left = left + 'px';\n        this.elementRef.height = this.shadowEle.style.height = ((sizeY * cellSizeOne) + ((sizeY - 1) * this.cellSpacing[1])) + 'px';\n        this.elementRef.width = this.shadowEle.style.width = ((sizeX * cellSizeZero) + ((sizeX - 1) * this.cellSpacing[0])) + 'px';\n    };\n    DashboardLayout.prototype.getCellInstance = function (idValue) {\n        var currentCellInstance;\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].id === idValue) {\n                currentCellInstance = this.panels[i];\n            }\n        }\n        return currentCellInstance;\n    };\n    /**\n     * Allows to add a panel to the Dashboardlayout.\n     *\n     * @param {panel} panel -  Defines the panel element.\n     *\n     * @returns void\n     * @deprecated\n     */\n    DashboardLayout.prototype.addPanel = function (panel) {\n        this.panelsSizeY = 0;\n        this.maxCol();\n        if (!panel.minSizeX) {\n            panel.minSizeX = 1;\n        }\n        if (!panel.minSizeY) {\n            panel.minSizeY = 1;\n        }\n        if (!panel.id) {\n            panel.id = 'layout_' + this.panelID.toString();\n            this.panelID = this.panelID + 1;\n        }\n        // eslint-disable-next-line\n        var panelProp = new Panel(this, 'panels', panel, true);\n        this.panels.push(panelProp);\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        this.setMinMaxValues(panelProp);\n        if (this.maxColumnValue < panelProp.col || this.maxColumnValue < (panelProp.col + panelProp.sizeX)) {\n            this.panelPropertyChange(panelProp, { col: this.maxColumnValue - panelProp.sizeX });\n        }\n        var cell = this.renderCell(panelProp, true, null);\n        this.oldRowCol[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.cloneObject[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.updateOldRowColumn();\n        this.element.insertAdjacentElement('afterbegin', cell);\n        this.addPanelCalled = true;\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n            this.removeResizeClasses(this.panelCollection);\n        }\n        else {\n            this.mainElement = cell;\n            if (!this.checkCollision) {\n                this.checkCollision = [];\n            }\n            this.setPanelPosition(cell, panelProp.row, panelProp.col);\n            this.updatePanelLayout(cell, panelProp);\n        }\n        this.addPanelCalled = false;\n        if (this.allowDragging &&\n            this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n            this.enableDraggingContent([document.getElementById(panelProp.id)]);\n        }\n        this.setClasses([cell]);\n        if (this.allowFloating) {\n            this.mainElement = null;\n            this.moveItemsUpwards();\n        }\n        this.updateOldRowColumn();\n        this.sortedPanel();\n        this.updateCloneArrayObject();\n        if (this.allowResizing) {\n            for (var i = 0; i < cell.querySelectorAll('.e-resize').length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(cell.querySelectorAll('.e-resize')[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'msie') {\n                    EventHandler.add(cell.querySelectorAll('.e-resize')[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n        this.checkForChanges(false, [panelProp]);\n    };\n    /**\n     * Allows to update a panel in the DashboardLayout.\n     *\n     * @param {panel} panel - Defines the panel element.\n     *\n     * @returns void\n     * @deprecated\n     */\n    DashboardLayout.prototype.updatePanel = function (panel) {\n        this.panelsSizeY = 0;\n        if (!panel.id) {\n            return;\n        }\n        var panelInstance = this.getCellInstance(panel.id);\n        if (!panelInstance) {\n            return;\n        }\n        this.maxCol();\n        panel.col = (panel.col < 1) ? 0 : ((panel.col > this.columns)) ? this.columns - 1 : panel.col;\n        if (isNullOrUndefined(panel.col)) {\n            panel.col = panelInstance.col;\n        }\n        this.panelPropertyChange(panelInstance, panel);\n        this.setMinMaxValues(panelInstance);\n        var cell = document.getElementById(panel.id);\n        this.mainElement = cell;\n        var cssClass = panelInstance.cssClass ? panelInstance.cssClass.split(' ') : null;\n        this.panelContent = cell.querySelector('.e-panel-container') ?\n            cell.querySelector('.e-panel-container') :\n            this.createSubElement(cssClass, cell.id + '_content', panelContainer);\n        cell.appendChild(this.panelContent);\n        if (panelInstance.header) {\n            var headerTemplateElement = cell.querySelector('.e-panel-header') ?\n                cell.querySelector('.e-panel-header') : this.createSubElement([], cell.id + 'template', '');\n            addClass([headerTemplateElement], [header]);\n            headerTemplateElement.innerHTML = '';\n            var id = this.element.id + 'HeaderTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.header, headerTemplateElement, id, true, 'header');\n            this.panelContent.appendChild(headerTemplateElement);\n            this.renderReactTemplates();\n        }\n        else {\n            if (cell.querySelector('.e-panel-header')) {\n                detach(cell.querySelector('.e-panel-header'));\n            }\n        }\n        if (panelInstance.content) {\n            var cssClass_2 = panelInstance.cssClass ? panelInstance.cssClass.split(' ') : null;\n            this.panelBody = cell.querySelector('.e-panel-content') ? cell.querySelector('.e-panel-content') :\n                this.createSubElement(cssClass_2, cell.id + '_body', panelContent);\n            this.panelBody.innerHTML = '';\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyleAttribute(this.panelBody, { height: contentHeightValue });\n            var id = this.element.id + 'ContentTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.content, this.panelBody, id, true, 'content');\n            this.panelContent.appendChild(this.panelBody);\n            this.renderReactTemplates();\n        }\n        else {\n            if (cell.querySelector('.e-panel-content')) {\n                detach(cell.querySelector('.e-panel-content'));\n            }\n        }\n        this.setXYAttributes(cell, panelInstance);\n        this.setHeightAndWidth(cell, panelInstance);\n        this.setPanelPosition(cell, panelInstance.row, panelInstance.col);\n        this.updatePanelLayout(cell, panelInstance);\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n        }\n        this.mainElement = null;\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    DashboardLayout.prototype.updateCloneArrayObject = function () {\n        this.cloneArray = this.sortedArray;\n        this.cloneObject = JSON.parse(JSON.stringify(this.oldRowCol));\n    };\n    /**\n     * Returns the panels object of the DashboardLayout.\n     *\n     * @returns [`PanelModel[]`](./panelModel)\n     */\n    DashboardLayout.prototype.serialize = function () {\n        var cloneModel = this.cloneModels(this.panels);\n        var customObject = [];\n        for (var i = 0; i < cloneModel.length; i++) {\n            customObject.push({\n                id: cloneModel[i].id, row: cloneModel[i].row, col: cloneModel[i].col, sizeX: cloneModel[i].sizeX,\n                sizeY: cloneModel[i].sizeY, minSizeX: cloneModel[i].minSizeX, minSizeY: cloneModel[i].minSizeY,\n                maxSizeX: cloneModel[i].maxSizeX, maxSizeY: cloneModel[i].maxSizeY\n            });\n        }\n        return (customObject);\n    };\n    /**\n     * Removes all the panels from the DashboardLayout.\n     */\n    DashboardLayout.prototype.removeAll = function () {\n        this.removeAllCalled = true;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            detach(this.panelCollection[i]);\n            this.clearTemplate();\n        }\n        this.removeAllPanel();\n        this.rows = 0;\n        this.gridPanelCollection = [];\n        this.setHeightWidth();\n        this.sortedPanel();\n        this.sortedArray = [];\n        this.overlapElementClone = [];\n        this.overlapElement = [];\n        this.overlapSubElementClone = [];\n        this.panelCollection = [];\n        this.oldRowCol = {};\n        this.cloneObject = {};\n        var clonedPanels = this.cloneModels(this.panels);\n        this.setProperties({ panels: [] }, true);\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkForChanges(false, null, clonedPanels);\n        this.removeAllCalled = false;\n    };\n    /**\n     * Removes the panel from the DashboardLayout.\n     *\n     * @param {string} id -  Defines the panel ID.\n     *\n     * @returns void\n     */\n    DashboardLayout.prototype.removePanel = function (id) {\n        var _this = this;\n        this.panelsSizeY = 0;\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var removedPanel;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === id) {\n                detach(this.panelCollection[i]);\n                this.panelCollection.splice(i, 1);\n            }\n            if (this.panels[i].id === id) {\n                removedPanel = this.panels[i];\n                this.panels.splice(i, 1);\n                this.panelsInitialModel.splice(i, 1);\n                this.updateOldRowColumn();\n                this.sortedPanel();\n            }\n        }\n        this.updatePanels();\n        if (this.checkMediaQuery()) {\n            this.isPanelRemoved = true;\n            this.checkMediaQuerySizing();\n            this.isPanelRemoved = false;\n        }\n        this.gridPanelCollection.forEach(function (item) {\n            if (item.id === id) {\n                _this.gridPanelCollection.splice(_this.gridPanelCollection.indexOf(item), 1);\n            }\n        });\n        this.updateCloneArrayObject();\n        this.checkForChanges(false, null, [removedPanel]);\n    };\n    /**\n     *Moves the panel in the DashboardLayout.\n     *\n     * @param {string} id - Defines the panel ID.\n     *\n     * @param  {number} row - Defines the row of dashboard layout.\n     *\n     * @param {number} col - Defines the column of dashboard layout.\n     *\n     * @returns void\n     */\n    DashboardLayout.prototype.movePanel = function (id, row, col) {\n        this.movePanelCalled = true;\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var panelInstance = this.getCellInstance(id);\n        if ((isNaN(row) || row === null) || (isNaN(col) || col === null) || !panelInstance) {\n            return;\n        }\n        if (col < 0) {\n            col = 0;\n        }\n        else if (col > this.columns) {\n            col = this.columns - panelInstance.sizeX;\n        }\n        this.panelPropertyChange(panelInstance, { row: row, col: col });\n        var ele = document.getElementById(id);\n        this.mainElement = ele;\n        this.startRow = parseInt(ele.getAttribute('data-row'), 10);\n        this.startCol = parseInt(ele.getAttribute('data-col'), 10);\n        this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, ele);\n        this.updateOldRowColumn();\n        this.setPanelPosition(ele, row, col);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updateRowHeight();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.mainElement = null;\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.movePanelCalled = false;\n        this.checkForChanges(false);\n    };\n    DashboardLayout.prototype.setAttributes = function (value, ele) {\n        for (var i = 0; i < Object.keys(value).length; i++) {\n            if (Object.keys(value)) {\n                if (value[Object.keys(value)[i]].col) {\n                    ele.setAttribute('data-col', value[Object.keys(value)[i]].col.toString());\n                }\n                if (value[Object.keys(value)[i]].row) {\n                    ele.setAttribute('data-row', value[Object.keys(value)[i]].row.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeX) {\n                    ele.setAttribute('data-sizeX', value[Object.keys(value)[i]].sizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeY) {\n                    ele.setAttribute('data-sizeY', value[Object.keys(value)[i]].sizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeX) {\n                    ele.setAttribute('data-minSizeX', value[Object.keys(value)[i]].minSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeY) {\n                    ele.setAttribute('data-minSizeY', value[Object.keys(value)[i]].minSizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeX) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeY) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeY.toString());\n                }\n            }\n        }\n    };\n    /**\n     * Resize the panel in the DashboardLayout.\n     *\n     * @param {string} id - Defines the panel ID.\n     *\n     * @param {number} sizeX - Defines the sizeX of dashboard layout.\n     *\n     * @param {number} sizeY - Defines the sizeY of dashboard layout.\n     */\n    DashboardLayout.prototype.resizePanel = function (id, sizeX, sizeY) {\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var panelInstance = this.getCellInstance(id);\n        this.resizeCalled = true;\n        var ele = document.getElementById(id);\n        var args = { event: null, element: ele, isInteracted: false };\n        this.trigger('resizeStart', args);\n        this.panelPropertyChange(panelInstance, { sizeX: sizeX, sizeY: sizeY });\n        this.setMinMaxValues(panelInstance);\n        this.checkMinMaxValues(panelInstance);\n        this.mainElement = ele;\n        this.setAttributes({ value: { sizeX: panelInstance.sizeX.toString(), sizeY: panelInstance.sizeY.toString() } }, ele);\n        this.setHeightAndWidth(ele, panelInstance);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updatePanels();\n        this.updateRowHeight();\n        this.resizeCalled = false;\n        this.trigger('resizeStop', args);\n        this.checkForChanges(false);\n    };\n    /**\n     * Destroys the DashboardLayout component\n     *\n     * @returns void\n     */\n    DashboardLayout.prototype.destroy = function () {\n        // eslint-disable-next-line\n        EventHandler.remove(window, 'resize', this.refreshListener);\n        removeClass([this.element], ['e-dashboardlayout', 'e-lib', 'e-responsive', 'e-control']);\n        this.element.removeAttribute('style');\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            this.dragCollection[i].destroy();\n        }\n        this.removeAllPanel();\n        _super.prototype.destroy.call(this);\n        this.clearTemplate();\n        this.renderReactTemplates();\n    };\n    DashboardLayout.prototype.removeAllPanel = function () {\n        while (this.element.firstElementChild) {\n            detach(this.element.firstElementChild);\n            this.clearTemplate();\n        }\n    };\n    DashboardLayout.prototype.setEnableRtl = function () {\n        if (this.enableRtl === true) {\n            addClass([this.element], 'e-rtl');\n        }\n        else {\n            removeClass([this.element], 'e-rtl');\n        }\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     *\n     * @private\n     */\n    DashboardLayout.prototype.updateCellSizeAndSpacing = function () {\n        this.panelResponsiveUpdate();\n        this.setHeightWidth();\n        this.getRowColumn();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n            this.setPanelPosition(ele, panelModel.row, panelModel.col);\n        }\n    };\n    DashboardLayout.prototype.updatePanelsDynamically = function (panels) {\n        this.removeAll();\n        this.setProperties({ panels: panels }, true);\n        this.setOldRowCol();\n        if (this.table) {\n            this.table.remove();\n        }\n        this.initialize();\n        if (this.checkMediaQuery()) {\n            this.refresh();\n        }\n        if (this.showGridLines) {\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkForIDValues = function (panels) {\n        var _this = this;\n        if (!isNullOrUndefined(panels) && panels.length > 0) {\n            this.panelID = 0;\n            panels.forEach(function (panel) {\n                if (!panel.id) {\n                    _this.panelPropertyChange(panel, { id: 'layout_' + _this.panelID.toString() });\n                    _this.panelID = _this.panelID + 1;\n                }\n            });\n        }\n        else {\n            this.restrictDynamicUpdate = true;\n        }\n    };\n    /**\n     * Called internally if any of the property value changed.\n     *\n     * returns void\n     *\n     * @private\n     */\n    // eslint-disable-next-line\n    DashboardLayout.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var _this = this;\n        if (newProp.panels && newProp.panels.length > 0 && newProp.panels[0] instanceof Panel) {\n            this.checkForIDValues(newProp.panels);\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'enableRtl':\n                    this.setProperties({ enableRtl: newProp.enableRtl }, true);\n                    this.setEnableRtl();\n                    break;\n                case 'mediaQuery':\n                    this.setProperties({ mediaQuery: newProp.mediaQuery }, true);\n                    if (this.checkMediaQuery()) {\n                        this.checkMediaQuerySizing();\n                    }\n                    break;\n                case 'allowDragging':\n                    this.setProperties({ allowDragging: newProp.allowDragging }, true);\n                    this.ensureDrag();\n                    break;\n                case 'allowResizing':\n                    this.setProperties({ allowResizing: newProp.allowResizing }, true);\n                    if (this.allowResizing) {\n                        this.setClasses(this.panelCollection);\n                        this.resizeEvents();\n                    }\n                    else {\n                        var panelElements = this.element.querySelectorAll('.e-panel .e-panel-container .e-resize');\n                        for (var i = 0; i < panelElements.length; i++) {\n                            var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                            var element = panelElements[i];\n                            EventHandler.remove(element, eventName, this.downResizeHandler);\n                            if (Browser.info.name !== 'msie') {\n                                EventHandler.remove(element, 'touchstart', this.touchDownResizeHandler);\n                            }\n                        }\n                        this.removeResizeClasses(this.panelCollection);\n                    }\n                    break;\n                case 'cellSpacing':\n                    this.setProperties({ cellSpacing: newProp.cellSpacing }, true);\n                    this.updateCellSizeAndSpacing();\n                    this.updateGridLines();\n                    break;\n                case 'draggableHandle':\n                    this.setProperties({ draggableHandle: newProp.draggableHandle }, true);\n                    this.ensureDrag();\n                    break;\n                case 'allowFloating':\n                    this.setProperties({ allowFloating: newProp.allowFloating }, true);\n                    this.moveItemsUpwards();\n                    break;\n                case 'showGridLines':\n                    if (this.showGridLines) {\n                        this.setProperties({ showGridLines: newProp.showGridLines }, true);\n                        this.initGridLines();\n                    }\n                    else {\n                        if (this.table) {\n                            detach(this.table);\n                        }\n                    }\n                    break;\n                case 'allowPushing':\n                    this.setProperties({ allowPushing: newProp.allowPushing }, true);\n                    break;\n                case 'panels':\n                    if (!newProp.columns && !this.restrictDynamicUpdate && (newProp.panels[0] && newProp.panels.length > 0)) {\n                        this.isRenderComplete = false;\n                        this.updatePanelsDynamically(newProp.panels);\n                        this.isRenderComplete = true;\n                    }\n                    else if (!(newProp.panels[0] && newProp.panels.length)) {\n                        this.isRenderComplete = false;\n                        this.updatePanelsDynamically(this.panels);\n                        this.isRenderComplete = true;\n                    }\n                    else {\n                        this.restrictDynamicUpdate = false;\n                    }\n                    break;\n                case 'columns':\n                    this.isRenderComplete = false;\n                    if (newProp.panels) {\n                        this.updatePanelsDynamically(newProp.panels);\n                    }\n                    this.setProperties({ columns: newProp.columns }, true);\n                    this.panelCollection = [];\n                    this.maxColumnValue = this.columns;\n                    this.calculateCellSize();\n                    this.panels.forEach(function (panel) {\n                        _this.setMinMaxValues(panel);\n                        if (_this.maxColumnValue < panel.col || _this.maxColumnValue < (panel.col + panel.sizeX)) {\n                            var colValue = _this.maxColumnValue - panel.sizeX;\n                            _this.panelPropertyChange(panel, { col: colValue < 0 ? 0 : colValue });\n                            _this.setXYAttributes(document.getElementById(panel.id), panel);\n                        }\n                        _this.setHeightAndWidth(document.getElementById(panel.id), panel);\n                        _this.panelCollection.push(document.getElementById(panel.id));\n                        _this.setPanelPosition(document.getElementById(panel.id), panel.row, panel.col);\n                        _this.mainElement = document.getElementById(panel.id);\n                        _this.updatePanelLayout(document.getElementById(panel.id), panel);\n                        _this.mainElement = null;\n                    });\n                    this.updatePanels();\n                    this.updateCloneArrayObject();\n                    this.isRenderComplete = true;\n                    this.updateGridLines();\n                    break;\n            }\n        }\n    };\n    /**\n     * Gets the properties to be maintained upon browser refresh.\n     *\n     * @returns string\n     * @private\n     */\n    DashboardLayout.prototype.getPersistData = function () {\n        var keyEntity = ['panels'];\n        return this.addOnPersist(keyEntity);\n    };\n    /* istanbul ignore next */\n    DashboardLayout.prototype.mergePersistPanelData = function (persistedData) {\n        var data = window.localStorage.getItem(this.getModuleName() + this.element.id);\n        if (!(isNullOrUndefined(data) || (data === '')) || !isNullOrUndefined(persistedData)) {\n            var dataObj = !isNullOrUndefined(persistedData) ? persistedData : JSON.parse(data);\n            var keys = Object.keys(dataObj);\n            this.isProtectedOnChange = true;\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if ((typeof getValue(key, this) === 'object' && !isNullOrUndefined(getValue(key, this)))) {\n                    if (Array.isArray(getValue(key, this)) && key === 'panels') {\n                        this.mergePanels(dataObj[key], this[key]);\n                    }\n                }\n            }\n            this.isProtectedOnChange = false;\n        }\n    };\n    /* istanbul ignore next */\n    DashboardLayout.prototype.mergePanels = function (sortedPanels, panels) {\n        var storedColumns = sortedPanels;\n        var _loop_6 = function (i) {\n            this_4.checkForIDValues(panels);\n            var localPanel = panels.filter(function (pan) { return pan.id === storedColumns[i].id; })[0];\n            if (!isNullOrUndefined(localPanel)) {\n                storedColumns[i] = extend(localPanel, storedColumns[i], {}, true);\n            }\n        };\n        var this_4 = this;\n        for (var i = 0; i < storedColumns.length; i++) {\n            _loop_6(i);\n        }\n    };\n    /**\n     * Returns the current module name.\n     *\n     * @returns string\n     *\n     * @private\n     */\n    DashboardLayout.prototype.getModuleName = function () {\n        return 'DashboardLayout';\n    };\n    __decorate$1([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowDragging\", void 0);\n    __decorate$1([\n        Property(false)\n    ], DashboardLayout.prototype, \"allowResizing\", void 0);\n    __decorate$1([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowPushing\", void 0);\n    __decorate$1([\n        Property(true)\n    ], DashboardLayout.prototype, \"enableHtmlSanitizer\", void 0);\n    __decorate$1([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowFloating\", void 0);\n    __decorate$1([\n        Property(1)\n    ], DashboardLayout.prototype, \"cellAspectRatio\", void 0);\n    __decorate$1([\n        Property([5, 5])\n    ], DashboardLayout.prototype, \"cellSpacing\", void 0);\n    __decorate$1([\n        Property(1)\n    ], DashboardLayout.prototype, \"columns\", void 0);\n    __decorate$1([\n        Property(false)\n    ], DashboardLayout.prototype, \"showGridLines\", void 0);\n    __decorate$1([\n        Property(null)\n    ], DashboardLayout.prototype, \"draggableHandle\", void 0);\n    __decorate$1([\n        Property('en-US')\n    ], DashboardLayout.prototype, \"locale\", void 0);\n    __decorate$1([\n        Property('max-width: 600px')\n    ], DashboardLayout.prototype, \"mediaQuery\", void 0);\n    __decorate$1([\n        Collection([], Panel)\n    ], DashboardLayout.prototype, \"panels\", void 0);\n    __decorate$1([\n        Property(['e-south-east'])\n    ], DashboardLayout.prototype, \"resizableHandles\", void 0);\n    __decorate$1([\n        Event()\n    ], DashboardLayout.prototype, \"change\", void 0);\n    __decorate$1([\n        Event()\n    ], DashboardLayout.prototype, \"dragStart\", void 0);\n    __decorate$1([\n        Event()\n    ], DashboardLayout.prototype, \"drag\", void 0);\n    __decorate$1([\n        Event()\n    ], DashboardLayout.prototype, \"dragStop\", void 0);\n    __decorate$1([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStart\", void 0);\n    __decorate$1([\n        Event()\n    ], DashboardLayout.prototype, \"resize\", void 0);\n    __decorate$1([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStop\", void 0);\n    __decorate$1([\n        Event()\n    ], DashboardLayout.prototype, \"created\", void 0);\n    __decorate$1([\n        Event()\n    ], DashboardLayout.prototype, \"destroyed\", void 0);\n    DashboardLayout = __decorate$1([\n        NotifyPropertyChanges\n    ], DashboardLayout);\n    return DashboardLayout;\n}(Component));\n\n/**\n * dashboardlayout modules\n */\n\n/**\n *     Layout all modules\n */\n\nexport { PaneProperties, Splitter, Panel, DashboardLayout };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}