{"ast":null,"code":"import { FormControl, FormGroup } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SectionComponent } from 'src/src-app/section/section.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/src-api/Categorie/service\";\nimport * as i2 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i3 from \"@angular/common/http\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"../../../src-api/course/service\";\nimport * as i6 from \"@angular/router\";\nimport * as i7 from \"@angular/material/dialog\";\nimport * as i8 from \"@angular/material/snack-bar\";\nimport * as i9 from \"src/src-app/services/token.service\";\nimport * as i10 from \"@angular/common\";\nimport * as i11 from \"@angular/material/icon\";\nimport * as i12 from \"@angular/material/button\";\nimport * as i13 from \"@angular/material/form-field\";\nimport * as i14 from \"@angular/material/input\";\nimport * as i15 from \"@angular/material/select\";\nimport * as i16 from \"@angular/material/core\";\nimport * as i17 from \"@angular/material/datepicker\";\n\nfunction AddcoursesComponent_mat_option_60_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 27);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const v_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", v_r2.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(v_r2.id);\n  }\n}\n\nexport let AddcoursesComponent = /*#__PURE__*/(() => {\n  class AddcoursesComponent {\n    constructor(categorieService, activeModal, http, formBuilder, courseService, router, //ajouté par moi\n    dialogRef, //inject data in form to edit it\n    editCourse, _snackBar, tokenService) {\n      this.categorieService = categorieService;\n      this.activeModal = activeModal;\n      this.http = http;\n      this.formBuilder = formBuilder;\n      this.courseService = courseService;\n      this.router = router;\n      this.dialogRef = dialogRef;\n      this.editCourse = editCourse;\n      this._snackBar = _snackBar;\n      this.tokenService = tokenService;\n      this.actionBtn = 'Add';\n      this.role = this.tokenService.getinfoToken();\n      this.courses = []; // course:Course;\n\n      this.horizontalPosition = 'center';\n      this.verticalPosition = 'top';\n      this.accept = '.png, .jpg, .jpeg';\n      this.course = {\n        currentRate: 0,\n        duration: '',\n        privacy: '',\n        requirements: '',\n        type: '',\n        year: 0,\n        icon: '',\n        author: '',\n        createdAt: '',\n        description: '',\n        endDate: new Date(),\n        // icon: \"\",\n        id: 0,\n        language: '',\n        lastUpdate: new Date(),\n        rating: 0,\n        startDate: new Date(),\n        title: '',\n        validated: false,\n        user: '',\n        categorieId: ''\n      }; // selectImage(event:any) {\n      //   if(event.target.files){\n      //     var reader =  new FileReader()\n      //     reader.readAsDataURL(event.target.files[0])\n      //     reader.onload = (event:any)=> {\n      //       this.course.icon = event.target.result\n      //     }\n      //   }\n      // }\n      // public addCourse(addForm: NgForm): void {\n      //   this.courseService.addCourse(addForm.value).subscribe((result: Course) => {\n      //     this.courses = [result, ...this.courses];\n      //   })\n      // }\n\n      /*public onAddCourse(addForm: NgForm): void{\r\n        this.courseService.addCourse(addForm.value).subscribe(\r\n          (response: Course) => {\r\n            console.log(response);\r\n            this.getCourses();\r\n          },\r\n          (error: HttpErrorResponse) => {\r\n            alert(error.message);\r\n          }\r\n        );\r\n      }*/\n\n      this.afuConfig = {\n        uploadAPI: {\n          url: 'https://example-file-upload-api'\n        }\n      };\n      this.url = '';\n      this.multiple = false;\n    }\n\n    ngOnInit() {\n      // console.log(this.categorie.find(x=>x.id===SectionComponent.idOfcurrentCategorie))\n      this.categorieService.getAllCategories().subscribe(response => {\n        this.categorie = response;\n      }, error => {\n        alert(error.message);\n      });\n      this.courseForm = new FormGroup({\n        currentRate: new FormControl(''),\n        duration: new FormControl(''),\n        privacy: new FormControl(''),\n        requirements: new FormControl(''),\n        type: new FormControl(''),\n        year: new FormControl(''),\n        author: new FormControl(''),\n        createdAt: new FormControl(''),\n        description: new FormControl(''),\n        endDate: new FormControl(''),\n        icon: new FormControl(''),\n        language: new FormControl(''),\n        lastUpdate: new FormControl(''),\n        rating: new FormControl(''),\n        startDate: new FormControl(''),\n        title: new FormControl(''),\n        validated: new FormControl(''),\n        user: new FormControl(''),\n        categorie: new FormControl(''),\n        status: new FormControl('')\n      }); //   this.courseForm = this.formBuilder.group({\n      //     currentRate: [null,[Validators.required]],\n      //     duration: [null,[Validators.required]],\n      //     privacy: [null,[Validators.required]],\n      //     requirements: [null,[Validators.required]],\n      //     type: [null,[Validators.required]],\n      //     year: [null,[Validators.required]],\n      //     author: [null,[Validators.required]],\n      //     createdAt: [null,[Validators.required]],\n      //     description: [null,[Validators.required]],\n      //     endDate: [null,[Validators.required]],\n      //     icon: [null,[Validators.required]],\n      //     language: [null,[Validators.required]],\n      //     lastUpdate: [null,[Validators.required]],\n      //     rating: [null,[Validators.required]],\n      //     startDate: [null,[Validators.required]],\n      //     title: [null,[Validators.required]],\n      //     validated: [null,[Validators.required]],\n      //     user: [null,[Validators.required]],\n      //     categorieId: [null,[Validators.required]],\n      // });\n\n      if (this.editCourse) {\n        console.log(this.editCourse.title);\n        this.actionBtn = 'Update'; //this.courseForm.controls['currentRate'].setValue(this.editCourse.currentRate);\n\n        this.courseForm.controls['duration'].setValue(this.editCourse.duration);\n        this.courseForm.controls['privacy'].setValue(this.editCourse.privacy);\n        this.courseForm.controls['requirements'].setValue(this.editCourse.requirements);\n        this.courseForm.controls['type'].setValue(this.editCourse.type); // this.courseForm.controls['year'].setValue(this.editCourse.year);\n\n        this.courseForm.controls['author'].setValue(this.editCourse.author);\n        this.courseForm.controls['createdAt'].setValue(this.editCourse.createdAt);\n        this.courseForm.controls['description'].setValue(this.editCourse.description);\n        this.courseForm.controls['icon'].setValue(this.editCourse.icon);\n        this.courseForm.controls['language'].setValue(this.editCourse.language);\n        this.courseForm.controls['title'].setValue(this.editCourse.title);\n        this.courseForm.controls['categorie'].setValue(this.editCourse.categorie);\n        this.courseForm.controls['user'].setValue(this.editCourse.user);\n      }\n    }\n\n    OnUpdate(row) {\n      this.courseForm.patchValue({\n        courseId: row.id,\n        privacy: row.privacy,\n        title: row.title,\n        createdAt: row.createdAt,\n        categorieId: row.categorieId,\n        user: row.user,\n        language: row.language,\n        author: row.author,\n        type: row.type,\n        requirements: row.requirements,\n        description: row.description\n      });\n    }\n\n    addCourse() {\n      this.courseService.addCourse(this.course).subscribe(result => {\n        this.courses = [result, ...this.courses];\n      });\n    }\n\n    onFileChanged(event) {\n      //Select File\n      this.selectedFile = event.target.files[0];\n    }\n\n    onAddCourse() {\n      //this.courseService.ajouterhassan(this.courseForm.value);\n      //if(this.role==='')\n      // console.log(\"roooooole\"+this.role)\n      // if (this.role === \"specialiste\" || this.role === \"admin\")\n      // {\n      for (var i of this.categorie) {\n        if (i.id == SectionComponent.idOfcurrentCategorie) {\n          this.categ = i;\n        }\n      }\n\n      if (!this.editCourse) {\n        this.courseForm.controls['categorie'].setValue(this.categ);\n\n        if (this.role === 'specialiste' || this.role === 'admin') {\n          this.courseForm.controls['status'].setValue(true);\n          this.courseForm.controls['author'].setValue(this.tokenService.getName());\n          this.courseService.addCourse(this.courseForm.value).subscribe({\n            next: res => {\n              this._snackBar.open('Course added successfully!!', 'Splash', {\n                horizontalPosition: this.horizontalPosition,\n                verticalPosition: this.verticalPosition\n              });\n\n              error: () => {};\n            }\n          });\n        } else {\n          this.courseForm.controls['author'].setValue(this.tokenService.getName());\n          this.courseService.addCourse(this.courseForm.value).subscribe({\n            next: res => {\n              this._snackBar.open('VOTRE DEMANDE EST EN ATTANTE POUR AJOUTER LE LIVRE !!', 'Splash', {\n                horizontalPosition: this.horizontalPosition,\n                verticalPosition: this.verticalPosition\n              });\n\n              error: () => {};\n            }\n          });\n        } // if (this.role === 'specialiste' || this.role === 'admin') {\n        //   this._snackBar.open('Course added successfully!!', 'Splash', {\n        //     horizontalPosition: this.horizontalPosition,\n        //     verticalPosition: this.verticalPosition,\n        //   });\n        // } else {\n        // this._snackBar.open(\n        //   'VOTRE DEMANDE EST EN ATTANTE POUR AJOUTER LE LIVRE !!',\n        //   'Splash',\n        //   {\n        //     horizontalPosition: this.horizontalPosition,\n        //     verticalPosition: this.verticalPosition,\n        //   }\n        // );\n        // },\n        // alert(\"Course added successfully\");\n        // this.courseForm.reset();\n        //this.dialogRef.close();\n        // },\n        // error: () => {\n        // this._snackBar.open(\n        //   'VOTRE DEMANDE EST EN ATTANTE POUR AJOUTER LE LIVRE !!',\n        //   'Splash',\n        //   {\n        //     horizontalPosition: this.horizontalPosition,\n        //     verticalPosition: this.verticalPosition,\n        //   }\n        // );\n        //   },\n        // });\n\n      } else {\n        alert(' successfully');\n        this.updateCourse();\n      } // }\n      // else\n      // {\n      //         this._snackBar.open(\n      //           'VOTRE DEMANDE EST EN ATTANTE POUR AJOUTER CE LIVRE !!',\n      //           'Splash',\n      //           {\n      //             horizontalPosition: this.horizontalPosition,\n      //             verticalPosition: this.verticalPosition,\n      //           }\n      //         );\n      // }\n\n    }\n\n    updateCourse() {\n      this.courseService.updateCourse(this.courseForm.value).subscribe({\n        next: res => {\n          alert('Course updated successfully'); // this.courseForm.reset();\n          //this.dialogRef.close('update');\n        },\n        error: () => {\n          alert('Eror while updating this Course');\n        }\n      });\n    }\n\n  }\n\n  AddcoursesComponent.ɵfac = function AddcoursesComponent_Factory(t) {\n    return new (t || AddcoursesComponent)(i0.ɵɵdirectiveInject(i1.CategorieService), i0.ɵɵdirectiveInject(i2.NgbActiveModal), i0.ɵɵdirectiveInject(i3.HttpClient), i0.ɵɵdirectiveInject(i4.FormBuilder), i0.ɵɵdirectiveInject(i5.CourseService), i0.ɵɵdirectiveInject(i6.Router), i0.ɵɵdirectiveInject(i7.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i8.MatSnackBar), i0.ɵɵdirectiveInject(i9.TokenService));\n  };\n\n  AddcoursesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddcoursesComponent,\n    selectors: [[\"app-addcourses\"]],\n    decls: 67,\n    vars: 12,\n    consts: [[\"type\", \"button\", \"aria-label\", \"Close\", 1, \"close\", \"close-button\", 3, \"click\"], [\"aria-hidden\", \"true\"], [\"mat-dialog-title\", \"\", 1, \"card\"], [\"mat-dialog-content\", \"\"], [3, \"formGroup\"], [\"appearance\", \"outline\"], [\"matInput\", \"\", \"formControlName\", \"title\", 3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", \"formControlName\", \"description\", 3, \"ngModel\", \"ngModelChange\"], [\"appearance\", \"outline\", 1, \"dropdown\"], [\"matInput\", \"\", \"formControlName\", \"language\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"one\"], [\"value\", \"two\"], [\"matInput\", \"\", \"formControlName\", \"icon\", 3, \"ngModel\", \"ngModelChange\"], [\"appearance\", \"outline\", 1, \"invisible\"], [\"matInput\", \"\", \"formControlName\", \"status\"], [\"matInput\", \"\", \"formControlName\", \"author\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"formControlName\", \"privacy\"], [\"value\", \"Public\"], [\"value\", \"Private\"], [\"appearance\", \"fill\"], [\"matInput\", \"\", \"formControlName\", \"createdAt\", 3, \"matDatepicker\", \"ngModel\", \"ngModelChange\"], [\"matSuffix\", \"\", 3, \"for\"], [\"picker\", \"\"], [\"formControlName\", \"categorie\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"mat-card-action\", 3, \"align\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 3, \"click\"], [3, \"value\"]],\n    template: function AddcoursesComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"button\", 0);\n        i0.ɵɵlistener(\"click\", function AddcoursesComponent_Template_button_click_0_listener() {\n          return ctx.activeModal.dismiss(\"Cross click\");\n        });\n        i0.ɵɵelementStart(1, \"span\", 1);\n        i0.ɵɵtext(2, \"\\u00D7\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(3, \"div\", 2)(4, \"strong\");\n        i0.ɵɵtext(5, \"Add a new course\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"div\", 3)(7, \"form\", 4);\n        i0.ɵɵelement(8, \"br\");\n        i0.ɵɵelementStart(9, \"mat-form-field\", 5)(10, \"mat-label\");\n        i0.ɵɵtext(11, \"Title\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"input\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function AddcoursesComponent_Template_input_ngModelChange_12_listener($event) {\n          return ctx.course.title = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(13, \"br\");\n        i0.ɵɵelementStart(14, \"mat-form-field\", 5)(15, \"mat-label\");\n        i0.ɵɵtext(16, \"Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"input\", 7);\n        i0.ɵɵlistener(\"ngModelChange\", function AddcoursesComponent_Template_input_ngModelChange_17_listener($event) {\n          return ctx.course.description = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(18, \"br\");\n        i0.ɵɵelementStart(19, \"mat-form-field\", 8)(20, \"mat-label\");\n        i0.ɵɵtext(21, \"Language\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"mat-select\", 9);\n        i0.ɵɵlistener(\"ngModelChange\", function AddcoursesComponent_Template_mat_select_ngModelChange_22_listener($event) {\n          return ctx.course.language = $event;\n        });\n        i0.ɵɵelementStart(23, \"mat-option\", 10);\n        i0.ɵɵtext(24, \"Frensh\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"mat-option\", 11);\n        i0.ɵɵtext(26, \"English\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(27, \"br\");\n        i0.ɵɵelementStart(28, \"mat-form-field\", 5)(29, \"mat-label\");\n        i0.ɵɵtext(30, \"Image\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"input\", 12);\n        i0.ɵɵlistener(\"ngModelChange\", function AddcoursesComponent_Template_input_ngModelChange_31_listener($event) {\n          return ctx.course.icon = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(32, \"mat-form-field\", 13)(33, \"mat-label\");\n        i0.ɵɵtext(34, \"status\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(35, \"input\", 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(36, \"mat-form-field\", 13)(37, \"mat-label\");\n        i0.ɵɵtext(38, \"Author\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(39, \"input\", 15);\n        i0.ɵɵlistener(\"ngModelChange\", function AddcoursesComponent_Template_input_ngModelChange_39_listener($event) {\n          return ctx.course.author = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(40, \"mat-form-field\", 5)(41, \"mat-label\");\n        i0.ɵɵtext(42, \"Privacy\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(43, \"mat-select\", 16)(44, \"mat-option\", 17);\n        i0.ɵɵtext(45, \"Public\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(46, \"mat-option\", 18);\n        i0.ɵɵtext(47, \"Private\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(48, \"br\");\n        i0.ɵɵelementStart(49, \"mat-form-field\", 19)(50, \"mat-label\");\n        i0.ɵɵtext(51, \"Created at\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(52, \"input\", 20);\n        i0.ɵɵlistener(\"ngModelChange\", function AddcoursesComponent_Template_input_ngModelChange_52_listener($event) {\n          return ctx.course.createdAt = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(53, \"mat-datepicker-toggle\", 21)(54, \"mat-datepicker\", null, 22);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(56, \"mat-form-field\", 13)(57, \"mat-label\");\n        i0.ɵɵtext(58, \"In which categorie?\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(59, \"mat-select\", 23);\n        i0.ɵɵtemplate(60, AddcoursesComponent_mat_option_60_Template, 2, 2, \"mat-option\", 24);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(61, \"br\");\n        i0.ɵɵelementStart(62, \"div\", 25)(63, \"button\", 26);\n        i0.ɵɵlistener(\"click\", function AddcoursesComponent_Template_button_click_63_listener() {\n          return ctx.onAddCourse();\n        });\n        i0.ɵɵelementStart(64, \"mat-icon\");\n        i0.ɵɵtext(65, \"done\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(66);\n        i0.ɵɵelementEnd()()()();\n      }\n\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(55);\n\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"formGroup\", ctx.courseForm);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.course.title);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.course.description);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.course.language);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngModel\", ctx.course.icon);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngModel\", ctx.course.author);\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"matDatepicker\", _r0)(\"ngModel\", ctx.course.createdAt);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"for\", _r0);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngForOf\", ctx.categorie);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"align\", \"end\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\" \", ctx.actionBtn, \" \");\n      }\n    },\n    dependencies: [i10.NgForOf, i7.MatDialogTitle, i7.MatDialogContent, i11.MatIcon, i12.MatButton, i13.MatFormField, i13.MatLabel, i13.MatSuffix, i14.MatInput, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i15.MatSelect, i16.MatOption, i17.MatDatepicker, i17.MatDatepickerInput, i17.MatDatepickerToggle, i4.FormGroupDirective, i4.FormControlName],\n    styles: [\".card[_ngcontent-%COMP%]{color:#4055b1;text-align:center}tbody[_ngcontent-%COMP%]{color:#4055b1;font-family:Georgia,Times New Roman,Times,serif}.mat-form-field[_ngcontent-%COMP%]{width:100%}.invisible[_ngcontent-%COMP%]{display:block;visibility:hidden;height:0;width:0}table[_ngcontent-%COMP%]   table-stripped[_ngcontent-%COMP%]{width:100%}stats-cards[_ngcontent-%COMP%]{text-align:center}  .cdk-overlay-container{position:fixed!important;z-index:100000!important}.close-button[_ngcontent-%COMP%]{position:absolute;color:#8a8a8a;right:1rem;top:.5rem;font-size:2em;line-height:1;cursor:pointer}\"]\n  });\n  return AddcoursesComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}