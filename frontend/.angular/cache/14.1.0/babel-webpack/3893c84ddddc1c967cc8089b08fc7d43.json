{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let contentService = /*#__PURE__*/(() => {\n  class contentService {\n    constructor(http) {\n      this.http = http;\n    }\n\n    saveFiles(file) {\n      console.log(file);\n      let formData = new FormData();\n      formData.append('file', file);\n      return this.http.post(\"http://localhost:8081/files/upload\", formData);\n    }\n\n    getAllChapitrsbyCourse(courseId) {\n      return this.http.get(`http://localhost:8081/chapitre/findContents/${courseId}`);\n    }\n\n    getFiles() {\n      return this.http.get(\"http://localhost:8081/chapitre/files\");\n    }\n\n    getAllContents() {\n      return this.http.get(\"http://localhost:8081/chapitre/all\");\n    }\n\n    getContentOfCourseById(id) {\n      return this.http.get(`http://localhost:8081/chapitre/find/${id}`);\n    }\n\n    getAllComments() {\n      return this.http.get(\"http://localhost:8081/comment/all\");\n    }\n\n    addContent(course) {\n      return this.http.post(\"http://localhost:8081/chapitre/create\", course);\n    }\n\n    getAllContentOfChapters() {\n      return this.http.get(\"http://localhost:8081/contentOfChapter/all\");\n    }\n\n    findAllContentByContentId(id) {\n      return this.http.get(`http://localhost:8081/contentOfChapter/findContentsOfChapter/${id}`);\n    }\n\n    addContentOfChapter(course) {\n      return this.http.post(\"http://localhost:8081/contentOfChapter/create\", course);\n    }\n\n    addComment(course) {\n      return this.http.post(\"http://localhost:8081/comment/create\", course);\n    }\n\n    updateContent(course) {\n      return this.http.put(\"http://localhost:8081/chapitre/update\", course);\n    }\n\n    deleteContent(courseId) {\n      return this.http.delete(`http://localhost:8081/chapitre/delete/${courseId}`);\n    }\n\n    getContentByid(id) {\n      return this.http.get(`http://localhost:8081/chapitre/find/${id}`);\n    }\n\n  }\n\n  contentService.ɵfac = function contentService_Factory(t) {\n    return new (t || contentService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  contentService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: contentService,\n    factory: contentService.ɵfac,\n    providedIn: 'root'\n  });\n  return contentService;\n})();","map":null,"metadata":{},"sourceType":"module"}