{"ast":null,"code":"import { Injectable, Component, EventEmitter, Injector, Directive, ViewContainerRef, ElementRef, ComponentFactoryResolver, Renderer2, Input, Output, HostListener, InjectionToken, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { positionElements } from 'positioning';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\n\nfunction ConfirmationPopoverWindowComponent_ng_template_0_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 9)(1, \"button\", 10);\n    ɵngcc0.ɵɵlistener(\"click\", function ConfirmationPopoverWindowComponent_ng_template_0_div_6_Template_button_click_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r8);\n      const options_r3 = ɵngcc0.ɵɵnextContext().options;\n      return ɵngcc0.ɵɵresetView(options_r3.onCancel({\n        clickEvent: $event\n      }));\n    });\n    ɵngcc0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const options_r3 = ɵngcc0.ɵɵnextContext().options;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassMap(\"btn btn-block btn-\" + options_r3.cancelButtonType);\n    ɵngcc0.ɵɵproperty(\"mwlFocus\", options_r3.focusButton === \"cancel\")(\"innerHtml\", options_r3.cancelText, ɵngcc0.ɵɵsanitizeHtml);\n  }\n}\n\nfunction ConfirmationPopoverWindowComponent_ng_template_0_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 9)(1, \"button\", 10);\n    ɵngcc0.ɵɵlistener(\"click\", function ConfirmationPopoverWindowComponent_ng_template_0_div_7_Template_button_click_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r12);\n      const options_r3 = ɵngcc0.ɵɵnextContext().options;\n      return ɵngcc0.ɵɵresetView(options_r3.onConfirm({\n        clickEvent: $event\n      }));\n    });\n    ɵngcc0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const options_r3 = ɵngcc0.ɵɵnextContext().options;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassMap(\"btn btn-block btn-\" + options_r3.confirmButtonType);\n    ɵngcc0.ɵɵproperty(\"mwlFocus\", options_r3.focusButton === \"confirm\")(\"innerHtml\", options_r3.confirmText, ɵngcc0.ɵɵsanitizeHtml);\n  }\n}\n\nconst _c0 = function (a1, a2, a3, a4) {\n  return [\"popover\", a1, a2, a3, a4];\n};\n\nfunction ConfirmationPopoverWindowComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵelement(1, \"div\", 3)(2, \"h3\", 4);\n    ɵngcc0.ɵɵelementStart(3, \"div\", 5);\n    ɵngcc0.ɵɵelement(4, \"p\", 6);\n    ɵngcc0.ɵɵelementStart(5, \"div\", 7);\n    ɵngcc0.ɵɵtemplate(6, ConfirmationPopoverWindowComponent_ng_template_0_div_6_Template, 2, 4, \"div\", 8);\n    ɵngcc0.ɵɵtemplate(7, ConfirmationPopoverWindowComponent_ng_template_0_div_7_Template, 2, 4, \"div\", 8);\n    ɵngcc0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const options_r3 = ctx.options;\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction4(7, _c0, options_r3.placement, \"popover-\" + options_r3.placement, \"bs-popover-\" + options_r3.placement, options_r3.popoverClass));\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"innerHTML\", options_r3.popoverTitle, ɵngcc0.ɵɵsanitizeHtml);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"innerHTML\", options_r3.popoverMessage, ɵngcc0.ɵɵsanitizeHtml);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"confirm-btns-reversed\", options_r3.reverseButtonOrder);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !options_r3.hideCancelButton);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !options_r3.hideConfirmButton);\n  }\n}\n\nfunction ConfirmationPopoverWindowComponent_ng_template_2_Template(rf, ctx) {}\n\nconst _c1 = function (a0) {\n  return {\n    options: a0\n  };\n};\n\nclass ConfirmationPopoverOptions {\n  constructor() {\n    this.confirmText = 'Confirm';\n    this.cancelText = 'Cancel';\n    this.confirmButtonType = 'success';\n    this.cancelButtonType = 'outline-secondary';\n    this.placement = 'top';\n    this.hideConfirmButton = false;\n    this.hideCancelButton = false;\n    this.popoverClass = '';\n    this.appendToBody = false;\n    this.reverseButtonOrder = false;\n    this.closeOnOutsideClick = true;\n  }\n\n}\n\nConfirmationPopoverOptions.ɵfac = function ConfirmationPopoverOptions_Factory(t) {\n  return new (t || ConfirmationPopoverOptions)();\n};\n\nConfirmationPopoverOptions.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: ConfirmationPopoverOptions,\n  factory: ConfirmationPopoverOptions.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ConfirmationPopoverOptions, [{\n    type: Injectable\n  }], function () {\n    return [];\n  }, null);\n})();\n/**\n * @internal\n */\n\n\nclass ConfirmationPopoverWindowOptions extends ConfirmationPopoverOptions {}\n\nConfirmationPopoverWindowOptions.ɵfac = /*@__PURE__*/function () {\n  let ɵConfirmationPopoverWindowOptions_BaseFactory;\n  return function ConfirmationPopoverWindowOptions_Factory(t) {\n    return (ɵConfirmationPopoverWindowOptions_BaseFactory || (ɵConfirmationPopoverWindowOptions_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(ConfirmationPopoverWindowOptions)))(t || ConfirmationPopoverWindowOptions);\n  };\n}();\n\nConfirmationPopoverWindowOptions.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: ConfirmationPopoverWindowOptions,\n  factory: ConfirmationPopoverWindowOptions.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ConfirmationPopoverWindowOptions, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n * @internal\n */\n\n\nclass ConfirmationPopoverWindowComponent {\n  constructor(options) {\n    this.options = options;\n  }\n\n  ngAfterViewInit() {\n    this.options.onAfterViewInit();\n  }\n\n}\n\nConfirmationPopoverWindowComponent.ɵfac = function ConfirmationPopoverWindowComponent_Factory(t) {\n  return new (t || ConfirmationPopoverWindowComponent)(ɵngcc0.ɵɵdirectiveInject(ConfirmationPopoverWindowOptions));\n};\n\nConfirmationPopoverWindowComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: ConfirmationPopoverWindowComponent,\n  selectors: [[\"mwl-confirmation-popover-window\"]],\n  decls: 3,\n  vars: 4,\n  consts: [[\"defaultTemplate\", \"\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [3, \"ngClass\"], [1, \"popover-arrow\", \"arrow\"], [1, \"popover-title\", \"popover-header\", 3, \"innerHTML\"], [1, \"popover-content\", \"popover-body\"], [3, \"innerHTML\"], [1, \"confirm-btns\"], [\"class\", \"confirm-btn-container\", 4, \"ngIf\"], [1, \"confirm-btn-container\"], [\"type\", \"button\", 3, \"mwlFocus\", \"innerHtml\", \"click\"]],\n  template: function ConfirmationPopoverWindowComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, ConfirmationPopoverWindowComponent_ng_template_0_Template, 8, 12, \"ng-template\", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);\n      ɵngcc0.ɵɵtemplate(2, ConfirmationPopoverWindowComponent_ng_template_2_Template, 0, 0, \"ng-template\", 1);\n    }\n\n    if (rf & 2) {\n      const _r0 = ɵngcc0.ɵɵreference(1);\n\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx.options.customTemplate || _r0)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(2, _c1, ctx.options));\n    }\n  },\n  dependencies: function () {\n    return [ɵngcc1.NgClass, ɵngcc1.NgIf, ɵngcc1.NgTemplateOutlet, FocusDirective];\n  },\n  styles: [\".popover[_ngcontent-%COMP%]{display:block}.bs-popover-bottom[_ngcontent-%COMP%]   .arrow[_ngcontent-%COMP%], .bs-popover-top[_ngcontent-%COMP%]   .arrow[_ngcontent-%COMP%]{left:50%}.bs-popover-left[_ngcontent-%COMP%]   .arrow[_ngcontent-%COMP%], .bs-popover-right[_ngcontent-%COMP%]   .arrow[_ngcontent-%COMP%]{top:calc(50% - 8px)}.btn[_ngcontent-%COMP%]{transition:none}.confirm-btns[_ngcontent-%COMP%]{display:flex;justify-content:space-around}.confirm-btn-container[_ngcontent-%COMP%]{flex-basis:50%}.confirm-btn-container[_ngcontent-%COMP%]:not(:first-child){margin-left:4px}.confirm-btn-container[_ngcontent-%COMP%]:not(:last-child){margin-right:4px}.confirm-btns-reversed[_ngcontent-%COMP%]{flex-direction:row-reverse}.confirm-btns-reversed[_ngcontent-%COMP%]   .confirm-btn-container[_ngcontent-%COMP%]:not(:first-child){margin-left:0;margin-right:4px}.confirm-btns-reversed[_ngcontent-%COMP%]   .confirm-btn-container[_ngcontent-%COMP%]:not(:last-child){margin-left:4px;margin-right:0}\"]\n});\n\nConfirmationPopoverWindowComponent.ctorParameters = () => [{\n  type: ConfirmationPopoverWindowOptions\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ConfirmationPopoverWindowComponent, [{\n    type: Component,\n    args: [{\n      selector: 'mwl-confirmation-popover-window',\n      template: \"<ng-template #defaultTemplate let-options=\\\"options\\\">\\n  <div\\n    [ngClass]=\\\"[\\n      'popover',\\n      options.placement,\\n      'popover-' + options.placement,\\n      'bs-popover-' + options.placement,\\n      options.popoverClass\\n    ]\\\"\\n  >\\n    <div class=\\\"popover-arrow arrow\\\"></div>\\n    <h3\\n      class=\\\"popover-title popover-header\\\"\\n      [innerHTML]=\\\"options.popoverTitle\\\"\\n    ></h3>\\n    <div class=\\\"popover-content popover-body\\\">\\n      <p [innerHTML]=\\\"options.popoverMessage\\\"></p>\\n      <div\\n        class=\\\"confirm-btns\\\"\\n        [class.confirm-btns-reversed]=\\\"options.reverseButtonOrder\\\"\\n      >\\n        <div class=\\\"confirm-btn-container\\\" *ngIf=\\\"!options.hideCancelButton\\\">\\n          <button\\n            type=\\\"button\\\"\\n            [mwlFocus]=\\\"options.focusButton === 'cancel'\\\"\\n            [class]=\\\"'btn btn-block btn-' + options.cancelButtonType\\\"\\n            (click)=\\\"options.onCancel({ clickEvent: $event })\\\"\\n            [innerHtml]=\\\"options.cancelText\\\"\\n          ></button>\\n        </div>\\n        <div class=\\\"confirm-btn-container\\\" *ngIf=\\\"!options.hideConfirmButton\\\">\\n          <button\\n            type=\\\"button\\\"\\n            [mwlFocus]=\\\"options.focusButton === 'confirm'\\\"\\n            [class]=\\\"'btn btn-block btn-' + options.confirmButtonType\\\"\\n            (click)=\\\"options.onConfirm({ clickEvent: $event })\\\"\\n            [innerHtml]=\\\"options.confirmText\\\"\\n          ></button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</ng-template>\\n<ng-template\\n  [ngTemplateOutlet]=\\\"options.customTemplate || defaultTemplate\\\"\\n  [ngTemplateOutletContext]=\\\"{ options: options }\\\"\\n>\\n</ng-template>\\n\",\n      styles: [\".popover{display:block}.bs-popover-bottom .arrow,.bs-popover-top .arrow{left:50%}.bs-popover-left .arrow,.bs-popover-right .arrow{top:calc(50% - 8px)}.btn{transition:none}.confirm-btns{display:flex;justify-content:space-around}.confirm-btn-container{flex-basis:50%}.confirm-btn-container:not(:first-child){margin-left:4px}.confirm-btn-container:not(:last-child){margin-right:4px}.confirm-btns-reversed{flex-direction:row-reverse}.confirm-btns-reversed .confirm-btn-container:not(:first-child){margin-left:0;margin-right:4px}.confirm-btns-reversed .confirm-btn-container:not(:last-child){margin-left:4px;margin-right:0}\"]\n    }]\n  }], function () {\n    return [{\n      type: ConfirmationPopoverWindowOptions\n    }];\n  }, null);\n})();\n/**\n All properties can be set on the directive as attributes like so (use `ConfirmationPopoverModule.forRoot()` to configure them globally):\n ```html\n <button\n   class=\"btn btn-outline-secondary\"\n   mwlConfirmationPopover\n   [popoverTitle]=\"popoverTitle\"\n   [popoverMessage]=\"popoverMessage\"\n   placement=\"left\"\n   (confirm)=\"confirmClicked = true\"\n   (cancel)=\"cancelClicked = true\"\n   [(isOpen)]=\"isOpen\">\n    Show confirm popover!\n  </button>\n  ```\n */\n\n\nclass ConfirmationPopoverDirective {\n  /**\n   * @internal\n   */\n  constructor(viewContainerRef, elm, defaultOptions, cfr, renderer) {\n    this.viewContainerRef = viewContainerRef;\n    this.elm = elm;\n    this.defaultOptions = defaultOptions;\n    this.cfr = cfr;\n    this.renderer = renderer;\n    /**\n     * Whether to disable showing the popover. Default `false`.\n     */\n\n    this.isDisabled = false;\n    /**\n     * Will open or show the popover when changed.\n     * Can be sugared with `isOpenChange` to emulate 2-way binding like so `[(isOpen)]=\"isOpen\"`\n     */\n\n    this.isOpen = false;\n    /**\n     * Will emit when the popover is opened or closed\n     */\n\n    this.isOpenChange = new EventEmitter(true);\n    /**\n     * An expression that is called when the confirm button is clicked.\n     */\n\n    this.confirm = new EventEmitter();\n    /**\n     * An expression that is called when the cancel button is clicked.\n     */\n\n    this.cancel = new EventEmitter();\n    this.eventListeners = [];\n  }\n  /**\n   * @internal\n   */\n\n\n  ngOnInit() {\n    this.isOpenChange.emit(false);\n  }\n  /**\n   * @internal\n   */\n\n\n  ngOnChanges(changes) {\n    if (changes.isOpen) {\n      if (changes.isOpen.currentValue === true) {\n        this.showPopover();\n      } else {\n        this.hidePopover();\n      }\n    }\n  }\n  /**\n   * @internal\n   */\n\n\n  ngOnDestroy() {\n    this.hidePopover();\n  }\n  /**\n   * @internal\n   */\n\n\n  onConfirm(event) {\n    this.confirm.emit(event);\n    this.hidePopover();\n  }\n  /**\n   * @internal\n   */\n\n\n  onCancel(event) {\n    this.cancel.emit(event);\n    this.hidePopover();\n  }\n  /**\n   * @internal\n   */\n\n\n  togglePopover() {\n    if (!this.popover) {\n      this.showPopover();\n    } else {\n      this.hidePopover();\n    }\n  }\n\n  onDocumentClick(event) {\n    const closeOnOutsideClick = typeof this.closeOnOutsideClick !== 'undefined' ? this.closeOnOutsideClick : this.defaultOptions.closeOnOutsideClick;\n\n    if (this.popover && !this.elm.nativeElement.contains(event.target) && !this.popover.location.nativeElement.contains(event.target) && closeOnOutsideClick) {\n      this.hidePopover();\n    }\n  }\n\n  showPopover() {\n    if (!this.popover && !this.isDisabled) {\n      // work around for https://github.com/mattlewis92/angular-confirmation-popover/issues/65\n      // otherwise the document click event gets fired after the click event\n      // that triggered the popover to open (no idea why this is so)\n      setTimeout(() => {\n        this.eventListeners = [this.renderer.listen('document', 'click', event => this.onDocumentClick(event)), this.renderer.listen('document', 'touchend', event => this.onDocumentClick(event)), this.renderer.listen('window', 'resize', () => this.positionPopover())];\n      });\n      const options = new ConfirmationPopoverWindowOptions();\n      Object.assign(options, this.defaultOptions, {\n        onConfirm: event => {\n          this.onConfirm(event);\n        },\n        onCancel: event => {\n          this.onCancel(event);\n        },\n        onAfterViewInit: () => {\n          this.positionPopover();\n        }\n      });\n      const optionalParams = ['confirmText', 'cancelText', 'placement', 'confirmButtonType', 'cancelButtonType', 'focusButton', 'hideConfirmButton', 'hideCancelButton', 'popoverClass', 'appendToBody', 'customTemplate', 'reverseButtonOrder', 'popoverTitle', 'popoverMessage'];\n      optionalParams.forEach(param => {\n        if (typeof this[param] !== 'undefined') {\n          options[param] = this[param];\n        }\n      });\n      const componentFactory = this.cfr.resolveComponentFactory(ConfirmationPopoverWindowComponent);\n      const childInjector = Injector.create({\n        providers: [{\n          provide: ConfirmationPopoverWindowOptions,\n          useValue: options\n        }]\n      });\n      this.popover = this.viewContainerRef.createComponent(componentFactory, this.viewContainerRef.length, childInjector);\n\n      if (options.appendToBody) {\n        document.body.appendChild(this.popover.location.nativeElement);\n      }\n\n      this.isOpenChange.emit(true);\n    }\n  }\n\n  positionPopover() {\n    if (this.popover) {\n      const popoverElement = this.popover.location.nativeElement.children[0];\n      positionElements(this.elm.nativeElement, popoverElement, this.placement || this.defaultOptions.placement, this.appendToBody || this.defaultOptions.appendToBody);\n    }\n  }\n\n  hidePopover() {\n    if (this.popover) {\n      this.popover.destroy();\n      delete this.popover;\n      this.isOpenChange.emit(false);\n      this.eventListeners.forEach(fn => fn());\n      this.eventListeners = [];\n    }\n  }\n\n}\n\nConfirmationPopoverDirective.ɵfac = function ConfirmationPopoverDirective_Factory(t) {\n  return new (t || ConfirmationPopoverDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ConfirmationPopoverOptions), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2));\n};\n\nConfirmationPopoverDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: ConfirmationPopoverDirective,\n  selectors: [[\"\", \"mwlConfirmationPopover\", \"\"]],\n  hostBindings: function ConfirmationPopoverDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"click\", function ConfirmationPopoverDirective_click_HostBindingHandler() {\n        return ctx.togglePopover();\n      });\n    }\n  },\n  inputs: {\n    isDisabled: \"isDisabled\",\n    isOpen: \"isOpen\",\n    popoverTitle: \"popoverTitle\",\n    popoverMessage: \"popoverMessage\",\n    confirmText: \"confirmText\",\n    cancelText: \"cancelText\",\n    placement: \"placement\",\n    confirmButtonType: \"confirmButtonType\",\n    cancelButtonType: \"cancelButtonType\",\n    focusButton: \"focusButton\",\n    hideConfirmButton: \"hideConfirmButton\",\n    hideCancelButton: \"hideCancelButton\",\n    customTemplate: \"customTemplate\",\n    popoverClass: \"popoverClass\",\n    appendToBody: \"appendToBody\",\n    reverseButtonOrder: \"reverseButtonOrder\",\n    closeOnOutsideClick: \"closeOnOutsideClick\"\n  },\n  outputs: {\n    isOpenChange: \"isOpenChange\",\n    confirm: \"confirm\",\n    cancel: \"cancel\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature]\n});\n\nConfirmationPopoverDirective.ctorParameters = () => [{\n  type: ViewContainerRef\n}, {\n  type: ElementRef\n}, {\n  type: ConfirmationPopoverOptions\n}, {\n  type: ComponentFactoryResolver\n}, {\n  type: Renderer2\n}];\n\nConfirmationPopoverDirective.propDecorators = {\n  popoverTitle: [{\n    type: Input\n  }],\n  popoverMessage: [{\n    type: Input\n  }],\n  confirmText: [{\n    type: Input\n  }],\n  cancelText: [{\n    type: Input\n  }],\n  placement: [{\n    type: Input\n  }],\n  confirmButtonType: [{\n    type: Input\n  }],\n  cancelButtonType: [{\n    type: Input\n  }],\n  focusButton: [{\n    type: Input\n  }],\n  hideConfirmButton: [{\n    type: Input\n  }],\n  hideCancelButton: [{\n    type: Input\n  }],\n  isDisabled: [{\n    type: Input\n  }],\n  isOpen: [{\n    type: Input\n  }],\n  customTemplate: [{\n    type: Input\n  }],\n  isOpenChange: [{\n    type: Output\n  }],\n  confirm: [{\n    type: Output\n  }],\n  cancel: [{\n    type: Output\n  }],\n  popoverClass: [{\n    type: Input\n  }],\n  appendToBody: [{\n    type: Input\n  }],\n  reverseButtonOrder: [{\n    type: Input\n  }],\n  closeOnOutsideClick: [{\n    type: Input\n  }],\n  togglePopover: [{\n    type: HostListener,\n    args: ['click']\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ConfirmationPopoverDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[mwlConfirmationPopover]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ViewContainerRef\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ConfirmationPopoverOptions\n    }, {\n      type: ɵngcc0.ComponentFactoryResolver\n    }, {\n      type: ɵngcc0.Renderer2\n    }];\n  }, {\n    isDisabled: [{\n      type: Input\n    }],\n    isOpen: [{\n      type: Input\n    }],\n    isOpenChange: [{\n      type: Output\n    }],\n    confirm: [{\n      type: Output\n    }],\n    cancel: [{\n      type: Output\n    }],\n\n    /**\n     * @internal\n     */\n    togglePopover: [{\n      type: HostListener,\n      args: ['click']\n    }],\n    popoverTitle: [{\n      type: Input\n    }],\n    popoverMessage: [{\n      type: Input\n    }],\n    confirmText: [{\n      type: Input\n    }],\n    cancelText: [{\n      type: Input\n    }],\n    placement: [{\n      type: Input\n    }],\n    confirmButtonType: [{\n      type: Input\n    }],\n    cancelButtonType: [{\n      type: Input\n    }],\n    focusButton: [{\n      type: Input\n    }],\n    hideConfirmButton: [{\n      type: Input\n    }],\n    hideCancelButton: [{\n      type: Input\n    }],\n    customTemplate: [{\n      type: Input\n    }],\n    popoverClass: [{\n      type: Input\n    }],\n    appendToBody: [{\n      type: Input\n    }],\n    reverseButtonOrder: [{\n      type: Input\n    }],\n    closeOnOutsideClick: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * A helper directive to focus buttons. You will only need this if using a custom template\n */\n\n\nclass FocusDirective {\n  constructor(elm) {\n    this.elm = elm;\n  }\n\n  ngOnChanges(changes) {\n    if (changes.mwlFocus && this.mwlFocus === true) {\n      this.elm.nativeElement.focus();\n    }\n  }\n\n}\n\nFocusDirective.ɵfac = function FocusDirective_Factory(t) {\n  return new (t || FocusDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\n\nFocusDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: FocusDirective,\n  selectors: [[\"\", \"mwlFocus\", \"\"]],\n  inputs: {\n    mwlFocus: \"mwlFocus\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature]\n});\n\nFocusDirective.ctorParameters = () => [{\n  type: ElementRef\n}];\n\nFocusDirective.propDecorators = {\n  mwlFocus: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FocusDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[mwlFocus]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }];\n  }, {\n    mwlFocus: [{\n      type: Input\n    }]\n  });\n})();\n\nconst USER_OPTIONS = new InjectionToken('confirmation popover user options');\n\nfunction optionsFactory(userOptions) {\n  const options = new ConfirmationPopoverOptions();\n  Object.assign(options, userOptions);\n  return options;\n}\n\nclass ConfirmationPopoverModule {\n  static forRoot(options = {}) {\n    return {\n      ngModule: ConfirmationPopoverModule,\n      providers: [{\n        provide: USER_OPTIONS,\n        useValue: options\n      }, {\n        provide: ConfirmationPopoverOptions,\n        useFactory: optionsFactory,\n        deps: [USER_OPTIONS]\n      }]\n    };\n  }\n\n}\n\nConfirmationPopoverModule.ɵfac = function ConfirmationPopoverModule_Factory(t) {\n  return new (t || ConfirmationPopoverModule)();\n};\n\nConfirmationPopoverModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: ConfirmationPopoverModule\n});\nConfirmationPopoverModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  imports: [CommonModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ConfirmationPopoverModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [ConfirmationPopoverDirective, ConfirmationPopoverWindowComponent, FocusDirective],\n      imports: [CommonModule],\n      exports: [ConfirmationPopoverDirective, FocusDirective],\n      entryComponents: [ConfirmationPopoverWindowComponent]\n    }]\n  }], null, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ConfirmationPopoverModule, {\n    declarations: function () {\n      return [ConfirmationPopoverDirective, ConfirmationPopoverWindowComponent, FocusDirective];\n    },\n    imports: function () {\n      return [CommonModule];\n    },\n    exports: function () {\n      return [ConfirmationPopoverDirective, FocusDirective];\n    }\n  });\n})();\n/*\n * Public API Surface of angular-confirmation-popover\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { ConfirmationPopoverDirective, ConfirmationPopoverModule, FocusDirective, USER_OPTIONS as ɵa, optionsFactory as ɵb, ConfirmationPopoverOptions as ɵc, ConfirmationPopoverWindowComponent as ɵd, ConfirmationPopoverWindowOptions as ɵe };","map":{"version":3,"names":["Injectable","Component","EventEmitter","Injector","Directive","ViewContainerRef","ElementRef","ComponentFactoryResolver","Renderer2","Input","Output","HostListener","InjectionToken","NgModule","CommonModule","positionElements","ɵngcc0","ɵngcc1","ConfirmationPopoverWindowComponent_ng_template_0_div_6_Template","rf","ctx","_r8","ɵɵgetCurrentView","ɵɵelementStart","ɵɵlistener","ConfirmationPopoverWindowComponent_ng_template_0_div_6_Template_button_click_1_listener","$event","ɵɵrestoreView","options_r3","ɵɵnextContext","options","ɵɵresetView","onCancel","clickEvent","ɵɵelementEnd","ɵɵadvance","ɵɵclassMap","cancelButtonType","ɵɵproperty","focusButton","cancelText","ɵɵsanitizeHtml","ConfirmationPopoverWindowComponent_ng_template_0_div_7_Template","_r12","ConfirmationPopoverWindowComponent_ng_template_0_div_7_Template_button_click_1_listener","onConfirm","confirmButtonType","confirmText","_c0","a1","a2","a3","a4","ConfirmationPopoverWindowComponent_ng_template_0_Template","ɵɵelement","ɵɵtemplate","ɵɵpureFunction4","placement","popoverClass","popoverTitle","popoverMessage","ɵɵclassProp","reverseButtonOrder","hideCancelButton","hideConfirmButton","ConfirmationPopoverWindowComponent_ng_template_2_Template","_c1","a0","ConfirmationPopoverOptions","constructor","appendToBody","closeOnOutsideClick","ɵfac","ConfirmationPopoverOptions_Factory","t","ɵprov","ɵɵdefineInjectable","token","factory","ngDevMode","ɵsetClassMetadata","type","ConfirmationPopoverWindowOptions","ɵConfirmationPopoverWindowOptions_BaseFactory","ConfirmationPopoverWindowOptions_Factory","ɵɵgetInheritedFactory","ConfirmationPopoverWindowComponent","ngAfterViewInit","onAfterViewInit","ConfirmationPopoverWindowComponent_Factory","ɵɵdirectiveInject","ɵcmp","ɵɵdefineComponent","selectors","decls","vars","consts","template","ConfirmationPopoverWindowComponent_Template","ɵɵtemplateRefExtractor","_r0","ɵɵreference","customTemplate","ɵɵpureFunction1","dependencies","NgClass","NgIf","NgTemplateOutlet","FocusDirective","styles","ctorParameters","args","selector","ConfirmationPopoverDirective","viewContainerRef","elm","defaultOptions","cfr","renderer","isDisabled","isOpen","isOpenChange","confirm","cancel","eventListeners","ngOnInit","emit","ngOnChanges","changes","currentValue","showPopover","hidePopover","ngOnDestroy","event","togglePopover","popover","onDocumentClick","nativeElement","contains","target","location","setTimeout","listen","positionPopover","Object","assign","optionalParams","forEach","param","componentFactory","resolveComponentFactory","childInjector","create","providers","provide","useValue","createComponent","length","document","body","appendChild","popoverElement","children","destroy","fn","ConfirmationPopoverDirective_Factory","ɵdir","ɵɵdefineDirective","hostBindings","ConfirmationPopoverDirective_HostBindings","ConfirmationPopoverDirective_click_HostBindingHandler","inputs","outputs","features","ɵɵNgOnChangesFeature","propDecorators","mwlFocus","focus","FocusDirective_Factory","USER_OPTIONS","optionsFactory","userOptions","ConfirmationPopoverModule","forRoot","ngModule","useFactory","deps","ConfirmationPopoverModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","declarations","exports","entryComponents","ngJitMode","ɵɵsetNgModuleScope","ɵa","ɵb","ɵc","ɵd","ɵe"],"sources":["C:/Users/High Tech Assistance/Desktop/e-learningProject__frontend - Copie/e-learningProject__frontend - Copie/frontend/node_modules/angular-confirmation-popover/__ivy_ngcc__/fesm2015/angular-confirmation-popover.js"],"sourcesContent":["import { Injectable, Component, EventEmitter, Injector, Directive, ViewContainerRef, ElementRef, ComponentFactoryResolver, Renderer2, Input, Output, HostListener, InjectionToken, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { positionElements } from 'positioning';\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\n\nfunction ConfirmationPopoverWindowComponent_ng_template_0_div_6_Template(rf, ctx) { if (rf & 1) {\n    const _r8 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 9)(1, \"button\", 10);\n    ɵngcc0.ɵɵlistener(\"click\", function ConfirmationPopoverWindowComponent_ng_template_0_div_6_Template_button_click_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r8); const options_r3 = ɵngcc0.ɵɵnextContext().options; return ɵngcc0.ɵɵresetView(options_r3.onCancel({ clickEvent: $event })); });\n    ɵngcc0.ɵɵelementEnd()();\n} if (rf & 2) {\n    const options_r3 = ɵngcc0.ɵɵnextContext().options;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassMap(\"btn btn-block btn-\" + options_r3.cancelButtonType);\n    ɵngcc0.ɵɵproperty(\"mwlFocus\", options_r3.focusButton === \"cancel\")(\"innerHtml\", options_r3.cancelText, ɵngcc0.ɵɵsanitizeHtml);\n} }\nfunction ConfirmationPopoverWindowComponent_ng_template_0_div_7_Template(rf, ctx) { if (rf & 1) {\n    const _r12 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 9)(1, \"button\", 10);\n    ɵngcc0.ɵɵlistener(\"click\", function ConfirmationPopoverWindowComponent_ng_template_0_div_7_Template_button_click_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r12); const options_r3 = ɵngcc0.ɵɵnextContext().options; return ɵngcc0.ɵɵresetView(options_r3.onConfirm({ clickEvent: $event })); });\n    ɵngcc0.ɵɵelementEnd()();\n} if (rf & 2) {\n    const options_r3 = ɵngcc0.ɵɵnextContext().options;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassMap(\"btn btn-block btn-\" + options_r3.confirmButtonType);\n    ɵngcc0.ɵɵproperty(\"mwlFocus\", options_r3.focusButton === \"confirm\")(\"innerHtml\", options_r3.confirmText, ɵngcc0.ɵɵsanitizeHtml);\n} }\nconst _c0 = function (a1, a2, a3, a4) { return [\"popover\", a1, a2, a3, a4]; };\nfunction ConfirmationPopoverWindowComponent_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵelement(1, \"div\", 3)(2, \"h3\", 4);\n    ɵngcc0.ɵɵelementStart(3, \"div\", 5);\n    ɵngcc0.ɵɵelement(4, \"p\", 6);\n    ɵngcc0.ɵɵelementStart(5, \"div\", 7);\n    ɵngcc0.ɵɵtemplate(6, ConfirmationPopoverWindowComponent_ng_template_0_div_6_Template, 2, 4, \"div\", 8);\n    ɵngcc0.ɵɵtemplate(7, ConfirmationPopoverWindowComponent_ng_template_0_div_7_Template, 2, 4, \"div\", 8);\n    ɵngcc0.ɵɵelementEnd()()();\n} if (rf & 2) {\n    const options_r3 = ctx.options;\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction4(7, _c0, options_r3.placement, \"popover-\" + options_r3.placement, \"bs-popover-\" + options_r3.placement, options_r3.popoverClass));\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"innerHTML\", options_r3.popoverTitle, ɵngcc0.ɵɵsanitizeHtml);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"innerHTML\", options_r3.popoverMessage, ɵngcc0.ɵɵsanitizeHtml);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"confirm-btns-reversed\", options_r3.reverseButtonOrder);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !options_r3.hideCancelButton);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !options_r3.hideConfirmButton);\n} }\nfunction ConfirmationPopoverWindowComponent_ng_template_2_Template(rf, ctx) { }\nconst _c1 = function (a0) { return { options: a0 }; };\nclass ConfirmationPopoverOptions {\n    constructor() {\n        this.confirmText = 'Confirm';\n        this.cancelText = 'Cancel';\n        this.confirmButtonType = 'success';\n        this.cancelButtonType = 'outline-secondary';\n        this.placement = 'top';\n        this.hideConfirmButton = false;\n        this.hideCancelButton = false;\n        this.popoverClass = '';\n        this.appendToBody = false;\n        this.reverseButtonOrder = false;\n        this.closeOnOutsideClick = true;\n    }\n}\nConfirmationPopoverOptions.ɵfac = function ConfirmationPopoverOptions_Factory(t) { return new (t || ConfirmationPopoverOptions)(); };\nConfirmationPopoverOptions.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: ConfirmationPopoverOptions, factory: ConfirmationPopoverOptions.ɵfac });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ConfirmationPopoverOptions, [{\n        type: Injectable\n    }], function () { return []; }, null); })();\n\n/**\n * @internal\n */\nclass ConfirmationPopoverWindowOptions extends ConfirmationPopoverOptions {\n}\nConfirmationPopoverWindowOptions.ɵfac = /*@__PURE__*/ function () { let ɵConfirmationPopoverWindowOptions_BaseFactory; return function ConfirmationPopoverWindowOptions_Factory(t) { return (ɵConfirmationPopoverWindowOptions_BaseFactory || (ɵConfirmationPopoverWindowOptions_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(ConfirmationPopoverWindowOptions)))(t || ConfirmationPopoverWindowOptions); }; }();\nConfirmationPopoverWindowOptions.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: ConfirmationPopoverWindowOptions, factory: ConfirmationPopoverWindowOptions.ɵfac });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ConfirmationPopoverWindowOptions, [{\n        type: Injectable\n    }], null, null); })();\n\n/**\n * @internal\n */\nclass ConfirmationPopoverWindowComponent {\n    constructor(options) {\n        this.options = options;\n    }\n    ngAfterViewInit() {\n        this.options.onAfterViewInit();\n    }\n}\nConfirmationPopoverWindowComponent.ɵfac = function ConfirmationPopoverWindowComponent_Factory(t) { return new (t || ConfirmationPopoverWindowComponent)(ɵngcc0.ɵɵdirectiveInject(ConfirmationPopoverWindowOptions)); };\nConfirmationPopoverWindowComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ConfirmationPopoverWindowComponent, selectors: [[\"mwl-confirmation-popover-window\"]], decls: 3, vars: 4, consts: [[\"defaultTemplate\", \"\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [3, \"ngClass\"], [1, \"popover-arrow\", \"arrow\"], [1, \"popover-title\", \"popover-header\", 3, \"innerHTML\"], [1, \"popover-content\", \"popover-body\"], [3, \"innerHTML\"], [1, \"confirm-btns\"], [\"class\", \"confirm-btn-container\", 4, \"ngIf\"], [1, \"confirm-btn-container\"], [\"type\", \"button\", 3, \"mwlFocus\", \"innerHtml\", \"click\"]], template: function ConfirmationPopoverWindowComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, ConfirmationPopoverWindowComponent_ng_template_0_Template, 8, 12, \"ng-template\", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);\n        ɵngcc0.ɵɵtemplate(2, ConfirmationPopoverWindowComponent_ng_template_2_Template, 0, 0, \"ng-template\", 1);\n    } if (rf & 2) {\n        const _r0 = ɵngcc0.ɵɵreference(1);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx.options.customTemplate || _r0)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(2, _c1, ctx.options));\n    } }, dependencies: function () { return [ɵngcc1.NgClass, ɵngcc1.NgIf, ɵngcc1.NgTemplateOutlet, FocusDirective]; }, styles: [\".popover[_ngcontent-%COMP%]{display:block}.bs-popover-bottom[_ngcontent-%COMP%]   .arrow[_ngcontent-%COMP%], .bs-popover-top[_ngcontent-%COMP%]   .arrow[_ngcontent-%COMP%]{left:50%}.bs-popover-left[_ngcontent-%COMP%]   .arrow[_ngcontent-%COMP%], .bs-popover-right[_ngcontent-%COMP%]   .arrow[_ngcontent-%COMP%]{top:calc(50% - 8px)}.btn[_ngcontent-%COMP%]{transition:none}.confirm-btns[_ngcontent-%COMP%]{display:flex;justify-content:space-around}.confirm-btn-container[_ngcontent-%COMP%]{flex-basis:50%}.confirm-btn-container[_ngcontent-%COMP%]:not(:first-child){margin-left:4px}.confirm-btn-container[_ngcontent-%COMP%]:not(:last-child){margin-right:4px}.confirm-btns-reversed[_ngcontent-%COMP%]{flex-direction:row-reverse}.confirm-btns-reversed[_ngcontent-%COMP%]   .confirm-btn-container[_ngcontent-%COMP%]:not(:first-child){margin-left:0;margin-right:4px}.confirm-btns-reversed[_ngcontent-%COMP%]   .confirm-btn-container[_ngcontent-%COMP%]:not(:last-child){margin-left:4px;margin-right:0}\"] });\nConfirmationPopoverWindowComponent.ctorParameters = () => [\n    { type: ConfirmationPopoverWindowOptions }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ConfirmationPopoverWindowComponent, [{\n        type: Component,\n        args: [{ selector: 'mwl-confirmation-popover-window', template: \"<ng-template #defaultTemplate let-options=\\\"options\\\">\\n  <div\\n    [ngClass]=\\\"[\\n      'popover',\\n      options.placement,\\n      'popover-' + options.placement,\\n      'bs-popover-' + options.placement,\\n      options.popoverClass\\n    ]\\\"\\n  >\\n    <div class=\\\"popover-arrow arrow\\\"></div>\\n    <h3\\n      class=\\\"popover-title popover-header\\\"\\n      [innerHTML]=\\\"options.popoverTitle\\\"\\n    ></h3>\\n    <div class=\\\"popover-content popover-body\\\">\\n      <p [innerHTML]=\\\"options.popoverMessage\\\"></p>\\n      <div\\n        class=\\\"confirm-btns\\\"\\n        [class.confirm-btns-reversed]=\\\"options.reverseButtonOrder\\\"\\n      >\\n        <div class=\\\"confirm-btn-container\\\" *ngIf=\\\"!options.hideCancelButton\\\">\\n          <button\\n            type=\\\"button\\\"\\n            [mwlFocus]=\\\"options.focusButton === 'cancel'\\\"\\n            [class]=\\\"'btn btn-block btn-' + options.cancelButtonType\\\"\\n            (click)=\\\"options.onCancel({ clickEvent: $event })\\\"\\n            [innerHtml]=\\\"options.cancelText\\\"\\n          ></button>\\n        </div>\\n        <div class=\\\"confirm-btn-container\\\" *ngIf=\\\"!options.hideConfirmButton\\\">\\n          <button\\n            type=\\\"button\\\"\\n            [mwlFocus]=\\\"options.focusButton === 'confirm'\\\"\\n            [class]=\\\"'btn btn-block btn-' + options.confirmButtonType\\\"\\n            (click)=\\\"options.onConfirm({ clickEvent: $event })\\\"\\n            [innerHtml]=\\\"options.confirmText\\\"\\n          ></button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</ng-template>\\n<ng-template\\n  [ngTemplateOutlet]=\\\"options.customTemplate || defaultTemplate\\\"\\n  [ngTemplateOutletContext]=\\\"{ options: options }\\\"\\n>\\n</ng-template>\\n\", styles: [\".popover{display:block}.bs-popover-bottom .arrow,.bs-popover-top .arrow{left:50%}.bs-popover-left .arrow,.bs-popover-right .arrow{top:calc(50% - 8px)}.btn{transition:none}.confirm-btns{display:flex;justify-content:space-around}.confirm-btn-container{flex-basis:50%}.confirm-btn-container:not(:first-child){margin-left:4px}.confirm-btn-container:not(:last-child){margin-right:4px}.confirm-btns-reversed{flex-direction:row-reverse}.confirm-btns-reversed .confirm-btn-container:not(:first-child){margin-left:0;margin-right:4px}.confirm-btns-reversed .confirm-btn-container:not(:last-child){margin-left:4px;margin-right:0}\"] }]\n    }], function () { return [{ type: ConfirmationPopoverWindowOptions }]; }, null); })();\n\n/**\n All properties can be set on the directive as attributes like so (use `ConfirmationPopoverModule.forRoot()` to configure them globally):\n ```html\n <button\n   class=\"btn btn-outline-secondary\"\n   mwlConfirmationPopover\n   [popoverTitle]=\"popoverTitle\"\n   [popoverMessage]=\"popoverMessage\"\n   placement=\"left\"\n   (confirm)=\"confirmClicked = true\"\n   (cancel)=\"cancelClicked = true\"\n   [(isOpen)]=\"isOpen\">\n    Show confirm popover!\n  </button>\n  ```\n */\nclass ConfirmationPopoverDirective {\n    /**\n     * @internal\n     */\n    constructor(viewContainerRef, elm, defaultOptions, cfr, renderer) {\n        this.viewContainerRef = viewContainerRef;\n        this.elm = elm;\n        this.defaultOptions = defaultOptions;\n        this.cfr = cfr;\n        this.renderer = renderer;\n        /**\n         * Whether to disable showing the popover. Default `false`.\n         */\n        this.isDisabled = false;\n        /**\n         * Will open or show the popover when changed.\n         * Can be sugared with `isOpenChange` to emulate 2-way binding like so `[(isOpen)]=\"isOpen\"`\n         */\n        this.isOpen = false;\n        /**\n         * Will emit when the popover is opened or closed\n         */\n        this.isOpenChange = new EventEmitter(true);\n        /**\n         * An expression that is called when the confirm button is clicked.\n         */\n        this.confirm = new EventEmitter();\n        /**\n         * An expression that is called when the cancel button is clicked.\n         */\n        this.cancel = new EventEmitter();\n        this.eventListeners = [];\n    }\n    /**\n     * @internal\n     */\n    ngOnInit() {\n        this.isOpenChange.emit(false);\n    }\n    /**\n     * @internal\n     */\n    ngOnChanges(changes) {\n        if (changes.isOpen) {\n            if (changes.isOpen.currentValue === true) {\n                this.showPopover();\n            }\n            else {\n                this.hidePopover();\n            }\n        }\n    }\n    /**\n     * @internal\n     */\n    ngOnDestroy() {\n        this.hidePopover();\n    }\n    /**\n     * @internal\n     */\n    onConfirm(event) {\n        this.confirm.emit(event);\n        this.hidePopover();\n    }\n    /**\n     * @internal\n     */\n    onCancel(event) {\n        this.cancel.emit(event);\n        this.hidePopover();\n    }\n    /**\n     * @internal\n     */\n    togglePopover() {\n        if (!this.popover) {\n            this.showPopover();\n        }\n        else {\n            this.hidePopover();\n        }\n    }\n    onDocumentClick(event) {\n        const closeOnOutsideClick = typeof this.closeOnOutsideClick !== 'undefined'\n            ? this.closeOnOutsideClick\n            : this.defaultOptions.closeOnOutsideClick;\n        if (this.popover &&\n            !this.elm.nativeElement.contains(event.target) &&\n            !this.popover.location.nativeElement.contains(event.target) &&\n            closeOnOutsideClick) {\n            this.hidePopover();\n        }\n    }\n    showPopover() {\n        if (!this.popover && !this.isDisabled) {\n            // work around for https://github.com/mattlewis92/angular-confirmation-popover/issues/65\n            // otherwise the document click event gets fired after the click event\n            // that triggered the popover to open (no idea why this is so)\n            setTimeout(() => {\n                this.eventListeners = [\n                    this.renderer.listen('document', 'click', (event) => this.onDocumentClick(event)),\n                    this.renderer.listen('document', 'touchend', (event) => this.onDocumentClick(event)),\n                    this.renderer.listen('window', 'resize', () => this.positionPopover()),\n                ];\n            });\n            const options = new ConfirmationPopoverWindowOptions();\n            Object.assign(options, this.defaultOptions, {\n                onConfirm: (event) => {\n                    this.onConfirm(event);\n                },\n                onCancel: (event) => {\n                    this.onCancel(event);\n                },\n                onAfterViewInit: () => {\n                    this.positionPopover();\n                },\n            });\n            const optionalParams = [\n                'confirmText',\n                'cancelText',\n                'placement',\n                'confirmButtonType',\n                'cancelButtonType',\n                'focusButton',\n                'hideConfirmButton',\n                'hideCancelButton',\n                'popoverClass',\n                'appendToBody',\n                'customTemplate',\n                'reverseButtonOrder',\n                'popoverTitle',\n                'popoverMessage',\n            ];\n            optionalParams.forEach((param) => {\n                if (typeof this[param] !== 'undefined') {\n                    options[param] = this[param];\n                }\n            });\n            const componentFactory = this.cfr.resolveComponentFactory(ConfirmationPopoverWindowComponent);\n            const childInjector = Injector.create({\n                providers: [\n                    {\n                        provide: ConfirmationPopoverWindowOptions,\n                        useValue: options,\n                    },\n                ],\n            });\n            this.popover = this.viewContainerRef.createComponent(componentFactory, this.viewContainerRef.length, childInjector);\n            if (options.appendToBody) {\n                document.body.appendChild(this.popover.location.nativeElement);\n            }\n            this.isOpenChange.emit(true);\n        }\n    }\n    positionPopover() {\n        if (this.popover) {\n            const popoverElement = this.popover.location.nativeElement.children[0];\n            positionElements(this.elm.nativeElement, popoverElement, this.placement || this.defaultOptions.placement, this.appendToBody || this.defaultOptions.appendToBody);\n        }\n    }\n    hidePopover() {\n        if (this.popover) {\n            this.popover.destroy();\n            delete this.popover;\n            this.isOpenChange.emit(false);\n            this.eventListeners.forEach((fn) => fn());\n            this.eventListeners = [];\n        }\n    }\n}\nConfirmationPopoverDirective.ɵfac = function ConfirmationPopoverDirective_Factory(t) { return new (t || ConfirmationPopoverDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ConfirmationPopoverOptions), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };\nConfirmationPopoverDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: ConfirmationPopoverDirective, selectors: [[\"\", \"mwlConfirmationPopover\", \"\"]], hostBindings: function ConfirmationPopoverDirective_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function ConfirmationPopoverDirective_click_HostBindingHandler() { return ctx.togglePopover(); });\n    } }, inputs: { isDisabled: \"isDisabled\", isOpen: \"isOpen\", popoverTitle: \"popoverTitle\", popoverMessage: \"popoverMessage\", confirmText: \"confirmText\", cancelText: \"cancelText\", placement: \"placement\", confirmButtonType: \"confirmButtonType\", cancelButtonType: \"cancelButtonType\", focusButton: \"focusButton\", hideConfirmButton: \"hideConfirmButton\", hideCancelButton: \"hideCancelButton\", customTemplate: \"customTemplate\", popoverClass: \"popoverClass\", appendToBody: \"appendToBody\", reverseButtonOrder: \"reverseButtonOrder\", closeOnOutsideClick: \"closeOnOutsideClick\" }, outputs: { isOpenChange: \"isOpenChange\", confirm: \"confirm\", cancel: \"cancel\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nConfirmationPopoverDirective.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: ElementRef },\n    { type: ConfirmationPopoverOptions },\n    { type: ComponentFactoryResolver },\n    { type: Renderer2 }\n];\nConfirmationPopoverDirective.propDecorators = {\n    popoverTitle: [{ type: Input }],\n    popoverMessage: [{ type: Input }],\n    confirmText: [{ type: Input }],\n    cancelText: [{ type: Input }],\n    placement: [{ type: Input }],\n    confirmButtonType: [{ type: Input }],\n    cancelButtonType: [{ type: Input }],\n    focusButton: [{ type: Input }],\n    hideConfirmButton: [{ type: Input }],\n    hideCancelButton: [{ type: Input }],\n    isDisabled: [{ type: Input }],\n    isOpen: [{ type: Input }],\n    customTemplate: [{ type: Input }],\n    isOpenChange: [{ type: Output }],\n    confirm: [{ type: Output }],\n    cancel: [{ type: Output }],\n    popoverClass: [{ type: Input }],\n    appendToBody: [{ type: Input }],\n    reverseButtonOrder: [{ type: Input }],\n    closeOnOutsideClick: [{ type: Input }],\n    togglePopover: [{ type: HostListener, args: ['click',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ConfirmationPopoverDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[mwlConfirmationPopover]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.ElementRef }, { type: ConfirmationPopoverOptions }, { type: ɵngcc0.ComponentFactoryResolver }, { type: ɵngcc0.Renderer2 }]; }, { isDisabled: [{\n            type: Input\n        }], isOpen: [{\n            type: Input\n        }], isOpenChange: [{\n            type: Output\n        }], confirm: [{\n            type: Output\n        }], cancel: [{\n            type: Output\n        }], \n    /**\n     * @internal\n     */\n    togglePopover: [{\n            type: HostListener,\n            args: ['click']\n        }], popoverTitle: [{\n            type: Input\n        }], popoverMessage: [{\n            type: Input\n        }], confirmText: [{\n            type: Input\n        }], cancelText: [{\n            type: Input\n        }], placement: [{\n            type: Input\n        }], confirmButtonType: [{\n            type: Input\n        }], cancelButtonType: [{\n            type: Input\n        }], focusButton: [{\n            type: Input\n        }], hideConfirmButton: [{\n            type: Input\n        }], hideCancelButton: [{\n            type: Input\n        }], customTemplate: [{\n            type: Input\n        }], popoverClass: [{\n            type: Input\n        }], appendToBody: [{\n            type: Input\n        }], reverseButtonOrder: [{\n            type: Input\n        }], closeOnOutsideClick: [{\n            type: Input\n        }] }); })();\n\n/**\n * A helper directive to focus buttons. You will only need this if using a custom template\n */\nclass FocusDirective {\n    constructor(elm) {\n        this.elm = elm;\n    }\n    ngOnChanges(changes) {\n        if (changes.mwlFocus && this.mwlFocus === true) {\n            this.elm.nativeElement.focus();\n        }\n    }\n}\nFocusDirective.ɵfac = function FocusDirective_Factory(t) { return new (t || FocusDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nFocusDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: FocusDirective, selectors: [[\"\", \"mwlFocus\", \"\"]], inputs: { mwlFocus: \"mwlFocus\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nFocusDirective.ctorParameters = () => [\n    { type: ElementRef }\n];\nFocusDirective.propDecorators = {\n    mwlFocus: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FocusDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[mwlFocus]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { mwlFocus: [{\n            type: Input\n        }] }); })();\n\nconst USER_OPTIONS = new InjectionToken('confirmation popover user options');\nfunction optionsFactory(userOptions) {\n    const options = new ConfirmationPopoverOptions();\n    Object.assign(options, userOptions);\n    return options;\n}\nclass ConfirmationPopoverModule {\n    static forRoot(options = {}) {\n        return {\n            ngModule: ConfirmationPopoverModule,\n            providers: [\n                {\n                    provide: USER_OPTIONS,\n                    useValue: options,\n                },\n                {\n                    provide: ConfirmationPopoverOptions,\n                    useFactory: optionsFactory,\n                    deps: [USER_OPTIONS],\n                },\n            ],\n        };\n    }\n}\nConfirmationPopoverModule.ɵfac = function ConfirmationPopoverModule_Factory(t) { return new (t || ConfirmationPopoverModule)(); };\nConfirmationPopoverModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: ConfirmationPopoverModule });\nConfirmationPopoverModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [CommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ConfirmationPopoverModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    ConfirmationPopoverDirective,\n                    ConfirmationPopoverWindowComponent,\n                    FocusDirective,\n                ],\n                imports: [CommonModule],\n                exports: [ConfirmationPopoverDirective, FocusDirective],\n                entryComponents: [ConfirmationPopoverWindowComponent]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ConfirmationPopoverModule, { declarations: function () { return [ConfirmationPopoverDirective, ConfirmationPopoverWindowComponent, FocusDirective]; }, imports: function () { return [CommonModule]; }, exports: function () { return [ConfirmationPopoverDirective, FocusDirective]; } }); })();\n\n/*\n * Public API Surface of angular-confirmation-popover\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ConfirmationPopoverDirective, ConfirmationPopoverModule, FocusDirective, USER_OPTIONS as ɵa, optionsFactory as ɵb, ConfirmationPopoverOptions as ɵc, ConfirmationPopoverWindowComponent as ɵd, ConfirmationPopoverWindowOptions as ɵe };\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}