{"ast":null,"code":"import { Animation, Base, ChildProperty, Complex, Component, Draggable, Event, EventHandler, NotifyPropertyChanges, Property, SanitizeHtmlHelper, Touch, addClass, append, attributes, closest, compareElementParent, compile, detach, extend, formatUnit, getComponent, getUniqueID, getValue, isBlazor, isNullOrUndefined, isVisible, merge, prepend, remove, removeClass, rippleEffect } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { createCheckBox } from '@syncfusion/ej2-buttons';\n/* eslint-disable no-inner-declarations */\n\nlet cssClass = {\n  li: 'e-list-item',\n  ul: 'e-list-parent e-ul',\n  group: 'e-list-group-item',\n  icon: 'e-list-icon',\n  text: 'e-list-text',\n  check: 'e-list-check',\n  checked: 'e-checked',\n  selected: 'e-selected',\n  expanded: 'e-expanded',\n  textContent: 'e-text-content',\n  hasChild: 'e-has-child',\n  level: 'e-level',\n  url: 'e-list-url',\n  collapsible: 'e-icon-collapsible',\n  disabled: 'e-disabled',\n  image: 'e-list-img',\n  iconWrapper: 'e-icon-wrapper',\n  anchorWrap: 'e-anchor-wrap',\n  navigable: 'e-navigable'\n};\n/**\n * Base List Generator\n */\n// eslint-disable-next-line @typescript-eslint/no-namespace\n\nvar ListBase;\n\n(function (ListBase) {\n  /**\n   *\n   * Default mapped fields.\n   */\n  ListBase.defaultMappedFields = {\n    id: 'id',\n    text: 'text',\n    url: 'url',\n    value: 'value',\n    isChecked: 'isChecked',\n    enabled: 'enabled',\n    expanded: 'expanded',\n    selected: 'selected',\n    iconCss: 'iconCss',\n    child: 'child',\n    isVisible: 'isVisible',\n    hasChildren: 'hasChildren',\n    tooltip: 'tooltip',\n    htmlAttributes: 'htmlAttributes',\n    urlAttributes: 'urlAttributes',\n    imageAttributes: 'imageAttributes',\n    imageUrl: 'imageUrl',\n    groupBy: null,\n    sortBy: null\n  };\n  const defaultAriaAttributes = {\n    level: 1,\n    listRole: 'presentation',\n    itemRole: 'presentation',\n    groupItemRole: 'group',\n    itemText: 'list-item',\n    wrapperRole: 'presentation'\n  };\n  const defaultListBaseOptions = {\n    showCheckBox: false,\n    showIcon: false,\n    enableHtmlSanitizer: false,\n    expandCollapse: false,\n    fields: ListBase.defaultMappedFields,\n    ariaAttributes: defaultAriaAttributes,\n    listClass: '',\n    itemClass: '',\n    processSubChild: false,\n    sortOrder: 'None',\n    template: null,\n    groupTemplate: null,\n    headerTemplate: null,\n    expandIconClass: 'e-icon-collapsible',\n    moduleName: 'list',\n    expandIconPosition: 'Right',\n    itemNavigable: false\n  };\n  /**\n   * Function helps to created and return the UL Li element based on your data.\n   *\n   * @param  {createElementParams} createElement - Specifies an array of JSON data.\n   *\n   * @param  {{Object}[]} dataSource - Specifies an array of JSON data.\n   *\n   * @param  {ListBaseOptions} options? - Specifies the list options that need to provide.\n   *\n   * @param  {boolean} isSingleLevel? - Specifies the list options that need to provide.\n   *\n   * @param  {any} componentInstance? - Specifies the list options that need to provide.\n   *\n   * @returns  {createElement} createListFromJson - Specifies the list options that need to provide.\n   */\n\n  function createList(createElement, dataSource, // eslint-disable-next-line\n  options, isSingleLevel, componentInstance) {\n    const curOpt = extend({}, defaultListBaseOptions, options);\n    const ariaAttributes = extend({}, defaultAriaAttributes, curOpt.ariaAttributes);\n    const type = typeofData(dataSource).typeof;\n\n    if (type === 'string' || type === 'number') {\n      return createListFromArray(createElement, dataSource, isSingleLevel, options, componentInstance);\n    } else {\n      return createListFromJson(createElement, dataSource, options, ariaAttributes.level, isSingleLevel, componentInstance);\n    }\n  }\n\n  ListBase.createList = createList;\n  /**\n   * Function helps to created an element list based on string array input .\n   *\n   * @param  {createElementParams} createElement - Specifies an array of JSON data.\n   *\n   * @param  {{Object}[]} dataSource - Specifies an array of JSON data.\n   *\n   * @param  {ListBaseOptions} options? - Specifies the list options that need to provide.\n   *\n   * @param  {boolean} isSingleLevel? - Specifies the list options that need to provide.\n   *\n   * @param  {any} componentInstance? - Specifies the list options that need to provide.\n   *\n   * @returns  {createElement} generateUL - returns the list options that need to provide.\n   */\n\n  function createListFromArray(createElement, dataSource, // tslint:disable-next-line\n  // eslint-disable-next-line\n  isSingleLevel, options, componentInstance) {\n    const subChild = createListItemFromArray(createElement, dataSource, isSingleLevel, options, componentInstance);\n    return generateUL(createElement, subChild, null, options);\n  }\n\n  ListBase.createListFromArray = createListFromArray;\n  /**\n   * Function helps to created an element list based on string array input .\n   *\n   * @param  {createElementParams} createElement - Specifies an array of JSON data.\n   *\n   * @param  {{Object}[]} dataSource - Specifies an array of JSON data.\n   *\n   * @param  {ListBaseOptions} options? - Specifies the list options that need to provide.\n   *\n   * @param  {boolean} isSingleLevel? - Specifies the list options that need to provide.\n   *\n   * @param  {any} componentInstance? - Specifies the list options that need to provide.\n   *\n   * @returns  {HTMLElement[]} subChild - returns the list options that need to provide.\n   */\n\n  function createListItemFromArray(createElement, dataSource, // eslint-disable-next-line\n  isSingleLevel, options, componentInstance) {\n    const subChild = [];\n    const curOpt = extend({}, defaultListBaseOptions, options);\n    cssClass = getModuleClass(curOpt.moduleName);\n    const id = generateId(); // generate id for drop-down-list option.\n\n    for (let i = 0; i < dataSource.length; i++) {\n      if (isNullOrUndefined(dataSource[i])) {\n        continue;\n      }\n\n      let li;\n\n      if (curOpt.itemCreating && typeof curOpt.itemCreating === 'function') {\n        const curData = {\n          dataSource: dataSource,\n          curData: dataSource[i],\n          text: dataSource[i],\n          options: curOpt\n        };\n        curOpt.itemCreating(curData);\n      }\n\n      if (isSingleLevel) {\n        li = generateSingleLevelLI(createElement, dataSource[i], undefined, null, null, [], null, id, i, options);\n      } else {\n        li = generateLI(createElement, dataSource[i], undefined, null, null, options, componentInstance);\n      }\n\n      if (curOpt.itemCreated && typeof curOpt.itemCreated === 'function') {\n        const curData = {\n          dataSource: dataSource,\n          curData: dataSource[i],\n          text: dataSource[i],\n          item: li,\n          options: curOpt\n        };\n        curOpt.itemCreated(curData);\n      }\n\n      subChild.push(li);\n    }\n\n    return subChild;\n  }\n\n  ListBase.createListItemFromArray = createListItemFromArray;\n  /**\n   * Function helps to created an element list based on array of JSON input .\n   *\n   * @param  {createElementParams} createElement - Specifies an array of JSON data.\n   *\n   * @param  {{Object}[]} dataSource - Specifies an array of JSON data.\n   *\n   * @param  {ListBaseOptions} options? - Specifies the list options that need to provide.\n   *\n   * @param  {boolean} isSingleLevel? - Specifies the list options that need to provide.\n   *\n   * @param  {number} level? - Specifies the list options that need to provide.\n   *\n   * @param  {any} componentInstance? - Specifies the list options that need to provide.\n   *\n   * @returns  {HTMLElement[]} child - returns the list options that need to provide.\n   */\n\n  function createListItemFromJson(createElement, dataSource, // eslint-disable-next-line\n  options, level, isSingleLevel, componentInstance) {\n    const curOpt = extend({}, defaultListBaseOptions, options);\n    cssClass = getModuleClass(curOpt.moduleName);\n    const fields = componentInstance && (componentInstance.getModuleName() === 'listview' || componentInstance.getModuleName() === 'multiselect') ? curOpt.fields : extend({}, ListBase.defaultMappedFields, curOpt.fields);\n    const ariaAttributes = extend({}, defaultAriaAttributes, curOpt.ariaAttributes);\n    let id;\n    let checkboxElement = [];\n\n    if (level) {\n      ariaAttributes.level = level;\n    }\n\n    const child = [];\n    let li;\n    let anchorElement;\n\n    if (dataSource && dataSource.length && !isNullOrUndefined(typeofData(dataSource).item) && // eslint-disable-next-line no-prototype-builtins\n    !typeofData(dataSource).item.hasOwnProperty(fields.id)) {\n      id = generateId(); // generate id for drop-down-list option.\n    }\n\n    for (let i = 0; i < dataSource.length; i++) {\n      let fieldData = getFieldValues(dataSource[i], fields);\n\n      if (isNullOrUndefined(dataSource[i])) {\n        continue;\n      }\n\n      if (curOpt.itemCreating && typeof curOpt.itemCreating === 'function') {\n        const curData = {\n          dataSource: dataSource,\n          curData: dataSource[i],\n          text: fieldData[fields.text],\n          options: curOpt,\n          fields: fields\n        };\n        curOpt.itemCreating(curData);\n      }\n\n      const curItem = dataSource[i];\n\n      if (curOpt.itemCreating && typeof curOpt.itemCreating === 'function') {\n        fieldData = getFieldValues(dataSource[i], fields);\n      } // eslint-disable-next-line no-prototype-builtins\n\n\n      if (fieldData.hasOwnProperty(fields.id) && !isNullOrUndefined(fieldData[fields.id])) {\n        id = fieldData[fields.id];\n      }\n\n      const innerEle = [];\n\n      if (curOpt.showCheckBox) {\n        if (curOpt.itemNavigable && (fieldData[fields.url] || fieldData[fields.urlAttributes])) {\n          checkboxElement.push(createElement('input', {\n            className: cssClass.check,\n            attrs: {\n              type: 'checkbox'\n            }\n          }));\n        } else {\n          innerEle.push(createElement('input', {\n            className: cssClass.check,\n            attrs: {\n              type: 'checkbox'\n            }\n          }));\n        }\n      }\n\n      if (isSingleLevel === true) {\n        // eslint-disable-next-line no-prototype-builtins\n        if (curOpt.showIcon && fieldData.hasOwnProperty(fields.iconCss) && !isNullOrUndefined(fieldData[fields.iconCss])) {\n          innerEle.push(createElement('span', {\n            className: cssClass.icon + ' ' + fieldData[fields.iconCss]\n          }));\n        }\n\n        li = generateSingleLevelLI(createElement, curItem, fieldData, fields, curOpt.itemClass, innerEle, // eslint-disable-next-line no-prototype-builtins\n        curItem.hasOwnProperty('isHeader') && curItem.isHeader ? true : false, id, i, options);\n        anchorElement = li.querySelector('.' + cssClass.anchorWrap);\n\n        if (curOpt.itemNavigable && checkboxElement.length) {\n          prepend(checkboxElement, li.firstElementChild);\n        }\n      } else {\n        li = generateLI(createElement, curItem, fieldData, fields, curOpt.itemClass, options, componentInstance);\n        li.classList.add(cssClass.level + '-' + ariaAttributes.level);\n        li.setAttribute('aria-level', ariaAttributes.level.toString());\n        anchorElement = li.querySelector('.' + cssClass.anchorWrap); // eslint-disable-next-line no-prototype-builtins\n\n        if (fieldData.hasOwnProperty(fields.tooltip)) {\n          li.setAttribute('title', fieldData[fields.tooltip]);\n        } // eslint-disable-next-line no-prototype-builtins\n\n\n        if (fieldData.hasOwnProperty(fields.htmlAttributes) && fieldData[fields.htmlAttributes]) {\n          setAttribute(li, fieldData[fields.htmlAttributes]);\n        } // eslint-disable-next-line no-prototype-builtins\n\n\n        if (fieldData.hasOwnProperty(fields.enabled) && fieldData[fields.enabled] === false) {\n          li.classList.add(cssClass.disabled);\n        } // eslint-disable-next-line no-prototype-builtins\n\n\n        if (fieldData.hasOwnProperty(fields.isVisible) && fieldData[fields.isVisible] === false) {\n          li.style.display = 'none';\n        } // eslint-disable-next-line no-prototype-builtins\n\n\n        if (fieldData.hasOwnProperty(fields.imageUrl) && !isNullOrUndefined(fieldData[fields.imageUrl]) && !curOpt.template) {\n          const attr = {\n            src: fieldData[fields.imageUrl]\n          };\n          merge(attr, fieldData[fields.imageAttributes]);\n          const imageElemnt = createElement('img', {\n            className: cssClass.image,\n            attrs: attr\n          });\n\n          if (anchorElement) {\n            anchorElement.insertAdjacentElement('afterbegin', imageElemnt);\n          } else {\n            prepend([imageElemnt], li.firstElementChild);\n          }\n        } // eslint-disable-next-line no-prototype-builtins\n\n\n        if (curOpt.showIcon && fieldData.hasOwnProperty(fields.iconCss) && !isNullOrUndefined(fieldData[fields.iconCss]) && !curOpt.template) {\n          const iconElement = createElement('div', {\n            className: cssClass.icon + ' ' + fieldData[fields.iconCss]\n          });\n\n          if (anchorElement) {\n            anchorElement.insertAdjacentElement('afterbegin', iconElement);\n          } else {\n            prepend([iconElement], li.firstElementChild);\n          }\n        }\n\n        if (innerEle.length) {\n          prepend(innerEle, li.firstElementChild);\n        }\n\n        if (curOpt.itemNavigable && checkboxElement.length) {\n          prepend(checkboxElement, li.firstElementChild);\n        }\n\n        processSubChild(createElement, fieldData, fields, dataSource, curOpt, li, ariaAttributes.level);\n      }\n\n      if (anchorElement) {\n        addClass([li], [cssClass.navigable]);\n      }\n\n      if (curOpt.itemCreated && typeof curOpt.itemCreated === 'function') {\n        const curData = {\n          dataSource: dataSource,\n          curData: dataSource[i],\n          text: fieldData[fields.text],\n          item: li,\n          options: curOpt,\n          fields: fields\n        };\n        curOpt.itemCreated(curData);\n      }\n\n      checkboxElement = [];\n      child.push(li);\n    }\n\n    return child;\n  }\n\n  ListBase.createListItemFromJson = createListItemFromJson;\n  /**\n   * Function helps to created an element list based on array of JSON input .\n   *\n   * @param  {createElementParams} createElement - Specifies an array of JSON data.\n   *\n   * @param  {{Object}[]} dataSource - Specifies an array of JSON data.\n   *\n   * @param  {ListBaseOptions} options? - Specifies the list options that need to provide.\n   *\n   * @param  {number} level? - Specifies the list options that need to provide.\n   *\n   * @param  {boolean} isSingleLevel? - Specifies the list options that need to provide.\n   *\n   * @param  {any} componentInstance? - Specifies the list options that need to provide.\n   *\n   * @returns  {createElement} generateUL - Specifies the list options that need to provide.\n   */\n\n  function createListFromJson(createElement, dataSource, // eslint-disable-next-line\n  options, level, isSingleLevel, componentInstance) {\n    const curOpt = extend({}, defaultListBaseOptions, options);\n    const li = createListItemFromJson(createElement, dataSource, options, level, isSingleLevel, componentInstance);\n    return generateUL(createElement, li, curOpt.listClass, options);\n  }\n\n  ListBase.createListFromJson = createListFromJson;\n  /**\n   * Return the next or previous visible element.\n   *\n   * @param  {Element[]|NodeList} elementArray - An element array to find next or previous element.\n   * @param  {Element} li - An element to find next or previous after this element.\n   * @param  {boolean} isPrevious? - Specify when the need get previous element from array.\n   */\n\n  function getSiblingLI(elementArray, element, isPrevious) {\n    cssClass = getModuleClass(defaultListBaseOptions.moduleName);\n\n    if (!elementArray || !elementArray.length) {\n      return void 0;\n    }\n\n    let siblingLI;\n    let liIndex;\n    const liCollections = Array.prototype.slice.call(elementArray);\n\n    if (element) {\n      liIndex = indexOf(element, liCollections);\n    } else {\n      liIndex = isPrevious === true ? liCollections.length : -1;\n    }\n\n    siblingLI = liCollections[liIndex + (isPrevious === true ? -1 : 1)];\n\n    while (siblingLI && (!isVisible(siblingLI) || siblingLI.classList.contains(cssClass.disabled))) {\n      liIndex = liIndex + (isPrevious === true ? -1 : 1);\n      siblingLI = liCollections[liIndex];\n    }\n\n    return siblingLI;\n  }\n\n  ListBase.getSiblingLI = getSiblingLI;\n  /**\n   * Return the index of the li element\n   *\n   * @param  {Element} item - An element to find next or previous after this element.\n   * @param  {Element[]} elementArray - An element array to find index of given li.\n   */\n\n  function indexOf(item, elementArray) {\n    if (!elementArray || !item) {\n      return void 0;\n    } else {\n      let liCollections = elementArray;\n      liCollections = Array.prototype.slice.call(elementArray);\n      return liCollections.indexOf(item);\n    }\n  }\n\n  ListBase.indexOf = indexOf;\n  /**\n   * Returns the grouped data from given dataSource.\n   *\n   * @param  {{Object}[]} dataSource - The JSON data which is necessary to process.\n   * @param  {FieldsMapping} fields - Fields that are mapped from the data source.\n   * @param  {SortOrder} sortOrder- Specifies final result sort order.\n   */\n\n  function groupDataSource(dataSource, fields, sortOrder = 'None') {\n    const curFields = extend({}, ListBase.defaultMappedFields, fields);\n    let cusQuery = new Query().group(curFields.groupBy); // need to remove once sorting issues fixed in DataManager\n\n    cusQuery = addSorting(sortOrder, 'key', cusQuery);\n    const ds = getDataSource(dataSource, cusQuery);\n    dataSource = [];\n\n    for (let j = 0; j < ds.length; j++) {\n      const itemObj = ds[j].items;\n      const grpItem = {};\n      const hdr = 'isHeader';\n      grpItem[curFields.text] = ds[j].key;\n      grpItem[hdr] = true;\n      let newtext = curFields.text;\n\n      if (newtext === 'id') {\n        newtext = 'text';\n        grpItem[newtext] = ds[j].key;\n      }\n\n      grpItem._id = 'group-list-item-' + (ds[j].key ? ds[j].key.toString().trim() : 'undefined');\n      grpItem.items = itemObj;\n      dataSource.push(grpItem);\n\n      for (let k = 0; k < itemObj.length; k++) {\n        dataSource.push(itemObj[k]);\n      }\n    }\n\n    return dataSource;\n  }\n\n  ListBase.groupDataSource = groupDataSource;\n  /**\n   * Returns a sorted query object.\n   *\n   * @param  {SortOrder} sortOrder - Specifies that sort order.\n   * @param  {string} sortBy - Specifies sortBy fields.\n   * @param  {Query} query - Pass if any existing query.\n   */\n\n  function addSorting(sortOrder, sortBy, query = new Query()) {\n    if (sortOrder === 'Ascending') {\n      query.sortBy(sortBy, 'ascending', true);\n    } else if (sortOrder === 'Descending') {\n      query.sortBy(sortBy, 'descending', true);\n    } else {\n      for (let i = 0; i < query.queries.length; i++) {\n        if (query.queries[i].fn === 'onSortBy') {\n          query.queries.splice(i, 1);\n        }\n      }\n    }\n\n    return query;\n  }\n\n  ListBase.addSorting = addSorting;\n  /**\n   * Return an array of JSON Data that processed based on queries.\n   *\n   * @param  {{Object}[]} dataSource - Specifies local JSON data source.\n   *\n   * @param  {Query} query - Specifies query that need to process.\n   */\n\n  function getDataSource(dataSource, query) {\n    // eslint-disable-next-line\n    return new DataManager(dataSource).executeLocal(query);\n  }\n\n  ListBase.getDataSource = getDataSource;\n  /**\n   * Created JSON data based the UL and LI element\n   *\n   * @param  {HTMLElement|Element} element - UL element that need to convert as a JSON\n   * @param  {ListBaseOptions} options? - Specifies listbase option for fields.\n   */\n\n  function createJsonFromElement(element, options) {\n    const curOpt = extend({}, defaultListBaseOptions, options);\n    const fields = extend({}, ListBase.defaultMappedFields, curOpt.fields);\n    const curEle = element.cloneNode(true); // eslint-disable-next-line\n\n    const jsonAr = [];\n    curEle.classList.add('json-parent');\n    const childs = curEle.querySelectorAll('.json-parent>li');\n    curEle.classList.remove('json-parent');\n\n    for (let i = 0; i < childs.length; i++) {\n      const li = childs[i];\n      const anchor = li.querySelector('a');\n      const ul = li.querySelector('ul'); // eslint-disable-next-line\n\n      const json = {};\n      const childNodes = anchor ? anchor.childNodes : li.childNodes;\n      const keys = Object.keys(childNodes);\n\n      for (let i = 0; i < childNodes.length; i++) {\n        if (!childNodes[Number(keys[i])].hasChildNodes()) {\n          json[fields.text] = childNodes[Number(keys[i])].textContent;\n        }\n      }\n\n      let attributes$$1 = getAllAttributes(li);\n\n      if (attributes$$1.id) {\n        json[fields.id] = attributes$$1.id;\n        delete attributes$$1.id;\n      } else {\n        json[fields.id] = generateId();\n      }\n\n      if (Object.keys(attributes$$1).length) {\n        json[fields.htmlAttributes] = attributes$$1;\n      }\n\n      if (anchor) {\n        attributes$$1 = getAllAttributes(anchor);\n\n        if (Object.keys(attributes$$1).length) {\n          json[fields.urlAttributes] = attributes$$1;\n        }\n      }\n\n      if (ul) {\n        json[fields.child] = createJsonFromElement(ul, options);\n      }\n\n      jsonAr.push(json);\n    }\n\n    return jsonAr;\n  }\n\n  ListBase.createJsonFromElement = createJsonFromElement;\n\n  function typeofData(data) {\n    let match = {\n      typeof: null,\n      item: null\n    };\n\n    for (let i = 0; i < data.length; i++) {\n      if (!isNullOrUndefined(data[i])) {\n        return match = {\n          typeof: typeof data[i],\n          item: data[i]\n        };\n      }\n    }\n\n    return match;\n  }\n\n  function setAttribute(element, elementAttributes) {\n    const attr = {};\n    merge(attr, elementAttributes);\n\n    if (attr.class) {\n      addClass([element], attr.class.split(' '));\n      delete attr.class;\n    }\n\n    attributes(element, attr);\n  }\n\n  function getAllAttributes(element) {\n    const attributes$$1 = {};\n    const attr = element.attributes;\n\n    for (let index = 0; index < attr.length; index++) {\n      attributes$$1[attr[index].nodeName] = attr[index].nodeValue;\n    }\n\n    return attributes$$1;\n  }\n  /**\n   * Created UL element from content template.\n   *\n   * @param  {string} template - that need to convert and generate li element.\n   * @param  {{Object}[]} dataSource - Specifies local JSON data source.\n   * @param  {ListBaseOptions} options? - Specifies listbase option for fields.\n   */\n\n\n  function renderContentTemplate(createElement, template, dataSource, // eslint-disable-next-line\n  fields, options, componentInstance) {\n    cssClass = getModuleClass(defaultListBaseOptions.moduleName);\n    const ulElement = createElement('ul', {\n      className: cssClass.ul,\n      attrs: {\n        role: 'presentation'\n      }\n    });\n    const curOpt = extend({}, defaultListBaseOptions, options);\n    const curFields = extend({}, ListBase.defaultMappedFields, fields); // eslint-disable-next-line\n\n    const compiledString = compileTemplate(template);\n    const liCollection = [];\n    let value;\n    const id = generateId(); // generate id for drop-down-list option.\n\n    for (let i = 0; i < dataSource.length; i++) {\n      let fieldData = getFieldValues(dataSource[i], curFields);\n      const curItem = dataSource[i];\n      const isHeader = curItem.isHeader;\n\n      if (typeof dataSource[i] === 'string' || typeof dataSource[i] === 'number') {\n        value = curItem;\n      } else {\n        value = fieldData[curFields.value];\n      }\n\n      if (curOpt.itemCreating && typeof curOpt.itemCreating === 'function') {\n        const curData = {\n          dataSource: dataSource,\n          curData: curItem,\n          text: value,\n          options: curOpt,\n          fields: curFields\n        };\n        curOpt.itemCreating(curData);\n      }\n\n      if (curOpt.itemCreating && typeof curOpt.itemCreating === 'function') {\n        fieldData = getFieldValues(dataSource[i], curFields);\n\n        if (typeof dataSource[i] === 'string' || typeof dataSource[i] === 'number') {\n          value = curItem;\n        } else {\n          value = fieldData[curFields.value];\n        }\n      }\n\n      const li = createElement('li', {\n        id: id + '-' + i,\n        className: isHeader ? cssClass.group : cssClass.li,\n        attrs: {\n          role: 'presentation'\n        }\n      });\n\n      if (isHeader) {\n        if (typeof dataSource[i] === 'string' || typeof dataSource[i] === 'number') {\n          li.innerText = curItem;\n        } else {\n          li.innerText = fieldData[curFields.text];\n        }\n      } else {\n        const currentID = isHeader ? curOpt.groupTemplateID : curOpt.templateID;\n\n        if (isHeader) {\n          if (componentInstance && componentInstance.getModuleName() != 'listview') {\n            // eslint-disable-next-line\n            const compiledElement = compiledString(curItem, componentInstance, 'headerTemplate', currentID, !!curOpt.isStringTemplate, null, li);\n\n            if (compiledElement) {\n              append(compiledElement, li);\n            }\n          } else {\n            append(compiledString(curItem, componentInstance, 'headerTemplate', currentID, !!curOpt.isStringTemplate), li);\n          }\n        } else {\n          if (componentInstance && componentInstance.getModuleName() !== 'listview') {\n            // eslint-disable-next-line\n            const compiledElement = compiledString(curItem, componentInstance, 'template', currentID, !!curOpt.isStringTemplate, null, li);\n\n            if (compiledElement) {\n              append(compiledElement, li);\n            }\n          } else {\n            append(compiledString(curItem, componentInstance, 'template', currentID, !!curOpt.isStringTemplate), li);\n          }\n        }\n\n        li.setAttribute('data-value', isNullOrUndefined(value) ? 'null' : value);\n        li.setAttribute('role', 'option');\n      }\n\n      if (curOpt.itemCreated && typeof curOpt.itemCreated === 'function') {\n        const curData = {\n          dataSource: dataSource,\n          curData: curItem,\n          text: value,\n          item: li,\n          options: curOpt,\n          fields: curFields\n        };\n        curOpt.itemCreated(curData);\n      }\n\n      liCollection.push(li);\n    }\n\n    append(liCollection, ulElement);\n    return ulElement;\n  }\n\n  ListBase.renderContentTemplate = renderContentTemplate;\n  /**\n   * Created header items from group template.\n   *\n   * @param  {string} template - that need to convert and generate li element.\n   *\n   * @param  {{Object}[]} dataSource - Specifies local JSON data source.\n   *\n   * @param  {FieldsMapping} fields - Specifies fields for mapping the dataSource.\n   *\n   * @param  {Element[]} headerItems? - Specifies listbase header items.\n   */\n  // tslint:disable-next-line\n\n  function renderGroupTemplate(groupTemplate, groupDataSource, fields, // eslint-disable-next-line\n  headerItems, options, componentInstance) {\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    const compiledString = compileTemplate(groupTemplate);\n    const curFields = extend({}, ListBase.defaultMappedFields, fields);\n    const curOpt = extend({}, defaultListBaseOptions, options);\n    const category = curFields.groupBy;\n\n    for (const header of headerItems) {\n      const headerData = {};\n      headerData[category] = header.textContent;\n      header.innerHTML = '';\n\n      if (componentInstance && componentInstance.getModuleName() !== \"listview\") {\n        // eslint-disable-next-line\n        const compiledElement = compiledString(headerData, componentInstance, 'groupTemplate', curOpt.groupTemplateID, !!curOpt.isStringTemplate, null, header);\n\n        if (compiledElement) {\n          append(compiledElement, header);\n        }\n      } else {\n        append(compiledString(headerData, componentInstance, 'groupTemplate', curOpt.groupTemplateID, !!curOpt.isStringTemplate), header);\n      }\n    }\n\n    return headerItems;\n  }\n\n  ListBase.renderGroupTemplate = renderGroupTemplate;\n\n  function generateId() {\n    return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n  }\n\n  ListBase.generateId = generateId;\n\n  function processSubChild(createElement, fieldData, fields, ds, options, element, level) {\n    // Get SubList\n    const subDS = fieldData[fields.child] || [];\n    let hasChildren = fieldData[fields.hasChildren]; //Create Sub child\n\n    if (subDS.length) {\n      hasChildren = true;\n      element.classList.add(cssClass.hasChild);\n\n      if (options.processSubChild) {\n        const subLi = createListFromJson(createElement, subDS, options, ++level);\n        element.appendChild(subLi);\n      }\n    } // Create expand and collapse node\n\n\n    if (!!options.expandCollapse && hasChildren && !options.template) {\n      element.firstElementChild.classList.add(cssClass.iconWrapper); // eslint-disable-next-line @typescript-eslint/ban-types\n\n      const expandElement = options.expandIconPosition === 'Left' ? prepend : append;\n      expandElement([createElement('div', {\n        className: 'e-icons ' + options.expandIconClass\n      })], element.querySelector('.' + cssClass.textContent));\n    }\n  }\n\n  function generateSingleLevelLI(createElement, item, fieldData, fields, className, innerElements, grpLI, id, index, options) {\n    const curOpt = extend({}, defaultListBaseOptions, options);\n    const ariaAttributes = extend({}, defaultAriaAttributes, curOpt.ariaAttributes);\n    let text = item;\n    let value = item;\n    let dataSource;\n\n    if (typeof item !== 'string' && typeof item !== 'number' && typeof item !== 'boolean') {\n      dataSource = item;\n      text = typeof fieldData[fields.text] === 'boolean' || typeof fieldData[fields.text] === 'number' ? fieldData[fields.text] : fieldData[fields.text] || '';\n      value = fieldData[fields.value];\n    }\n\n    let elementID;\n\n    if (!isNullOrUndefined(dataSource) && !isNullOrUndefined(fieldData[fields.id]) && fieldData[fields.id] !== '') {\n      elementID = id;\n    } else {\n      elementID = id + '-' + index;\n    }\n\n    const li = createElement('li', {\n      className: (grpLI === true ? cssClass.group : cssClass.li) + ' ' + (isNullOrUndefined(className) ? '' : className),\n      id: elementID,\n      attrs: ariaAttributes.groupItemRole !== '' && ariaAttributes.itemRole !== '' ? {\n        role: grpLI === true ? ariaAttributes.groupItemRole : ariaAttributes.itemRole\n      } : {}\n    }); // eslint-disable-next-line no-prototype-builtins\n\n    if (dataSource && fieldData.hasOwnProperty(fields.enabled) && fieldData[fields.enabled].toString() === 'false') {\n      li.classList.add(cssClass.disabled);\n    }\n\n    if (grpLI) {\n      li.innerText = text;\n    } else {\n      li.setAttribute('data-value', isNullOrUndefined(value) ? 'null' : value);\n      li.setAttribute('role', 'option'); // eslint-disable-next-line no-prototype-builtins\n\n      if (dataSource && fieldData.hasOwnProperty(fields.htmlAttributes) && fieldData[fields.htmlAttributes]) {\n        setAttribute(li, fieldData[fields.htmlAttributes]);\n      }\n\n      if (innerElements.length && !curOpt.itemNavigable) {\n        append(innerElements, li);\n      }\n\n      if (dataSource && (fieldData[fields.url] || fieldData[fields.urlAttributes] && fieldData[fields.urlAttributes].href)) {\n        li.appendChild(anchorTag(createElement, dataSource, fields, text, innerElements, curOpt.itemNavigable));\n      } else {\n        if (innerElements.length && curOpt.itemNavigable) {\n          append(innerElements, li);\n        }\n\n        li.appendChild(document.createTextNode(text));\n      }\n    }\n\n    return li;\n  }\n\n  function getModuleClass(moduleName) {\n    let moduleClass; // eslint-disable-next-line\n\n    return moduleClass = {\n      li: `e-${moduleName}-item`,\n      ul: `e-${moduleName}-parent e-ul`,\n      group: `e-${moduleName}-group-item`,\n      icon: `e-${moduleName}-icon`,\n      text: `e-${moduleName}-text`,\n      check: `e-${moduleName}-check`,\n      checked: 'e-checked',\n      selected: 'e-selected',\n      expanded: 'e-expanded',\n      textContent: 'e-text-content',\n      hasChild: 'e-has-child',\n      level: 'e-level',\n      url: `e-${moduleName}-url`,\n      collapsible: 'e-icon-collapsible',\n      disabled: 'e-disabled',\n      image: `e-${moduleName}-img`,\n      iconWrapper: 'e-icon-wrapper',\n      anchorWrap: 'e-anchor-wrap',\n      navigable: 'e-navigable'\n    };\n  }\n\n  function anchorTag(createElement, dataSource, fields, text, innerElements, isFullNavigation) {\n    const fieldData = getFieldValues(dataSource, fields);\n    const attr = {\n      href: fieldData[fields.url]\n    }; // eslint-disable-next-line no-prototype-builtins\n\n    if (fieldData.hasOwnProperty(fields.urlAttributes) && fieldData[fields.urlAttributes]) {\n      merge(attr, fieldData[fields.urlAttributes]);\n      attr.href = fieldData[fields.url] ? fieldData[fields.url] : fieldData[fields.urlAttributes].href;\n    }\n\n    let anchorTag;\n\n    if (!isFullNavigation) {\n      anchorTag = createElement('a', {\n        className: cssClass.text + ' ' + cssClass.url,\n        innerHTML: text\n      });\n    } else {\n      anchorTag = createElement('a', {\n        className: cssClass.text + ' ' + cssClass.url\n      });\n      const anchorWrapper = createElement('div', {\n        className: cssClass.anchorWrap\n      });\n\n      if (innerElements && innerElements.length) {\n        append(innerElements, anchorWrapper);\n      }\n\n      anchorWrapper.appendChild(document.createTextNode(text));\n      append([anchorWrapper], anchorTag);\n    }\n\n    setAttribute(anchorTag, attr);\n    return anchorTag;\n  } // tslint:disable-next-line\n\n  /* tslint:disable:align */\n\n\n  function generateLI(createElement, item, fieldData, // eslint-disable-next-line\n  fields, className, options, componentInstance) {\n    const curOpt = extend({}, defaultListBaseOptions, options);\n    const ariaAttributes = extend({}, defaultAriaAttributes, curOpt.ariaAttributes);\n    let text = item;\n    let uID;\n    let grpLI;\n    let dataSource;\n\n    if (typeof item !== 'string' && typeof item !== 'number') {\n      dataSource = item;\n      text = fieldData[fields.text] || ''; // tslint:disable-next-line\n\n      uID = isNullOrUndefined(fieldData['_id']) ? fieldData[fields.id] : fieldData['_id']; // eslint-disable-next-line no-prototype-builtins\n\n      grpLI = item.hasOwnProperty('isHeader') && item.isHeader ? true : false;\n    }\n\n    if (options && options.enableHtmlSanitizer) {\n      // eslint-disable-next-line no-self-assign\n      text = text;\n    }\n\n    const li = createElement('li', {\n      className: (grpLI === true ? cssClass.group : cssClass.li) + ' ' + (isNullOrUndefined(className) ? '' : className),\n      attrs: ariaAttributes.groupItemRole !== '' && ariaAttributes.itemRole !== '' ? {\n        role: grpLI === true ? ariaAttributes.groupItemRole : ariaAttributes.itemRole\n      } : {}\n    });\n\n    if (!isNullOrUndefined(uID) === true) {\n      li.setAttribute('data-uid', uID);\n    } else {\n      li.setAttribute('data-uid', generateId());\n    }\n\n    if (grpLI && options && options.groupTemplate) {\n      // eslint-disable-next-line @typescript-eslint/ban-types\n      const compiledString = compileTemplate(options.groupTemplate);\n\n      if (componentInstance && componentInstance.getModuleName() !== \"listview\") {\n        // eslint-disable-next-line\n        const compiledElement = compiledString(item, componentInstance, 'groupTemplate', curOpt.groupTemplateID, !!curOpt.isStringTemplate, null, li);\n\n        if (compiledElement) {\n          append(compiledElement, li);\n        }\n      } else {\n        append(compiledString(item, componentInstance, 'groupTemplate', curOpt.groupTemplateID, !!curOpt.isStringTemplate), li);\n      }\n    } else if (!grpLI && options && options.template) {\n      // eslint-disable-next-line @typescript-eslint/ban-types\n      const compiledString = compileTemplate(options.template);\n\n      if (componentInstance && componentInstance.getModuleName() !== 'listview') {\n        // eslint-disable-next-line\n        const compiledElement = compiledString(item, componentInstance, 'template', curOpt.templateID, !!curOpt.isStringTemplate, null, li);\n\n        if (compiledElement) {\n          append(compiledElement, li);\n        }\n      } else {\n        append(compiledString(item, componentInstance, 'template', curOpt.templateID, !!curOpt.isStringTemplate), li);\n      }\n    } else {\n      const innerDiv = createElement('div', {\n        className: cssClass.textContent,\n        attrs: ariaAttributes.wrapperRole !== '' ? {\n          role: ariaAttributes.wrapperRole\n        } : {}\n      });\n\n      if (dataSource && (fieldData[fields.url] || fieldData[fields.urlAttributes] && fieldData[fields.urlAttributes].href)) {\n        innerDiv.appendChild(anchorTag(createElement, dataSource, fields, text, null, curOpt.itemNavigable));\n      } else {\n        const element = createElement('span', {\n          className: cssClass.text,\n          attrs: ariaAttributes.itemText !== '' ? {\n            role: ariaAttributes.itemText\n          } : {}\n        });\n\n        if (options && options.enableHtmlSanitizer) {\n          element.innerText = text;\n        } else {\n          element.innerHTML = text;\n        }\n\n        innerDiv.appendChild(element);\n      }\n\n      li.appendChild(innerDiv);\n    }\n\n    return li;\n  }\n  /**\n   * Returns UL element based on the given LI element.\n   *\n   * @param  {HTMLElement[]} liElement - Specifies array of LI element.\n   *\n   * @param  {string} className? - Specifies class name that need to be added in UL element.\n   *\n   * @param  {ListBaseOptions} options? - Specifies ListBase options.\n   */\n\n\n  function generateUL(createElement, liElement, className, options) {\n    const curOpt = extend({}, defaultListBaseOptions, options);\n    const ariaAttributes = extend({}, defaultAriaAttributes, curOpt.ariaAttributes);\n    cssClass = getModuleClass(curOpt.moduleName);\n    const ulElement = createElement('ul', {\n      className: cssClass.ul + ' ' + (isNullOrUndefined(className) ? '' : className),\n      attrs: ariaAttributes.listRole !== '' ? {\n        role: ariaAttributes.listRole\n      } : {}\n    });\n    append(liElement, ulElement);\n    return ulElement;\n  }\n\n  ListBase.generateUL = generateUL;\n  /**\n   * Returns LI element with additional DIV tag based on the given LI element.\n   *\n   * @param  {liElement} liElement - Specifies LI element.\n   *\n   * @param  {string} className? - Specifies class name that need to be added in created DIV element.\n   *\n   * @param  {ListBaseOptions} options? - Specifies ListBase options.\n   */\n\n  function generateIcon(createElement, liElement, className, options) {\n    const curOpt = extend({}, defaultListBaseOptions, options);\n    cssClass = getModuleClass(curOpt.moduleName); // eslint-disable-next-line @typescript-eslint/ban-types\n\n    const expandElement = curOpt.expandIconPosition === 'Left' ? prepend : append;\n    expandElement([createElement('div', {\n      className: 'e-icons ' + curOpt.expandIconClass + ' ' + (isNullOrUndefined(className) ? '' : className)\n    })], liElement.querySelector('.' + cssClass.textContent));\n    return liElement;\n  }\n\n  ListBase.generateIcon = generateIcon;\n})(ListBase || (ListBase = {}));\n/**\n * Used to get dataSource item from complex data using fields.\n *\n * @param {Object} dataSource - Specifies an  JSON or String data.\n *\n * @param {FieldsMapping} fields - Fields that are mapped from the dataSource.\n */\n\n\nfunction getFieldValues(dataItem, fields) {\n  const fieldData = {};\n\n  if (isNullOrUndefined(dataItem) || typeof dataItem === 'string' || typeof dataItem === 'number' || !isNullOrUndefined(dataItem.isHeader)) {\n    return dataItem;\n  } else {\n    for (const field of Object.keys(fields)) {\n      const dataField = fields[field];\n      const value = !isNullOrUndefined(dataField) && typeof dataField === 'string' ? getValue(dataField, dataItem) : undefined;\n\n      if (!isNullOrUndefined(value)) {\n        fieldData[dataField] = value;\n      }\n    }\n  }\n\n  return fieldData;\n}\n\nfunction compileTemplate(template) {\n  if (template) {\n    try {\n      if (document.querySelector(template)) {\n        return compile(document.querySelector(template).innerHTML.trim());\n      } else {\n        return compile(template);\n      }\n    } catch (e) {\n      return compile(template);\n    }\n  }\n\n  return undefined;\n}\n\nvar __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}; // Effect Configuration Effect[] =  [fromViewBackward,fromViewForward,toViewBackward,toviewForward];\n\n\nconst effectsConfig = {\n  'None': [],\n  'SlideLeft': ['SlideRightOut', 'SlideLeftOut', 'SlideLeftIn', 'SlideRightIn'],\n  'SlideDown': ['SlideTopOut', 'SlideBottomOut', 'SlideBottomIn', 'SlideTopIn'],\n  'Zoom': ['FadeOut', 'FadeZoomOut', 'FadeZoomIn', 'FadeIn'],\n  'Fade': ['FadeOut', 'FadeOut', 'FadeIn', 'FadeIn']\n};\nconst effectsRTLConfig = {\n  'None': [],\n  'SlideLeft': ['SlideLeftOut', 'SlideRightOut', 'SlideRightIn', 'SlideLeftIn'],\n  'SlideDown': ['SlideBottomOut', 'SlideTopOut', 'SlideTopIn', 'SlideBottomIn'],\n  'Zoom': ['FadeZoomOut', 'FadeOut', 'FadeIn', 'FadeZoomIn'],\n  'Fade': ['FadeOut', 'FadeOut', 'FadeIn', 'FadeIn']\n}; // don't use space in classnames.\n\nconst classNames = {\n  root: 'e-listview',\n  hover: 'e-hover',\n  selected: 'e-active',\n  focused: 'e-focused',\n  parentItem: 'e-list-parent',\n  listItem: 'e-list-item',\n  listIcon: 'e-list-icon',\n  textContent: 'e-text-content',\n  listItemText: 'e-list-text',\n  groupListItem: 'e-list-group-item',\n  hasChild: 'e-has-child',\n  view: 'e-view',\n  header: 'e-list-header',\n  headerText: 'e-headertext',\n  headerTemplateText: 'e-headertemplate-text',\n  text: 'e-text',\n  disable: 'e-disabled',\n  content: 'e-content',\n  icon: 'e-icons',\n  backIcon: 'e-icon-back',\n  backButton: 'e-back-button',\n  checkboxWrapper: 'e-checkbox-wrapper',\n  checkbox: 'e-checkbox',\n  checked: 'e-check',\n  checklist: 'e-checklist',\n  checkboxIcon: 'e-frame',\n  checkboxRight: 'e-checkbox-right',\n  checkboxLeft: 'e-checkbox-left',\n  listviewCheckbox: 'e-listview-checkbox',\n  itemCheckList: 'e-checklist',\n  virtualElementContainer: 'e-list-virtualcontainer'\n};\nconst LISTVIEW_TEMPLATE_PROPERTY = 'Template';\nconst LISTVIEW_GROUPTEMPLATE_PROPERTY = 'GroupTemplate';\nconst LISTVIEW_HEADERTEMPLATE_PROPERTY = 'HeaderTemplate';\nconst swipeVelocity = 0.5;\n/**\n * Represents the field settings of the ListView.\n */\n\nclass FieldSettings extends ChildProperty {}\n\n__decorate([Property('id')], FieldSettings.prototype, \"id\", void 0);\n\n__decorate([Property('text')], FieldSettings.prototype, \"text\", void 0);\n\n__decorate([Property('isChecked')], FieldSettings.prototype, \"isChecked\", void 0);\n\n__decorate([Property('isVisible')], FieldSettings.prototype, \"isVisible\", void 0);\n\n__decorate([Property('enabled')], FieldSettings.prototype, \"enabled\", void 0);\n\n__decorate([Property('iconCss')], FieldSettings.prototype, \"iconCss\", void 0);\n\n__decorate([Property('child')], FieldSettings.prototype, \"child\", void 0);\n\n__decorate([Property('tooltip')], FieldSettings.prototype, \"tooltip\", void 0);\n\n__decorate([Property('groupBy')], FieldSettings.prototype, \"groupBy\", void 0);\n\n__decorate([Property('text')], FieldSettings.prototype, \"sortBy\", void 0);\n\n__decorate([Property('htmlAttributes')], FieldSettings.prototype, \"htmlAttributes\", void 0);\n\n__decorate([Property('tableName')], FieldSettings.prototype, \"tableName\", void 0);\n/**\n * Represents the EJ2 ListView control.\n * ```html\n * <div id=\"listview\">\n * <ul>\n * <li>Favorite</li>\n * <li>Documents</li>\n * <li>Downloads</li>\n * </ul>\n * </div>\n * ```\n * ```typescript\n *   var listviewObject = new ListView({});\n *   listviewObject.appendTo(\"#listview\");\n * ```\n */\n\n\nlet ListView = class ListView extends Component {\n  /**\n   * Constructor for creating the widget\n   *\n   * @param options\n   *\n   * @param element\n   */\n  constructor(options, element) {\n    super(options, element);\n    this.previousSelectedItems = [];\n    this.hiddenItems = [];\n    this.enabledItems = [];\n    this.disabledItems = [];\n  }\n  /**\n   * @param newProp\n   *\n   * @param oldProp\n   *\n   * @private\n   */\n\n\n  onPropertyChanged(newProp, oldProp) {\n    for (const prop of Object.keys(newProp)) {\n      switch (prop) {\n        case 'htmlAttributes':\n          this.setHTMLAttribute();\n          break;\n\n        case 'cssClass':\n          this.setCSSClass(oldProp.cssClass);\n          break;\n\n        case 'enable':\n          this.setEnable();\n          break;\n\n        case 'width':\n        case 'height':\n          this.setSize();\n          break;\n\n        case 'enableRtl':\n          this.setEnableRTL();\n          break;\n\n        case 'fields':\n          // eslint-disable-next-line\n          this.listBaseOption.fields = this.fields.properties;\n\n          if (this.enableVirtualization) {\n            this.virtualizationModule.reRenderUiVirtualization();\n          } else {\n            this.reRender();\n          }\n\n          break;\n\n        case 'headerTitle':\n          if (!this.curDSLevel.length) {\n            this.header(this.headerTitle, false, 'header');\n          }\n\n          break;\n\n        case 'query':\n          if (this.enableVirtualization) {\n            this.virtualizationModule.reRenderUiVirtualization();\n          } else {\n            this.reRender();\n          }\n\n          break;\n\n        case 'showHeader':\n          this.header(this.headerTitle, false, 'header');\n          break;\n\n        case 'enableVirtualization':\n          if (!isNullOrUndefined(this.contentContainer)) {\n            detach(this.contentContainer);\n          }\n\n          this.refresh();\n          break;\n\n        case 'showCheckBox':\n        case 'checkBoxPosition':\n          if (this.enableVirtualization) {\n            this.virtualizationModule.reRenderUiVirtualization();\n          } else {\n            this.setCheckbox();\n          }\n\n          break;\n\n        case 'dataSource':\n          if (this.enableVirtualization) {\n            this.virtualizationModule.reRenderUiVirtualization();\n          } else {\n            this.reRender();\n          }\n\n          break;\n\n        case 'sortOrder':\n        case 'template':\n          if (!this.enableVirtualization) {\n            this.refresh();\n          }\n\n          break;\n\n        case 'showIcon':\n          if (this.enableVirtualization) {\n            this.virtualizationModule.reRenderUiVirtualization();\n          } else {\n            this.listBaseOption.showIcon = this.showIcon;\n            this.curViewDS = this.getSubDS();\n            this.resetCurrentList();\n          }\n\n          break;\n\n        default:\n          break;\n      }\n    }\n  } // Model Changes\n\n\n  setHTMLAttribute() {\n    if (Object.keys(this.htmlAttributes).length) {\n      attributes(this.element, this.htmlAttributes);\n    }\n  }\n\n  setCSSClass(oldCSSClass) {\n    if (this.cssClass) {\n      addClass([this.element], this.cssClass.split(' ').filter(css => css));\n    }\n\n    if (oldCSSClass) {\n      removeClass([this.element], oldCSSClass.split(' ').filter(css => css));\n    }\n  }\n\n  setSize() {\n    this.element.style.height = formatUnit(this.height);\n    this.element.style.width = formatUnit(this.width);\n    this.isWindow = this.element.clientHeight ? false : true;\n  }\n\n  setEnable() {\n    this.enableElement(this.element, this.enable);\n  }\n\n  setEnableRTL() {\n    if (this.enableRtl) {\n      this.element.classList.add('e-rtl');\n    } else {\n      this.element.classList.remove('e-rtl');\n    }\n  }\n\n  enableElement(element, isEnabled) {\n    if (isEnabled) {\n      element.classList.remove(classNames.disable);\n    } else {\n      element.classList.add(classNames.disable);\n    }\n  } // Support Component Functions\n\n\n  header(text, showBack, prop) {\n    if (this.headerEle === undefined && this.showHeader) {\n      if (this.enableHtmlSanitizer) {\n        this.setProperties({\n          headerTitle: SanitizeHtmlHelper.sanitize(this.headerTitle)\n        }, true);\n      }\n\n      this.headerEle = this.createElement('div', {\n        className: classNames.header\n      });\n      const innerHeaderEle = this.createElement('span', {\n        className: classNames.headerText,\n        innerHTML: this.headerTitle\n      });\n      const textEle = this.createElement('div', {\n        className: classNames.text,\n        innerHTML: innerHeaderEle.outerHTML\n      });\n      const hedBackButton = this.createElement('div', {\n        className: classNames.icon + ' ' + classNames.backIcon + ' ' + classNames.backButton,\n        attrs: {\n          style: 'display:none;'\n        }\n      });\n      this.headerEle.appendChild(hedBackButton);\n      this.headerEle.appendChild(textEle);\n\n      if (this.headerTemplate) {\n        // eslint-disable-next-line\n        const compiledString = compile(this.headerTemplate);\n        const headerTemplateEle = this.createElement('div', {\n          className: classNames.headerTemplateText\n        }); // eslint-disable-next-line\n\n        const compiledElement = compiledString({}, this, prop, this.LISTVIEW_HEADERTEMPLATE_ID, null, null, this.headerEle);\n\n        if (compiledElement) {\n          append(compiledElement, headerTemplateEle);\n        }\n\n        append([headerTemplateEle], this.headerEle); // eslint-disable-next-line\n\n        if (this.isReact) {\n          this.renderReactTemplates();\n        }\n      }\n\n      if (this.headerTemplate && this.headerTitle) {\n        textEle.classList.add('header');\n      }\n\n      this.element.classList.add('e-has-header');\n      prepend([this.headerEle], this.element);\n    } else if (this.headerEle) {\n      if (this.showHeader) {\n        this.headerEle.style.display = '';\n        const textEle = this.headerEle.querySelector('.' + classNames.headerText);\n        const hedBackButton = this.headerEle.querySelector('.' + classNames.backIcon);\n\n        if (this.enableHtmlSanitizer) {\n          text = SanitizeHtmlHelper.sanitize(text);\n        }\n\n        textEle.innerHTML = text;\n\n        if (this.headerTemplate && showBack) {\n          textEle.parentElement.classList.remove('header');\n          this.headerEle.querySelector('.' + classNames.headerTemplateText).classList.add('nested-header');\n        }\n\n        if (this.headerTemplate && !showBack) {\n          textEle.parentElement.classList.add('header');\n          this.headerEle.querySelector('.' + classNames.headerTemplateText).classList.remove('nested-header');\n          this.headerEle.querySelector('.' + classNames.headerTemplateText).classList.add('header');\n        }\n\n        if (showBack === true) {\n          hedBackButton.style.display = '';\n        } else {\n          hedBackButton.style.display = 'none';\n        }\n      } else {\n        this.headerEle.style.display = 'none';\n      }\n    }\n  } // Animation Related Functions\n\n\n  switchView(fromView, toView, reverse) {\n    if (fromView && toView) {\n      const fPos = fromView.style.position;\n      const overflow = this.element.style.overflow !== 'hidden' ? this.element.style.overflow : '';\n      fromView.style.position = 'absolute';\n      fromView.classList.add('e-view');\n      let anim;\n      let duration = this.animation.duration;\n\n      if (this.animation.effect) {\n        anim = this.enableRtl ? effectsRTLConfig[this.animation.effect] : effectsConfig[this.animation.effect];\n      } else {\n        const slideLeft = 'SlideLeft';\n        anim = effectsConfig[slideLeft];\n        reverse = this.enableRtl;\n        duration = 0;\n      }\n\n      this.element.style.overflow = 'hidden';\n      this.aniObj.animate(fromView, {\n        name: reverse === true ? anim[0] : anim[1],\n        duration: duration,\n        timingFunction: this.animation.easing,\n        // eslint-disable-next-line\n        end: model => {\n          fromView.style.display = 'none';\n          this.element.style.overflow = overflow;\n          fromView.style.position = fPos;\n          fromView.classList.remove('e-view');\n        }\n      });\n      toView.style.display = '';\n      this.aniObj.animate(toView, {\n        name: reverse === true ? anim[2] : anim[3],\n        duration: duration,\n        timingFunction: this.animation.easing,\n        end: () => {\n          this.trigger('actionComplete');\n        }\n      });\n      this.curUL = toView;\n    }\n  }\n\n  preRender() {\n    if (this.template) {\n      try {\n        if (document.querySelectorAll(this.template).length) {\n          this.setProperties({\n            template: document.querySelector(this.template).innerHTML.trim()\n          }, true);\n        }\n      } catch (e) {\n        compile(this.template);\n      }\n    }\n\n    this.listBaseOption = {\n      template: this.template,\n      headerTemplate: this.headerTemplate,\n      groupTemplate: this.groupTemplate,\n      expandCollapse: true,\n      listClass: '',\n      ariaAttributes: {\n        itemRole: 'option',\n        listRole: 'presentation',\n        itemText: '',\n        groupItemRole: 'option',\n        wrapperRole: 'presentation'\n      },\n      // eslint-disable-next-line\n      fields: this.fields.properties,\n      sortOrder: this.sortOrder,\n      showIcon: this.showIcon,\n      itemCreated: this.renderCheckbox.bind(this),\n      templateID: `${this.element.id}${LISTVIEW_TEMPLATE_PROPERTY}`,\n      groupTemplateID: `${this.element.id}${LISTVIEW_GROUPTEMPLATE_PROPERTY}`,\n      enableHtmlSanitizer: this.enableHtmlSanitizer\n    };\n    this.initialization();\n  }\n\n  initialization() {\n    this.curDSLevel = [];\n    this.animateOptions = {};\n    this.curViewDS = [];\n    this.currentLiElements = [];\n    this.isNestedList = false;\n    this.selectedData = [];\n    this.selectedId = [];\n    this.LISTVIEW_TEMPLATE_ID = `${this.element.id}${LISTVIEW_TEMPLATE_PROPERTY}`;\n    this.LISTVIEW_GROUPTEMPLATE_ID = `${this.element.id}${LISTVIEW_GROUPTEMPLATE_PROPERTY}`;\n    this.LISTVIEW_HEADERTEMPLATE_ID = `${this.element.id}${LISTVIEW_HEADERTEMPLATE_PROPERTY}`;\n    this.aniObj = new Animation(this.animateOptions);\n    this.removeElement(this.curUL);\n    this.removeElement(this.ulElement);\n    this.removeElement(this.headerEle);\n    this.removeElement(this.contentContainer);\n    this.curUL = this.ulElement = this.liCollection = this.headerEle = this.contentContainer = undefined;\n  }\n\n  renderCheckbox(args) {\n    if (args.item.classList.contains(classNames.hasChild)) {\n      this.isNestedList = true;\n    }\n\n    if (this.showCheckBox && this.isValidLI(args.item)) {\n      let checkboxElement;\n      let fieldData; // eslint-disable-next-line prefer-const\n\n      checkboxElement = createCheckBox(this.createElement, false, {\n        checked: false,\n        enableRtl: this.enableRtl,\n        cssClass: classNames.listviewCheckbox\n      });\n      checkboxElement.setAttribute('role', 'checkbox');\n      const frameElement = checkboxElement.querySelector('.' + classNames.checkboxIcon);\n      args.item.classList.add(classNames.itemCheckList);\n      args.item.firstElementChild.classList.add(classNames.checkbox);\n\n      if (typeof this.dataSource[0] !== 'string' && typeof this.dataSource[0] !== 'number') {\n        fieldData = getFieldValues(args.curData, this.listBaseOption.fields);\n\n        if (fieldData[this.listBaseOption.fields.isChecked]) {\n          this.checkInternally(args, checkboxElement);\n        }\n      } else if ((typeof this.dataSource[0] === 'string' || typeof this.dataSource[0] === 'number') && this.selectedData.indexOf(args.text) !== -1) {\n        this.checkInternally(args, checkboxElement);\n      }\n\n      checkboxElement.setAttribute('aria-checked', frameElement.classList.contains(classNames.checked) ? 'true' : 'false');\n\n      if (this.checkBoxPosition === 'Left') {\n        checkboxElement.classList.add(classNames.checkboxLeft);\n        args.item.firstElementChild.classList.add(classNames.checkboxLeft);\n        args.item.firstElementChild.insertBefore(checkboxElement, args.item.firstElementChild.childNodes[0]);\n      } else {\n        checkboxElement.classList.add(classNames.checkboxRight);\n        args.item.firstElementChild.classList.add(classNames.checkboxRight);\n        args.item.firstElementChild.appendChild(checkboxElement);\n      }\n\n      this.currentLiElements.push(args.item);\n\n      if (this.checkBoxPosition === 'Left') {\n        this.virtualCheckBox = args.item.firstElementChild.children[0];\n      } else {\n        this.virtualCheckBox = args.item.firstElementChild.lastElementChild;\n      }\n    }\n  }\n\n  checkInternally(args, checkboxElement) {\n    args.item.classList.add(classNames.selected);\n    args.item.setAttribute('aria-selected', 'true');\n    checkboxElement.querySelector('.' + classNames.checkboxIcon).classList.add(classNames.checked);\n    checkboxElement.setAttribute('aria-checked', 'true');\n  }\n  /**\n   * Checks the specific list item by passing the unchecked fields as an argument to this method.\n   *\n   * @param  {Fields | HTMLElement | Element} item - It accepts Fields or HTML list element as an argument.\n   */\n\n\n  checkItem(item) {\n    this.toggleCheckBase(item, true);\n  }\n\n  toggleCheckBase(item, checked) {\n    if (this.showCheckBox) {\n      let liElement = item;\n\n      if (item instanceof Object && item.constructor !== HTMLLIElement) {\n        liElement = this.getLiFromObjOrElement(item);\n      }\n\n      if (!isNullOrUndefined(liElement)) {\n        const checkboxIcon = liElement.querySelector('.' + classNames.checkboxIcon);\n\n        if (checked === true) {\n          liElement.classList.add(classNames.selected);\n        } else {\n          liElement.classList.remove(classNames.selected);\n        }\n\n        liElement.setAttribute('aria-selected', checked ? 'true' : 'false');\n\n        if (checked === true) {\n          checkboxIcon.classList.add(classNames.checked);\n        } else {\n          checkboxIcon.classList.remove(classNames.checked);\n        }\n\n        checkboxIcon.parentElement.setAttribute('aria-checked', checked ? 'true' : 'false');\n      }\n\n      this.setSelectedItemData(liElement);\n    }\n  }\n  /**\n   * Uncheck the specific list item by passing the checked fields as an argument to this method.\n   *\n   * @param  {Fields | HTMLElement | Element} item - It accepts Fields or HTML list element as an argument.\n   */\n\n\n  uncheckItem(item) {\n    this.toggleCheckBase(item, false);\n  }\n  /**\n   * Checks all the unchecked items in the ListView.\n   */\n\n\n  checkAllItems() {\n    this.toggleAllCheckBase(true);\n  }\n  /**\n   * Uncheck all the checked items in ListView.\n   */\n\n\n  uncheckAllItems() {\n    this.toggleAllCheckBase(false);\n  }\n\n  toggleAllCheckBase(checked) {\n    if (this.showCheckBox) {\n      for (let i = 0; i < this.liCollection.length; i++) {\n        const checkIcon = this.liCollection[i].querySelector('.' + classNames.checkboxIcon);\n\n        if (checkIcon) {\n          if (checked) {\n            if (!checkIcon.classList.contains(classNames.checked)) {\n              this.checkItem(this.liCollection[i]);\n            }\n          } else {\n            if (checkIcon.classList.contains(classNames.checked)) {\n              this.uncheckItem(this.liCollection[i]);\n            }\n          }\n        }\n      }\n\n      if (this.enableVirtualization) {\n        this.virtualizationModule.checkedItem(checked);\n      }\n    }\n  }\n\n  setCheckbox() {\n    if (this.showCheckBox) {\n      const liCollection = Array.prototype.slice.call(this.element.querySelectorAll('.' + classNames.listItem));\n      const args = {\n        item: undefined,\n        curData: undefined,\n        dataSource: undefined,\n        fields: undefined,\n        options: undefined,\n        text: ''\n      };\n\n      for (let i = 0; i < liCollection.length; i++) {\n        const element = liCollection[i];\n        args.item = element; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n        args.curData = this.getItemData(element);\n\n        if (element.querySelector('.' + classNames.checkboxWrapper)) {\n          this.removeElement(element.querySelector('.' + classNames.checkboxWrapper));\n        }\n\n        this.renderCheckbox(args);\n\n        if (args.item.classList.contains(classNames.selected)) {\n          this.checkInternally(args, args.item.querySelector('.' + classNames.checkboxWrapper));\n        }\n      }\n    } else {\n      const liCollection = Array.prototype.slice.call(this.element.querySelectorAll('.' + classNames.itemCheckList));\n\n      for (let i = 0; i < liCollection.length; i++) {\n        const element = liCollection[i];\n        element.classList.remove(classNames.selected);\n        element.firstElementChild.classList.remove(classNames.checkbox);\n        this.removeElement(element.querySelector('.' + classNames.checkboxWrapper));\n      }\n\n      if (this.selectedItems) {\n        this.selectedItems.item.classList.add(classNames.selected);\n      }\n    }\n  }\n  /**\n   * Refresh the height of the list item only on enabling the virtualization property.\n   */\n\n\n  refreshItemHeight() {\n    if (this.virtualizationModule) {\n      this.virtualizationModule.refreshItemHeight();\n    }\n  }\n\n  clickHandler(e) {\n    const target = e.target;\n    const classList = target.classList;\n    let closestElement;\n\n    if (classList.contains(classNames.backIcon) || classList.contains(classNames.headerText)) {\n      if (this.showCheckBox && this.curDSLevel[this.curDSLevel.length - 1]) {\n        this.uncheckAllItems();\n      }\n\n      this.back();\n    } else {\n      let li = closest(target.parentNode, '.' + classNames.listItem);\n\n      if (li === null) {\n        li = target;\n      }\n\n      this.removeFocus();\n\n      if (this.enable && this.showCheckBox && this.isValidLI(li)) {\n        if (e.target.classList.contains(classNames.checkboxIcon)) {\n          li.classList.add(classNames.focused);\n\n          if (isNullOrUndefined(li.querySelector('.' + classNames.checked))) {\n            const args = {\n              curData: undefined,\n              dataSource: undefined,\n              fields: undefined,\n              options: undefined,\n              text: undefined,\n              item: li\n            };\n            this.checkInternally(args, args.item.querySelector('.' + classNames.checkboxWrapper));\n          } else {\n            this.uncheckItem(li);\n            li.classList.add(classNames.focused);\n          }\n\n          if (this.enableVirtualization) {\n            this.virtualizationModule.setCheckboxLI(li, e);\n          }\n\n          if (e) {\n            const eventArgs = this.selectEventData(li, e);\n            const checkIcon = li.querySelector('.' + classNames.checkboxIcon);\n            merge(eventArgs, {\n              isChecked: checkIcon.classList.contains(classNames.checked)\n            });\n            this.trigger('select', eventArgs);\n          }\n        } else if (li.classList.contains(classNames.hasChild)) {\n          this.removeHover();\n          this.removeSelect();\n          this.removeSelect(li);\n          this.setSelectLI(li, e);\n          li.classList.remove(classNames.selected);\n        } else {\n          this.setCheckboxLI(li, e);\n        }\n      } else {\n        this.setSelectLI(li, e);\n        this.element.focus();\n      }\n\n      closestElement = closest(e.target, 'li');\n\n      if (!isNullOrUndefined(closestElement)) {\n        if (closestElement.classList.contains('e-has-child') && !e.target.parentElement.classList.contains('e-listview-checkbox')) {\n          closestElement.classList.add(classNames.disable);\n        }\n      }\n    }\n  }\n\n  removeElement(element) {\n    return element && element.parentNode && element.parentNode.removeChild(element);\n  }\n\n  hoverHandler(e) {\n    const curLi = closest(e.target.parentNode, '.' + classNames.listItem);\n    this.setHoverLI(curLi);\n  } // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  leaveHandler(e) {\n    this.removeHover();\n  }\n\n  homeKeyHandler(e, end) {\n    e.preventDefault();\n\n    if (Object.keys(this.dataSource).length && this.curUL) {\n      if (this.selectedItems) {\n        this.selectedItems.item.setAttribute('aria-selected', 'false');\n      }\n\n      const li = this.curUL.querySelectorAll('.' + classNames.listItem);\n      const focusedElement = this.curUL.querySelector('.' + classNames.focused) || this.curUL.querySelector('.' + classNames.selected);\n\n      if (focusedElement) {\n        focusedElement.classList.remove(classNames.focused);\n\n        if (!this.showCheckBox) {\n          focusedElement.classList.remove(classNames.selected);\n        }\n      }\n\n      const index = !end ? 0 : li.length - 1;\n\n      if (li[index].classList.contains(classNames.hasChild) || this.showCheckBox) {\n        li[index].classList.add(classNames.focused);\n      } else {\n        this.setSelectLI(li[index], e);\n      }\n\n      if (li[index]) {\n        this.element.setAttribute('aria-activedescendant', li[index].id.toString());\n      } else {\n        this.element.removeAttribute('aria-activedescendant');\n      }\n    }\n  }\n\n  onArrowKeyDown(e, prev) {\n    let siblingLI;\n    let li;\n    const hasChild = !isNullOrUndefined(this.curUL.querySelector('.' + classNames.hasChild)) ? true : false;\n\n    if (hasChild || this.showCheckBox) {\n      li = this.curUL.querySelector('.' + classNames.focused) || this.curUL.querySelector('.' + classNames.selected);\n      siblingLI = ListBase.getSiblingLI(this.curUL.querySelectorAll('.' + classNames.listItem), li, prev);\n\n      if (!isNullOrUndefined(siblingLI)) {\n        if (li) {\n          li.classList.remove(classNames.focused);\n\n          if (!this.showCheckBox) {\n            li.classList.remove(classNames.selected);\n          }\n        }\n\n        if (siblingLI.classList.contains(classNames.hasChild) || this.showCheckBox) {\n          siblingLI.classList.add(classNames.focused);\n        } else {\n          this.setSelectLI(siblingLI, e);\n        }\n      }\n    } else {\n      li = this.curUL.querySelector('.' + classNames.selected);\n      siblingLI = ListBase.getSiblingLI(this.curUL.querySelectorAll('.' + classNames.listItem), li, prev);\n      this.setSelectLI(siblingLI, e);\n    }\n\n    if (siblingLI) {\n      this.element.setAttribute('aria-activedescendant', siblingLI.id.toString());\n    } else {\n      this.element.removeAttribute('aria-activedescendant');\n    }\n\n    return siblingLI;\n  }\n\n  arrowKeyHandler(e, prev) {\n    e.preventDefault();\n\n    if (Object.keys(this.dataSource).length && this.curUL) {\n      const siblingLI = this.onArrowKeyDown(e, prev);\n      const elementTop = this.element.getBoundingClientRect().top;\n      const elementHeight = this.element.getBoundingClientRect().height;\n      const firstItemBounds = this.curUL.querySelector('.' + classNames.listItem).getBoundingClientRect();\n      let heightDiff;\n      let groupItemBounds;\n\n      if (this.fields.groupBy) {\n        groupItemBounds = this.curUL.querySelector('.' + classNames.groupListItem).getBoundingClientRect();\n      }\n\n      if (siblingLI) {\n        const siblingTop = siblingLI.getBoundingClientRect().top;\n        const siblingHeight = siblingLI.getBoundingClientRect().height;\n\n        if (!prev) {\n          const height = this.isWindow ? window.innerHeight : elementHeight;\n          heightDiff = this.isWindow ? siblingTop + siblingHeight : siblingTop - elementTop + siblingHeight;\n\n          if (heightDiff > height) {\n            if (this.isWindow === true) {\n              window.scroll(0, pageYOffset + (heightDiff - height));\n            } else {\n              this.element.scrollTop = this.element.scrollTop + (heightDiff - height);\n            }\n          }\n        } else {\n          heightDiff = this.isWindow ? siblingTop : siblingTop - elementTop;\n\n          if (heightDiff < 0) {\n            if (this.isWindow === true) {\n              window.scroll(0, pageYOffset + heightDiff);\n            } else {\n              this.element.scrollTop = this.element.scrollTop + heightDiff;\n            }\n          }\n        }\n      } else if (this.enableVirtualization && prev && this.virtualizationModule.uiFirstIndex) {\n        this.onUIScrolled = () => {\n          this.onArrowKeyDown(e, prev);\n          this.onUIScrolled = undefined;\n        };\n\n        heightDiff = this.virtualizationModule.listItemHeight;\n\n        if (this.isWindow === true) {\n          window.scroll(0, pageYOffset - heightDiff);\n        } else {\n          this.element.scrollTop = this.element.scrollTop - heightDiff;\n        }\n      } else if (prev) {\n        if (this.showHeader && this.headerEle) {\n          const topHeight = groupItemBounds ? groupItemBounds.top : firstItemBounds.top;\n          const headerBounds = this.headerEle.getBoundingClientRect();\n          heightDiff = headerBounds.top < 0 ? headerBounds.height - topHeight : 0;\n\n          if (this.isWindow === true) {\n            window.scroll(0, pageYOffset - heightDiff);\n          } else {\n            this.element.scrollTop = 0;\n          }\n        } else if (this.fields.groupBy) {\n          heightDiff = this.isWindow ? groupItemBounds.top < 0 ? groupItemBounds.top : 0 : elementTop - firstItemBounds.top + groupItemBounds.height;\n\n          if (this.isWindow === true) {\n            window.scroll(0, pageYOffset + heightDiff);\n          } else {\n            this.element.scrollTop = this.element.scrollTop - heightDiff;\n          }\n        }\n      }\n    }\n  }\n\n  enterKeyHandler(e) {\n    if (Object.keys(this.dataSource).length && this.curUL) {\n      const hasChild = !isNullOrUndefined(this.curUL.querySelector('.' + classNames.hasChild)) ? true : false;\n      const li = this.curUL.querySelector('.' + classNames.focused);\n\n      if (hasChild && li) {\n        li.classList.remove(classNames.focused);\n\n        if (this.showCheckBox) {\n          this.removeSelect();\n          this.removeSelect(li);\n          this.removeHover();\n        }\n\n        this.setSelectLI(li, e);\n      }\n    }\n  }\n\n  spaceKeyHandler(e) {\n    e.preventDefault();\n\n    if (this.enable && this.showCheckBox && Object.keys(this.dataSource).length && this.curUL) {\n      const li = this.curUL.querySelector('.' + classNames.focused);\n      let checkboxElement;\n      let checkIcon;\n\n      if (!isNullOrUndefined(li) && isNullOrUndefined(li.querySelector('.' + classNames.checked))) {\n        const args = {\n          curData: undefined,\n          dataSource: undefined,\n          fields: undefined,\n          options: undefined,\n          text: undefined,\n          item: li\n        };\n        checkboxElement = args.item.querySelector('.' + classNames.checkboxWrapper);\n        this.checkInternally(args, checkboxElement);\n        checkIcon = checkboxElement.querySelector('.' + classNames.checkboxIcon + '.' + classNames.icon);\n      } else {\n        this.uncheckItem(li);\n      }\n\n      const eventArgs = this.selectEventData(li, e);\n      merge(eventArgs, {\n        isChecked: checkIcon ? checkIcon.classList.contains(classNames.checked) : false\n      });\n      this.trigger('select', eventArgs);\n    }\n  }\n\n  keyActionHandler(e) {\n    switch (e.keyCode) {\n      case 36:\n        this.homeKeyHandler(e);\n        break;\n\n      case 35:\n        this.homeKeyHandler(e, true);\n        break;\n\n      case 40:\n        this.arrowKeyHandler(e);\n        break;\n\n      case 38:\n        this.arrowKeyHandler(e, true);\n        break;\n\n      case 13:\n        this.enterKeyHandler(e);\n        break;\n\n      case 8:\n        if (this.showCheckBox && this.curDSLevel[this.curDSLevel.length - 1]) {\n          this.uncheckAllItems();\n        }\n\n        this.back();\n        break;\n\n      case 32:\n        this.spaceKeyHandler(e);\n        break;\n    }\n  }\n\n  swipeActionHandler(e) {\n    if (e.swipeDirection === 'Right' && e.velocity > swipeVelocity && e.originalEvent.type === 'touchend') {\n      if (this.showCheckBox && this.curDSLevel[this.curDSLevel.length - 1]) {\n        this.uncheckAllItems();\n      }\n\n      this.back();\n    }\n  }\n\n  focusout() {\n    if (Object.keys(this.dataSource).length && this.curUL) {\n      const focusedElement = this.curUL.querySelector('.' + classNames.focused);\n      const activeElement = this.curUL.querySelector('[aria-selected = true]');\n\n      if (focusedElement) {\n        focusedElement.classList.remove(classNames.focused);\n\n        if (activeElement && !this.showCheckBox) {\n          activeElement.classList.add(classNames.selected);\n        }\n      }\n    }\n  }\n\n  wireEvents() {\n    EventHandler.add(this.element, 'keydown', this.keyActionHandler, this);\n    EventHandler.add(this.element, 'click', this.clickHandler, this);\n    EventHandler.add(this.element, 'mouseover', this.hoverHandler, this);\n    EventHandler.add(this.element, 'mouseout', this.leaveHandler, this);\n    EventHandler.add(this.element, 'focusout', this.focusout, this);\n    this.touchModule = new Touch(this.element, {\n      swipe: this.swipeActionHandler.bind(this)\n    });\n  }\n\n  unWireEvents() {\n    EventHandler.remove(this.element, 'click', this.clickHandler);\n    EventHandler.remove(this.element, 'mouseover', this.hoverHandler);\n    EventHandler.remove(this.element, 'mouseout', this.leaveHandler);\n    EventHandler.remove(this.element, 'mouseover', this.hoverHandler);\n    EventHandler.remove(this.element, 'mouseout', this.leaveHandler);\n    this.touchModule.destroy();\n  }\n\n  removeFocus() {\n    const focusedLI = this.element.querySelectorAll('.' + classNames.focused);\n\n    for (const ele of focusedLI) {\n      ele.classList.remove(classNames.focused);\n    }\n  }\n\n  removeHover() {\n    const hoverLI = this.element.querySelector('.' + classNames.hover);\n\n    if (hoverLI) {\n      hoverLI.classList.remove(classNames.hover);\n    }\n  }\n\n  removeSelect(li) {\n    if (isNullOrUndefined(li)) {\n      const selectedLI = this.element.querySelectorAll('.' + classNames.selected);\n\n      for (const ele of selectedLI) {\n        if (this.showCheckBox && ele.querySelector('.' + classNames.checked)) {\n          continue;\n        } else {\n          ele.setAttribute('aria-selected', 'false');\n          ele.classList.remove(classNames.selected);\n        }\n      }\n    } else {\n      li.classList.remove(classNames.selected);\n      li.setAttribute('aria-selected', 'false');\n    }\n  }\n\n  isValidLI(li) {\n    return li && li.classList.contains(classNames.listItem) && !li.classList.contains(classNames.groupListItem) && !li.classList.contains(classNames.disable);\n  }\n\n  setCheckboxLI(li, e) {\n    if (this.isValidLI(li) && this.enable && this.showCheckBox) {\n      if (this.curUL.querySelector('.' + classNames.focused)) {\n        this.curUL.querySelector('.' + classNames.focused).classList.remove(classNames.focused);\n      }\n\n      li.classList.add(classNames.focused);\n      const checkboxElement = li.querySelector('.' + classNames.checkboxWrapper);\n      const checkIcon = checkboxElement.querySelector('.' + classNames.checkboxIcon + '.' + classNames.icon);\n      this.removeHover();\n\n      if (!checkIcon.classList.contains(classNames.checked)) {\n        checkIcon.classList.add(classNames.checked);\n        li.classList.add(classNames.selected);\n        li.setAttribute('aria-selected', 'true');\n      } else {\n        checkIcon.classList.remove(classNames.checked);\n        li.classList.remove(classNames.selected);\n        li.setAttribute('aria-selected', 'false');\n      }\n\n      checkboxElement.setAttribute('aria-checked', checkIcon.classList.contains(classNames.checked) ? 'true' : 'false');\n      const eventArgs = this.selectEventData(li, e);\n      merge(eventArgs, {\n        isChecked: checkIcon.classList.contains(classNames.checked)\n      });\n\n      if (this.enableVirtualization) {\n        this.virtualizationModule.setCheckboxLI(li, e);\n      }\n\n      this.trigger('select', eventArgs);\n      this.setSelectedItemData(li);\n      this.renderSubList(li);\n    }\n  }\n\n  selectEventData(li, e) {\n    const data = this.getItemData(li);\n    const fieldData = getFieldValues(data, this.listBaseOption.fields);\n    let selectedItem;\n\n    if (!isNullOrUndefined(data) && typeof this.dataSource[0] === 'string' || typeof this.dataSource[0] === 'number') {\n      selectedItem = {\n        item: li,\n        text: li && li.innerText.trim(),\n        data: this.dataSource\n      };\n    } else {\n      selectedItem = // eslint-disable-next-line\n      {\n        item: li,\n        text: fieldData && fieldData[this.listBaseOption.fields.text],\n        // eslint-disable-next-line\n        data: data\n      };\n    }\n\n    const eventArgs = {};\n    merge(eventArgs, selectedItem);\n\n    if (e) {\n      merge(eventArgs, {\n        isInteracted: true,\n        event: e,\n        index: this.curUL && Array.prototype.indexOf.call(this.curUL.children, li)\n      });\n    }\n\n    return eventArgs;\n  }\n\n  setSelectedItemData(li) {\n    const data = this.getItemData(li); // eslint-disable-next-line\n\n    const fieldData = getFieldValues(data, this.listBaseOption.fields);\n\n    if (!isNullOrUndefined(data) && (typeof this.dataSource[0] === 'string' || typeof this.dataSource[0] === 'number')) {\n      this.selectedItems = {\n        item: li,\n        text: li && li.innerText.trim(),\n        data: this.dataSource\n      };\n    } else {\n      this.selectedItems = {\n        item: li,\n        // eslint-disable-next-line\n        text: fieldData && fieldData[this.listBaseOption.fields.text],\n        // eslint-disable-next-line\n        data: data\n      };\n    }\n  }\n\n  setSelectLI(li, e) {\n    if (this.isValidLI(li) && !li.classList.contains(classNames.selected) && this.enable) {\n      if (!this.showCheckBox) {\n        this.removeSelect();\n      }\n\n      li.classList.add(classNames.selected);\n      li.setAttribute('aria-selected', 'true');\n      this.removeHover();\n      this.setSelectedItemData(li);\n\n      if (this.enableVirtualization) {\n        this.virtualizationModule.setSelectLI(li, e);\n      }\n\n      const eventArgs = this.selectEventData(li, e);\n      this.trigger('select', eventArgs);\n      this.selectedLI = li;\n      this.renderSubList(li);\n    }\n  }\n\n  setHoverLI(li) {\n    if (this.isValidLI(li) && !li.classList.contains(classNames.hover) && this.enable) {\n      const lastLi = this.element.querySelectorAll('.' + classNames.hover);\n\n      if (lastLi && lastLi.length) {\n        removeClass(lastLi, classNames.hover);\n      }\n\n      if (!li.classList.contains(classNames.selected) || this.showCheckBox) {\n        li.classList.add(classNames.hover);\n      }\n    }\n  } //Data Source Related Functions\n\n\n  getSubDS() {\n    const levelKeys = this.curDSLevel;\n\n    if (levelKeys.length) {\n      let ds = this.localData;\n\n      for (const key of levelKeys) {\n        const field = {}; // eslint-disable-next-line\n\n        field[this.fields.id] = key;\n        this.curDSJSON = this.findItemFromDS(ds, field);\n        const fieldData = getFieldValues(this.curDSJSON, this.listBaseOption.fields);\n        ds = this.curDSJSON ? fieldData[this.fields.child] : ds;\n      }\n\n      return ds;\n    }\n\n    return this.localData;\n  }\n\n  getItemData(li) {\n    const dataSource = this.dataSource instanceof DataManager ? this.localData : this.dataSource;\n    const fields = this.getElementUID(li);\n    let curDS;\n\n    if (isNullOrUndefined(this.element.querySelector('.' + classNames.hasChild)) && this.fields.groupBy) {\n      curDS = this.curViewDS;\n    } else {\n      curDS = dataSource;\n    }\n\n    return this.findItemFromDS(curDS, fields);\n  }\n\n  findItemFromDS(dataSource, fields, parent) {\n    let resultJSON;\n\n    if (dataSource && dataSource.length && fields) {\n      dataSource.some(data => {\n        const fieldData = // eslint-disable-next-line\n        getFieldValues(data, this.listBaseOption.fields); //(!(fid) || id === fid) && (!(ftext) || text === ftext) && (!!fid || !!ftext)\n\n        if ((fields[this.fields.id] || fields[this.fields.text]) && (!fields[this.fields.id] || (!isNullOrUndefined(fieldData[this.fields.id]) && fieldData[this.fields.id].toString()) === fields[this.fields.id].toString()) && (!fields[this.fields.text] || fieldData[this.fields.text] === fields[this.fields.text])) {\n          resultJSON = parent ? dataSource : data;\n        } else if (typeof data !== 'object' && dataSource.indexOf(data) !== -1) {\n          resultJSON = parent ? dataSource : data;\n        } else if (!isNullOrUndefined(fields[this.fields.id]) && isNullOrUndefined(fieldData[this.fields.id])) {\n          const li = this.element.querySelector('[data-uid=\"' + fields[this.fields.id] + '\"]'); // eslint-disable-next-line\n\n          if (li && li.innerText.trim() === fieldData[this.fields.text]) {\n            resultJSON = data;\n          } // eslint-disable-next-line\n\n        } else if (fieldData.hasOwnProperty(this.fields.child) && fieldData[this.fields.child].length) {\n          resultJSON = this.findItemFromDS(fieldData[this.fields.child], fields, parent);\n        }\n\n        return !!resultJSON;\n      });\n    } else {\n      resultJSON = dataSource;\n    }\n\n    return resultJSON;\n  }\n\n  getQuery() {\n    const columns = [];\n    const query = this.query ? this.query : new Query();\n\n    if (!this.query) {\n      // eslint-disable-next-line\n      for (const column of Object.keys(this.fields.properties)) {\n        if (column !== 'tableName' && !!this.fields[column] && this.fields[column] !== ListBase.defaultMappedFields[column] && columns.indexOf(this.fields[column]) === -1) {\n          columns.push(this.fields[column]);\n        }\n      }\n\n      query.select(columns); // eslint-disable-next-line\n\n      if (this.fields.properties.hasOwnProperty('tableName')) {\n        query.from(this.fields.tableName);\n      }\n    }\n\n    return query;\n  }\n\n  setViewDataSource(dataSource = this.localData) {\n    // eslint-disable-next-line\n    let fieldValue = isNullOrUndefined(this.fields.sortBy) ? this.fields.text : this.fields.sortBy;\n    let query = ListBase.addSorting(this.sortOrder, fieldValue);\n\n    if (dataSource && this.fields.groupBy) {\n      if (this.sortOrder !== 'None') {\n        this.curViewDS = ListBase.groupDataSource(ListBase.getDataSource(dataSource, query), this.listBaseOption.fields, this.sortOrder);\n      } else {\n        this.curViewDS = ListBase.groupDataSource(dataSource, this.listBaseOption.fields, this.sortOrder);\n      }\n    } else if (dataSource && this.sortOrder !== 'None') {\n      this.curViewDS = ListBase.getDataSource(dataSource, query);\n    } else {\n      this.curViewDS = dataSource;\n    }\n  }\n\n  isInAnimation() {\n    return this.curUL.classList.contains('.e-animate');\n  }\n\n  renderRemoteLists(e, listViewComponent) {\n    if (this.isDestroyed) {\n      return;\n    }\n\n    this.localData = e.result;\n    listViewComponent.removeElement(listViewComponent.contentContainer);\n    this.renderList();\n    this.trigger('actionComplete', e);\n  }\n\n  triggerActionFailure(e) {\n    if (this.isDestroyed) {\n      return;\n    }\n\n    this.trigger('actionFailure', e);\n  }\n\n  setLocalData() {\n    this.trigger('actionBegin'); // eslint-disable-next-line\n\n    const listViewComponent = this;\n\n    if (this.dataSource instanceof DataManager) {\n      if (this.dataSource.ready) {\n        this.dataSource.ready.then(e => {\n          /* eslint-disable */\n          this.isOffline = this.dataSource.dataSource.offline;\n\n          if (this.dataSource instanceof DataManager && this.isOffline) {\n            this.renderRemoteLists(e, listViewComponent);\n          }\n        }).catch(e => {\n          this.triggerActionFailure(e);\n        });\n      } else {\n        this.dataSource.executeQuery(this.getQuery()).then(e => {\n          this.renderRemoteLists(e, listViewComponent);\n        }).catch(e => {\n          this.triggerActionFailure(e);\n        });\n      }\n    } else if (!this.dataSource || !this.dataSource.length) {\n      const ul = this.element.querySelector('ul');\n\n      if (ul) {\n        remove(ul);\n        this.setProperties({\n          dataSource: ListBase.createJsonFromElement(ul)\n        }, true);\n        this.localData = this.dataSource;\n        this.renderList();\n        this.trigger('actionComplete', {\n          data: this.localData\n        });\n      }\n    } else {\n      this.localData = this.dataSource;\n      this.renderList();\n      this.trigger('actionComplete', {\n        data: this.localData\n      });\n    }\n  }\n\n  reRender() {\n    this.removeElement(this.headerEle);\n    this.removeElement(this.ulElement);\n    this.removeElement(this.contentContainer); // eslint-disable-next-line\n\n    if (this.isReact) {\n      this.clearTemplate();\n    }\n\n    if (Object.keys(window).indexOf('ejsInterop') === -1) {\n      this.element.innerHTML = '';\n    }\n\n    this.headerEle = this.ulElement = this.liCollection = undefined;\n    this.header();\n    this.setLocalData();\n  }\n\n  resetCurrentList() {\n    this.setViewDataSource(this.curViewDS);\n    this.contentContainer.innerHTML = '';\n    this.createList();\n    this.renderIntoDom(this.curUL);\n  }\n\n  setAttributes(liElements) {\n    for (let i = 0; i < liElements.length; i++) {\n      const element = liElements[i];\n\n      if (element.classList.contains('e-list-item')) {\n        element.setAttribute('id', this.element.id + '_' + element.getAttribute('data-uid'));\n        element.setAttribute('aria-selected', 'false');\n        element.setAttribute('tabindex', '-1');\n      }\n    }\n  }\n\n  createList() {\n    this.currentLiElements = [];\n    this.isNestedList = false;\n    this.ulElement = this.curUL = ListBase.createList(this.createElement, this.curViewDS, this.listBaseOption, null, this);\n    this.liCollection = this.curUL.querySelectorAll('.' + classNames.listItem);\n    this.setAttributes(this.liCollection);\n  }\n\n  exceptionEvent(e) {\n    this.trigger('actionFailure', e);\n  }\n\n  UpdateCurrentUL() {\n    this.ulElement = this.curUL = this.element.querySelector('.' + classNames.parentItem);\n\n    if (this.curUL) {\n      // eslint-disable-next-line\n      this.liCollection = this.curUL.querySelectorAll('.' + classNames.listItem);\n    }\n  }\n\n  renderSubList(li) {\n    this.liElement = li;\n    const uID = li.getAttribute('data-uid');\n\n    if (li.classList.contains(classNames.hasChild) && uID) {\n      const ul = closest(li.parentNode, '.' + classNames.parentItem);\n      let ele = this.element.querySelector('[pid=\\'' + uID + '\\']');\n      this.curDSLevel.push(uID);\n      this.setViewDataSource(this.getSubDS());\n\n      if (!ele) {\n        const data = this.curViewDS;\n        ele = ListBase.createListFromJson(this.createElement, data, this.listBaseOption, this.curDSLevel.length, null, this); // eslint-disable-next-line\n\n        if (this.isReact) {\n          this.renderReactTemplates();\n        }\n\n        const lists = ele.querySelectorAll('.' + classNames.listItem);\n        this.setAttributes(lists);\n        ele.setAttribute('pID', uID);\n        ele.style.display = 'none';\n        this.renderIntoDom(ele);\n      }\n\n      this.switchView(ul, ele);\n      this.liCollection = this.curUL.querySelectorAll('.' + classNames.listItem);\n\n      if (this.selectedItems) {\n        const fieldData = getFieldValues(this.selectedItems.data, this.listBaseOption.fields); // eslint-disable-next-line\n\n        this.header(fieldData[this.listBaseOption.fields.text], true, 'header');\n      }\n\n      this.selectedLI = undefined;\n    }\n  }\n\n  renderIntoDom(ele) {\n    this.contentContainer.appendChild(ele);\n  }\n\n  renderList(data) {\n    this.setViewDataSource(data);\n\n    if (this.enableVirtualization) {\n      if (Object.keys(this.dataSource).length) {\n        if ((this.template || this.groupTemplate) && !this.virtualizationModule.isNgTemplate()) {\n          if (this.isReact) {\n            if (typeof this.template == \"string\") {\n              this.listBaseOption.template = null;\n            }\n\n            if (typeof this.groupTemplate == \"string\") {\n              this.listBaseOption.groupTemplate = null;\n            }\n          } else {\n            this.listBaseOption.template = null;\n            this.listBaseOption.groupTemplate = null;\n          }\n\n          this.listBaseOption.itemCreated = this.virtualizationModule.createUIItem.bind(this.virtualizationModule);\n        }\n      }\n\n      this.virtualizationModule.uiVirtualization();\n    } else {\n      this.createList();\n      this.contentContainer = this.createElement('div', {\n        className: classNames.content\n      });\n      this.element.appendChild(this.contentContainer);\n      this.renderIntoDom(this.ulElement); // eslint-disable-next-line\n\n      if (this.isReact) {\n        this.renderReactTemplates();\n      }\n    }\n  }\n\n  getElementUID(obj) {\n    let fields = {};\n\n    if (obj instanceof Element) {\n      // eslint-disable-next-line\n      fields[this.fields.id] = obj.getAttribute('data-uid');\n    } else {\n      fields = obj;\n    }\n\n    return fields;\n  }\n  /**\n   * Initializes the ListView component rendering.\n   */\n\n\n  render() {\n    this.element.classList.add(classNames.root);\n    attributes(this.element, {\n      role: 'list',\n      tabindex: '0'\n    });\n    this.setCSSClass();\n    this.setEnableRTL();\n    this.setEnable();\n    this.setSize();\n    this.wireEvents();\n    this.header();\n    this.setLocalData();\n    this.setHTMLAttribute();\n    this.rippleFn = rippleEffect(this.element, {\n      selector: '.' + classNames.listItem\n    });\n    this.renderComplete();\n  }\n  /**\n   * It is used to destroy the ListView component.\n   */\n\n\n  destroy() {\n    // eslint-disable-next-line\n    if (this.isReact) {\n      this.clearTemplate();\n    }\n\n    this.unWireEvents();\n    const classAr = [classNames.root, classNames.disable, 'e-rtl', 'e-has-header', 'e-lib'].concat(this.cssClass.split(' ').filter(css => css));\n    removeClass([this.element], classAr);\n    this.element.removeAttribute('role');\n    this.element.removeAttribute('tabindex');\n    this.curUL = this.ulElement = this.liCollection = this.headerEle = undefined;\n    this.element.innerHTML = '';\n    super.destroy();\n  }\n  /**\n   * Switches back from the navigated sub list item.\n   */\n\n\n  back() {\n    const pID = this.curDSLevel[this.curDSLevel.length - 1];\n\n    if (pID === undefined || this.isInAnimation()) {\n      return;\n    }\n\n    this.curDSLevel.pop();\n    this.setViewDataSource(this.getSubDS());\n    let toUL = this.element.querySelector('[data-uid=\\'' + pID + '\\']');\n    const fromUL = this.curUL;\n\n    if (!toUL) {\n      this.createList();\n      this.renderIntoDom(this.ulElement);\n      toUL = this.curUL;\n    } else {\n      toUL = toUL.parentElement;\n    }\n\n    const fieldData = getFieldValues(this.curDSJSON, this.listBaseOption.fields); // eslint-disable-next-line\n\n    const text = fieldData[this.fields.text];\n    this.switchView(fromUL, toUL, true);\n    this.removeFocus();\n    const li = this.element.querySelector('[data-uid=\\'' + pID + '\\']');\n    li.classList.remove(classNames.disable);\n    li.classList.add(classNames.focused);\n\n    if (this.showCheckBox && li.querySelector('.' + classNames.checkboxIcon).classList.contains(classNames.checked)) {\n      li.setAttribute('aria-selected', 'true');\n    } else {\n      li.classList.remove(classNames.selected);\n      li.setAttribute('aria-selected', 'false');\n    }\n\n    this.liCollection = this.curUL.querySelectorAll('.' + classNames.listItem);\n\n    if (this.enableHtmlSanitizer) {\n      this.setProperties({\n        headerTitle: SanitizeHtmlHelper.sanitize(this.headerTitle)\n      }, true);\n    }\n\n    this.header(this.curDSLevel.length ? text : this.headerTitle, this.curDSLevel.length ? true : false, 'header');\n  }\n  /**\n   * Selects the list item from the ListView by passing the elements or field object.\n   *\n   * @param  {Fields | HTMLElement | Element} item - We can pass element Object or Fields as Object with ID and Text fields.\n   */\n\n\n  selectItem(item) {\n    if (this.enableVirtualization) {\n      this.virtualizationModule.selectItem(item);\n    } else if (this.showCheckBox) {\n      this.setCheckboxLI(this.getLiFromObjOrElement(item));\n    } else {\n      if (isNullOrUndefined(item) === true) {\n        this.removeSelect();\n      } else {\n        this.setSelectLI(this.getLiFromObjOrElement(item));\n      }\n    }\n  }\n\n  getLiFromObjOrElement(obj) {\n    let li;\n    const dataSource = this.dataSource instanceof DataManager ? this.localData : this.dataSource;\n\n    if (!isNullOrUndefined(obj)) {\n      if (typeof dataSource[0] === 'string' || typeof dataSource[0] === 'number') {\n        if (obj instanceof Element) {\n          const uid = obj.getAttribute('data-uid').toString();\n\n          for (let i = 0; i < this.liCollection.length; i++) {\n            if (this.liCollection[i].getAttribute('data-uid').toString() === uid) {\n              li = this.liCollection[i];\n              break;\n            }\n          }\n        } else {\n          Array.prototype.some.call(this.curUL.querySelectorAll('.' + classNames.listItem), item => {\n            if (item.innerText.trim() === obj.toString()) {\n              li = item;\n              return true;\n            } else {\n              return false;\n            }\n          });\n        }\n      } else {\n        const resultJSON = this.getItemData(obj);\n        const fieldData = getFieldValues(resultJSON, this.listBaseOption.fields);\n\n        if (resultJSON) {\n          li = this.element.querySelector('[data-uid=\"' + fieldData[this.fields.id] + '\"]');\n\n          if (!this.enableVirtualization && isNullOrUndefined(li)) {\n            const curLi = this.element.querySelectorAll('.' + classNames.listItem);\n\n            for (let i = 0; i < curLi.length; i++) {\n              // eslint-disable-next-line\n              if (curLi[i].innerText.trim() === fieldData[this.fields.text]) {\n                li = curLi[i];\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return li;\n  }\n  /**\n   * Selects multiple list items from the ListView.\n   *\n   * @param  {Fields[] | HTMLElement[] | Element[]} item - We can pass array of\n   *  elements or array of fields Object with ID and Text fields.\n   */\n\n\n  selectMultipleItems(item) {\n    if (!isNullOrUndefined(item)) {\n      for (let i = 0; i < item.length; i++) {\n        if (!isNullOrUndefined(item[i])) {\n          this.selectItem(item[i]);\n        }\n      }\n    }\n  }\n\n  getParentId() {\n    const parentId = [];\n\n    if (this.isNestedList) {\n      for (let i = this.curDSLevel.length - 1; i >= 0; i--) {\n        parentId.push(this.curDSLevel[i]);\n      }\n    }\n\n    return parentId;\n  }\n  /**\n   * Gets the details of the currently selected item from the list items.\n   *\n   */\n\n\n  getSelectedItems() {\n    // eslint-disable-next-line\n    let finalValue;\n    let isCompleted = false;\n    this.selectedId = [];\n    const dataSource = this.dataSource instanceof DataManager ? this.localData : this.dataSource;\n\n    if (this.enableVirtualization && !isCompleted) {\n      finalValue = this.virtualizationModule.getSelectedItems();\n      isCompleted = true;\n    } else if (this.showCheckBox && !isCompleted) {\n      // eslint-disable-next-line\n      const liCollection = this.curUL.getElementsByClassName(classNames.selected);\n      const liTextCollection = [];\n      const liDataCollection = [];\n      this.selectedId = [];\n      const dataParent = [];\n\n      for (let i = 0; i < liCollection.length; i++) {\n        if (typeof dataSource[0] === 'string' || typeof dataSource[0] === 'number') {\n          liTextCollection.push(liCollection[i].innerText.trim());\n        } else {\n          const tempData = this.getItemData(liCollection[i]);\n          const fieldData = getFieldValues(tempData, this.listBaseOption.fields);\n\n          if (this.isNestedList) {\n            dataParent.push({\n              data: tempData,\n              parentId: this.getParentId()\n            });\n          } else {\n            liDataCollection.push(tempData);\n          }\n\n          if (fieldData) {\n            // eslint-disable-next-line\n            liTextCollection.push(fieldData[this.listBaseOption.fields.text]); // eslint-disable-next-line\n\n            this.selectedId.push(fieldData[this.listBaseOption.fields.id]);\n          } else {\n            liTextCollection.push(undefined);\n            this.selectedId.push(undefined);\n          }\n        }\n      }\n\n      if ((typeof dataSource[0] === 'string' || typeof dataSource[0] === 'number') && !isCompleted) {\n        finalValue = {\n          item: liCollection,\n          data: dataSource,\n          text: liTextCollection\n        };\n        isCompleted = true;\n      }\n\n      if (this.isNestedList && !isCompleted) {\n        finalValue = {\n          item: liCollection,\n          data: dataParent,\n          text: liTextCollection\n        };\n        isCompleted = true;\n      } else if (!isCompleted) {\n        finalValue = {\n          item: liCollection,\n          data: liDataCollection,\n          text: liTextCollection\n        };\n        isCompleted = true;\n      }\n    } else if (!isCompleted) {\n      const liElement = this.element.getElementsByClassName(classNames.selected)[0];\n      const fieldData = getFieldValues(this.getItemData(liElement), this.listBaseOption.fields);\n\n      if ((typeof dataSource[0] === 'string' || typeof dataSource[0] === 'number') && !isCompleted) {\n        finalValue = !isNullOrUndefined(liElement) ? {\n          item: liElement,\n          data: dataSource,\n          text: liElement.innerText.trim()\n        } : undefined;\n        isCompleted = true;\n      } else if (!isCompleted) {\n        if (isNullOrUndefined(fieldData) || isNullOrUndefined(liElement)) {\n          finalValue = undefined;\n          isCompleted = true;\n        } else {\n          // eslint-disable-next-line\n          this.selectedId.push(fieldData[this.listBaseOption.fields.id]);\n          finalValue = {\n            text: fieldData[this.listBaseOption.fields.text],\n            item: liElement,\n            data: this.getItemData(liElement)\n          };\n          isCompleted = true;\n        }\n      }\n    }\n\n    return finalValue;\n  }\n  /**\n   * Finds out an item details from the current list.\n   *\n   * @param  {Fields | HTMLElement | Element} item - We can pass element Object or Fields as Object with ID and Text fields.\n   */\n\n\n  findItem(item) {\n    return this.getItemData(item);\n  }\n  /**\n   * Enables the disabled list items by passing the Id and text fields.\n   *\n   * @param  {Fields | HTMLElement | Element} item - We can pass element Object or Fields as Object with ID and Text fields.\n   */\n\n\n  enableItem(item) {\n    this.setItemState(item, true);\n\n    if (this.enableVirtualization) {\n      this.virtualizationModule.enableItem(item);\n    }\n  }\n  /**\n   * Disables the list items by passing the Id and text fields.\n   *\n   * @param  {Fields | HTMLElement | Element} item - We can pass element Object or Fields as Object with ID and Text fields.\n   */\n\n\n  disableItem(item) {\n    this.setItemState(item, false);\n\n    if (this.enableVirtualization) {\n      this.virtualizationModule.disableItem(item);\n    }\n  } //A function that used to set state of the list item like enable, disable.\n\n\n  setItemState(item, isEnable) {\n    const resultJSON = this.getItemData(item);\n    const fieldData = getFieldValues(resultJSON, this.listBaseOption.fields);\n\n    if (resultJSON) {\n      const li = this.element.querySelector('[data-uid=\"' + fieldData[this.fields.id] + '\"]');\n\n      if (isEnable) {\n        if (li) {\n          li.classList.remove(classNames.disable);\n        }\n\n        delete resultJSON[this.fields.enabled];\n      } else if (!isEnable) {\n        if (li) {\n          li.classList.add(classNames.disable);\n        } // eslint-disable-next-line\n\n\n        resultJSON[this.fields.enabled] = false;\n      }\n    }\n  }\n  /**\n   * Shows the hide list item from the ListView.\n   *\n   * @param  {Fields | HTMLElement | Element} item - We can pass element Object or Fields as Object with ID and Text fields.\n   */\n\n\n  showItem(item) {\n    this.showHideItem(item, false, '');\n\n    if (this.enableVirtualization) {\n      this.virtualizationModule.showItem(item);\n    }\n  }\n  /**\n   * Hides an list item from the ListView.\n   *\n   * @param  {Fields | HTMLElement | Element} item - We can pass element Object or Fields as Object with ID and Text fields.\n   */\n\n\n  hideItem(item) {\n    this.showHideItem(item, true, 'none');\n\n    if (this.enableVirtualization) {\n      this.virtualizationModule.hideItem(item);\n    }\n  }\n\n  showHideItem(obj, isHide, display) {\n    const resultJSON = this.getItemData(obj);\n    const fieldData = getFieldValues(resultJSON, this.listBaseOption.fields);\n\n    if (resultJSON) {\n      const li = this.element.querySelector('[data-uid=\"' + fieldData[this.fields.id] + '\"]');\n\n      if (li) {\n        li.style.display = display;\n      }\n\n      if (isHide) {\n        // eslint-disable-next-line\n        resultJSON[this.fields.isVisible] = false;\n      } else {\n        delete resultJSON[this.fields.isVisible];\n      }\n    }\n  }\n  /**\n   * Adds the new list item(s) to the current ListView.\n   * To add a new list item(s) in the ListView, we need to pass the `data` as an array of items that need\n   * to be added and `fields` as the target item to which we need to add the given item(s) as its children.\n   * For example fields: { text: 'Name', tooltip: 'Name', id:'id'}\n   *\n   * @param  {{Object}[]} data - JSON Array Data that need to add.\n   *\n   * @param  {Fields} fields - Target item to add the given data as its children (can be null).\n   *\n   */\n\n\n  addItem(data, fields = undefined) {\n    const dataSource = this.dataSource instanceof DataManager ? this.localData : this.dataSource;\n    this.addItemInternally(data, fields, dataSource);\n  }\n\n  addItemInternally(data, fields, dataSource) {\n    if (data instanceof Array) {\n      if (this.enableVirtualization) {\n        this.virtualizationModule.addItem(data, fields, dataSource);\n      } else {\n        const ds = this.findItemFromDS(dataSource, fields);\n        let child;\n\n        if (ds) {\n          const fieldData = getFieldValues(ds, this.listBaseOption.fields);\n          child = fieldData[this.fields.child];\n\n          if (!child) {\n            child = [];\n          }\n\n          child = child.concat(data);\n        } // check for whether target is nested level or top level in list\n\n\n        if (ds instanceof Array) {\n          for (let i = 0; i < data.length; i++) {\n            dataSource.push(data[i]);\n            this.setViewDataSource(dataSource); // since it is top level target, get the content container's first child\n            // as it is always the top level UL\n\n            const targetUL = this.contentContainer ? this.contentContainer.children[0] : null; // check for whether the list was previously empty or not, if it is\n            // proceed to call initial render\n\n            if (this.contentContainer && targetUL) {\n              this.addItemIntoDom(data[i], targetUL, this.curViewDS);\n            } else {\n              this.reRender();\n            }\n          }\n\n          this.liCollection = this.curUL.querySelectorAll('.' + classNames.listItem);\n        } else {\n          // proceed as target item is in nested level, only if it is a valid target ds\n          if (ds) {\n            ds[this.fields.child] = child;\n            this.addItemInNestedList(ds, data);\n          }\n        }\n      }\n    }\n  }\n\n  addItemInNestedList(targetItemData, itemQueue) {\n    // eslint-disable-next-line\n    const targetItemId = targetItemData[this.fields.id];\n    const targetChildDS = targetItemData[this.fields.child];\n    const isAlreadyRenderedUL = this.element.querySelector('[pid=\\'' + targetItemId + '\\']');\n    const targetLi = this.element.querySelector('[data-uid=\\'' + targetItemId + '\\']');\n    const targetUL = isAlreadyRenderedUL ? isAlreadyRenderedUL : targetLi ? closest(targetLi, 'ul') : null;\n    const targetDS = isAlreadyRenderedUL ? targetChildDS : [targetItemData];\n    const isTargetEmptyChild = targetLi ? !targetLi.classList.contains(classNames.hasChild) : false;\n\n    if (isTargetEmptyChild) {\n      const targetRefreshedElement = ListBase.createListItemFromJson(this.createElement, targetDS, this.listBaseOption, null, null, this);\n      this.setAttributes(targetRefreshedElement);\n      targetUL.insertBefore(targetRefreshedElement[0], targetLi);\n      detach(targetLi);\n    } // if it is already rendered element, we need to create and append new elements\n\n\n    if (isAlreadyRenderedUL && itemQueue) {\n      for (let i = 0; i < itemQueue.length; i++) {\n        targetDS.push(itemQueue[i]);\n        this.addItemIntoDom(itemQueue[i], targetUL, targetDS);\n      }\n    }\n  }\n\n  addItemIntoDom(currentItem, targetUL, curViewDS) {\n    const index = curViewDS.indexOf(currentItem);\n    this.addListItem(currentItem, index, targetUL, curViewDS);\n    const curItemDS = curViewDS[index - 1];\n\n    if (curItemDS && curItemDS.isHeader && curItemDS.items.length === 1) {\n      this.addListItem(curItemDS, index - 1, targetUL, curViewDS);\n    }\n  }\n\n  addListItem(dataSource, index, ulElement, curViewDS) {\n    let target = this.getLiFromObjOrElement(curViewDS[index + 1]) || this.getLiFromObjOrElement(curViewDS[index + 2]) || null;\n    const li = ListBase.createListItemFromJson(this.createElement, [dataSource], this.listBaseOption, null, null, this);\n    this.setAttributes(li); // eslint-disable-next-line\n\n    if (this.template && this.isReact) {\n      this.renderReactTemplates();\n    }\n\n    if (this.fields.groupBy && curViewDS[index + 1] && curViewDS[index + 1].isHeader) {\n      let targetEle = this.getLiFromObjOrElement(curViewDS[index - 1]);\n\n      if (targetEle) {\n        target = targetEle.nextElementSibling;\n      }\n    }\n\n    ulElement.insertBefore(li[0], target);\n  }\n  /**\n   * Removes the list item from the data source based on a passed\n   *  element like fields: { text: 'Name', tooltip: 'Name', id:'id'}\n   *\n   * @param  {Fields | HTMLElement | Element} item - We can pass element Object or Fields as Object with ID and Text fields.\n   */\n\n\n  removeItem(item) {\n    const listDataSource = this.dataSource instanceof DataManager ? this.localData : this.dataSource;\n\n    if (this.enableVirtualization) {\n      this.virtualizationModule.removeItem(item);\n    } else {\n      this.removeItemFromList(item, listDataSource);\n    }\n  }\n\n  removeItemFromList(obj, listDataSource) {\n    const curViewDS = this.curViewDS;\n    const fields = obj instanceof Element ? this.getElementUID(obj) : obj;\n    let dataSource; // eslint-disable-next-line prefer-const\n\n    dataSource = this.findItemFromDS(listDataSource, fields, true);\n\n    if (dataSource) {\n      let data; // eslint-disable-next-line prefer-const\n\n      data = this.findItemFromDS(dataSource, fields);\n      const index = curViewDS.indexOf(data);\n      const li = this.getLiFromObjOrElement(obj);\n      let groupLi;\n      this.validateNestedView(li);\n\n      if (this.fields.groupBy && this.curViewDS[index - 1] && curViewDS[index - 1].isHeader && curViewDS[index - 1].items.length === 1) {\n        if (li && li.previousElementSibling.classList.contains(classNames.groupListItem) && (isNullOrUndefined(li.nextElementSibling) || li.nextElementSibling && li.nextElementSibling.classList.contains(classNames.groupListItem))) {\n          groupLi = li.previousElementSibling;\n        }\n      }\n\n      if (li) {\n        detach(li);\n      }\n\n      if (groupLi) {\n        detach(groupLi);\n      } // eslint-disable-next-line\n\n\n      const foundData = dataSource.length - 1 <= 0 ? this.findParent(this.localData, this.fields.id, // eslint-disable-next-line\n      value => value === data[this.fields.id], null) : null;\n      const dsIndex = dataSource.indexOf(data);\n      dataSource.splice(dsIndex, 1);\n      this.setViewDataSource(listDataSource);\n\n      if (foundData && foundData.parent && Array.isArray(foundData.parent[this.fields.child]) && foundData.parent[this.fields.child].length <= 0) {\n        const parentLi = this.getLiFromObjOrElement(foundData.parent);\n\n        if (parentLi) {\n          const li = ListBase.createListItemFromJson(this.createElement, [foundData.parent], this.listBaseOption, null, null, this);\n          this.setAttributes(li);\n          parentLi.parentElement.insertBefore(li[0], parentLi);\n          parentLi.parentElement.removeChild(parentLi);\n        }\n      }\n\n      if (dataSource.length <= 0) {\n        this.back();\n      }\n\n      this.liCollection = Array.prototype.slice.call(this.element.querySelectorAll('.' + classNames.listItem));\n    }\n  } // validate before removing an element whether the current view is inside target element's child view\n\n\n  validateNestedView(li) {\n    const liID = li ? li.getAttribute('data-uid').toString().toLowerCase() : null;\n\n    if (liID && this.curDSLevel && this.curDSLevel.length > 0) {\n      while (this.curDSLevel.some(id => id.toString().toLowerCase() === liID)) {\n        this.back();\n      }\n    }\n  }\n  /**\n   * Removes multiple items from the ListView by passing the array of elements or array of field objects.\n   *\n   * @param  {Fields[] | HTMLElement[] | Element[]} item - We can pass array of elements or array of field Object with ID and Text fields.\n   */\n\n\n  removeMultipleItems(item) {\n    if (item.length) {\n      for (let i = 0; i < item.length; i++) {\n        this.removeItem(item[i]);\n      }\n    }\n  } // eslint-disable-next-line\n\n\n  findParent(dataSource, id, callback, parent) {\n    // eslint-disable-next-line no-prototype-builtins\n    if (dataSource.hasOwnProperty(id) && callback(dataSource[id]) === true) {\n      return extend({}, dataSource);\n    }\n\n    for (let i = 0; i < Object.keys(dataSource).length; i++) {\n      if (dataSource[Object.keys(dataSource)[i]] && typeof dataSource[Object.keys(dataSource)[i]] === 'object') {\n        // eslint-disable-next-line\n        const result = this.findParent(dataSource[Object.keys(dataSource)[i]], id, callback, dataSource);\n\n        if (result != null) {\n          if (!result.parent) {\n            result.parent = parent;\n          }\n\n          return result;\n        }\n      }\n    }\n\n    return null;\n  } // Module Required function\n\n\n  getModuleName() {\n    return 'listview';\n  }\n\n  requiredModules() {\n    const modules = [];\n\n    if (this.enableVirtualization) {\n      modules.push({\n        args: [this],\n        member: 'virtualization'\n      });\n    }\n\n    return modules;\n  }\n  /**\n   * Get the properties to be maintained in the persisted state.\n   */\n\n\n  getPersistData() {\n    return this.addOnPersist(['cssClass', 'enableRtl', 'htmlAttributes', 'enable', 'fields', 'animation', 'headerTitle', 'sortOrder', 'showIcon', 'height', 'width', 'showCheckBox', 'checkBoxPosition']);\n  }\n\n};\n\n__decorate([Property('')], ListView.prototype, \"cssClass\", void 0);\n\n__decorate([Property(false)], ListView.prototype, \"enableVirtualization\", void 0);\n\n__decorate([Property({})], ListView.prototype, \"htmlAttributes\", void 0);\n\n__decorate([Property(true)], ListView.prototype, \"enable\", void 0);\n\n__decorate([Property([])], ListView.prototype, \"dataSource\", void 0);\n\n__decorate([Property()], ListView.prototype, \"query\", void 0);\n\n__decorate([Complex(ListBase.defaultMappedFields, FieldSettings)], ListView.prototype, \"fields\", void 0);\n\n__decorate([Property({\n  effect: 'SlideLeft',\n  duration: 400,\n  easing: 'ease'\n})], ListView.prototype, \"animation\", void 0);\n\n__decorate([Property('None')], ListView.prototype, \"sortOrder\", void 0);\n\n__decorate([Property(false)], ListView.prototype, \"showIcon\", void 0);\n\n__decorate([Property(false)], ListView.prototype, \"showCheckBox\", void 0);\n\n__decorate([Property('Left')], ListView.prototype, \"checkBoxPosition\", void 0);\n\n__decorate([Property('')], ListView.prototype, \"headerTitle\", void 0);\n\n__decorate([Property(false)], ListView.prototype, \"showHeader\", void 0);\n\n__decorate([Property(false)], ListView.prototype, \"enableHtmlSanitizer\", void 0);\n\n__decorate([Property('')], ListView.prototype, \"height\", void 0);\n\n__decorate([Property('')], ListView.prototype, \"width\", void 0);\n\n__decorate([Property(null)], ListView.prototype, \"template\", void 0);\n\n__decorate([Property(null)], ListView.prototype, \"headerTemplate\", void 0);\n\n__decorate([Property(null)], ListView.prototype, \"groupTemplate\", void 0);\n\n__decorate([Event()], ListView.prototype, \"select\", void 0);\n\n__decorate([Event()], ListView.prototype, \"actionBegin\", void 0);\n\n__decorate([Event()], ListView.prototype, \"actionComplete\", void 0);\n\n__decorate([Event()], ListView.prototype, \"actionFailure\", void 0);\n\nListView = __decorate([NotifyPropertyChanges], ListView);\nconst listElementCount = 1.5;\nconst windowElementCount = 3;\n\nclass Virtualization {\n  constructor(instance) {\n    this.elementDifference = 0;\n    this.listViewInstance = instance;\n  }\n  /**\n   * For internal use only.\n   *\n   * @private\n   */\n\n\n  isNgTemplate() {\n    return !isNullOrUndefined(this.listViewInstance.templateRef) && typeof this.listViewInstance.templateRef !== 'string';\n  }\n  /**\n   * For internal use only.\n   *\n   * @private\n   */\n\n\n  uiVirtualization() {\n    this.wireScrollEvent(false);\n    const curViewDS = this.listViewInstance.curViewDS;\n    const firstDs = curViewDS.slice(0, 1);\n    this.listViewInstance.ulElement = this.listViewInstance.curUL = ListBase.createList( // eslint-disable-next-line\n    this.listViewInstance.createElement, firstDs, this.listViewInstance.listBaseOption, null, this.listViewInstance);\n    this.listViewInstance.contentContainer = this.listViewInstance.createElement('div', {\n      className: classNames.content\n    });\n    this.listViewInstance.element.appendChild(this.listViewInstance.contentContainer);\n    this.listViewInstance.contentContainer.appendChild(this.listViewInstance.ulElement);\n    this.listItemHeight = this.listViewInstance.ulElement.firstElementChild.getBoundingClientRect().height;\n    this.expectedDomItemCount = this.ValidateItemCount(10000);\n    this.domItemCount = this.ValidateItemCount(Object.keys(this.listViewInstance.curViewDS).length);\n    this.uiFirstIndex = 0;\n    this.uiLastIndex = this.domItemCount - 1;\n    const otherDs = curViewDS.slice(1, this.domItemCount);\n    const listItems = ListBase.createListItemFromJson( // eslint-disable-next-line\n    this.listViewInstance.createElement, otherDs, this.listViewInstance.listBaseOption, null, null, this.listViewInstance);\n    append(listItems, this.listViewInstance.ulElement);\n    this.listViewInstance.liCollection = this.listViewInstance.curUL.querySelectorAll('li');\n    this.topElement = this.listViewInstance.createElement('div');\n    this.listViewInstance.ulElement.insertBefore(this.topElement, this.listViewInstance.ulElement.firstElementChild);\n    this.bottomElement = this.listViewInstance.createElement('div');\n    this.listViewInstance.ulElement.insertBefore(this.bottomElement, null);\n    this.totalHeight = Object.keys(curViewDS).length * this.listItemHeight - this.domItemCount * this.listItemHeight;\n    this.topElement.style.height = 0 + 'px';\n    this.bottomElement.style.height = this.totalHeight + 'px';\n    this.topElementHeight = 0;\n    this.bottomElementHeight = this.totalHeight;\n    this.listDiff = 0;\n    this.uiIndicesInitialization();\n  }\n\n  wireScrollEvent(destroy) {\n    if (!destroy) {\n      if (this.listViewInstance.isWindow) {\n        this.onVirtualScroll = this.onVirtualUiScroll.bind(this);\n        window.addEventListener('scroll', this.onVirtualScroll);\n      } else {\n        EventHandler.add(this.listViewInstance.element, 'scroll', this.onVirtualUiScroll, this);\n      }\n    } else {\n      if (this.listViewInstance.isWindow === true) {\n        window.removeEventListener('scroll', this.onVirtualScroll);\n        window.removeEventListener('scroll', this.updateUl);\n      } else {\n        EventHandler.remove(this.listViewInstance.element, 'scroll', this.onVirtualUiScroll);\n        EventHandler.remove(this.listViewInstance.element, 'scroll', this.updateUlContainer);\n      }\n    }\n  }\n\n  updateUlContainer(e) {\n    let listDiff;\n    const virtualElementContainer = this.listViewInstance.ulElement.querySelector('.' + classNames.virtualElementContainer);\n\n    if (isNullOrUndefined(this.listViewInstance.liElementHeight)) {\n      this.listViewInstance.updateLiElementHeight();\n    }\n\n    if (this.listViewInstance.isWindow) {\n      // eslint-disable-next-line\n      listDiff = Math.round(e.target.documentElement.scrollTop / this.listViewInstance.liElementHeight) - 2;\n    } else {\n      // eslint-disable-next-line\n      listDiff = Math.round(e.target.scrollTop / this.listViewInstance.liElementHeight) - 2;\n    }\n\n    if ((listDiff - 1) * this.listViewInstance.liElementHeight < 0) {\n      virtualElementContainer.style.top = '0px';\n    } else {\n      virtualElementContainer.style.top = listDiff * this.listViewInstance.liElementHeight + 'px';\n    }\n  }\n\n  ValidateItemCount(dataSourceLength) {\n    const height = parseFloat(formatUnit(this.listViewInstance.height));\n    let itemCount;\n\n    if (this.listViewInstance.isWindow) {\n      itemCount = Math.round(window.innerHeight / this.listItemHeight * windowElementCount);\n    } else {\n      if (typeof this.listViewInstance.height === 'string' && this.listViewInstance.height.indexOf('%') !== -1) {\n        // eslint-disable-next-line max-len\n        itemCount = Math.round(this.listViewInstance.element.getBoundingClientRect().height / this.listItemHeight * listElementCount);\n      } else {\n        itemCount = Math.round(height / this.listItemHeight * listElementCount);\n      }\n    }\n\n    if (itemCount > dataSourceLength) {\n      itemCount = dataSourceLength;\n    }\n\n    return itemCount;\n  }\n\n  uiIndicesInitialization() {\n    this.uiIndices = {\n      'activeIndices': [],\n      'disabledItemIndices': [],\n      'hiddenItemIndices': []\n    };\n    const data = this.listViewInstance.curViewDS;\n\n    for (let i = 0; i < data.length; i++) {\n      if (this.listViewInstance.showCheckBox && data[i][this.listViewInstance.fields.isChecked]) {\n        this.uiIndices.activeIndices.push(i);\n      } // eslint-disable-next-line\n\n\n      if (!isNullOrUndefined(data[i][this.listViewInstance.fields.enabled]) && !data[i][this.listViewInstance.fields.enabled]) {\n        // eslint-disable-next-line\n        this.uiIndices.disabledItemIndices.push(i);\n      }\n    }\n\n    if (this.isNgTemplate()) {\n      const items = this.listViewInstance.element.querySelectorAll('.' + classNames.listItem);\n\n      for (let index = 0; index < items.length; index++) {\n        items[index].context = this.listViewInstance.viewContainerRef.get(index).context;\n      }\n    }\n  }\n\n  refreshItemHeight() {\n    if (this.listViewInstance.curViewDS.length) {\n      const curViewDS = this.listViewInstance.curViewDS;\n      this.listItemHeight = this.topElement.nextSibling.getBoundingClientRect().height;\n      this.totalHeight = Object.keys(curViewDS).length * this.listItemHeight - this.domItemCount * this.listItemHeight;\n      this.bottomElementHeight = this.totalHeight;\n      this.bottomElement.style.height = this.totalHeight + 'px';\n    }\n  }\n\n  getscrollerHeight(startingHeight) {\n    return this.listViewInstance.isWindow ? pageYOffset - startingHeight <= 0 ? 0 : pageYOffset - startingHeight : this.listViewInstance.element.scrollTop - startingHeight <= 0 ? 0 : this.listViewInstance.element.scrollTop - startingHeight;\n  }\n\n  onVirtualUiScroll(e) {\n    let startingHeight;\n\n    if (this.listViewInstance.isWindow) {\n      startingHeight = this.listViewInstance.ulElement.getBoundingClientRect().top - document.documentElement.getBoundingClientRect().top;\n    } else {\n      startingHeight = this.listViewInstance.headerEle ? this.listViewInstance.headerEle.getBoundingClientRect().height : 0;\n    }\n\n    this.scrollPosition = isNullOrUndefined(this.scrollPosition) ? 0 : this.scrollPosition;\n    const scroll = this.getscrollerHeight(startingHeight);\n    this.topElementHeight = this.listItemHeight * Math.floor(scroll / this.listItemHeight);\n    this.bottomElementHeight = this.totalHeight - this.topElementHeight;\n    [this.topElementHeight, this.bottomElementHeight] = scroll <= this.totalHeight ? [this.topElementHeight, this.bottomElementHeight] : [this.totalHeight, 0];\n\n    if (this.topElementHeight !== parseFloat(this.topElement.style.height)) {\n      this.topElement.style.height = this.topElementHeight + 'px';\n      this.bottomElement.style.height = this.bottomElementHeight + 'px';\n\n      if (scroll > this.scrollPosition) {\n        const listDiff = Math.round(this.topElementHeight / this.listItemHeight - this.listDiff);\n\n        if (listDiff > this.expectedDomItemCount + 5) {\n          this.onLongScroll(listDiff, true);\n        } else {\n          this.onNormalScroll(listDiff, true);\n        }\n      } else {\n        const listDiff = Math.round(this.listDiff - this.topElementHeight / this.listItemHeight);\n\n        if (listDiff > this.expectedDomItemCount + 5) {\n          this.onLongScroll(listDiff, false);\n        } else {\n          this.onNormalScroll(listDiff, false);\n        }\n      }\n    }\n\n    this.listDiff = Math.round(this.topElementHeight / this.listItemHeight);\n\n    if (typeof this.listViewInstance.onUIScrolled === 'function') {\n      this.listViewInstance.onUIScrolled();\n    }\n\n    this.scrollPosition = scroll;\n  }\n\n  onLongScroll(listDiff, isScrollingDown) {\n    let index = isScrollingDown ? this.uiFirstIndex + listDiff : this.uiFirstIndex - listDiff;\n    const elements = this.listViewInstance.ulElement.querySelectorAll('li');\n\n    for (let i = 0; i < elements.length; i++) {\n      this.updateUI(elements[i], index);\n      index++;\n    }\n\n    this.uiLastIndex = isScrollingDown ? this.uiLastIndex + listDiff : this.uiLastIndex - listDiff;\n    this.uiFirstIndex = isScrollingDown ? this.uiFirstIndex + listDiff : this.uiFirstIndex - listDiff;\n  }\n\n  onNormalScroll(listDiff, isScrollingDown) {\n    if (isScrollingDown) {\n      for (let i = 0; i < listDiff; i++) {\n        const index = ++this.uiLastIndex;\n        this.updateUI(this.topElement.nextElementSibling, index, this.bottomElement);\n        this.uiFirstIndex++;\n      }\n    } else {\n      for (let i = 0; i < listDiff; i++) {\n        const index = --this.uiFirstIndex;\n        const target = this.topElement.nextSibling;\n        this.updateUI(this.bottomElement.previousElementSibling, index, target);\n        this.uiLastIndex--;\n      }\n    }\n  }\n\n  updateUiContent(element, index) {\n    // eslint-disable-next-line\n    const curViewDs = this.listViewInstance.curViewDS;\n\n    if (typeof this.listViewInstance.dataSource[0] === 'string' || typeof this.listViewInstance.dataSource[0] === 'number') {\n      element.dataset.uid = ListBase.generateId();\n      element.getElementsByClassName(classNames.listItemText)[0].innerHTML = this.listViewInstance.curViewDS[index].toString();\n    } else {\n      // eslint-disable-next-line\n      element.dataset.uid = curViewDs[index][this.listViewInstance.fields.id] ? // eslint-disable-next-line\n      curViewDs[index][this.listViewInstance.fields.id] : ListBase.generateId();\n      element.getElementsByClassName(classNames.listItemText)[0].innerHTML = // eslint-disable-next-line\n      curViewDs[index][this.listViewInstance.fields.text];\n    }\n\n    if (this.listViewInstance.showIcon) {\n      if (element.querySelector('.' + classNames.listIcon)) {\n        detach(element.querySelector('.' + classNames.listIcon));\n      }\n\n      if (this.listViewInstance.curViewDS[index][this.listViewInstance.fields.iconCss]) {\n        const textContent = element.querySelector('.' + classNames.textContent);\n        const target = this.listViewInstance.createElement('div', {\n          className: classNames.listIcon + ' ' + this.listViewInstance.curViewDS[index][this.listViewInstance.fields.iconCss]\n        });\n        textContent.insertBefore(target, element.querySelector('.' + classNames.listItemText));\n      }\n    }\n\n    if (this.listViewInstance.showCheckBox && this.listViewInstance.fields.groupBy) {\n      if (!this.checkListWrapper) {\n        this.checkListWrapper = this.listViewInstance.curUL.querySelector('.' + classNames.checkboxWrapper).cloneNode(true);\n      }\n\n      const textContent = element.querySelector('.' + classNames.textContent);\n\n      if (this.listViewInstance.curViewDS[index].isHeader) {\n        if (element.querySelector('.' + classNames.checkboxWrapper)) {\n          element.classList.remove(classNames.checklist);\n          textContent.classList.remove(classNames.checkbox);\n          detach(element.querySelector('.' + classNames.checkboxWrapper));\n        }\n      } else {\n        if (!element.querySelector('.' + classNames.checkboxWrapper)) {\n          element.classList.add(classNames.checklist);\n          textContent.classList.add(classNames.checkbox);\n          textContent.insertBefore(this.checkListWrapper.cloneNode(true), element.querySelector('.' + classNames.listItemText));\n        }\n      }\n    }\n  }\n\n  changeElementAttributes(element, index) {\n    element.classList.remove(classNames.disable);\n\n    if (this.uiIndices.disabledItemIndices.length && this.uiIndices.disabledItemIndices.indexOf(index) !== -1) {\n      element.classList.add(classNames.disable);\n    }\n\n    element.style.display = '';\n\n    if (this.uiIndices.hiddenItemIndices.length && this.uiIndices.hiddenItemIndices.indexOf(index) !== -1) {\n      element.style.display = 'none';\n    }\n\n    if (this.listViewInstance.showCheckBox) {\n      const checklistElement = element.querySelector('.' + classNames.checkboxWrapper);\n      element.classList.remove(classNames.selected);\n      element.classList.remove(classNames.focused);\n\n      if (checklistElement) {\n        checklistElement.removeAttribute('aria-checked');\n        checklistElement.firstElementChild.classList.remove(classNames.checked);\n      }\n\n      if (this.uiIndices.activeIndices.length && this.uiIndices.activeIndices.indexOf(index) !== -1 && !this.listViewInstance.curUL.querySelector(classNames.selected)) {\n        element.classList.add(classNames.selected);\n        checklistElement.firstElementChild.classList.add(classNames.checked);\n        checklistElement.setAttribute('aria-checked', 'true');\n\n        if (this.activeIndex === index) {\n          element.classList.add(classNames.focused);\n        }\n      }\n    } else {\n      element.classList.remove(classNames.selected);\n      element.removeAttribute('aria-selected');\n\n      if (!isNullOrUndefined(this.activeIndex) && this.activeIndex === index && !this.listViewInstance.curUL.querySelector(classNames.selected)) {\n        element.classList.add(classNames.selected);\n        element.setAttribute('aria-selected', 'true');\n      }\n    }\n\n    if (this.listViewInstance.fields.groupBy) {\n      if (this.listViewInstance.curViewDS[index].isHeader) {\n        if (element.classList.contains(classNames.listItem)) {\n          element.classList.remove(classNames.listItem);\n          element.setAttribute('role', 'group');\n          element.classList.add(classNames.groupListItem);\n        }\n      } else {\n        if (element.classList.contains(classNames.groupListItem)) {\n          element.classList.remove(classNames.groupListItem);\n          element.setAttribute('role', 'listitem');\n          element.classList.add(classNames.listItem);\n        }\n      }\n    }\n  }\n\n  findDSAndIndexFromId(ds, fields) {\n    const resultJSON = {};\n    fields = this.listViewInstance.getElementUID(fields);\n\n    if (!isNullOrUndefined(fields)) {\n      ds.some((data, index) => {\n        if (fields[this.listViewInstance.fields.id] && // eslint-disable-next-line\n        fields[this.listViewInstance.fields.id] // eslint-disable-next-line\n        === (data[this.listViewInstance.fields.id] && data[this.listViewInstance.fields.id]) || fields === data) {\n          resultJSON.index = index;\n          resultJSON.data = data;\n          return true;\n        } else {\n          return false;\n        }\n      });\n    }\n\n    return resultJSON;\n  }\n\n  getSelectedItems() {\n    if (!isNullOrUndefined(this.activeIndex) || this.listViewInstance.showCheckBox && this.uiIndices.activeIndices.length) {\n      const dataCollection = [];\n      const textCollection = [];\n\n      if (typeof this.listViewInstance.dataSource[0] === 'string' || typeof this.listViewInstance.dataSource[0] === 'number') {\n        const curViewDS = this.listViewInstance.curViewDS;\n\n        if (this.listViewInstance.showCheckBox) {\n          const indices = this.uiIndices.activeIndices;\n\n          for (let i = 0; i < indices.length; i++) {\n            dataCollection.push(curViewDS[indices[i]]);\n          }\n\n          return {\n            text: dataCollection,\n            // eslint-disable-next-line\n            data: dataCollection,\n            index: this.uiIndices.activeIndices.map(index => this.listViewInstance.dataSource.indexOf(curViewDS[index]))\n          };\n        } else {\n          return {\n            text: curViewDS[this.activeIndex],\n            data: curViewDS[this.activeIndex],\n            index: this.listViewInstance.dataSource.indexOf(curViewDS[this.activeIndex])\n          };\n        }\n      } else {\n        const curViewDS = this.listViewInstance.curViewDS;\n        const text = this.listViewInstance.fields.text;\n\n        if (this.listViewInstance.showCheckBox) {\n          const indexArray = this.uiIndices.activeIndices;\n\n          for (let i = 0; i < indexArray.length; i++) {\n            textCollection.push(curViewDS[indexArray[i]][text]); // eslint-disable-next-line\n\n            dataCollection.push(curViewDS[indexArray[i]]);\n          } // eslint-disable-next-line\n\n\n          const dataSource = this.listViewInstance.dataSource instanceof DataManager ? curViewDS : this.listViewInstance.dataSource;\n          return {\n            text: textCollection,\n            // eslint-disable-next-line\n            data: dataCollection,\n            index: this.uiIndices.activeIndices.map(index => dataSource.indexOf(curViewDS[index]))\n          };\n        } else {\n          // eslint-disable-next-line\n          const dataSource = this.listViewInstance.dataSource instanceof DataManager ? curViewDS : this.listViewInstance.dataSource;\n          return {\n            text: curViewDS[this.activeIndex][this.listViewInstance.fields.text],\n            // eslint-disable-next-line\n            data: curViewDS[this.activeIndex],\n            index: dataSource.indexOf(curViewDS[this.activeIndex])\n          };\n        }\n      }\n    } else {\n      return undefined;\n    }\n  }\n\n  selectItem(obj) {\n    // eslint-disable-next-line\n    const resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n\n    if (Object.keys(resutJSON).length) {\n      const isSelected = this.activeIndex === resutJSON.index;\n      let isChecked;\n      this.activeIndex = resutJSON.index;\n\n      if (this.listViewInstance.showCheckBox) {\n        if (this.uiIndices.activeIndices.indexOf(resutJSON.index) === -1) {\n          isChecked = true;\n          this.uiIndices.activeIndices.push(resutJSON.index);\n        } else {\n          isChecked = false;\n          this.uiIndices.activeIndices.splice(this.uiIndices.activeIndices.indexOf(resutJSON.index), 1);\n        }\n\n        if (this.listViewInstance.curUL.querySelector('.' + classNames.focused)) {\n          this.listViewInstance.curUL.querySelector('.' + classNames.focused).classList.remove(classNames.focused);\n        }\n      }\n\n      if (this.listViewInstance.getLiFromObjOrElement(obj)) {\n        if (this.listViewInstance.showCheckBox) {\n          this.listViewInstance.setCheckboxLI(this.listViewInstance.getLiFromObjOrElement(obj));\n        } else {\n          this.listViewInstance.setSelectLI(this.listViewInstance.getLiFromObjOrElement(obj));\n        }\n      } else {\n        // eslint-disable-next-line\n        let eventArgs;\n\n        if (typeof this.listViewInstance.dataSource[0] === 'string' || typeof this.listViewInstance.dataSource[0] === 'number') {\n          eventArgs = {\n            text: this.listViewInstance.curViewDS[this.activeIndex],\n            data: this.listViewInstance.curViewDS[this.activeIndex],\n            index: this.activeIndex\n          };\n        } else {\n          const curViewDS = this.listViewInstance.curViewDS;\n          eventArgs = {\n            text: curViewDS[this.activeIndex][this.listViewInstance.fields.text],\n            data: curViewDS[this.activeIndex],\n            index: this.activeIndex\n          };\n        }\n\n        if (this.listViewInstance.showCheckBox) {\n          eventArgs.isChecked = isChecked;\n          this.listViewInstance.trigger('select', eventArgs);\n        } else if (!isSelected) {\n          this.listViewInstance.removeSelect();\n          this.listViewInstance.trigger('select', eventArgs);\n        }\n      }\n    } else if (isNullOrUndefined(obj) && !this.listViewInstance.showCheckBox) {\n      this.listViewInstance.removeSelect();\n      this.activeIndex = undefined;\n    }\n  }\n\n  enableItem(obj) {\n    // eslint-disable-next-line\n    const resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n\n    if (Object.keys(resutJSON).length) {\n      this.uiIndices.disabledItemIndices.splice(this.uiIndices.disabledItemIndices.indexOf(resutJSON.index), 1);\n    }\n  }\n\n  disableItem(obj) {\n    // eslint-disable-next-line\n    const resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n\n    if (Object.keys(resutJSON).length && this.uiIndices.disabledItemIndices.indexOf(resutJSON.index) === -1) {\n      this.uiIndices.disabledItemIndices.push(resutJSON.index);\n    }\n  }\n\n  showItem(obj) {\n    // eslint-disable-next-line\n    const resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n\n    if (Object.keys(resutJSON).length) {\n      this.uiIndices.hiddenItemIndices.splice(this.uiIndices.hiddenItemIndices.indexOf(resutJSON.index), 1);\n    }\n  }\n\n  hideItem(obj) {\n    // eslint-disable-next-line\n    const resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n\n    if (Object.keys(resutJSON).length && this.uiIndices.hiddenItemIndices.indexOf(resutJSON.index) === -1) {\n      this.uiIndices.hiddenItemIndices.push(resutJSON.index);\n    }\n  }\n\n  removeItem(obj) {\n    let dataSource;\n    const curViewDS = this.listViewInstance.curViewDS; // eslint-disable-next-line\n\n    const resutJSON = this.findDSAndIndexFromId(curViewDS, obj); // eslint-disable-next-line\n\n    if (Object.keys(resutJSON).length) {\n      dataSource = resutJSON.data;\n\n      if (curViewDS[resutJSON.index - 1] && curViewDS[resutJSON.index - 1].isHeader && curViewDS[resutJSON.index - 1].items.length === 1) {\n        this.removeUiItem(resutJSON.index - 1);\n        this.removeUiItem(resutJSON.index - 1);\n      } else {\n        this.removeUiItem(resutJSON.index);\n      }\n    }\n\n    const listDataSource = this.listViewInstance.dataSource instanceof DataManager ? this.listViewInstance.localData : this.listViewInstance.dataSource;\n    const index = listDataSource.indexOf(dataSource);\n\n    if (index !== -1) {\n      listDataSource.splice(index, 1);\n      this.listViewInstance.setViewDataSource(listDataSource);\n    } // recollect all the list item into collection\n\n\n    this.listViewInstance.liCollection = this.listViewInstance.curUL.querySelectorAll('li');\n  } // eslint-disable-next-line\n\n\n  setCheckboxLI(li, e) {\n    const index = Array.prototype.indexOf.call(this.listViewInstance.curUL.querySelectorAll('li'), li) + this.uiFirstIndex;\n    this.activeIndex = Array.prototype.indexOf.call(this.listViewInstance.curUL.querySelectorAll('li'), li) + this.uiFirstIndex;\n\n    if (li.classList.contains(classNames.selected)) {\n      if (this.uiIndices.activeIndices.indexOf(index) === -1) {\n        this.uiIndices.activeIndices.push(index);\n      }\n    } else {\n      this.uiIndices.activeIndices.splice(this.uiIndices.activeIndices.indexOf(index), 1);\n    }\n  } // eslint-disable-next-line\n\n\n  setSelectLI(li, e) {\n    this.activeIndex = Array.prototype.indexOf.call(this.listViewInstance.curUL.querySelectorAll('li'), li) + this.uiFirstIndex;\n  }\n\n  checkedItem(checked) {\n    if (checked) {\n      this.uiIndices.activeIndices = [];\n      this.activeIndex = undefined;\n      const data = this.listViewInstance.curViewDS;\n\n      for (let index = 0; index < data.length; index++) {\n        if (!data[index].isHeader) {\n          this.uiIndices.activeIndices.push(index);\n        }\n      }\n    } else {\n      this.activeIndex = undefined;\n      this.uiIndices.activeIndices = [];\n    }\n  }\n\n  addUiItem(index) {\n    // virtually new add list item based on the scollbar position\n    // if the scroll bar is at the top, just pretend the new item has been added since no UI\n    // change is required for the item that has been added at last but when scroll bar is at the bottom\n    // just detach top and inject into bottom to mimic new item is added\n    const curViewDs = this.listViewInstance.curViewDS;\n    this.changeUiIndices(index, true);\n\n    if (this.activeIndex && this.activeIndex >= index) {\n      this.activeIndex++;\n    }\n\n    if (this.listViewInstance.showCheckBox && curViewDs[index][this.listViewInstance.fields.isChecked]) {\n      this.uiIndices.activeIndices.push(index);\n    }\n\n    if (!parseFloat(this.bottomElement.style.height) && !parseFloat(this.topElement.style.height)) {\n      this.bottomElement.style.height = parseFloat(this.bottomElement.style.height) + this.listItemHeight + 'px';\n    }\n\n    if (parseFloat(this.bottomElement.style.height)) {\n      const liItem = this.listViewInstance.curUL.lastElementChild.previousSibling;\n      const target = this.listViewInstance.getLiFromObjOrElement(curViewDs[index + 1]) || this.listViewInstance.getLiFromObjOrElement(curViewDs[index + 2]);\n\n      if (target) {\n        this.bottomElement.style.height = parseFloat(this.bottomElement.style.height) + this.listItemHeight + 'px';\n        this.updateUI(liItem, index, target);\n      }\n    } else {\n      const liItem = this.listViewInstance.curUL.firstElementChild.nextSibling;\n      let target;\n\n      if (Object.keys(this.listViewInstance.curViewDS).length - 1 === index) {\n        target = this.listViewInstance.curUL.lastElementChild;\n      } else {\n        target = this.listViewInstance.getLiFromObjOrElement(curViewDs[index + 1]) || this.listViewInstance.getLiFromObjOrElement(curViewDs[index + 2]);\n      }\n\n      this.topElement.style.height = parseFloat(this.topElement.style.height) + this.listItemHeight + 'px';\n      this.uiFirstIndex++;\n      this.uiLastIndex++;\n\n      if (target) {\n        this.updateUI(liItem, index, target);\n\n        if (this.listViewInstance.isWindow === true) {\n          window.scrollTo(0, pageYOffset + this.listItemHeight);\n        } else {\n          this.listViewInstance.element.scrollTop += this.listItemHeight;\n        }\n      }\n    }\n\n    this.totalHeight += this.listItemHeight;\n    this.listDiff = Math.round(parseFloat(this.topElement.style.height) / this.listItemHeight);\n  }\n\n  removeUiItem(index) {\n    this.totalHeight -= this.listItemHeight;\n    const curViewDS = this.listViewInstance.curViewDS[index];\n    const liItem = this.listViewInstance.getLiFromObjOrElement(curViewDS);\n    this.listViewInstance.curViewDS.splice(index, 1);\n\n    if (this.activeIndex && this.activeIndex >= index) {\n      this.activeIndex--;\n    }\n\n    if (liItem) {\n      if (this.domItemCount > Object.keys(this.listViewInstance.curViewDS).length) {\n        detach(liItem);\n        this.domItemCount--;\n        this.uiLastIndex--;\n        this.totalHeight = 0;\n      } else {\n        if (liItem.classList.contains(classNames.disable)) {\n          liItem.classList.remove(classNames.disable);\n          this.uiIndices.disabledItemIndices.splice(this.uiIndices.disabledItemIndices.indexOf(index), 1);\n        }\n\n        if (liItem.style.display === 'none') {\n          liItem.style.display = '';\n          this.uiIndices.hiddenItemIndices.splice(this.uiIndices.hiddenItemIndices.indexOf(index), 1);\n        }\n\n        if (this.listViewInstance.showCheckBox && liItem.classList.contains(classNames.selected)) {\n          this.listViewInstance.removeSelect();\n          this.uiIndices.activeIndices.splice(this.uiIndices.activeIndices.indexOf(index), 1);\n          const checklistElement = liItem.querySelector('.' + classNames.checkboxWrapper);\n          checklistElement.removeAttribute('aria-checked');\n          checklistElement.firstElementChild.classList.remove(classNames.checked);\n\n          if (liItem.classList.contains(classNames.focused)) {\n            liItem.classList.remove(classNames.focused);\n            this.activeIndex = undefined;\n          }\n        } else if (liItem.classList.contains(classNames.selected)) {\n          this.listViewInstance.removeSelect();\n          this.activeIndex = undefined;\n        }\n\n        if (!parseFloat(this.bottomElement.style.height) && !parseFloat(this.topElement.style.height)) {\n          this.updateUI(liItem, this.uiLastIndex, this.bottomElement);\n        } else if (parseFloat(this.bottomElement.style.height)) {\n          this.bottomElement.style.height = parseFloat(this.bottomElement.style.height) - this.listItemHeight + 'px';\n          this.updateUI(liItem, this.uiLastIndex, this.bottomElement);\n        } else {\n          this.topElement.style.height = parseFloat(this.topElement.style.height) - this.listItemHeight + 'px';\n          this.updateUI(liItem, this.uiFirstIndex - 1, this.topElement.nextSibling);\n          this.uiLastIndex--;\n          this.uiFirstIndex--;\n        }\n      }\n    }\n\n    this.changeUiIndices(index, false);\n    this.listDiff = Math.round(parseFloat(this.topElement.style.height) / this.listItemHeight);\n  }\n\n  changeUiIndices(index, increment) {\n    const keys = Object.keys(this.uiIndices);\n\n    for (let ind = 0; ind < keys.length; ind++) {\n      this.uiIndices[keys[ind]] = this.uiIndices[keys[ind]].map(i => {\n        if (i >= index) {\n          return increment ? ++i : --i;\n        } else {\n          return i;\n        }\n      });\n    }\n  }\n\n  addItem(data, fields, dataSource) {\n    for (let i = 0; i < data.length; i++) {\n      const currentItem = data[i]; // push the given data to main data array\n\n      dataSource.push(currentItem); // recalculate all the group data or other datasource related things\n\n      this.listViewInstance.setViewDataSource(dataSource); // render list items for first time due to no datasource present earlier\n\n      if (!this.domItemCount) {\n        // fresh rendering for first time\n        if ((this.listViewInstance.template || this.listViewInstance.groupTemplate) && !this.isNgTemplate()) {\n          this.listViewInstance.listBaseOption.template = null;\n          this.listViewInstance.listBaseOption.groupTemplate = null;\n          this.listViewInstance.listBaseOption.itemCreated = this.createUIItem.bind(this);\n        }\n\n        this.uiVirtualization(); // when expected expected DOM count doesn't meet the condition we need to create and inject new item into DOM\n      } else if (this.domItemCount < this.expectedDomItemCount) {\n        const ds = this.listViewInstance.findItemFromDS(dataSource, fields);\n\n        if (ds instanceof Array) {\n          if (this.listViewInstance.ulElement) {\n            let index = this.listViewInstance.curViewDS.indexOf(currentItem); // inject new list item into DOM\n\n            this.createAndInjectNewItem(currentItem, index); // check for group header item\n\n            const curViewDS = this.listViewInstance.curViewDS[index - 1];\n\n            if (curViewDS && curViewDS.isHeader && curViewDS.items.length === 1) {\n              // target group item index in datasource\n              --index; // inject new group header into DOM for previously created list item\n\n              this.createAndInjectNewItem(curViewDS, index);\n            }\n          } // recollect all the list item into collection\n\n\n          this.listViewInstance.liCollection = this.listViewInstance.curUL.querySelectorAll('li');\n        }\n      } else {\n        // eslint-disable-next-line\n        const index = this.listViewInstance.curViewDS.indexOf(currentItem); // virtually new add list item based on the scollbar position\n\n        this.addUiItem(index); // check for group header item needs to be added\n\n        const curViewDS = this.listViewInstance.curViewDS[index - 1];\n\n        if (curViewDS && curViewDS.isHeader && curViewDS.items.length === 1) {\n          this.addUiItem(index - 1);\n        }\n      }\n    }\n  }\n\n  createAndInjectNewItem(itemData, index) {\n    // generate li item for given datasource\n    let target;\n    const li = ListBase.createListItemFromJson(this.listViewInstance.createElement, // eslint-disable-next-line\n    [itemData], this.listViewInstance.listBaseOption, null, null, this.listViewInstance); // check for target element whether to insert before last item or group item\n\n    if (Object.keys(this.listViewInstance.curViewDS).length - 1 === index) {\n      target = this.listViewInstance.curUL.lastElementChild;\n    } else {\n      // target group header's first child item to append its header\n      target = this.listViewInstance.getLiFromObjOrElement(this.listViewInstance.curViewDS[index + 1]) || this.listViewInstance.getLiFromObjOrElement(this.listViewInstance.curViewDS[index + 2]);\n    }\n\n    if (this.listViewInstance.fields.groupBy && this.listViewInstance.curViewDS[index + 1] && this.listViewInstance.curViewDS[index + 1].isHeader) {\n      let targetEle = this.listViewInstance.getLiFromObjOrElement(this.listViewInstance.curViewDS[index - 1]);\n\n      if (targetEle) {\n        target = targetEle.nextElementSibling;\n      }\n    } // insert before the target element\n\n\n    this.listViewInstance.ulElement.insertBefore(li[0], target); // increment internal DOM count, last index count for new element\n\n    this.domItemCount++;\n\n    if (this.bottomElementHeight <= 0) {\n      this.uiLastIndex++;\n    } // recalculate the current item height, to avoid jumpy scroller\n\n\n    this.refreshItemHeight();\n  }\n\n  createUIItem(args) {\n    const virtualTemplate = this.listViewInstance.template;\n    const template = this.listViewInstance.createElement('div');\n    let commonTemplate = '<div class=\"e-text-content\" role=\"presentation\"> ' + '<span class=\"e-list-text\"> ${' + this.listViewInstance.fields.text + '} </span></div>';\n\n    if (this.listViewInstance.isReact) {\n      commonTemplate = null;\n    }\n\n    if (this.listViewInstance.showCheckBox) {\n      // eslint-disable-next-line\n      this.listViewInstance.renderCheckbox(args);\n\n      if (!isNullOrUndefined(this.listViewInstance.virtualCheckBox) && !isNullOrUndefined(this.listViewInstance.virtualCheckBox.outerHTML)) {\n        const div = document.createElement('div');\n        div.innerHTML = this.listViewInstance.template || commonTemplate;\n\n        if (div.children && div.children[0]) {\n          div.children[0].classList.add('e-checkbox');\n\n          if (this.listViewInstance.checkBoxPosition === 'Left') {\n            div.children[0].classList.add('e-checkbox-left');\n          } else {\n            div.children[0].classList.add('e-checkbox-right');\n          }\n\n          if (this.listViewInstance.checkBoxPosition === 'Left') {\n            div.children[0].insertBefore(this.listViewInstance.virtualCheckBox, div.childNodes[0].children[0]);\n          } else {\n            div.children[0].appendChild(this.listViewInstance.virtualCheckBox);\n          }\n\n          this.listViewInstance.template = div.innerHTML;\n        }\n      }\n\n      template.innerHTML = this.listViewInstance.template;\n      this.listViewInstance.template = virtualTemplate;\n    } else {\n      template.innerHTML = this.listViewInstance.template || commonTemplate;\n    } // eslint-disable-next-line\n\n\n    const templateElements = template.getElementsByTagName('*');\n    const groupTemplate = this.listViewInstance.createElement('div');\n\n    if (this.listViewInstance.fields.groupBy) {\n      groupTemplate.innerHTML = this.listViewInstance.groupTemplate || commonTemplate;\n    } // eslint-disable-next-line\n\n\n    let groupTemplateElements = groupTemplate.getElementsByTagName('*');\n\n    if (args.curData.isHeader) {\n      this.headerData = args.curData;\n    }\n\n    this.templateData = args.curData.isHeader ? args.curData.items[0] : args.curData;\n\n    if (!this.listViewInstance.isReact || typeof this.listViewInstance.template == \"string\" && !args.item.classList.contains(\"e-list-group-item\") || typeof this.listViewInstance.groupTemplate == \"string\" && args.item.classList.contains(\"e-list-group-item\")) {\n      args.item.innerHTML = '';\n    }\n\n    args.item.context = {\n      data: args.curData,\n      nodes: {\n        flatTemplateNodes: [],\n        groupTemplateNodes: []\n      }\n    };\n\n    for (let i = 0; i < templateElements.length; i++) {\n      this.compileTemplate(templateElements[i], args.item, false);\n    }\n\n    for (let i = 0; i < groupTemplateElements.length; i++) {\n      this.compileTemplate(groupTemplateElements[i], args.item, true);\n    }\n\n    args.item.context.template = args.curData.isHeader ? template.firstElementChild : groupTemplate.firstElementChild;\n    args.item.context.type = args.curData.isHeader ? 'flatList' : 'groupList';\n    const element = args.curData.isHeader ? groupTemplate : template;\n\n    if (element.firstElementChild) {\n      args.item.insertBefore(element.firstElementChild, null);\n    }\n  }\n\n  compileTemplate(element, item, isHeader) {\n    this.textProperty(element, item, isHeader);\n    this.classProperty(element, item, isHeader);\n    this.attributeProperty(element, item, isHeader);\n  }\n\n  onChange(newData, listElement) {\n    listElement.context.data = newData; // eslint-disable-next-line max-len\n\n    const groupTemplateNodes = listElement.context.nodes.groupTemplateNodes; // eslint-disable-next-line max-len\n\n    const flatTemplateNodes = listElement.context.nodes.flatTemplateNodes; // eslint-disable-next-line\n\n    if (!isNullOrUndefined(newData.isHeader) && newData.isHeader && listElement.context.type === 'groupList') {\n      // eslint-disable-next-line\n      const element = listElement.firstElementChild;\n      detach(listElement.firstElementChild);\n      listElement.insertBefore(listElement.context.template, null);\n      listElement.context.template = element;\n      listElement.context.type = 'flatList';\n\n      for (let i = 0; i < groupTemplateNodes.length; i++) {\n        // eslint-disable-next-line\n        groupTemplateNodes[i].onChange(newData);\n      }\n    } else if (!newData.isHeader && listElement.context.type === 'flatList') {\n      const element = listElement.firstElementChild;\n      detach(listElement.firstElementChild);\n      listElement.insertBefore(listElement.context.template, null);\n      listElement.context.template = element;\n      listElement.context.type = 'groupList';\n\n      for (let i = 0; i < flatTemplateNodes.length; i++) {\n        // eslint-disable-next-line\n        flatTemplateNodes[i].onChange(newData);\n      }\n    } else if (!newData.isHeader) {\n      for (let i = 0; i < flatTemplateNodes.length; i++) {\n        // eslint-disable-next-line\n        flatTemplateNodes[i].onChange(newData);\n      }\n    } else {\n      for (let i = 0; i < groupTemplateNodes.length; i++) {\n        // eslint-disable-next-line\n        groupTemplateNodes[i].onChange(newData);\n      }\n    }\n  } // eslint-disable-next-line\n\n\n  updateContextData(listElement, node, isHeader) {\n    if (isHeader) {\n      listElement.context.nodes.groupTemplateNodes.push(node);\n    } else {\n      listElement.context.nodes.flatTemplateNodes.push(node);\n    }\n  }\n\n  classProperty(element, listElement, isHeader) {\n    const regex = new RegExp('\\\\${([^}]*)}', 'g');\n    const resultantOutput = [];\n    let regexMatch;\n\n    while (regexMatch !== null) {\n      const match = regex.exec(element.className);\n      resultantOutput.push(match);\n      regexMatch = match;\n\n      if (regexMatch === null) {\n        resultantOutput.pop();\n      }\n    }\n\n    if (resultantOutput && resultantOutput.length) {\n      for (let i = 0; i < resultantOutput.length; i++) {\n        const classNameMatch = resultantOutput[i]; // eslint-disable-next-line\n\n        let classFunction;\n\n        if (classNameMatch[1].indexOf('?') !== -1 && classNameMatch[1].indexOf(':') !== -1) {\n          // tslint:disable-next-line:no-function-constructor-with-string-args\n          classFunction = new Function('data', 'return ' + classNameMatch[1].replace(/\\$/g, 'data.'));\n        } else {\n          // tslint:disable-next-line:no-function-constructor-with-string-args\n          classFunction = new Function('data', 'return ' + 'data.' + classNameMatch[1]);\n        } // eslint-disable-next-line\n\n\n        const subNode = {};\n\n        if (isHeader) {\n          subNode.bindedvalue = classFunction(this.headerData);\n        } else {\n          subNode.bindedvalue = classFunction(this.templateData);\n        }\n\n        subNode.onChange = value => {\n          if (subNode.bindedvalue) {\n            removeClass([element], subNode.bindedvalue.split(' ').filter(css => css));\n          }\n\n          const newCss = classFunction(value);\n\n          if (newCss) {\n            addClass([element], newCss.split(' ').filter(css => css));\n          }\n\n          subNode.bindedvalue = newCss;\n        };\n\n        const className = classNameMatch[0].split(' ');\n\n        for (let i = 0; i < className.length; i++) {\n          element.classList.remove(className[i]);\n        }\n\n        if (subNode.bindedvalue) {\n          addClass([element], subNode.bindedvalue.split(' ').filter(css => css));\n        }\n\n        this.updateContextData(listElement, subNode, isHeader);\n      }\n    }\n  }\n\n  attributeProperty(element, listElement, isHeader) {\n    const attributeNames = [];\n\n    for (let i = 0; i < element.attributes.length; i++) {\n      attributeNames.push(element.attributes[i].nodeName);\n    }\n\n    if (attributeNames.indexOf('class') !== -1) {\n      attributeNames.splice(attributeNames.indexOf('class'), 1);\n    }\n\n    for (let i = 0; i < attributeNames.length; i++) {\n      const attributeName = attributeNames[i];\n      const attrNameMatch = new RegExp('\\\\${([^}]*)}', 'g').exec(attributeName) || [];\n      const attrValueMatch = new RegExp('\\\\${([^}]*)}', 'g').exec(element.getAttribute(attributeName)) || []; // eslint-disable-next-line\n\n      let attributeNameFunction; // eslint-disable-next-line\n\n      let attributeValueFunction;\n\n      if (attrNameMatch.length || attrValueMatch.length) {\n        if (attrNameMatch[1]) {\n          // tslint:disable-next-line:no-function-constructor-with-string-args\n          attributeNameFunction = new Function('data', 'return ' + 'data.' + attrNameMatch[1]);\n        }\n\n        if (attrValueMatch[1]) {\n          if (attrValueMatch[1].indexOf('?') !== -1 && attrValueMatch[1].indexOf(':') !== -1) {\n            // tslint:disable-next-line:no-function-constructor-with-string-args\n            attributeValueFunction = new Function('data', 'return ' + attrValueMatch[1].replace(/\\$/g, 'data.'));\n          } else {\n            // tslint:disable-next-line:no-function-constructor-with-string-args\n            attributeValueFunction = new Function('data', 'return ' + 'data.' + attrValueMatch[1]);\n          }\n        } // eslint-disable-next-line @typescript-eslint/ban-types\n\n\n        const subNode = {};\n\n        if (isHeader) {\n          subNode.bindedvalue = [attrNameMatch[1] === undefined ? undefined : attributeNameFunction(this.headerData), attrValueMatch[1] === undefined ? undefined : attributeValueFunction(this.headerData)];\n        } else {\n          subNode.bindedvalue = [attrNameMatch[1] === undefined ? undefined : attributeNameFunction(this.templateData), attrValueMatch[1] === undefined ? undefined : attributeValueFunction(this.templateData)];\n        }\n\n        subNode.attrName = subNode.bindedvalue[0] === undefined ? attributeName : subNode.bindedvalue[0];\n\n        subNode.onChange = value => {\n          const bindedvalue = subNode.bindedvalue[1] === undefined ? element.getAttribute(subNode.attrName) : attributeValueFunction(value);\n          element.removeAttribute(subNode.attrName);\n          subNode.attrName = subNode.bindedvalue[0] === undefined ? subNode.attrName : attributeNameFunction(value);\n          element.setAttribute(subNode.attrName, bindedvalue);\n          subNode.bindedvalue = [subNode.bindedvalue[0] === undefined ? undefined : attributeNameFunction(value), subNode.bindedvalue[1] === undefined ? undefined : attributeValueFunction(value)];\n        };\n\n        const attributeValue = subNode.bindedvalue[1] === undefined ? element.getAttribute(attributeName) : subNode.bindedvalue[1];\n        element.removeAttribute(attributeName);\n        element.setAttribute(subNode.attrName, attributeValue);\n        this.updateContextData(listElement, subNode, isHeader);\n      }\n    }\n  }\n\n  textProperty(element, listElement, isHeader) {\n    const regex = new RegExp('\\\\${([^}]*)}', 'g');\n    const resultantOutput = [];\n    let regexMatch;\n\n    while (regexMatch !== null) {\n      const match = regex.exec(element.innerText);\n      resultantOutput.push(match);\n      regexMatch = match;\n\n      if (regexMatch === null) {\n        resultantOutput.pop();\n      }\n    }\n\n    const isChildHasTextContent = Array.prototype.some.call(element.children, element => {\n      if (new RegExp('\\\\${([^}]*)}', 'g').exec(element.innerText)) {\n        return true;\n      } else {\n        return false;\n      }\n    });\n\n    if (resultantOutput && resultantOutput.length && !isChildHasTextContent) {\n      for (let i = 0; i < resultantOutput.length; i++) {\n        const textPropertyMatch = resultantOutput[i]; // eslint-disable-next-line\n\n        const subNode = {}; // eslint-disable-next-line\n\n        let textFunction;\n\n        if (textPropertyMatch[1].indexOf('?') !== -1 && textPropertyMatch[1].indexOf(':') !== -1) {\n          // tslint:disable-next-line:no-function-constructor-with-string-args\n          textFunction = new Function('data', 'return ' + textPropertyMatch[1].replace(/\\$/g, 'data.'));\n        } else {\n          // tslint:disable-next-line:no-function-constructor-with-string-args\n          textFunction = new Function('data', 'return ' + 'data.' + textPropertyMatch[1]);\n        }\n\n        if (isHeader) {\n          subNode.bindedvalue = textFunction(this.headerData);\n        } else {\n          subNode.bindedvalue = textFunction(this.templateData);\n        }\n\n        subNode.onChange = value => {\n          element.innerText = element.innerText.replace(subNode.bindedvalue, textFunction(value));\n          subNode.bindedvalue = textFunction(value);\n        };\n\n        element.innerText = element.innerText.replace(textPropertyMatch[0], subNode.bindedvalue);\n        this.updateContextData(listElement, subNode, isHeader);\n      }\n    }\n  }\n\n  reRenderUiVirtualization() {\n    this.wireScrollEvent(true);\n\n    if (this.listViewInstance.contentContainer) {\n      detach(this.listViewInstance.contentContainer);\n    }\n\n    this.listViewInstance.preRender(); // resetting the dom count to 0, to avoid edge case of dataSource suddenly becoming zero\n    // and then manually adding item using addItem API\n\n    this.domItemCount = 0;\n    this.listViewInstance.header();\n    this.listViewInstance.setLocalData();\n  }\n\n  updateUI(element, index, targetElement) {\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    const onChange = this.isNgTemplate() ? this.onNgChange : this.onChange;\n\n    if (this.listViewInstance.template || this.listViewInstance.groupTemplate) {\n      const curViewDS = this.listViewInstance.curViewDS[index]; // eslint-disable-next-line\n\n      element.dataset.uid = curViewDS[this.listViewInstance.fields.id] ? // eslint-disable-next-line\n      curViewDS[this.listViewInstance.fields.id] : ListBase.generateId();\n      onChange(curViewDS, element, this);\n    } else {\n      this.updateUiContent(element, index);\n    }\n\n    this.changeElementAttributes(element, index);\n\n    if (targetElement) {\n      this.listViewInstance.ulElement.insertBefore(element, targetElement);\n    }\n  }\n\n  onNgChange(newData, listElement, virtualThis) {\n    // compile given target element with template for new data\n    // eslint-disable-next-line\n    const templateCompiler = compile(virtualThis.listViewInstance.template);\n    const resultElement = templateCompiler(newData);\n\n    while (listElement.lastChild) {\n      listElement.removeChild(listElement.lastChild);\n    }\n\n    listElement.appendChild(resultElement[0]);\n  }\n\n  getModuleName() {\n    return 'virtualization';\n  }\n\n  destroy() {\n    this.wireScrollEvent(true);\n  }\n\n}\n/**\n * Listview Component\n */\n\n/**\n * Listview Component\n */\n\n\nvar __decorate$1 = undefined && undefined.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar Sortable_1;\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/**\n * Sortable Module provides support to enable sortable functionality in Dom Elements.\n * ```html\n * <div id=\"sortable\">\n *   <div>Item 1</div>\n *   <div>Item 2</div>\n *   <div>Item 3</div>\n *   <div>Item 4</div>\n *   <div>Item 5</div>\n * </div>\n * ```\n * ```typescript\n *   let ele: HTMLElement = document.getElementById('sortable');\n *   let sortObj: Sortable = new Sortable(ele, {});\n * ```\n */\n\nlet Sortable = Sortable_1 = class Sortable extends Base {\n  /* es-lint enable  */\n  constructor(element, options) {\n    super(options, element); // eslint-disable-next-line\n\n    this.getHelper = e => {\n      // eslint-disable-next-line prefer-const\n      let target = this.getSortableElement(e.sender.target);\n\n      if (!this.isValidTarget(target, this)) {\n        return false;\n      }\n\n      let element;\n\n      if (this.helper) {\n        element = this.helper({\n          sender: target,\n          element: e.element\n        });\n      } else {\n        element = target.cloneNode(true);\n        element.style.width = `${target.offsetWidth}px`;\n        element.style.height = `${target.offsetHeight}px`;\n      }\n\n      addClass([element], ['e-sortableclone']);\n      document.body.appendChild(element);\n      return element;\n    }; // eslint-disable-next-line\n\n\n    this.onDrag = e => {\n      if (!e.target) return;\n      this.trigger('drag', {\n        event: e.event,\n        element: this.element,\n        target: e.target\n      });\n      let newInst = this.getSortableInstance(e.target);\n      let target = this.getSortableElement(e.target, newInst);\n\n      if ((this.isValidTarget(target, newInst) || e.target.className.indexOf('e-list-group-item') > -1) && (this.curTarget !== target || !isNullOrUndefined(newInst.placeHolder)) && (newInst.placeHolderElement ? newInst.placeHolderElement !== e.target : true)) {\n        if (e.target.className.indexOf('e-list-group-item') > -1) {\n          target = e.target;\n        }\n\n        this.curTarget = target;\n\n        if (this.target === target) {\n          return;\n        }\n\n        let oldIdx = this.getIndex(newInst.placeHolderElement, newInst);\n        const placeHolder = this.getPlaceHolder(target, newInst);\n        let newIdx;\n\n        if (placeHolder) {\n          oldIdx = isNullOrUndefined(oldIdx) ? this.getIndex(this.target) : oldIdx;\n          newIdx = this.getIndex(target, newInst, e.event);\n          const isPlaceHolderPresent = this.isPlaceHolderPresent(newInst);\n\n          if (isPlaceHolderPresent && oldIdx === newIdx) {\n            return;\n          }\n\n          if (isPlaceHolderPresent) {\n            remove(newInst.placeHolderElement);\n          }\n\n          newInst.placeHolderElement = placeHolder;\n\n          if (e.target.className.indexOf('e-list-group-item') > -1) {\n            newInst.element.insertBefore(newInst.placeHolderElement, newInst.element.children[newIdx]);\n          } else if (newInst.element !== this.element && newIdx === newInst.element.childElementCount) {\n            newInst.element.appendChild(newInst.placeHolderElement);\n          } else {\n            newInst.element.insertBefore(newInst.placeHolderElement, newInst.element.children[newIdx]);\n          }\n\n          this.refreshDisabled(oldIdx, newIdx, newInst);\n        } else {\n          oldIdx = isNullOrUndefined(oldIdx) ? this.getIndex(this.target) : this.getIndex(target, newInst) < oldIdx || !oldIdx ? oldIdx : oldIdx - 1;\n          newIdx = this.getIndex(target, newInst);\n          const idx = newInst.element !== this.element ? newIdx : oldIdx < newIdx ? newIdx + 1 : newIdx;\n          this.updateItemClass(newInst);\n          newInst.element.insertBefore(this.target, newInst.element.children[idx]);\n          this.refreshDisabled(oldIdx, newIdx, newInst);\n          this.curTarget = this.target;\n          this.trigger('drop', {\n            droppedElement: this.target,\n            element: newInst.element,\n            previousIndex: oldIdx,\n            currentIndex: newIdx,\n            target: e.target,\n            helper: document.getElementsByClassName('e-sortableclone')[0],\n            event: e.event,\n            scope: this.scope\n          });\n        }\n      }\n\n      newInst = this.getSortableInstance(this.curTarget);\n\n      if (isNullOrUndefined(target) && e.target !== newInst.placeHolderElement) {\n        if (this.isPlaceHolderPresent(newInst)) {\n          this.removePlaceHolder(newInst);\n        }\n      } else {\n        const placeHolders = [].slice.call(document.getElementsByClassName('e-sortable-placeholder'));\n        let inst;\n        placeHolders.forEach(placeHolder => {\n          inst = this.getSortableInstance(placeHolder);\n\n          if (inst.element && inst !== newInst) {\n            this.removePlaceHolder(inst);\n          }\n        });\n      }\n    }; // eslint-disable-next-line\n\n\n    this.onDragStart = e => {\n      this.target = this.getSortableElement(e.target);\n      let cancelDrag = false;\n      this.target.classList.add('e-grabbed');\n      this.curTarget = this.target;\n      e.helper = document.getElementsByClassName('e-sortableclone')[0];\n      const args = {\n        cancel: false,\n        element: this.element,\n        target: this.target\n      };\n      this.trigger('beforeDragStart', args, observedArgs => {\n        if (observedArgs.cancel) {\n          cancelDrag = observedArgs.cancel;\n          this.onDragStop(e);\n        }\n      });\n\n      if (cancelDrag) {\n        return;\n      }\n\n      if (isBlazor) {\n        this.trigger('dragStart', {\n          event: e.event,\n          element: this.element,\n          target: this.target,\n          bindEvents: e.bindEvents,\n          dragElement: e.dragElement\n        });\n      } else {\n        this.trigger('dragStart', {\n          event: e.event,\n          element: this.element,\n          target: this.target\n        });\n      }\n    }; // eslint-disable-next-line\n\n\n    this.onDragStop = e => {\n      let dropInst = this.getSortableInstance(this.curTarget);\n      let prevIdx;\n      let curIdx;\n      let handled;\n      prevIdx = this.getIndex(this.target);\n      const isPlaceHolderPresent = this.isPlaceHolderPresent(dropInst);\n\n      if (isPlaceHolderPresent) {\n        const curIdx = this.getIndex(dropInst.placeHolderElement, dropInst);\n        const args = {\n          previousIndex: prevIdx,\n          currentIndex: curIdx,\n          target: e.target,\n          droppedElement: this.target,\n          helper: e.helper,\n          cancel: false,\n          handled: false\n        };\n        this.trigger('beforeDrop', args, observedArgs => {\n          if (!observedArgs.cancel) {\n            handled = observedArgs.handled;\n            this.updateItemClass(dropInst);\n\n            if (observedArgs.handled) {\n              const ele = this.target.cloneNode(true);\n              this.target.classList.remove('e-grabbed');\n              this.target = ele;\n            }\n\n            dropInst.element.insertBefore(this.target, dropInst.placeHolderElement);\n            const curIdx = this.getIndex(this.target, dropInst);\n            prevIdx = this === dropInst && prevIdx - curIdx > 1 ? prevIdx - 1 : prevIdx;\n            this.trigger('drop', {\n              event: e.event,\n              element: dropInst.element,\n              previousIndex: prevIdx,\n              currentIndex: curIdx,\n              target: e.target,\n              helper: e.helper,\n              droppedElement: this.target,\n              scopeName: this.scope,\n              handled: handled\n            });\n          }\n\n          remove(dropInst.placeHolderElement);\n        });\n      }\n\n      dropInst = this.getSortableInstance(e.target); // eslint-disable-next-line prefer-const\n\n      curIdx = dropInst.element.childElementCount;\n      prevIdx = this.getIndex(this.target);\n\n      if (dropInst.element === e.target || !isPlaceHolderPresent && this.curTarget === this.target) {\n        const beforeDropArgs = {\n          previousIndex: prevIdx,\n          currentIndex: this.curTarget === this.target ? prevIdx : curIdx,\n          target: e.target,\n          droppedElement: this.target,\n          helper: e.helper,\n          cancel: false\n        };\n        this.trigger('beforeDrop', beforeDropArgs, observedArgs => {\n          if (dropInst.element === e.target && !observedArgs.cancel) {\n            this.updateItemClass(dropInst);\n            dropInst.element.appendChild(this.target);\n            this.trigger('drop', {\n              event: e.event,\n              element: dropInst.element,\n              previousIndex: prevIdx,\n              currentIndex: curIdx,\n              target: e.target,\n              helper: e.helper,\n              droppedElement: this.target,\n              scopeName: this.scope\n            });\n          }\n        });\n      }\n\n      this.target.classList.remove('e-grabbed');\n      this.target = null;\n      this.curTarget = null;\n      remove(e.helper);\n      getComponent(this.element, Draggable).intDestroy(e.event);\n    };\n\n    this.bind();\n  }\n\n  bind() {\n    if (!this.element.id) {\n      this.element.id = getUniqueID('sortable');\n    }\n\n    if (!this.itemClass) {\n      this.itemClass = 'e-sort-item';\n      this.dataBind();\n    }\n\n    this.initializeDraggable();\n  }\n\n  initializeDraggable() {\n    new Draggable(this.element, {\n      helper: this.getHelper,\n      dragStart: this.onDragStart,\n      drag: this.onDrag,\n      dragStop: this.onDragStop,\n      dragTarget: `.${this.itemClass}`,\n      enableTapHold: true,\n      tapHoldThreshold: 200,\n      queryPositionInfo: this.queryPositionInfo,\n      distance: 5\n    });\n  }\n\n  getPlaceHolder(target, instance) {\n    if (instance.placeHolder) {\n      const placeHolderElement = instance.placeHolder({\n        element: instance.element,\n        grabbedElement: this.target,\n        target: target\n      });\n      placeHolderElement.classList.add('e-sortable-placeholder');\n      return placeHolderElement;\n    }\n\n    return null;\n  }\n\n  isValidTarget(target, instance) {\n    return target && compareElementParent(target, instance.element) && target.classList.contains(instance.itemClass) && !target.classList.contains('e-disabled');\n  }\n\n  removePlaceHolder(instance) {\n    remove(instance.placeHolderElement);\n    instance.placeHolderElement = null;\n  }\n\n  updateItemClass(instance) {\n    if (this !== instance) {\n      this.target.classList.remove(this.itemClass);\n      this.target.classList.add(instance.itemClass);\n    }\n  }\n\n  getSortableInstance(element) {\n    element = closest(element, `.e-${this.getModuleName()}`);\n\n    if (element) {\n      const inst = getComponent(element, Sortable_1);\n      return inst.scope && this.scope && inst.scope === this.scope ? inst : this;\n    } else {\n      return this;\n    }\n  }\n\n  refreshDisabled(oldIdx, newIdx, instance) {\n    if (instance === this) {\n      let element;\n      const increased = oldIdx < newIdx;\n      let disabledIdx;\n      let start = increased ? oldIdx : newIdx;\n      const end = increased ? newIdx : oldIdx;\n\n      while (start <= end) {\n        element = this.element.children[start];\n\n        if (element.classList.contains('e-disabled')) {\n          disabledIdx = this.getIndex(element);\n          this.element.insertBefore(element, this.element.children[increased ? disabledIdx + 2 : disabledIdx - 1]);\n          start = increased ? disabledIdx + 2 : disabledIdx + 1;\n        } else {\n          start++;\n        }\n      }\n    }\n  }\n\n  getIndex(target, instance = this, e) {\n    let idx;\n    let placeHolderPresent;\n    [].slice.call(instance.element.children).forEach((element, index) => {\n      if (element.classList.contains('e-sortable-placeholder')) {\n        placeHolderPresent = true;\n      }\n\n      if (element === target) {\n        idx = index;\n\n        if (!isNullOrUndefined(e)) {\n          if (placeHolderPresent) {\n            idx -= 1;\n          }\n\n          const offset = target.getBoundingClientRect();\n          const clientY = offset.bottom - (offset.bottom - offset.top) / 2;\n          idx = e.clientY <= clientY ? idx : idx + 1;\n        }\n\n        return;\n      }\n    });\n    return idx;\n  }\n\n  getSortableElement(element, instance = this) {\n    return closest(element, `.${instance.itemClass}`);\n  }\n\n  queryPositionInfo(value) {\n    value.left = pageXOffset ? `${parseFloat(value.left) - pageXOffset}px` : value.left;\n    value.top = pageYOffset ? `${parseFloat(value.top) - pageYOffset}px` : value.top;\n    return value;\n  }\n\n  isPlaceHolderPresent(instance) {\n    return instance.placeHolderElement && !!closest(instance.placeHolderElement, `#${instance.element.id}`);\n  }\n  /**\n   * It is used to sort array of elements from source element to destination element.\n   *\n   * @param destination - Defines the destination element to which the sortable elements needs to be appended.\n   *\n   * If it is null, then the Sortable library element will be considered as destination.\n   * @param targetIndexes - Specifies the sortable elements indexes which needs to be sorted.\n   * @param insertBefore - Specifies the index before which the sortable elements needs to be appended.\n   * If it is null, elements will be appended as last child.\n   * @function moveTo\n   * @returns {void}\n   */\n\n\n  moveTo(destination, targetIndexes, insertBefore) {\n    moveTo(this.element, destination, targetIndexes, insertBefore);\n  }\n  /**\n   * It is used to destroy the Sortable library.\n   */\n\n\n  destroy() {\n    if (this.itemClass === 'e-sort-item') {\n      this.itemClass = null;\n      this.dataBind();\n    }\n\n    getComponent(this.element, Draggable).destroy();\n    super.destroy();\n  }\n\n  getModuleName() {\n    return 'sortable';\n  }\n\n  onPropertyChanged(newProp, oldProp) {\n    for (const prop of Object.keys(newProp)) {\n      switch (prop) {\n        case 'itemClass':\n          [].slice.call(this.element.children).forEach(element => {\n            if (element.classList.contains(oldProp.itemClass)) {\n              element.classList.remove(oldProp.itemClass);\n            }\n\n            if (newProp.itemClass) {\n              element.classList.add(newProp.itemClass);\n            }\n          });\n          break;\n      }\n    }\n  }\n\n};\n\n__decorate$1([Property(false)], Sortable.prototype, \"enableAnimation\", void 0);\n\n__decorate$1([Property(null)], Sortable.prototype, \"itemClass\", void 0);\n\n__decorate$1([Property(null)], Sortable.prototype, \"scope\", void 0);\n\n__decorate$1([Property()], Sortable.prototype, \"helper\", void 0);\n\n__decorate$1([Property()], Sortable.prototype, \"placeHolder\", void 0);\n\n__decorate$1([Event()], Sortable.prototype, \"drag\", void 0);\n\n__decorate$1([Event()], Sortable.prototype, \"beforeDragStart\", void 0);\n\n__decorate$1([Event()], Sortable.prototype, \"dragStart\", void 0);\n\n__decorate$1([Event()], Sortable.prototype, \"beforeDrop\", void 0);\n\n__decorate$1([Event()], Sortable.prototype, \"drop\", void 0);\n\nSortable = Sortable_1 = __decorate$1([NotifyPropertyChanges], Sortable);\n/**\n * It is used to sort array of elements from source element to destination element.\n *\n * @private\n */\n\nfunction moveTo(from, to, targetIndexes, insertBefore) {\n  let targetElements = [];\n\n  if (!to) {\n    to = from;\n  }\n\n  if (targetIndexes && targetIndexes.length) {\n    targetIndexes.forEach(index => {\n      targetElements.push(from.children[index]);\n    });\n  } else {\n    targetElements = [].slice.call(from.children);\n  }\n\n  if (isNullOrUndefined(insertBefore)) {\n    targetElements.forEach(target => {\n      to.appendChild(target);\n    });\n  } else {\n    const insertElement = to.children[insertBefore];\n    targetElements.forEach(target => {\n      to.insertBefore(target, insertElement);\n    });\n  }\n}\n/**\n * Sortable Module\n */\n\n/**\n * List Components\n */\n\n\nexport { classNames, FieldSettings, ListView, Virtualization, cssClass, ListBase, getFieldValues, Sortable, moveTo };","map":{"version":3,"names":["Animation","Base","ChildProperty","Complex","Component","Draggable","Event","EventHandler","NotifyPropertyChanges","Property","SanitizeHtmlHelper","Touch","addClass","append","attributes","closest","compareElementParent","compile","detach","extend","formatUnit","getComponent","getUniqueID","getValue","isBlazor","isNullOrUndefined","isVisible","merge","prepend","remove","removeClass","rippleEffect","DataManager","Query","createCheckBox","cssClass","li","ul","group","icon","text","check","checked","selected","expanded","textContent","hasChild","level","url","collapsible","disabled","image","iconWrapper","anchorWrap","navigable","ListBase","defaultMappedFields","id","value","isChecked","enabled","iconCss","child","hasChildren","tooltip","htmlAttributes","urlAttributes","imageAttributes","imageUrl","groupBy","sortBy","defaultAriaAttributes","listRole","itemRole","groupItemRole","itemText","wrapperRole","defaultListBaseOptions","showCheckBox","showIcon","enableHtmlSanitizer","expandCollapse","fields","ariaAttributes","listClass","itemClass","processSubChild","sortOrder","template","groupTemplate","headerTemplate","expandIconClass","moduleName","expandIconPosition","itemNavigable","createList","createElement","dataSource","options","isSingleLevel","componentInstance","curOpt","type","typeofData","typeof","createListFromArray","createListFromJson","subChild","createListItemFromArray","generateUL","getModuleClass","generateId","i","length","itemCreating","curData","generateSingleLevelLI","undefined","generateLI","itemCreated","item","push","createListItemFromJson","getModuleName","checkboxElement","anchorElement","hasOwnProperty","fieldData","getFieldValues","curItem","innerEle","className","attrs","isHeader","querySelector","firstElementChild","classList","add","setAttribute","toString","style","display","attr","src","imageElemnt","insertAdjacentElement","iconElement","getSiblingLI","elementArray","element","isPrevious","siblingLI","liIndex","liCollections","Array","prototype","slice","call","indexOf","contains","groupDataSource","curFields","cusQuery","addSorting","ds","getDataSource","j","itemObj","items","grpItem","hdr","key","newtext","_id","trim","k","query","queries","fn","splice","executeLocal","createJsonFromElement","curEle","cloneNode","jsonAr","childs","querySelectorAll","anchor","json","childNodes","keys","Object","Number","hasChildNodes","attributes$$1","getAllAttributes","data","match","elementAttributes","class","split","index","nodeName","nodeValue","renderContentTemplate","ulElement","role","compiledString","compileTemplate","liCollection","innerText","currentID","groupTemplateID","templateID","compiledElement","isStringTemplate","renderGroupTemplate","headerItems","category","header","headerData","innerHTML","Math","floor","random","substring","subDS","subLi","appendChild","expandElement","innerElements","grpLI","elementID","href","anchorTag","document","createTextNode","moduleClass","isFullNavigation","anchorWrapper","uID","innerDiv","liElement","generateIcon","dataItem","field","dataField","e","__decorate","decorators","target","desc","c","arguments","r","getOwnPropertyDescriptor","d","Reflect","decorate","defineProperty","effectsConfig","effectsRTLConfig","classNames","root","hover","focused","parentItem","listItem","listIcon","listItemText","groupListItem","view","headerText","headerTemplateText","disable","content","backIcon","backButton","checkboxWrapper","checkbox","checklist","checkboxIcon","checkboxRight","checkboxLeft","listviewCheckbox","itemCheckList","virtualElementContainer","LISTVIEW_TEMPLATE_PROPERTY","LISTVIEW_GROUPTEMPLATE_PROPERTY","LISTVIEW_HEADERTEMPLATE_PROPERTY","swipeVelocity","FieldSettings","ListView","constructor","previousSelectedItems","hiddenItems","enabledItems","disabledItems","onPropertyChanged","newProp","oldProp","prop","setHTMLAttribute","setCSSClass","setEnable","setSize","setEnableRTL","listBaseOption","properties","enableVirtualization","virtualizationModule","reRenderUiVirtualization","reRender","curDSLevel","headerTitle","contentContainer","refresh","setCheckbox","curViewDS","getSubDS","resetCurrentList","oldCSSClass","filter","css","height","width","isWindow","clientHeight","enableElement","enable","enableRtl","isEnabled","showBack","headerEle","showHeader","setProperties","sanitize","innerHeaderEle","textEle","outerHTML","hedBackButton","headerTemplateEle","LISTVIEW_HEADERTEMPLATE_ID","isReact","renderReactTemplates","parentElement","switchView","fromView","toView","reverse","fPos","position","overflow","anim","duration","animation","effect","slideLeft","aniObj","animate","name","timingFunction","easing","end","model","trigger","curUL","preRender","renderCheckbox","bind","initialization","animateOptions","currentLiElements","isNestedList","selectedData","selectedId","LISTVIEW_TEMPLATE_ID","LISTVIEW_GROUPTEMPLATE_ID","removeElement","args","isValidLI","frameElement","checkInternally","checkBoxPosition","insertBefore","virtualCheckBox","children","lastElementChild","checkItem","toggleCheckBase","HTMLLIElement","getLiFromObjOrElement","setSelectedItemData","uncheckItem","checkAllItems","toggleAllCheckBase","uncheckAllItems","checkIcon","checkedItem","getItemData","selectedItems","refreshItemHeight","clickHandler","closestElement","back","parentNode","removeFocus","setCheckboxLI","eventArgs","selectEventData","removeHover","removeSelect","setSelectLI","focus","removeChild","hoverHandler","curLi","setHoverLI","leaveHandler","homeKeyHandler","preventDefault","focusedElement","removeAttribute","onArrowKeyDown","prev","arrowKeyHandler","elementTop","getBoundingClientRect","top","elementHeight","firstItemBounds","heightDiff","groupItemBounds","siblingTop","siblingHeight","window","innerHeight","scroll","pageYOffset","scrollTop","uiFirstIndex","onUIScrolled","listItemHeight","topHeight","headerBounds","enterKeyHandler","spaceKeyHandler","keyActionHandler","keyCode","swipeActionHandler","swipeDirection","velocity","originalEvent","focusout","activeElement","wireEvents","touchModule","swipe","unWireEvents","destroy","focusedLI","ele","hoverLI","selectedLI","renderSubList","selectedItem","isInteracted","event","lastLi","levelKeys","localData","curDSJSON","findItemFromDS","getElementUID","curDS","parent","resultJSON","some","getQuery","columns","column","select","from","tableName","setViewDataSource","fieldValue","isInAnimation","renderRemoteLists","listViewComponent","isDestroyed","result","renderList","triggerActionFailure","setLocalData","ready","then","isOffline","offline","catch","executeQuery","clearTemplate","renderIntoDom","setAttributes","liElements","getAttribute","exceptionEvent","UpdateCurrentUL","lists","isNgTemplate","createUIItem","uiVirtualization","obj","Element","render","tabindex","rippleFn","selector","renderComplete","classAr","concat","pID","pop","toUL","fromUL","selectItem","uid","selectMultipleItems","getParentId","parentId","getSelectedItems","finalValue","isCompleted","getElementsByClassName","liTextCollection","liDataCollection","dataParent","tempData","findItem","enableItem","setItemState","disableItem","isEnable","showItem","showHideItem","hideItem","isHide","addItem","addItemInternally","targetUL","addItemIntoDom","addItemInNestedList","targetItemData","itemQueue","targetItemId","targetChildDS","isAlreadyRenderedUL","targetLi","targetDS","isTargetEmptyChild","targetRefreshedElement","currentItem","addListItem","curItemDS","targetEle","nextElementSibling","removeItem","listDataSource","removeItemFromList","groupLi","validateNestedView","previousElementSibling","foundData","findParent","dsIndex","isArray","parentLi","liID","toLowerCase","removeMultipleItems","callback","requiredModules","modules","member","getPersistData","addOnPersist","listElementCount","windowElementCount","Virtualization","instance","elementDifference","listViewInstance","templateRef","wireScrollEvent","firstDs","expectedDomItemCount","ValidateItemCount","domItemCount","uiLastIndex","otherDs","listItems","topElement","bottomElement","totalHeight","topElementHeight","bottomElementHeight","listDiff","uiIndicesInitialization","onVirtualScroll","onVirtualUiScroll","addEventListener","removeEventListener","updateUl","updateUlContainer","liElementHeight","updateLiElementHeight","round","documentElement","dataSourceLength","parseFloat","itemCount","uiIndices","activeIndices","disabledItemIndices","context","viewContainerRef","get","nextSibling","getscrollerHeight","startingHeight","scrollPosition","onLongScroll","onNormalScroll","isScrollingDown","elements","updateUI","updateUiContent","curViewDs","dataset","checkListWrapper","changeElementAttributes","hiddenItemIndices","checklistElement","activeIndex","findDSAndIndexFromId","dataCollection","textCollection","indices","map","indexArray","resutJSON","isSelected","removeUiItem","addUiItem","changeUiIndices","liItem","previousSibling","scrollTo","increment","ind","createAndInjectNewItem","itemData","virtualTemplate","commonTemplate","div","templateElements","getElementsByTagName","groupTemplateElements","templateData","nodes","flatTemplateNodes","groupTemplateNodes","textProperty","classProperty","attributeProperty","onChange","newData","listElement","updateContextData","node","regex","RegExp","resultantOutput","regexMatch","exec","classNameMatch","classFunction","Function","replace","subNode","bindedvalue","newCss","attributeNames","attributeName","attrNameMatch","attrValueMatch","attributeNameFunction","attributeValueFunction","attrName","attributeValue","isChildHasTextContent","textPropertyMatch","textFunction","targetElement","onNgChange","virtualThis","templateCompiler","resultElement","lastChild","__decorate$1","Sortable_1","Sortable","getHelper","getSortableElement","sender","isValidTarget","helper","offsetWidth","offsetHeight","body","onDrag","newInst","getSortableInstance","curTarget","placeHolder","placeHolderElement","oldIdx","getIndex","getPlaceHolder","newIdx","isPlaceHolderPresent","childElementCount","refreshDisabled","idx","updateItemClass","droppedElement","previousIndex","currentIndex","scope","removePlaceHolder","placeHolders","inst","forEach","onDragStart","cancelDrag","cancel","observedArgs","onDragStop","bindEvents","dragElement","dropInst","prevIdx","curIdx","handled","scopeName","beforeDropArgs","intDestroy","dataBind","initializeDraggable","dragStart","drag","dragStop","dragTarget","enableTapHold","tapHoldThreshold","queryPositionInfo","distance","grabbedElement","increased","disabledIdx","start","placeHolderPresent","offset","clientY","bottom","left","pageXOffset","moveTo","destination","targetIndexes","to","targetElements","insertElement"],"sources":["C:/Users/High Tech Assistance/Desktop/e-learningProject__frontend - Copie/e-learningProject__frontend - Copie/frontend/node_modules/@syncfusion/ej2-lists/dist/es6/ej2-lists.es2015.js"],"sourcesContent":["import { Animation, Base, ChildProperty, Complex, Component, Draggable, Event, EventHandler, NotifyPropertyChanges, Property, SanitizeHtmlHelper, Touch, addClass, append, attributes, closest, compareElementParent, compile, detach, extend, formatUnit, getComponent, getUniqueID, getValue, isBlazor, isNullOrUndefined, isVisible, merge, prepend, remove, removeClass, rippleEffect } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { createCheckBox } from '@syncfusion/ej2-buttons';\n\n/* eslint-disable no-inner-declarations */\nlet cssClass = {\n    li: 'e-list-item',\n    ul: 'e-list-parent e-ul',\n    group: 'e-list-group-item',\n    icon: 'e-list-icon',\n    text: 'e-list-text',\n    check: 'e-list-check',\n    checked: 'e-checked',\n    selected: 'e-selected',\n    expanded: 'e-expanded',\n    textContent: 'e-text-content',\n    hasChild: 'e-has-child',\n    level: 'e-level',\n    url: 'e-list-url',\n    collapsible: 'e-icon-collapsible',\n    disabled: 'e-disabled',\n    image: 'e-list-img',\n    iconWrapper: 'e-icon-wrapper',\n    anchorWrap: 'e-anchor-wrap',\n    navigable: 'e-navigable'\n};\n/**\n * Base List Generator\n */\n// eslint-disable-next-line @typescript-eslint/no-namespace\nvar ListBase;\n(function (ListBase) {\n    /**\n     *\n     * Default mapped fields.\n     */\n    ListBase.defaultMappedFields = {\n        id: 'id',\n        text: 'text',\n        url: 'url',\n        value: 'value',\n        isChecked: 'isChecked',\n        enabled: 'enabled',\n        expanded: 'expanded',\n        selected: 'selected',\n        iconCss: 'iconCss',\n        child: 'child',\n        isVisible: 'isVisible',\n        hasChildren: 'hasChildren',\n        tooltip: 'tooltip',\n        htmlAttributes: 'htmlAttributes',\n        urlAttributes: 'urlAttributes',\n        imageAttributes: 'imageAttributes',\n        imageUrl: 'imageUrl',\n        groupBy: null,\n        sortBy: null\n    };\n    const defaultAriaAttributes = {\n        level: 1,\n        listRole: 'presentation',\n        itemRole: 'presentation',\n        groupItemRole: 'group',\n        itemText: 'list-item',\n        wrapperRole: 'presentation'\n    };\n    const defaultListBaseOptions = {\n        showCheckBox: false,\n        showIcon: false,\n        enableHtmlSanitizer: false,\n        expandCollapse: false,\n        fields: ListBase.defaultMappedFields,\n        ariaAttributes: defaultAriaAttributes,\n        listClass: '',\n        itemClass: '',\n        processSubChild: false,\n        sortOrder: 'None',\n        template: null,\n        groupTemplate: null,\n        headerTemplate: null,\n        expandIconClass: 'e-icon-collapsible',\n        moduleName: 'list',\n        expandIconPosition: 'Right',\n        itemNavigable: false\n    };\n    /**\n     * Function helps to created and return the UL Li element based on your data.\n     *\n     * @param  {createElementParams} createElement - Specifies an array of JSON data.\n     *\n     * @param  {{Object}[]} dataSource - Specifies an array of JSON data.\n     *\n     * @param  {ListBaseOptions} options? - Specifies the list options that need to provide.\n     *\n     * @param  {boolean} isSingleLevel? - Specifies the list options that need to provide.\n     *\n     * @param  {any} componentInstance? - Specifies the list options that need to provide.\n     *\n     * @returns  {createElement} createListFromJson - Specifies the list options that need to provide.\n     */\n    function createList(createElement, dataSource, \n    // eslint-disable-next-line\n    options, isSingleLevel, componentInstance) {\n        const curOpt = extend({}, defaultListBaseOptions, options);\n        const ariaAttributes = extend({}, defaultAriaAttributes, curOpt.ariaAttributes);\n        const type = typeofData(dataSource).typeof;\n        if (type === 'string' || type === 'number') {\n            return createListFromArray(createElement, dataSource, isSingleLevel, options, componentInstance);\n        }\n        else {\n            return createListFromJson(createElement, dataSource, options, ariaAttributes.level, isSingleLevel, componentInstance);\n        }\n    }\n    ListBase.createList = createList;\n    /**\n     * Function helps to created an element list based on string array input .\n     *\n     * @param  {createElementParams} createElement - Specifies an array of JSON data.\n     *\n     * @param  {{Object}[]} dataSource - Specifies an array of JSON data.\n     *\n     * @param  {ListBaseOptions} options? - Specifies the list options that need to provide.\n     *\n     * @param  {boolean} isSingleLevel? - Specifies the list options that need to provide.\n     *\n     * @param  {any} componentInstance? - Specifies the list options that need to provide.\n     *\n     * @returns  {createElement} generateUL - returns the list options that need to provide.\n     */\n    function createListFromArray(createElement, dataSource, \n    // tslint:disable-next-line\n    // eslint-disable-next-line\n    isSingleLevel, options, componentInstance) {\n        const subChild = createListItemFromArray(createElement, dataSource, isSingleLevel, options, componentInstance);\n        return generateUL(createElement, subChild, null, options);\n    }\n    ListBase.createListFromArray = createListFromArray;\n    /**\n     * Function helps to created an element list based on string array input .\n     *\n     * @param  {createElementParams} createElement - Specifies an array of JSON data.\n     *\n     * @param  {{Object}[]} dataSource - Specifies an array of JSON data.\n     *\n     * @param  {ListBaseOptions} options? - Specifies the list options that need to provide.\n     *\n     * @param  {boolean} isSingleLevel? - Specifies the list options that need to provide.\n     *\n     * @param  {any} componentInstance? - Specifies the list options that need to provide.\n     *\n     * @returns  {HTMLElement[]} subChild - returns the list options that need to provide.\n     */\n    function createListItemFromArray(createElement, dataSource, \n    // eslint-disable-next-line\n    isSingleLevel, options, componentInstance) {\n        const subChild = [];\n        const curOpt = extend({}, defaultListBaseOptions, options);\n        cssClass = getModuleClass(curOpt.moduleName);\n        const id = generateId(); // generate id for drop-down-list option.\n        for (let i = 0; i < dataSource.length; i++) {\n            if (isNullOrUndefined(dataSource[i])) {\n                continue;\n            }\n            let li;\n            if (curOpt.itemCreating && typeof curOpt.itemCreating === 'function') {\n                const curData = {\n                    dataSource: dataSource,\n                    curData: dataSource[i],\n                    text: dataSource[i],\n                    options: curOpt\n                };\n                curOpt.itemCreating(curData);\n            }\n            if (isSingleLevel) {\n                li = generateSingleLevelLI(createElement, dataSource[i], undefined, null, null, [], null, id, i, options);\n            }\n            else {\n                li = generateLI(createElement, dataSource[i], undefined, null, null, options, componentInstance);\n            }\n            if (curOpt.itemCreated && typeof curOpt.itemCreated === 'function') {\n                const curData = {\n                    dataSource: dataSource,\n                    curData: dataSource[i],\n                    text: dataSource[i],\n                    item: li,\n                    options: curOpt\n                };\n                curOpt.itemCreated(curData);\n            }\n            subChild.push(li);\n        }\n        return subChild;\n    }\n    ListBase.createListItemFromArray = createListItemFromArray;\n    /**\n     * Function helps to created an element list based on array of JSON input .\n     *\n     * @param  {createElementParams} createElement - Specifies an array of JSON data.\n     *\n     * @param  {{Object}[]} dataSource - Specifies an array of JSON data.\n     *\n     * @param  {ListBaseOptions} options? - Specifies the list options that need to provide.\n     *\n     * @param  {boolean} isSingleLevel? - Specifies the list options that need to provide.\n     *\n     * @param  {number} level? - Specifies the list options that need to provide.\n     *\n     * @param  {any} componentInstance? - Specifies the list options that need to provide.\n     *\n     * @returns  {HTMLElement[]} child - returns the list options that need to provide.\n     */\n    function createListItemFromJson(createElement, dataSource, \n    // eslint-disable-next-line\n    options, level, isSingleLevel, componentInstance) {\n        const curOpt = extend({}, defaultListBaseOptions, options);\n        cssClass = getModuleClass(curOpt.moduleName);\n        const fields = (componentInstance &&\n            (componentInstance.getModuleName() === 'listview' || componentInstance.getModuleName() === 'multiselect'))\n            ? curOpt.fields : extend({}, ListBase.defaultMappedFields, curOpt.fields);\n        const ariaAttributes = extend({}, defaultAriaAttributes, curOpt.ariaAttributes);\n        let id;\n        let checkboxElement = [];\n        if (level) {\n            ariaAttributes.level = level;\n        }\n        const child = [];\n        let li;\n        let anchorElement;\n        if (dataSource && dataSource.length && !isNullOrUndefined(typeofData(dataSource).item) &&\n            // eslint-disable-next-line no-prototype-builtins\n            !typeofData(dataSource).item.hasOwnProperty(fields.id)) {\n            id = generateId(); // generate id for drop-down-list option.\n        }\n        for (let i = 0; i < dataSource.length; i++) {\n            let fieldData = getFieldValues(dataSource[i], fields);\n            if (isNullOrUndefined(dataSource[i])) {\n                continue;\n            }\n            if (curOpt.itemCreating && typeof curOpt.itemCreating === 'function') {\n                const curData = {\n                    dataSource: dataSource,\n                    curData: dataSource[i],\n                    text: fieldData[fields.text],\n                    options: curOpt,\n                    fields: fields\n                };\n                curOpt.itemCreating(curData);\n            }\n            const curItem = dataSource[i];\n            if (curOpt.itemCreating && typeof curOpt.itemCreating === 'function') {\n                fieldData = getFieldValues(dataSource[i], fields);\n            }\n            // eslint-disable-next-line no-prototype-builtins\n            if (fieldData.hasOwnProperty(fields.id) && !isNullOrUndefined(fieldData[fields.id])) {\n                id = fieldData[fields.id];\n            }\n            const innerEle = [];\n            if (curOpt.showCheckBox) {\n                if (curOpt.itemNavigable && (fieldData[fields.url] || fieldData[fields.urlAttributes])) {\n                    checkboxElement.push(createElement('input', { className: cssClass.check, attrs: { type: 'checkbox' } }));\n                }\n                else {\n                    innerEle.push(createElement('input', { className: cssClass.check, attrs: { type: 'checkbox' } }));\n                }\n            }\n            if (isSingleLevel === true) {\n                // eslint-disable-next-line no-prototype-builtins\n                if (curOpt.showIcon && fieldData.hasOwnProperty(fields.iconCss) && !isNullOrUndefined(fieldData[fields.iconCss])) {\n                    innerEle.push(createElement('span', { className: cssClass.icon + ' ' + fieldData[fields.iconCss] }));\n                }\n                li = generateSingleLevelLI(createElement, curItem, fieldData, fields, curOpt.itemClass, innerEle, \n                // eslint-disable-next-line no-prototype-builtins\n                (curItem.hasOwnProperty('isHeader') &&\n                    curItem.isHeader) ? true : false, id, i, options);\n                anchorElement = li.querySelector('.' + cssClass.anchorWrap);\n                if (curOpt.itemNavigable && checkboxElement.length) {\n                    prepend(checkboxElement, li.firstElementChild);\n                }\n            }\n            else {\n                li = generateLI(createElement, curItem, fieldData, fields, curOpt.itemClass, options, componentInstance);\n                li.classList.add(cssClass.level + '-' + ariaAttributes.level);\n                li.setAttribute('aria-level', ariaAttributes.level.toString());\n                anchorElement = li.querySelector('.' + cssClass.anchorWrap);\n                // eslint-disable-next-line no-prototype-builtins\n                if (fieldData.hasOwnProperty(fields.tooltip)) {\n                    li.setAttribute('title', fieldData[fields.tooltip]);\n                }\n                // eslint-disable-next-line no-prototype-builtins\n                if (fieldData.hasOwnProperty(fields.htmlAttributes) && fieldData[fields.htmlAttributes]) {\n                    setAttribute(li, fieldData[fields.htmlAttributes]);\n                }\n                // eslint-disable-next-line no-prototype-builtins\n                if (fieldData.hasOwnProperty(fields.enabled) && fieldData[fields.enabled] === false) {\n                    li.classList.add(cssClass.disabled);\n                }\n                // eslint-disable-next-line no-prototype-builtins\n                if (fieldData.hasOwnProperty(fields.isVisible) && fieldData[fields.isVisible] === false) {\n                    li.style.display = 'none';\n                }\n                // eslint-disable-next-line no-prototype-builtins\n                if (fieldData.hasOwnProperty(fields.imageUrl) && !isNullOrUndefined(fieldData[fields.imageUrl])\n                    && !curOpt.template) {\n                    const attr = { src: fieldData[fields.imageUrl] };\n                    merge(attr, fieldData[fields.imageAttributes]);\n                    const imageElemnt = createElement('img', { className: cssClass.image, attrs: attr });\n                    if (anchorElement) {\n                        anchorElement.insertAdjacentElement('afterbegin', imageElemnt);\n                    }\n                    else {\n                        prepend([imageElemnt], li.firstElementChild);\n                    }\n                }\n                // eslint-disable-next-line no-prototype-builtins\n                if (curOpt.showIcon && fieldData.hasOwnProperty(fields.iconCss) &&\n                    !isNullOrUndefined(fieldData[fields.iconCss]) && !curOpt.template) {\n                    const iconElement = createElement('div', { className: cssClass.icon + ' ' + fieldData[fields.iconCss] });\n                    if (anchorElement) {\n                        anchorElement.insertAdjacentElement('afterbegin', iconElement);\n                    }\n                    else {\n                        prepend([iconElement], li.firstElementChild);\n                    }\n                }\n                if (innerEle.length) {\n                    prepend(innerEle, li.firstElementChild);\n                }\n                if (curOpt.itemNavigable && checkboxElement.length) {\n                    prepend(checkboxElement, li.firstElementChild);\n                }\n                processSubChild(createElement, fieldData, fields, dataSource, curOpt, li, ariaAttributes.level);\n            }\n            if (anchorElement) {\n                addClass([li], [cssClass.navigable]);\n            }\n            if (curOpt.itemCreated && typeof curOpt.itemCreated === 'function') {\n                const curData = {\n                    dataSource: dataSource,\n                    curData: dataSource[i],\n                    text: fieldData[fields.text],\n                    item: li,\n                    options: curOpt,\n                    fields: fields\n                };\n                curOpt.itemCreated(curData);\n            }\n            checkboxElement = [];\n            child.push(li);\n        }\n        return child;\n    }\n    ListBase.createListItemFromJson = createListItemFromJson;\n    /**\n     * Function helps to created an element list based on array of JSON input .\n     *\n     * @param  {createElementParams} createElement - Specifies an array of JSON data.\n     *\n     * @param  {{Object}[]} dataSource - Specifies an array of JSON data.\n     *\n     * @param  {ListBaseOptions} options? - Specifies the list options that need to provide.\n     *\n     * @param  {number} level? - Specifies the list options that need to provide.\n     *\n     * @param  {boolean} isSingleLevel? - Specifies the list options that need to provide.\n     *\n     * @param  {any} componentInstance? - Specifies the list options that need to provide.\n     *\n     * @returns  {createElement} generateUL - Specifies the list options that need to provide.\n     */\n    function createListFromJson(createElement, dataSource, \n    // eslint-disable-next-line\n    options, level, isSingleLevel, componentInstance) {\n        const curOpt = extend({}, defaultListBaseOptions, options);\n        const li = createListItemFromJson(createElement, dataSource, options, level, isSingleLevel, componentInstance);\n        return generateUL(createElement, li, curOpt.listClass, options);\n    }\n    ListBase.createListFromJson = createListFromJson;\n    /**\n     * Return the next or previous visible element.\n     *\n     * @param  {Element[]|NodeList} elementArray - An element array to find next or previous element.\n     * @param  {Element} li - An element to find next or previous after this element.\n     * @param  {boolean} isPrevious? - Specify when the need get previous element from array.\n     */\n    function getSiblingLI(elementArray, element, isPrevious) {\n        cssClass = getModuleClass(defaultListBaseOptions.moduleName);\n        if (!elementArray || !elementArray.length) {\n            return void 0;\n        }\n        let siblingLI;\n        let liIndex;\n        const liCollections = Array.prototype.slice.call(elementArray);\n        if (element) {\n            liIndex = indexOf(element, liCollections);\n        }\n        else {\n            liIndex = (isPrevious === true ? liCollections.length : -1);\n        }\n        siblingLI = liCollections[liIndex + (isPrevious === true ? -1 : 1)];\n        while (siblingLI && (!isVisible(siblingLI) || siblingLI.classList.contains(cssClass.disabled))) {\n            liIndex = liIndex + (isPrevious === true ? -1 : 1);\n            siblingLI = liCollections[liIndex];\n        }\n        return siblingLI;\n    }\n    ListBase.getSiblingLI = getSiblingLI;\n    /**\n     * Return the index of the li element\n     *\n     * @param  {Element} item - An element to find next or previous after this element.\n     * @param  {Element[]} elementArray - An element array to find index of given li.\n     */\n    function indexOf(item, elementArray) {\n        if (!elementArray || !item) {\n            return void 0;\n        }\n        else {\n            let liCollections = elementArray;\n            liCollections = Array.prototype.slice.call(elementArray);\n            return liCollections.indexOf(item);\n        }\n    }\n    ListBase.indexOf = indexOf;\n    /**\n     * Returns the grouped data from given dataSource.\n     *\n     * @param  {{Object}[]} dataSource - The JSON data which is necessary to process.\n     * @param  {FieldsMapping} fields - Fields that are mapped from the data source.\n     * @param  {SortOrder} sortOrder- Specifies final result sort order.\n     */\n    function groupDataSource(dataSource, fields, sortOrder = 'None') {\n        const curFields = extend({}, ListBase.defaultMappedFields, fields);\n        let cusQuery = new Query().group(curFields.groupBy);\n        // need to remove once sorting issues fixed in DataManager\n        cusQuery = addSorting(sortOrder, 'key', cusQuery);\n        const ds = getDataSource(dataSource, cusQuery);\n        dataSource = [];\n        for (let j = 0; j < ds.length; j++) {\n            const itemObj = ds[j].items;\n            const grpItem = {};\n            const hdr = 'isHeader';\n            grpItem[curFields.text] = ds[j].key;\n            grpItem[hdr] = true;\n            let newtext = curFields.text;\n            if (newtext === 'id') {\n                newtext = 'text';\n                grpItem[newtext] = ds[j].key;\n            }\n            grpItem._id = 'group-list-item-' + (ds[j].key ?\n                ds[j].key.toString().trim() : 'undefined');\n            grpItem.items = itemObj;\n            dataSource.push(grpItem);\n            for (let k = 0; k < itemObj.length; k++) {\n                dataSource.push(itemObj[k]);\n            }\n        }\n        return dataSource;\n    }\n    ListBase.groupDataSource = groupDataSource;\n    /**\n     * Returns a sorted query object.\n     *\n     * @param  {SortOrder} sortOrder - Specifies that sort order.\n     * @param  {string} sortBy - Specifies sortBy fields.\n     * @param  {Query} query - Pass if any existing query.\n     */\n    function addSorting(sortOrder, sortBy, query = new Query()) {\n        if (sortOrder === 'Ascending') {\n            query.sortBy(sortBy, 'ascending', true);\n        }\n        else if (sortOrder === 'Descending') {\n            query.sortBy(sortBy, 'descending', true);\n        }\n        else {\n            for (let i = 0; i < query.queries.length; i++) {\n                if (query.queries[i].fn === 'onSortBy') {\n                    query.queries.splice(i, 1);\n                }\n            }\n        }\n        return query;\n    }\n    ListBase.addSorting = addSorting;\n    /**\n     * Return an array of JSON Data that processed based on queries.\n     *\n     * @param  {{Object}[]} dataSource - Specifies local JSON data source.\n     *\n     * @param  {Query} query - Specifies query that need to process.\n     */\n    function getDataSource(dataSource, query) {\n        // eslint-disable-next-line\n        return new DataManager(dataSource)\n            .executeLocal(query);\n    }\n    ListBase.getDataSource = getDataSource;\n    /**\n     * Created JSON data based the UL and LI element\n     *\n     * @param  {HTMLElement|Element} element - UL element that need to convert as a JSON\n     * @param  {ListBaseOptions} options? - Specifies listbase option for fields.\n     */\n    function createJsonFromElement(element, options) {\n        const curOpt = extend({}, defaultListBaseOptions, options);\n        const fields = extend({}, ListBase.defaultMappedFields, curOpt.fields);\n        const curEle = element.cloneNode(true);\n        // eslint-disable-next-line\n        const jsonAr = [];\n        curEle.classList.add('json-parent');\n        const childs = curEle.querySelectorAll('.json-parent>li');\n        curEle.classList.remove('json-parent');\n        for (let i = 0; i < childs.length; i++) {\n            const li = childs[i];\n            const anchor = li.querySelector('a');\n            const ul = li.querySelector('ul');\n            // eslint-disable-next-line\n            const json = {};\n            const childNodes = anchor ? anchor.childNodes : li.childNodes;\n            const keys = Object.keys(childNodes);\n            for (let i = 0; i < childNodes.length; i++) {\n                if (!(childNodes[Number(keys[i])]).hasChildNodes()) {\n                    json[fields.text] = childNodes[Number(keys[i])].textContent;\n                }\n            }\n            let attributes$$1 = getAllAttributes(li);\n            if (attributes$$1.id) {\n                json[fields.id] = attributes$$1.id;\n                delete attributes$$1.id;\n            }\n            else {\n                json[fields.id] = generateId();\n            }\n            if (Object.keys(attributes$$1).length) {\n                json[fields.htmlAttributes] = attributes$$1;\n            }\n            if (anchor) {\n                attributes$$1 = getAllAttributes(anchor);\n                if (Object.keys(attributes$$1).length) {\n                    json[fields.urlAttributes] = attributes$$1;\n                }\n            }\n            if (ul) {\n                json[fields.child] = createJsonFromElement(ul, options);\n            }\n            jsonAr.push(json);\n        }\n        return jsonAr;\n    }\n    ListBase.createJsonFromElement = createJsonFromElement;\n    function typeofData(data) {\n        let match = { typeof: null, item: null };\n        for (let i = 0; i < data.length; i++) {\n            if (!isNullOrUndefined(data[i])) {\n                return match = { typeof: typeof data[i], item: data[i] };\n            }\n        }\n        return match;\n    }\n    function setAttribute(element, elementAttributes) {\n        const attr = {};\n        merge(attr, elementAttributes);\n        if (attr.class) {\n            addClass([element], attr.class.split(' '));\n            delete attr.class;\n        }\n        attributes(element, attr);\n    }\n    function getAllAttributes(element) {\n        const attributes$$1 = {};\n        const attr = element.attributes;\n        for (let index = 0; index < attr.length; index++) {\n            attributes$$1[attr[index].nodeName] = attr[index].nodeValue;\n        }\n        return attributes$$1;\n    }\n    /**\n     * Created UL element from content template.\n     *\n     * @param  {string} template - that need to convert and generate li element.\n     * @param  {{Object}[]} dataSource - Specifies local JSON data source.\n     * @param  {ListBaseOptions} options? - Specifies listbase option for fields.\n     */\n    function renderContentTemplate(createElement, template, dataSource, \n    // eslint-disable-next-line\n    fields, options, componentInstance) {\n        cssClass = getModuleClass(defaultListBaseOptions.moduleName);\n        const ulElement = createElement('ul', { className: cssClass.ul, attrs: { role: 'presentation' } });\n        const curOpt = extend({}, defaultListBaseOptions, options);\n        const curFields = extend({}, ListBase.defaultMappedFields, fields);\n        // eslint-disable-next-line\n        const compiledString = compileTemplate(template);\n        const liCollection = [];\n        let value;\n        const id = generateId(); // generate id for drop-down-list option.\n        for (let i = 0; i < dataSource.length; i++) {\n            let fieldData = getFieldValues(dataSource[i], curFields);\n            const curItem = dataSource[i];\n            const isHeader = curItem.isHeader;\n            if (typeof dataSource[i] === 'string' || typeof dataSource[i] === 'number') {\n                value = curItem;\n            }\n            else {\n                value = fieldData[curFields.value];\n            }\n            if (curOpt.itemCreating && typeof curOpt.itemCreating === 'function') {\n                const curData = {\n                    dataSource: dataSource,\n                    curData: curItem,\n                    text: value,\n                    options: curOpt,\n                    fields: curFields\n                };\n                curOpt.itemCreating(curData);\n            }\n            if (curOpt.itemCreating && typeof curOpt.itemCreating === 'function') {\n                fieldData = getFieldValues(dataSource[i], curFields);\n                if (typeof dataSource[i] === 'string' || typeof dataSource[i] === 'number') {\n                    value = curItem;\n                }\n                else {\n                    value = fieldData[curFields.value];\n                }\n            }\n            const li = createElement('li', {\n                id: id + '-' + i,\n                className: isHeader ? cssClass.group : cssClass.li, attrs: { role: 'presentation' }\n            });\n            if (isHeader) {\n                if (typeof dataSource[i] === 'string' || typeof dataSource[i] === 'number') {\n                    li.innerText = curItem;\n                }\n                else {\n                    li.innerText = fieldData[curFields.text];\n                }\n            }\n            else {\n                const currentID = isHeader ? curOpt.groupTemplateID : curOpt.templateID;\n                if (isHeader) {\n                    if (componentInstance && componentInstance.getModuleName() != 'listview') {\n                        // eslint-disable-next-line\n                        const compiledElement = compiledString(curItem, componentInstance, 'headerTemplate', currentID, !!curOpt.isStringTemplate, null, li);\n                        if (compiledElement) {\n                            append(compiledElement, li);\n                        }\n                    }\n                    else {\n                        append(compiledString(curItem, componentInstance, 'headerTemplate', currentID, !!curOpt.isStringTemplate), li);\n                    }\n                }\n                else {\n                    if (componentInstance && componentInstance.getModuleName() !== 'listview') {\n                        // eslint-disable-next-line\n                        const compiledElement = compiledString(curItem, componentInstance, 'template', currentID, !!curOpt.isStringTemplate, null, li);\n                        if (compiledElement) {\n                            append(compiledElement, li);\n                        }\n                    }\n                    else {\n                        append(compiledString(curItem, componentInstance, 'template', currentID, !!curOpt.isStringTemplate), li);\n                    }\n                }\n                li.setAttribute('data-value', isNullOrUndefined(value) ? 'null' : value);\n                li.setAttribute('role', 'option');\n            }\n            if (curOpt.itemCreated && typeof curOpt.itemCreated === 'function') {\n                const curData = {\n                    dataSource: dataSource,\n                    curData: curItem,\n                    text: value,\n                    item: li,\n                    options: curOpt,\n                    fields: curFields\n                };\n                curOpt.itemCreated(curData);\n            }\n            liCollection.push(li);\n        }\n        append(liCollection, ulElement);\n        return ulElement;\n    }\n    ListBase.renderContentTemplate = renderContentTemplate;\n    /**\n     * Created header items from group template.\n     *\n     * @param  {string} template - that need to convert and generate li element.\n     *\n     * @param  {{Object}[]} dataSource - Specifies local JSON data source.\n     *\n     * @param  {FieldsMapping} fields - Specifies fields for mapping the dataSource.\n     *\n     * @param  {Element[]} headerItems? - Specifies listbase header items.\n     */\n    // tslint:disable-next-line\n    function renderGroupTemplate(groupTemplate, groupDataSource, fields, \n    // eslint-disable-next-line\n    headerItems, options, componentInstance) {\n        // eslint-disable-next-line @typescript-eslint/ban-types\n        const compiledString = compileTemplate(groupTemplate);\n        const curFields = extend({}, ListBase.defaultMappedFields, fields);\n        const curOpt = extend({}, defaultListBaseOptions, options);\n        const category = curFields.groupBy;\n        for (const header of headerItems) {\n            const headerData = {};\n            headerData[category] = header.textContent;\n            header.innerHTML = '';\n            if (componentInstance && componentInstance.getModuleName() !== \"listview\") {\n                // eslint-disable-next-line\n                const compiledElement = compiledString(headerData, componentInstance, 'groupTemplate', curOpt.groupTemplateID, !!curOpt.isStringTemplate, null, header);\n                if (compiledElement) {\n                    append(compiledElement, header);\n                }\n            }\n            else {\n                append(compiledString(headerData, componentInstance, 'groupTemplate', curOpt.groupTemplateID, !!curOpt.isStringTemplate), header);\n            }\n        }\n        return headerItems;\n    }\n    ListBase.renderGroupTemplate = renderGroupTemplate;\n    function generateId() {\n        return Math.floor((1 + Math.random()) * 0x10000)\n            .toString(16)\n            .substring(1);\n    }\n    ListBase.generateId = generateId;\n    function processSubChild(createElement, fieldData, fields, ds, options, element, level) {\n        // Get SubList\n        const subDS = fieldData[fields.child] || [];\n        let hasChildren = fieldData[fields.hasChildren];\n        //Create Sub child\n        if (subDS.length) {\n            hasChildren = true;\n            element.classList.add(cssClass.hasChild);\n            if (options.processSubChild) {\n                const subLi = createListFromJson(createElement, subDS, options, ++level);\n                element.appendChild(subLi);\n            }\n        }\n        // Create expand and collapse node\n        if (!!options.expandCollapse && hasChildren && !options.template) {\n            element.firstElementChild.classList.add(cssClass.iconWrapper);\n            // eslint-disable-next-line @typescript-eslint/ban-types\n            const expandElement = options.expandIconPosition === 'Left' ? prepend : append;\n            expandElement([createElement('div', { className: 'e-icons ' + options.expandIconClass })], element.querySelector('.' + cssClass.textContent));\n        }\n    }\n    function generateSingleLevelLI(createElement, item, fieldData, fields, className, innerElements, grpLI, id, index, options) {\n        const curOpt = extend({}, defaultListBaseOptions, options);\n        const ariaAttributes = extend({}, defaultAriaAttributes, curOpt.ariaAttributes);\n        let text = item;\n        let value = item;\n        let dataSource;\n        if (typeof item !== 'string' && typeof item !== 'number' && typeof item !== 'boolean') {\n            dataSource = item;\n            text = (typeof fieldData[fields.text] === 'boolean' || typeof fieldData[fields.text] === 'number') ?\n                fieldData[fields.text] : (fieldData[fields.text] || '');\n            value = fieldData[fields.value];\n        }\n        let elementID;\n        if (!isNullOrUndefined(dataSource) && !isNullOrUndefined(fieldData[fields.id])\n            && fieldData[fields.id] !== '') {\n            elementID = id;\n        }\n        else {\n            elementID = id + '-' + index;\n        }\n        const li = createElement('li', {\n            className: (grpLI === true ? cssClass.group : cssClass.li) + ' ' + (isNullOrUndefined(className) ? '' : className),\n            id: elementID, attrs: (ariaAttributes.groupItemRole !== '' && ariaAttributes.itemRole !== '' ?\n                { role: (grpLI === true ? ariaAttributes.groupItemRole : ariaAttributes.itemRole) } : {})\n        });\n        // eslint-disable-next-line no-prototype-builtins\n        if (dataSource && fieldData.hasOwnProperty(fields.enabled) && fieldData[fields.enabled].toString() === 'false') {\n            li.classList.add(cssClass.disabled);\n        }\n        if (grpLI) {\n            li.innerText = text;\n        }\n        else {\n            li.setAttribute('data-value', isNullOrUndefined(value) ? 'null' : value);\n            li.setAttribute('role', 'option');\n            // eslint-disable-next-line no-prototype-builtins\n            if (dataSource && fieldData.hasOwnProperty(fields.htmlAttributes) && fieldData[fields.htmlAttributes]) {\n                setAttribute(li, fieldData[fields.htmlAttributes]);\n            }\n            if (innerElements.length && !curOpt.itemNavigable) {\n                append(innerElements, li);\n            }\n            if (dataSource && (fieldData[fields.url] || (fieldData[fields.urlAttributes] &&\n                fieldData[fields.urlAttributes].href))) {\n                li.appendChild(anchorTag(createElement, dataSource, fields, text, innerElements, curOpt.itemNavigable));\n            }\n            else {\n                if (innerElements.length && curOpt.itemNavigable) {\n                    append(innerElements, li);\n                }\n                li.appendChild(document.createTextNode(text));\n            }\n        }\n        return li;\n    }\n    function getModuleClass(moduleName) {\n        let moduleClass;\n        // eslint-disable-next-line\n        return moduleClass = {\n            li: `e-${moduleName}-item`,\n            ul: `e-${moduleName}-parent e-ul`,\n            group: `e-${moduleName}-group-item`,\n            icon: `e-${moduleName}-icon`,\n            text: `e-${moduleName}-text`,\n            check: `e-${moduleName}-check`,\n            checked: 'e-checked',\n            selected: 'e-selected',\n            expanded: 'e-expanded',\n            textContent: 'e-text-content',\n            hasChild: 'e-has-child',\n            level: 'e-level',\n            url: `e-${moduleName}-url`,\n            collapsible: 'e-icon-collapsible',\n            disabled: 'e-disabled',\n            image: `e-${moduleName}-img`,\n            iconWrapper: 'e-icon-wrapper',\n            anchorWrap: 'e-anchor-wrap',\n            navigable: 'e-navigable'\n        };\n    }\n    function anchorTag(createElement, dataSource, fields, text, innerElements, isFullNavigation) {\n        const fieldData = getFieldValues(dataSource, fields);\n        const attr = { href: fieldData[fields.url] };\n        // eslint-disable-next-line no-prototype-builtins\n        if (fieldData.hasOwnProperty(fields.urlAttributes) && fieldData[fields.urlAttributes]) {\n            merge(attr, fieldData[fields.urlAttributes]);\n            attr.href = fieldData[fields.url] ? fieldData[fields.url] :\n                fieldData[fields.urlAttributes].href;\n        }\n        let anchorTag;\n        if (!isFullNavigation) {\n            anchorTag = createElement('a', { className: cssClass.text + ' ' + cssClass.url, innerHTML: text });\n        }\n        else {\n            anchorTag = createElement('a', { className: cssClass.text + ' ' + cssClass.url });\n            const anchorWrapper = createElement('div', { className: cssClass.anchorWrap });\n            if (innerElements && innerElements.length) {\n                append(innerElements, anchorWrapper);\n            }\n            anchorWrapper.appendChild(document.createTextNode(text));\n            append([anchorWrapper], anchorTag);\n        }\n        setAttribute(anchorTag, attr);\n        return anchorTag;\n    }\n    // tslint:disable-next-line\n    /* tslint:disable:align */\n    function generateLI(createElement, item, fieldData, \n    // eslint-disable-next-line\n    fields, className, options, componentInstance) {\n        const curOpt = extend({}, defaultListBaseOptions, options);\n        const ariaAttributes = extend({}, defaultAriaAttributes, curOpt.ariaAttributes);\n        let text = item;\n        let uID;\n        let grpLI;\n        let dataSource;\n        if (typeof item !== 'string' && typeof item !== 'number') {\n            dataSource = item;\n            text = fieldData[fields.text] || '';\n            // tslint:disable-next-line\n            uID = (isNullOrUndefined(fieldData['_id'])) ? fieldData[fields.id] : fieldData['_id'];\n            // eslint-disable-next-line no-prototype-builtins\n            grpLI = (item.hasOwnProperty('isHeader') && item.isHeader)\n                ? true : false;\n        }\n        if (options && options.enableHtmlSanitizer) {\n            // eslint-disable-next-line no-self-assign\n            text = text;\n        }\n        const li = createElement('li', {\n            className: (grpLI === true ? cssClass.group : cssClass.li) + ' ' + (isNullOrUndefined(className) ? '' : className),\n            attrs: (ariaAttributes.groupItemRole !== '' && ariaAttributes.itemRole !== '' ?\n                { role: (grpLI === true ? ariaAttributes.groupItemRole : ariaAttributes.itemRole) } : {})\n        });\n        if (!isNullOrUndefined(uID) === true) {\n            li.setAttribute('data-uid', uID);\n        }\n        else {\n            li.setAttribute('data-uid', generateId());\n        }\n        if (grpLI && options && options.groupTemplate) {\n            // eslint-disable-next-line @typescript-eslint/ban-types\n            const compiledString = compileTemplate(options.groupTemplate);\n            if (componentInstance && componentInstance.getModuleName() !== \"listview\") {\n                // eslint-disable-next-line\n                const compiledElement = compiledString(item, componentInstance, 'groupTemplate', curOpt.groupTemplateID, !!curOpt.isStringTemplate, null, li);\n                if (compiledElement) {\n                    append(compiledElement, li);\n                }\n            }\n            else {\n                append(compiledString(item, componentInstance, 'groupTemplate', curOpt.groupTemplateID, !!curOpt.isStringTemplate), li);\n            }\n        }\n        else if (!grpLI && options && options.template) {\n            // eslint-disable-next-line @typescript-eslint/ban-types\n            const compiledString = compileTemplate(options.template);\n            if (componentInstance && componentInstance.getModuleName() !== 'listview') {\n                // eslint-disable-next-line\n                const compiledElement = compiledString(item, componentInstance, 'template', curOpt.templateID, !!curOpt.isStringTemplate, null, li);\n                if (compiledElement) {\n                    append(compiledElement, li);\n                }\n            }\n            else {\n                append(compiledString(item, componentInstance, 'template', curOpt.templateID, !!curOpt.isStringTemplate), li);\n            }\n        }\n        else {\n            const innerDiv = createElement('div', {\n                className: cssClass.textContent,\n                attrs: (ariaAttributes.wrapperRole !== '' ? { role: ariaAttributes.wrapperRole } : {})\n            });\n            if (dataSource && (fieldData[fields.url] || (fieldData[fields.urlAttributes] &&\n                fieldData[fields.urlAttributes].href))) {\n                innerDiv.appendChild(anchorTag(createElement, dataSource, fields, text, null, curOpt.itemNavigable));\n            }\n            else {\n                const element = createElement('span', {\n                    className: cssClass.text,\n                    attrs: (ariaAttributes.itemText !== '' ? { role: ariaAttributes.itemText } : {})\n                });\n                if (options && options.enableHtmlSanitizer) {\n                    element.innerText = text;\n                }\n                else {\n                    element.innerHTML = text;\n                }\n                innerDiv.appendChild(element);\n            }\n            li.appendChild(innerDiv);\n        }\n        return li;\n    }\n    /**\n     * Returns UL element based on the given LI element.\n     *\n     * @param  {HTMLElement[]} liElement - Specifies array of LI element.\n     *\n     * @param  {string} className? - Specifies class name that need to be added in UL element.\n     *\n     * @param  {ListBaseOptions} options? - Specifies ListBase options.\n     */\n    function generateUL(createElement, liElement, className, options) {\n        const curOpt = extend({}, defaultListBaseOptions, options);\n        const ariaAttributes = extend({}, defaultAriaAttributes, curOpt.ariaAttributes);\n        cssClass = getModuleClass(curOpt.moduleName);\n        const ulElement = createElement('ul', {\n            className: cssClass.ul + ' ' + (isNullOrUndefined(className) ? '' : className),\n            attrs: (ariaAttributes.listRole !== '' ? { role: ariaAttributes.listRole } : {})\n        });\n        append(liElement, ulElement);\n        return ulElement;\n    }\n    ListBase.generateUL = generateUL;\n    /**\n     * Returns LI element with additional DIV tag based on the given LI element.\n     *\n     * @param  {liElement} liElement - Specifies LI element.\n     *\n     * @param  {string} className? - Specifies class name that need to be added in created DIV element.\n     *\n     * @param  {ListBaseOptions} options? - Specifies ListBase options.\n     */\n    function generateIcon(createElement, liElement, className, options) {\n        const curOpt = extend({}, defaultListBaseOptions, options);\n        cssClass = getModuleClass(curOpt.moduleName);\n        // eslint-disable-next-line @typescript-eslint/ban-types\n        const expandElement = curOpt.expandIconPosition === 'Left' ? prepend : append;\n        expandElement([createElement('div', {\n                className: 'e-icons ' + curOpt.expandIconClass + ' ' +\n                    (isNullOrUndefined(className) ? '' : className)\n            })], liElement.querySelector('.' + cssClass.textContent));\n        return liElement;\n    }\n    ListBase.generateIcon = generateIcon;\n})(ListBase || (ListBase = {}));\n/**\n * Used to get dataSource item from complex data using fields.\n *\n * @param {Object} dataSource - Specifies an  JSON or String data.\n *\n * @param {FieldsMapping} fields - Fields that are mapped from the dataSource.\n */\nfunction getFieldValues(dataItem, fields) {\n    const fieldData = {};\n    if (isNullOrUndefined(dataItem) || typeof (dataItem) === 'string' || typeof (dataItem) === 'number'\n        || !isNullOrUndefined(dataItem.isHeader)) {\n        return dataItem;\n    }\n    else {\n        for (const field of Object.keys(fields)) {\n            const dataField = fields[field];\n            const value = !isNullOrUndefined(dataField) &&\n                typeof (dataField) === 'string' ? getValue(dataField, dataItem) : undefined;\n            if (!isNullOrUndefined(value)) {\n                fieldData[dataField] = value;\n            }\n        }\n    }\n    return fieldData;\n}\nfunction compileTemplate(template) {\n    if (template) {\n        try {\n            if (document.querySelector(template)) {\n                return compile(document.querySelector(template).innerHTML.trim());\n            }\n            else {\n                return compile(template);\n            }\n        }\n        catch (e) {\n            return compile(template);\n        }\n    }\n    return undefined;\n}\n\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n// Effect Configuration Effect[] =  [fromViewBackward,fromViewForward,toViewBackward,toviewForward];\nconst effectsConfig = {\n    'None': [],\n    'SlideLeft': ['SlideRightOut', 'SlideLeftOut', 'SlideLeftIn', 'SlideRightIn'],\n    'SlideDown': ['SlideTopOut', 'SlideBottomOut', 'SlideBottomIn', 'SlideTopIn'],\n    'Zoom': ['FadeOut', 'FadeZoomOut', 'FadeZoomIn', 'FadeIn'],\n    'Fade': ['FadeOut', 'FadeOut', 'FadeIn', 'FadeIn']\n};\nconst effectsRTLConfig = {\n    'None': [],\n    'SlideLeft': ['SlideLeftOut', 'SlideRightOut', 'SlideRightIn', 'SlideLeftIn'],\n    'SlideDown': ['SlideBottomOut', 'SlideTopOut', 'SlideTopIn', 'SlideBottomIn'],\n    'Zoom': ['FadeZoomOut', 'FadeOut', 'FadeIn', 'FadeZoomIn'],\n    'Fade': ['FadeOut', 'FadeOut', 'FadeIn', 'FadeIn']\n};\n// don't use space in classnames.\nconst classNames = {\n    root: 'e-listview',\n    hover: 'e-hover',\n    selected: 'e-active',\n    focused: 'e-focused',\n    parentItem: 'e-list-parent',\n    listItem: 'e-list-item',\n    listIcon: 'e-list-icon',\n    textContent: 'e-text-content',\n    listItemText: 'e-list-text',\n    groupListItem: 'e-list-group-item',\n    hasChild: 'e-has-child',\n    view: 'e-view',\n    header: 'e-list-header',\n    headerText: 'e-headertext',\n    headerTemplateText: 'e-headertemplate-text',\n    text: 'e-text',\n    disable: 'e-disabled',\n    content: 'e-content',\n    icon: 'e-icons',\n    backIcon: 'e-icon-back',\n    backButton: 'e-back-button',\n    checkboxWrapper: 'e-checkbox-wrapper',\n    checkbox: 'e-checkbox',\n    checked: 'e-check',\n    checklist: 'e-checklist',\n    checkboxIcon: 'e-frame',\n    checkboxRight: 'e-checkbox-right',\n    checkboxLeft: 'e-checkbox-left',\n    listviewCheckbox: 'e-listview-checkbox',\n    itemCheckList: 'e-checklist',\n    virtualElementContainer: 'e-list-virtualcontainer'\n};\nconst LISTVIEW_TEMPLATE_PROPERTY = 'Template';\nconst LISTVIEW_GROUPTEMPLATE_PROPERTY = 'GroupTemplate';\nconst LISTVIEW_HEADERTEMPLATE_PROPERTY = 'HeaderTemplate';\nconst swipeVelocity = 0.5;\n/**\n * Represents the field settings of the ListView.\n */\nclass FieldSettings extends ChildProperty {\n}\n__decorate([\n    Property('id')\n], FieldSettings.prototype, \"id\", void 0);\n__decorate([\n    Property('text')\n], FieldSettings.prototype, \"text\", void 0);\n__decorate([\n    Property('isChecked')\n], FieldSettings.prototype, \"isChecked\", void 0);\n__decorate([\n    Property('isVisible')\n], FieldSettings.prototype, \"isVisible\", void 0);\n__decorate([\n    Property('enabled')\n], FieldSettings.prototype, \"enabled\", void 0);\n__decorate([\n    Property('iconCss')\n], FieldSettings.prototype, \"iconCss\", void 0);\n__decorate([\n    Property('child')\n], FieldSettings.prototype, \"child\", void 0);\n__decorate([\n    Property('tooltip')\n], FieldSettings.prototype, \"tooltip\", void 0);\n__decorate([\n    Property('groupBy')\n], FieldSettings.prototype, \"groupBy\", void 0);\n__decorate([\n    Property('text')\n], FieldSettings.prototype, \"sortBy\", void 0);\n__decorate([\n    Property('htmlAttributes')\n], FieldSettings.prototype, \"htmlAttributes\", void 0);\n__decorate([\n    Property('tableName')\n], FieldSettings.prototype, \"tableName\", void 0);\n/**\n * Represents the EJ2 ListView control.\n * ```html\n * <div id=\"listview\">\n * <ul>\n * <li>Favorite</li>\n * <li>Documents</li>\n * <li>Downloads</li>\n * </ul>\n * </div>\n * ```\n * ```typescript\n *   var listviewObject = new ListView({});\n *   listviewObject.appendTo(\"#listview\");\n * ```\n */\nlet ListView = class ListView extends Component {\n    /**\n     * Constructor for creating the widget\n     *\n     * @param options\n     *\n     * @param element\n     */\n    constructor(options, element) {\n        super(options, element);\n        this.previousSelectedItems = [];\n        this.hiddenItems = [];\n        this.enabledItems = [];\n        this.disabledItems = [];\n    }\n    /**\n     * @param newProp\n     *\n     * @param oldProp\n     *\n     * @private\n     */\n    onPropertyChanged(newProp, oldProp) {\n        for (const prop of Object.keys(newProp)) {\n            switch (prop) {\n                case 'htmlAttributes':\n                    this.setHTMLAttribute();\n                    break;\n                case 'cssClass':\n                    this.setCSSClass(oldProp.cssClass);\n                    break;\n                case 'enable':\n                    this.setEnable();\n                    break;\n                case 'width':\n                case 'height':\n                    this.setSize();\n                    break;\n                case 'enableRtl':\n                    this.setEnableRTL();\n                    break;\n                case 'fields':\n                    // eslint-disable-next-line\n                    this.listBaseOption.fields = this.fields.properties;\n                    if (this.enableVirtualization) {\n                        this.virtualizationModule.reRenderUiVirtualization();\n                    }\n                    else {\n                        this.reRender();\n                    }\n                    break;\n                case 'headerTitle':\n                    if (!this.curDSLevel.length) {\n                        this.header(this.headerTitle, false, 'header');\n                    }\n                    break;\n                case 'query':\n                    if (this.enableVirtualization) {\n                        this.virtualizationModule.reRenderUiVirtualization();\n                    }\n                    else {\n                        this.reRender();\n                    }\n                    break;\n                case 'showHeader':\n                    this.header(this.headerTitle, false, 'header');\n                    break;\n                case 'enableVirtualization':\n                    if (!isNullOrUndefined(this.contentContainer)) {\n                        detach(this.contentContainer);\n                    }\n                    this.refresh();\n                    break;\n                case 'showCheckBox':\n                case 'checkBoxPosition':\n                    if (this.enableVirtualization) {\n                        this.virtualizationModule.reRenderUiVirtualization();\n                    }\n                    else {\n                        this.setCheckbox();\n                    }\n                    break;\n                case 'dataSource':\n                    if (this.enableVirtualization) {\n                        this.virtualizationModule.reRenderUiVirtualization();\n                    }\n                    else {\n                        this.reRender();\n                    }\n                    break;\n                case 'sortOrder':\n                case 'template':\n                    if (!this.enableVirtualization) {\n                        this.refresh();\n                    }\n                    break;\n                case 'showIcon':\n                    if (this.enableVirtualization) {\n                        this.virtualizationModule.reRenderUiVirtualization();\n                    }\n                    else {\n                        this.listBaseOption.showIcon = this.showIcon;\n                        this.curViewDS = this.getSubDS();\n                        this.resetCurrentList();\n                    }\n                    break;\n                default:\n                    break;\n            }\n        }\n    }\n    // Model Changes\n    setHTMLAttribute() {\n        if (Object.keys(this.htmlAttributes).length) {\n            attributes(this.element, this.htmlAttributes);\n        }\n    }\n    setCSSClass(oldCSSClass) {\n        if (this.cssClass) {\n            addClass([this.element], this.cssClass.split(' ').filter((css) => css));\n        }\n        if (oldCSSClass) {\n            removeClass([this.element], oldCSSClass.split(' ').filter((css) => css));\n        }\n    }\n    setSize() {\n        this.element.style.height = formatUnit(this.height);\n        this.element.style.width = formatUnit(this.width);\n        this.isWindow = this.element.clientHeight ? false : true;\n    }\n    setEnable() {\n        this.enableElement(this.element, this.enable);\n    }\n    setEnableRTL() {\n        if (this.enableRtl) {\n            this.element.classList.add('e-rtl');\n        }\n        else {\n            this.element.classList.remove('e-rtl');\n        }\n    }\n    enableElement(element, isEnabled) {\n        if (isEnabled) {\n            element.classList.remove(classNames.disable);\n        }\n        else {\n            element.classList.add(classNames.disable);\n        }\n    }\n    // Support Component Functions\n    header(text, showBack, prop) {\n        if (this.headerEle === undefined && this.showHeader) {\n            if (this.enableHtmlSanitizer) {\n                this.setProperties({ headerTitle: SanitizeHtmlHelper.sanitize(this.headerTitle) }, true);\n            }\n            this.headerEle = this.createElement('div', { className: classNames.header });\n            const innerHeaderEle = this.createElement('span', { className: classNames.headerText, innerHTML: this.headerTitle });\n            const textEle = this.createElement('div', { className: classNames.text, innerHTML: innerHeaderEle.outerHTML });\n            const hedBackButton = this.createElement('div', {\n                className: classNames.icon + ' ' + classNames.backIcon + ' ' + classNames.backButton,\n                attrs: { style: 'display:none;' }\n            });\n            this.headerEle.appendChild(hedBackButton);\n            this.headerEle.appendChild(textEle);\n            if (this.headerTemplate) {\n                // eslint-disable-next-line\n                const compiledString = compile(this.headerTemplate);\n                const headerTemplateEle = this.createElement('div', { className: classNames.headerTemplateText });\n                // eslint-disable-next-line\n                const compiledElement = compiledString({}, this, prop, this.LISTVIEW_HEADERTEMPLATE_ID, null, null, this.headerEle);\n                if (compiledElement) {\n                    append(compiledElement, headerTemplateEle);\n                }\n                append([headerTemplateEle], this.headerEle);\n                // eslint-disable-next-line\n                if (this.isReact) {\n                    this.renderReactTemplates();\n                }\n            }\n            if (this.headerTemplate && this.headerTitle) {\n                textEle.classList.add('header');\n            }\n            this.element.classList.add('e-has-header');\n            prepend([this.headerEle], this.element);\n        }\n        else if (this.headerEle) {\n            if (this.showHeader) {\n                this.headerEle.style.display = '';\n                const textEle = this.headerEle.querySelector('.' + classNames.headerText);\n                const hedBackButton = this.headerEle.querySelector('.' + classNames.backIcon);\n                if (this.enableHtmlSanitizer) {\n                    text = SanitizeHtmlHelper.sanitize(text);\n                }\n                textEle.innerHTML = text;\n                if (this.headerTemplate && showBack) {\n                    textEle.parentElement.classList.remove('header');\n                    this.headerEle.querySelector('.' + classNames.headerTemplateText).classList.add('nested-header');\n                }\n                if (this.headerTemplate && !showBack) {\n                    textEle.parentElement.classList.add('header');\n                    this.headerEle.querySelector('.' + classNames.headerTemplateText).classList.remove('nested-header');\n                    this.headerEle.querySelector('.' + classNames.headerTemplateText).classList.add('header');\n                }\n                if (showBack === true) {\n                    hedBackButton.style.display = '';\n                }\n                else {\n                    hedBackButton.style.display = 'none';\n                }\n            }\n            else {\n                this.headerEle.style.display = 'none';\n            }\n        }\n    }\n    // Animation Related Functions\n    switchView(fromView, toView, reverse) {\n        if (fromView && toView) {\n            const fPos = fromView.style.position;\n            const overflow = (this.element.style.overflow !== 'hidden') ? this.element.style.overflow : '';\n            fromView.style.position = 'absolute';\n            fromView.classList.add('e-view');\n            let anim;\n            let duration = this.animation.duration;\n            if (this.animation.effect) {\n                anim = (this.enableRtl ? effectsRTLConfig[this.animation.effect] : effectsConfig[this.animation.effect]);\n            }\n            else {\n                const slideLeft = 'SlideLeft';\n                anim = effectsConfig[slideLeft];\n                reverse = this.enableRtl;\n                duration = 0;\n            }\n            this.element.style.overflow = 'hidden';\n            this.aniObj.animate(fromView, {\n                name: (reverse === true ? anim[0] : anim[1]),\n                duration: duration,\n                timingFunction: this.animation.easing,\n                // eslint-disable-next-line\n                end: (model) => {\n                    fromView.style.display = 'none';\n                    this.element.style.overflow = overflow;\n                    fromView.style.position = fPos;\n                    fromView.classList.remove('e-view');\n                }\n            });\n            toView.style.display = '';\n            this.aniObj.animate(toView, {\n                name: (reverse === true ? anim[2] : anim[3]),\n                duration: duration,\n                timingFunction: this.animation.easing,\n                end: () => {\n                    this.trigger('actionComplete');\n                }\n            });\n            this.curUL = toView;\n        }\n    }\n    preRender() {\n        if (this.template) {\n            try {\n                if (document.querySelectorAll(this.template).length) {\n                    this.setProperties({ template: document.querySelector(this.template).innerHTML.trim() }, true);\n                }\n            }\n            catch (e) {\n                compile(this.template);\n            }\n        }\n        this.listBaseOption = {\n            template: this.template,\n            headerTemplate: this.headerTemplate,\n            groupTemplate: this.groupTemplate, expandCollapse: true, listClass: '',\n            ariaAttributes: {\n                itemRole: 'option', listRole: 'presentation', itemText: '',\n                groupItemRole: 'option', wrapperRole: 'presentation'\n            },\n            // eslint-disable-next-line\n            fields: (this.fields.properties),\n            sortOrder: this.sortOrder,\n            showIcon: this.showIcon,\n            itemCreated: this.renderCheckbox.bind(this),\n            templateID: `${this.element.id}${LISTVIEW_TEMPLATE_PROPERTY}`,\n            groupTemplateID: `${this.element.id}${LISTVIEW_GROUPTEMPLATE_PROPERTY}`,\n            enableHtmlSanitizer: this.enableHtmlSanitizer,\n        };\n        this.initialization();\n    }\n    initialization() {\n        this.curDSLevel = [];\n        this.animateOptions = {};\n        this.curViewDS = [];\n        this.currentLiElements = [];\n        this.isNestedList = false;\n        this.selectedData = [];\n        this.selectedId = [];\n        this.LISTVIEW_TEMPLATE_ID = `${this.element.id}${LISTVIEW_TEMPLATE_PROPERTY}`;\n        this.LISTVIEW_GROUPTEMPLATE_ID = `${this.element.id}${LISTVIEW_GROUPTEMPLATE_PROPERTY}`;\n        this.LISTVIEW_HEADERTEMPLATE_ID = `${this.element.id}${LISTVIEW_HEADERTEMPLATE_PROPERTY}`;\n        this.aniObj = new Animation(this.animateOptions);\n        this.removeElement(this.curUL);\n        this.removeElement(this.ulElement);\n        this.removeElement(this.headerEle);\n        this.removeElement(this.contentContainer);\n        this.curUL = this.ulElement = this.liCollection = this.headerEle = this.contentContainer = undefined;\n    }\n    renderCheckbox(args) {\n        if (args.item.classList.contains(classNames.hasChild)) {\n            this.isNestedList = true;\n        }\n        if (this.showCheckBox && this.isValidLI(args.item)) {\n            let checkboxElement;\n            let fieldData;\n            // eslint-disable-next-line prefer-const\n            checkboxElement = createCheckBox(this.createElement, false, {\n                checked: false, enableRtl: this.enableRtl,\n                cssClass: classNames.listviewCheckbox\n            });\n            checkboxElement.setAttribute('role', 'checkbox');\n            const frameElement = checkboxElement.querySelector('.' + classNames.checkboxIcon);\n            args.item.classList.add(classNames.itemCheckList);\n            args.item.firstElementChild.classList.add(classNames.checkbox);\n            if (typeof this.dataSource[0] !== 'string' && typeof this.dataSource[0] !== 'number') {\n                fieldData = getFieldValues(args.curData, this.listBaseOption.fields);\n                if (fieldData[this.listBaseOption.fields.isChecked]) {\n                    this.checkInternally(args, checkboxElement);\n                }\n            }\n            else if (((typeof this.dataSource[0] === 'string' ||\n                typeof this.dataSource[0] === 'number') && this.selectedData.indexOf(args.text) !== -1)) {\n                this.checkInternally(args, checkboxElement);\n            }\n            checkboxElement.setAttribute('aria-checked', frameElement.classList.contains(classNames.checked) ? 'true' : 'false');\n            if (this.checkBoxPosition === 'Left') {\n                checkboxElement.classList.add(classNames.checkboxLeft);\n                args.item.firstElementChild.classList.add(classNames.checkboxLeft);\n                args.item.firstElementChild.insertBefore(checkboxElement, args.item.firstElementChild.childNodes[0]);\n            }\n            else {\n                checkboxElement.classList.add(classNames.checkboxRight);\n                args.item.firstElementChild.classList.add(classNames.checkboxRight);\n                args.item.firstElementChild.appendChild(checkboxElement);\n            }\n            this.currentLiElements.push(args.item);\n            if (this.checkBoxPosition === 'Left') {\n                this.virtualCheckBox = args.item.firstElementChild.children[0];\n            }\n            else {\n                this.virtualCheckBox = args.item.firstElementChild.lastElementChild;\n            }\n        }\n    }\n    checkInternally(args, checkboxElement) {\n        args.item.classList.add(classNames.selected);\n        args.item.setAttribute('aria-selected', 'true');\n        checkboxElement.querySelector('.' + classNames.checkboxIcon).classList.add(classNames.checked);\n        checkboxElement.setAttribute('aria-checked', 'true');\n    }\n    /**\n     * Checks the specific list item by passing the unchecked fields as an argument to this method.\n     *\n     * @param  {Fields | HTMLElement | Element} item - It accepts Fields or HTML list element as an argument.\n     */\n    checkItem(item) {\n        this.toggleCheckBase(item, true);\n    }\n    toggleCheckBase(item, checked) {\n        if (this.showCheckBox) {\n            let liElement = item;\n            if (item instanceof Object && item.constructor !== HTMLLIElement) {\n                liElement = this.getLiFromObjOrElement(item);\n            }\n            if (!isNullOrUndefined(liElement)) {\n                const checkboxIcon = liElement.querySelector('.' + classNames.checkboxIcon);\n                if (checked === true) {\n                    liElement.classList.add(classNames.selected);\n                }\n                else {\n                    liElement.classList.remove(classNames.selected);\n                }\n                liElement.setAttribute('aria-selected', checked ? 'true' : 'false');\n                if (checked === true) {\n                    checkboxIcon.classList.add(classNames.checked);\n                }\n                else {\n                    checkboxIcon.classList.remove(classNames.checked);\n                }\n                checkboxIcon.parentElement.setAttribute('aria-checked', checked ? 'true' : 'false');\n            }\n            this.setSelectedItemData(liElement);\n        }\n    }\n    /**\n     * Uncheck the specific list item by passing the checked fields as an argument to this method.\n     *\n     * @param  {Fields | HTMLElement | Element} item - It accepts Fields or HTML list element as an argument.\n     */\n    uncheckItem(item) {\n        this.toggleCheckBase(item, false);\n    }\n    /**\n     * Checks all the unchecked items in the ListView.\n     */\n    checkAllItems() {\n        this.toggleAllCheckBase(true);\n    }\n    /**\n     * Uncheck all the checked items in ListView.\n     */\n    uncheckAllItems() {\n        this.toggleAllCheckBase(false);\n    }\n    toggleAllCheckBase(checked) {\n        if (this.showCheckBox) {\n            for (let i = 0; i < this.liCollection.length; i++) {\n                const checkIcon = this.liCollection[i].querySelector('.' + classNames.checkboxIcon);\n                if (checkIcon) {\n                    if (checked) {\n                        if (!checkIcon.classList.contains(classNames.checked)) {\n                            this.checkItem(this.liCollection[i]);\n                        }\n                    }\n                    else {\n                        if (checkIcon.classList.contains(classNames.checked)) {\n                            this.uncheckItem(this.liCollection[i]);\n                        }\n                    }\n                }\n            }\n            if (this.enableVirtualization) {\n                this.virtualizationModule.checkedItem(checked);\n            }\n        }\n    }\n    setCheckbox() {\n        if (this.showCheckBox) {\n            const liCollection = Array.prototype.slice.call(this.element.querySelectorAll('.' + classNames.listItem));\n            const args = {\n                item: undefined, curData: undefined, dataSource: undefined, fields: undefined,\n                options: undefined, text: ''\n            };\n            for (let i = 0; i < liCollection.length; i++) {\n                const element = liCollection[i];\n                args.item = element;\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                args.curData = this.getItemData(element);\n                if (element.querySelector('.' + classNames.checkboxWrapper)) {\n                    this.removeElement(element.querySelector('.' + classNames.checkboxWrapper));\n                }\n                this.renderCheckbox(args);\n                if (args.item.classList.contains(classNames.selected)) {\n                    this.checkInternally(args, args.item.querySelector('.' + classNames.checkboxWrapper));\n                }\n            }\n        }\n        else {\n            const liCollection = Array.prototype.slice.call(this.element.querySelectorAll('.' + classNames.itemCheckList));\n            for (let i = 0; i < liCollection.length; i++) {\n                const element = liCollection[i];\n                element.classList.remove(classNames.selected);\n                element.firstElementChild.classList.remove(classNames.checkbox);\n                this.removeElement(element.querySelector('.' + classNames.checkboxWrapper));\n            }\n            if (this.selectedItems) {\n                this.selectedItems.item.classList.add(classNames.selected);\n            }\n        }\n    }\n    /**\n     * Refresh the height of the list item only on enabling the virtualization property.\n     */\n    refreshItemHeight() {\n        if (this.virtualizationModule) {\n            this.virtualizationModule.refreshItemHeight();\n        }\n    }\n    clickHandler(e) {\n        const target = e.target;\n        const classList = target.classList;\n        let closestElement;\n        if (classList.contains(classNames.backIcon) || classList.contains(classNames.headerText)) {\n            if (this.showCheckBox && this.curDSLevel[this.curDSLevel.length - 1]) {\n                this.uncheckAllItems();\n            }\n            this.back();\n        }\n        else {\n            let li = closest(target.parentNode, '.' + classNames.listItem);\n            if (li === null) {\n                li = target;\n            }\n            this.removeFocus();\n            if (this.enable && this.showCheckBox && this.isValidLI(li)) {\n                if (e.target.classList.contains(classNames.checkboxIcon)) {\n                    li.classList.add(classNames.focused);\n                    if (isNullOrUndefined(li.querySelector('.' + classNames.checked))) {\n                        const args = {\n                            curData: undefined, dataSource: undefined, fields: undefined, options: undefined,\n                            text: undefined, item: li\n                        };\n                        this.checkInternally(args, args.item.querySelector('.' + classNames.checkboxWrapper));\n                    }\n                    else {\n                        this.uncheckItem(li);\n                        li.classList.add(classNames.focused);\n                    }\n                    if (this.enableVirtualization) {\n                        this.virtualizationModule.setCheckboxLI(li, e);\n                    }\n                    if (e) {\n                        const eventArgs = this.selectEventData(li, e);\n                        const checkIcon = li.querySelector('.' + classNames.checkboxIcon);\n                        merge(eventArgs, { isChecked: checkIcon.classList.contains(classNames.checked) });\n                        this.trigger('select', eventArgs);\n                    }\n                }\n                else if (li.classList.contains(classNames.hasChild)) {\n                    this.removeHover();\n                    this.removeSelect();\n                    this.removeSelect(li);\n                    this.setSelectLI(li, e);\n                    li.classList.remove(classNames.selected);\n                }\n                else {\n                    this.setCheckboxLI(li, e);\n                }\n            }\n            else {\n                this.setSelectLI(li, e);\n                this.element.focus();\n            }\n            closestElement = closest(e.target, 'li');\n            if (!isNullOrUndefined(closestElement)) {\n                if (closestElement.classList.contains('e-has-child') &&\n                    !e.target.parentElement.classList.contains('e-listview-checkbox')) {\n                    closestElement.classList.add(classNames.disable);\n                }\n            }\n        }\n    }\n    removeElement(element) {\n        return element && element.parentNode && element.parentNode.removeChild(element);\n    }\n    hoverHandler(e) {\n        const curLi = closest(e.target.parentNode, '.' + classNames.listItem);\n        this.setHoverLI(curLi);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    leaveHandler(e) {\n        this.removeHover();\n    }\n    homeKeyHandler(e, end) {\n        e.preventDefault();\n        if (Object.keys(this.dataSource).length && this.curUL) {\n            if (this.selectedItems) {\n                (this.selectedItems.item).setAttribute('aria-selected', 'false');\n            }\n            const li = this.curUL.querySelectorAll('.' + classNames.listItem);\n            const focusedElement = this.curUL.querySelector('.' + classNames.focused) ||\n                this.curUL.querySelector('.' + classNames.selected);\n            if (focusedElement) {\n                focusedElement.classList.remove(classNames.focused);\n                if (!this.showCheckBox) {\n                    focusedElement.classList.remove(classNames.selected);\n                }\n            }\n            const index = !end ? 0 : li.length - 1;\n            if (li[index].classList.contains(classNames.hasChild) || this.showCheckBox) {\n                li[index].classList.add(classNames.focused);\n            }\n            else {\n                this.setSelectLI(li[index], e);\n            }\n            if (li[index]) {\n                this.element.setAttribute('aria-activedescendant', li[index].id.toString());\n            }\n            else {\n                this.element.removeAttribute('aria-activedescendant');\n            }\n        }\n    }\n    onArrowKeyDown(e, prev) {\n        let siblingLI;\n        let li;\n        const hasChild = !isNullOrUndefined(this.curUL.querySelector('.' + classNames.hasChild)) ? true : false;\n        if (hasChild || this.showCheckBox) {\n            li = this.curUL.querySelector('.' + classNames.focused) || this.curUL.querySelector('.' + classNames.selected);\n            siblingLI = ListBase.getSiblingLI(this.curUL.querySelectorAll('.' + classNames.listItem), li, prev);\n            if (!isNullOrUndefined(siblingLI)) {\n                if (li) {\n                    li.classList.remove(classNames.focused);\n                    if (!this.showCheckBox) {\n                        li.classList.remove(classNames.selected);\n                    }\n                }\n                if (siblingLI.classList.contains(classNames.hasChild) || this.showCheckBox) {\n                    siblingLI.classList.add(classNames.focused);\n                }\n                else {\n                    this.setSelectLI(siblingLI, e);\n                }\n            }\n        }\n        else {\n            li = this.curUL.querySelector('.' + classNames.selected);\n            siblingLI = ListBase.getSiblingLI(this.curUL.querySelectorAll('.' + classNames.listItem), li, prev);\n            this.setSelectLI(siblingLI, e);\n        }\n        if (siblingLI) {\n            this.element.setAttribute('aria-activedescendant', siblingLI.id.toString());\n        }\n        else {\n            this.element.removeAttribute('aria-activedescendant');\n        }\n        return siblingLI;\n    }\n    arrowKeyHandler(e, prev) {\n        e.preventDefault();\n        if (Object.keys(this.dataSource).length && this.curUL) {\n            const siblingLI = this.onArrowKeyDown(e, prev);\n            const elementTop = this.element.getBoundingClientRect().top;\n            const elementHeight = this.element.getBoundingClientRect().height;\n            const firstItemBounds = this.curUL.querySelector('.' + classNames.listItem).getBoundingClientRect();\n            let heightDiff;\n            let groupItemBounds;\n            if (this.fields.groupBy) {\n                groupItemBounds = this.curUL.querySelector('.' + classNames.groupListItem).getBoundingClientRect();\n            }\n            if (siblingLI) {\n                const siblingTop = siblingLI.getBoundingClientRect().top;\n                const siblingHeight = siblingLI.getBoundingClientRect().height;\n                if (!prev) {\n                    const height = this.isWindow ? window.innerHeight : elementHeight;\n                    heightDiff = this.isWindow ? (siblingTop + siblingHeight) :\n                        ((siblingTop - elementTop) + siblingHeight);\n                    if (heightDiff > height) {\n                        if (this.isWindow === true) {\n                            window.scroll(0, pageYOffset + (heightDiff - height));\n                        }\n                        else {\n                            this.element.scrollTop = this.element.scrollTop + (heightDiff - height);\n                        }\n                    }\n                }\n                else {\n                    heightDiff = this.isWindow ? siblingTop : (siblingTop - elementTop);\n                    if (heightDiff < 0) {\n                        if (this.isWindow === true) {\n                            window.scroll(0, pageYOffset + heightDiff);\n                        }\n                        else {\n                            this.element.scrollTop = this.element.scrollTop + heightDiff;\n                        }\n                    }\n                }\n            }\n            else if (this.enableVirtualization && prev && this.virtualizationModule.uiFirstIndex) {\n                this.onUIScrolled = () => {\n                    this.onArrowKeyDown(e, prev);\n                    this.onUIScrolled = undefined;\n                };\n                heightDiff = this.virtualizationModule.listItemHeight;\n                if (this.isWindow === true) {\n                    window.scroll(0, pageYOffset - heightDiff);\n                }\n                else {\n                    this.element.scrollTop = this.element.scrollTop - heightDiff;\n                }\n            }\n            else if (prev) {\n                if (this.showHeader && this.headerEle) {\n                    const topHeight = groupItemBounds ? groupItemBounds.top : firstItemBounds.top;\n                    const headerBounds = this.headerEle.getBoundingClientRect();\n                    heightDiff = headerBounds.top < 0 ? (headerBounds.height - topHeight) : 0;\n                    if (this.isWindow === true) {\n                        window.scroll(0, pageYOffset - heightDiff);\n                    }\n                    else {\n                        this.element.scrollTop = 0;\n                    }\n                }\n                else if (this.fields.groupBy) {\n                    heightDiff = this.isWindow ? (groupItemBounds.top < 0 ? groupItemBounds.top : 0) :\n                        (elementTop - firstItemBounds.top) + groupItemBounds.height;\n                    if (this.isWindow === true) {\n                        window.scroll(0, pageYOffset + heightDiff);\n                    }\n                    else {\n                        this.element.scrollTop = this.element.scrollTop - heightDiff;\n                    }\n                }\n            }\n        }\n    }\n    enterKeyHandler(e) {\n        if (Object.keys(this.dataSource).length && this.curUL) {\n            const hasChild = !isNullOrUndefined(this.curUL.querySelector('.' + classNames.hasChild)) ? true : false;\n            const li = this.curUL.querySelector('.' + classNames.focused);\n            if (hasChild && li) {\n                li.classList.remove(classNames.focused);\n                if (this.showCheckBox) {\n                    this.removeSelect();\n                    this.removeSelect(li);\n                    this.removeHover();\n                }\n                this.setSelectLI(li, e);\n            }\n        }\n    }\n    spaceKeyHandler(e) {\n        e.preventDefault();\n        if (this.enable && this.showCheckBox && Object.keys(this.dataSource).length && this.curUL) {\n            const li = this.curUL.querySelector('.' + classNames.focused);\n            let checkboxElement;\n            let checkIcon;\n            if (!isNullOrUndefined(li) && isNullOrUndefined(li.querySelector('.' + classNames.checked))) {\n                const args = {\n                    curData: undefined, dataSource: undefined, fields: undefined, options: undefined,\n                    text: undefined, item: li\n                };\n                checkboxElement = args.item.querySelector('.' + classNames.checkboxWrapper);\n                this.checkInternally(args, checkboxElement);\n                checkIcon = checkboxElement.querySelector('.' + classNames.checkboxIcon + '.' + classNames.icon);\n            }\n            else {\n                this.uncheckItem(li);\n            }\n            const eventArgs = this.selectEventData(li, e);\n            merge(eventArgs, { isChecked: checkIcon ? checkIcon.classList.contains(classNames.checked) : false });\n            this.trigger('select', eventArgs);\n        }\n    }\n    keyActionHandler(e) {\n        switch (e.keyCode) {\n            case 36:\n                this.homeKeyHandler(e);\n                break;\n            case 35:\n                this.homeKeyHandler(e, true);\n                break;\n            case 40:\n                this.arrowKeyHandler(e);\n                break;\n            case 38:\n                this.arrowKeyHandler(e, true);\n                break;\n            case 13:\n                this.enterKeyHandler(e);\n                break;\n            case 8:\n                if (this.showCheckBox && this.curDSLevel[this.curDSLevel.length - 1]) {\n                    this.uncheckAllItems();\n                }\n                this.back();\n                break;\n            case 32:\n                this.spaceKeyHandler(e);\n                break;\n        }\n    }\n    swipeActionHandler(e) {\n        if (e.swipeDirection === 'Right' && e.velocity > swipeVelocity && e.originalEvent.type === 'touchend') {\n            if (this.showCheckBox && this.curDSLevel[this.curDSLevel.length - 1]) {\n                this.uncheckAllItems();\n            }\n            this.back();\n        }\n    }\n    focusout() {\n        if (Object.keys(this.dataSource).length && this.curUL) {\n            const focusedElement = this.curUL.querySelector('.' + classNames.focused);\n            const activeElement = this.curUL.querySelector('[aria-selected = true]');\n            if (focusedElement) {\n                focusedElement.classList.remove(classNames.focused);\n                if (activeElement && !this.showCheckBox) {\n                    activeElement.classList.add(classNames.selected);\n                }\n            }\n        }\n    }\n    wireEvents() {\n        EventHandler.add(this.element, 'keydown', this.keyActionHandler, this);\n        EventHandler.add(this.element, 'click', this.clickHandler, this);\n        EventHandler.add(this.element, 'mouseover', this.hoverHandler, this);\n        EventHandler.add(this.element, 'mouseout', this.leaveHandler, this);\n        EventHandler.add(this.element, 'focusout', this.focusout, this);\n        this.touchModule = new Touch(this.element, { swipe: this.swipeActionHandler.bind(this) });\n    }\n    unWireEvents() {\n        EventHandler.remove(this.element, 'click', this.clickHandler);\n        EventHandler.remove(this.element, 'mouseover', this.hoverHandler);\n        EventHandler.remove(this.element, 'mouseout', this.leaveHandler);\n        EventHandler.remove(this.element, 'mouseover', this.hoverHandler);\n        EventHandler.remove(this.element, 'mouseout', this.leaveHandler);\n        this.touchModule.destroy();\n    }\n    removeFocus() {\n        const focusedLI = this.element.querySelectorAll('.' + classNames.focused);\n        for (const ele of focusedLI) {\n            ele.classList.remove(classNames.focused);\n        }\n    }\n    removeHover() {\n        const hoverLI = this.element.querySelector('.' + classNames.hover);\n        if (hoverLI) {\n            hoverLI.classList.remove(classNames.hover);\n        }\n    }\n    removeSelect(li) {\n        if (isNullOrUndefined(li)) {\n            const selectedLI = this.element.querySelectorAll('.' + classNames.selected);\n            for (const ele of selectedLI) {\n                if (this.showCheckBox && ele.querySelector('.' + classNames.checked)) {\n                    continue;\n                }\n                else {\n                    ele.setAttribute('aria-selected', 'false');\n                    ele.classList.remove(classNames.selected);\n                }\n            }\n        }\n        else {\n            li.classList.remove(classNames.selected);\n            li.setAttribute('aria-selected', 'false');\n        }\n    }\n    isValidLI(li) {\n        return (li && li.classList.contains(classNames.listItem)\n            && !li.classList.contains(classNames.groupListItem)\n            && !li.classList.contains(classNames.disable));\n    }\n    setCheckboxLI(li, e) {\n        if (this.isValidLI(li) && this.enable && this.showCheckBox) {\n            if (this.curUL.querySelector('.' + classNames.focused)) {\n                this.curUL.querySelector('.' + classNames.focused).classList.remove(classNames.focused);\n            }\n            li.classList.add(classNames.focused);\n            const checkboxElement = li.querySelector('.' + classNames.checkboxWrapper);\n            const checkIcon = checkboxElement.querySelector('.' + classNames.checkboxIcon + '.' + classNames.icon);\n            this.removeHover();\n            if (!checkIcon.classList.contains(classNames.checked)) {\n                checkIcon.classList.add(classNames.checked);\n                li.classList.add(classNames.selected);\n                li.setAttribute('aria-selected', 'true');\n            }\n            else {\n                checkIcon.classList.remove(classNames.checked);\n                li.classList.remove(classNames.selected);\n                li.setAttribute('aria-selected', 'false');\n            }\n            checkboxElement.setAttribute('aria-checked', checkIcon.classList.contains(classNames.checked) ?\n                'true' : 'false');\n            const eventArgs = this.selectEventData(li, e);\n            merge(eventArgs, { isChecked: checkIcon.classList.contains(classNames.checked) });\n            if (this.enableVirtualization) {\n                this.virtualizationModule.setCheckboxLI(li, e);\n            }\n            this.trigger('select', eventArgs);\n            this.setSelectedItemData(li);\n            this.renderSubList(li);\n        }\n    }\n    selectEventData(li, e) {\n        const data = this.getItemData(li);\n        const fieldData = getFieldValues(data, this.listBaseOption.fields);\n        let selectedItem;\n        if (!isNullOrUndefined(data)\n            && typeof this.dataSource[0] === 'string' || typeof this.dataSource[0] === 'number') {\n            selectedItem = { item: li, text: li && li.innerText.trim(), data: this.dataSource };\n        }\n        else {\n            selectedItem =\n                // eslint-disable-next-line\n                {\n                    item: li, text: fieldData && fieldData[this.listBaseOption.fields.text],\n                    // eslint-disable-next-line\n                    data: data\n                };\n        }\n        const eventArgs = {};\n        merge(eventArgs, selectedItem);\n        if (e) {\n            merge(eventArgs, { isInteracted: true, event: e, index: this.curUL && Array.prototype.indexOf.call(this.curUL.children, li) });\n        }\n        return eventArgs;\n    }\n    setSelectedItemData(li) {\n        const data = this.getItemData(li);\n        // eslint-disable-next-line\n        const fieldData = getFieldValues(data, this.listBaseOption.fields);\n        if (!isNullOrUndefined(data) && ((typeof this.dataSource[0] === 'string') ||\n            (typeof this.dataSource[0] === 'number'))) {\n            this.selectedItems = {\n                item: li,\n                text: li && li.innerText.trim(),\n                data: this.dataSource\n            };\n        }\n        else {\n            this.selectedItems = {\n                item: li,\n                // eslint-disable-next-line\n                text: fieldData && fieldData[this.listBaseOption.fields.text],\n                // eslint-disable-next-line\n                data: data\n            };\n        }\n    }\n    setSelectLI(li, e) {\n        if (this.isValidLI(li) && !li.classList.contains(classNames.selected) && this.enable) {\n            if (!this.showCheckBox) {\n                this.removeSelect();\n            }\n            li.classList.add(classNames.selected);\n            li.setAttribute('aria-selected', 'true');\n            this.removeHover();\n            this.setSelectedItemData(li);\n            if (this.enableVirtualization) {\n                this.virtualizationModule.setSelectLI(li, e);\n            }\n            const eventArgs = this.selectEventData(li, e);\n            this.trigger('select', eventArgs);\n            this.selectedLI = li;\n            this.renderSubList(li);\n        }\n    }\n    setHoverLI(li) {\n        if (this.isValidLI(li) && !li.classList.contains(classNames.hover) && this.enable) {\n            const lastLi = this.element.querySelectorAll('.' + classNames.hover);\n            if (lastLi && lastLi.length) {\n                removeClass(lastLi, classNames.hover);\n            }\n            if (!li.classList.contains(classNames.selected) || this.showCheckBox) {\n                li.classList.add(classNames.hover);\n            }\n        }\n    }\n    //Data Source Related Functions\n    getSubDS() {\n        const levelKeys = this.curDSLevel;\n        if (levelKeys.length) {\n            let ds = this.localData;\n            for (const key of levelKeys) {\n                const field = {};\n                // eslint-disable-next-line\n                field[this.fields.id] = key;\n                this.curDSJSON = this.findItemFromDS(ds, field);\n                const fieldData = getFieldValues(this.curDSJSON, this.listBaseOption.fields);\n                ds = this.curDSJSON ? fieldData[this.fields.child] : ds;\n            }\n            return ds;\n        }\n        return this.localData;\n    }\n    getItemData(li) {\n        const dataSource = this.dataSource instanceof DataManager ?\n            this.localData : this.dataSource;\n        const fields = this.getElementUID(li);\n        let curDS;\n        if (isNullOrUndefined(this.element.querySelector('.' + classNames.hasChild)) && this.fields.groupBy) {\n            curDS = this.curViewDS;\n        }\n        else {\n            curDS = dataSource;\n        }\n        return this.findItemFromDS(curDS, fields);\n    }\n    findItemFromDS(dataSource, fields, parent) {\n        let resultJSON;\n        if (dataSource && dataSource.length && fields) {\n            dataSource.some((data) => {\n                const fieldData = \n                // eslint-disable-next-line\n                getFieldValues(data, this.listBaseOption.fields);\n                //(!(fid) || id === fid) && (!(ftext) || text === ftext) && (!!fid || !!ftext)\n                if ((fields[this.fields.id] || fields[this.fields.text]) &&\n                    (!fields[this.fields.id] || (!isNullOrUndefined(fieldData[this.fields.id]) &&\n                        fieldData[this.fields.id].toString()) === fields[this.fields.id].toString()) &&\n                    (!fields[this.fields.text] || fieldData[this.fields.text] === fields[this.fields.text])) {\n                    resultJSON = (parent ? dataSource : data);\n                }\n                else if (typeof data !== 'object' && dataSource.indexOf(data) !== -1) {\n                    resultJSON = (parent ? dataSource : data);\n                }\n                else if (!isNullOrUndefined(fields[this.fields.id]) && isNullOrUndefined(fieldData[this.fields.id])) {\n                    const li = this.element.querySelector('[data-uid=\"'\n                        + fields[this.fields.id] + '\"]');\n                    // eslint-disable-next-line\n                    if (li && li.innerText.trim() === fieldData[this.fields.text]) {\n                        resultJSON = data;\n                    }\n                    // eslint-disable-next-line\n                }\n                else if (fieldData.hasOwnProperty(this.fields.child) && fieldData[this.fields.child].length) {\n                    resultJSON = this.findItemFromDS(fieldData[this.fields.child], fields, parent);\n                }\n                return !!resultJSON;\n            });\n        }\n        else {\n            resultJSON = dataSource;\n        }\n        return resultJSON;\n    }\n    getQuery() {\n        const columns = [];\n        const query = (this.query ? this.query : new Query());\n        if (!this.query) {\n            // eslint-disable-next-line\n            for (const column of Object.keys(this.fields.properties)) {\n                if (column !== 'tableName' && !!(this.fields[column]) &&\n                    this.fields[column] !==\n                        ListBase.defaultMappedFields[column]\n                    && columns.indexOf(this.fields[column]) === -1) {\n                    columns.push(this.fields[column]);\n                }\n            }\n            query.select(columns);\n            // eslint-disable-next-line\n            if (this.fields.properties.hasOwnProperty('tableName')) {\n                query.from(this.fields.tableName);\n            }\n        }\n        return query;\n    }\n    setViewDataSource(dataSource = this.localData) {\n        // eslint-disable-next-line\n        let fieldValue = (isNullOrUndefined(this.fields.sortBy)) ? this.fields.text : this.fields.sortBy;\n        let query = ListBase.addSorting(this.sortOrder, fieldValue);\n        if (dataSource && this.fields.groupBy) {\n            if (this.sortOrder !== 'None') {\n                this.curViewDS = ListBase.groupDataSource(ListBase.getDataSource(dataSource, query), this.listBaseOption.fields, this.sortOrder);\n            }\n            else {\n                this.curViewDS = ListBase.groupDataSource(dataSource, this.listBaseOption.fields, this.sortOrder);\n            }\n        }\n        else if (dataSource && this.sortOrder !== 'None') {\n            this.curViewDS = ListBase.getDataSource(dataSource, query);\n        }\n        else {\n            this.curViewDS = dataSource;\n        }\n    }\n    isInAnimation() {\n        return this.curUL.classList.contains('.e-animate');\n    }\n    renderRemoteLists(e, listViewComponent) {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.localData = e.result;\n        listViewComponent.removeElement(listViewComponent.contentContainer);\n        this.renderList();\n        this.trigger('actionComplete', e);\n    }\n    triggerActionFailure(e) {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.trigger('actionFailure', e);\n    }\n    setLocalData() {\n        this.trigger('actionBegin');\n        // eslint-disable-next-line\n        const listViewComponent = this;\n        if (this.dataSource instanceof DataManager) {\n            if (this.dataSource.ready) {\n                this.dataSource.ready.then((e) => {\n                    /* eslint-disable */\n                    this.isOffline = this.dataSource.dataSource.offline;\n                    if (this.dataSource instanceof DataManager && this.isOffline) {\n                        this.renderRemoteLists(e, listViewComponent);\n                    }\n                }).catch((e) => {\n                    this.triggerActionFailure(e);\n                });\n            }\n            else {\n                this.dataSource.executeQuery(this.getQuery()).then((e) => {\n                    this.renderRemoteLists(e, listViewComponent);\n                }).catch((e) => {\n                    this.triggerActionFailure(e);\n                });\n            }\n        }\n        else if (!this.dataSource || !this.dataSource.length) {\n            const ul = this.element.querySelector('ul');\n            if (ul) {\n                remove(ul);\n                this.setProperties({ dataSource: ListBase.createJsonFromElement(ul) }, true);\n                this.localData = this.dataSource;\n                this.renderList();\n                this.trigger('actionComplete', { data: this.localData });\n            }\n        }\n        else {\n            this.localData = this.dataSource;\n            this.renderList();\n            this.trigger('actionComplete', { data: this.localData });\n        }\n    }\n    reRender() {\n        this.removeElement(this.headerEle);\n        this.removeElement(this.ulElement);\n        this.removeElement(this.contentContainer);\n        // eslint-disable-next-line\n        if (this.isReact) {\n            this.clearTemplate();\n        }\n        if (Object.keys(window).indexOf('ejsInterop') === -1) {\n            this.element.innerHTML = '';\n        }\n        this.headerEle = this.ulElement = this.liCollection = undefined;\n        this.header();\n        this.setLocalData();\n    }\n    resetCurrentList() {\n        this.setViewDataSource(this.curViewDS);\n        this.contentContainer.innerHTML = '';\n        this.createList();\n        this.renderIntoDom(this.curUL);\n    }\n    setAttributes(liElements) {\n        for (let i = 0; i < liElements.length; i++) {\n            const element = liElements[i];\n            if (element.classList.contains('e-list-item')) {\n                element.setAttribute('id', this.element.id + '_' + element.getAttribute('data-uid'));\n                element.setAttribute('aria-selected', 'false');\n                element.setAttribute('tabindex', '-1');\n            }\n        }\n    }\n    createList() {\n        this.currentLiElements = [];\n        this.isNestedList = false;\n        this.ulElement = this.curUL = ListBase.createList(this.createElement, this.curViewDS, this.listBaseOption, null, this);\n        this.liCollection = this.curUL.querySelectorAll('.' + classNames.listItem);\n        this.setAttributes(this.liCollection);\n    }\n    exceptionEvent(e) {\n        this.trigger('actionFailure', e);\n    }\n    UpdateCurrentUL() {\n        this.ulElement = this.curUL = this.element.querySelector('.' + classNames.parentItem);\n        if (this.curUL) {\n            // eslint-disable-next-line\n            this.liCollection = this.curUL.querySelectorAll('.' + classNames.listItem);\n        }\n    }\n    renderSubList(li) {\n        this.liElement = li;\n        const uID = li.getAttribute('data-uid');\n        if (li.classList.contains(classNames.hasChild) && uID) {\n            const ul = closest(li.parentNode, '.' + classNames.parentItem);\n            let ele = this.element.querySelector('[pid=\\'' + uID + '\\']');\n            this.curDSLevel.push(uID);\n            this.setViewDataSource(this.getSubDS());\n            if (!ele) {\n                const data = this.curViewDS;\n                ele = ListBase.createListFromJson(this.createElement, data, this.listBaseOption, this.curDSLevel.length, null, this);\n                // eslint-disable-next-line\n                if (this.isReact) {\n                    this.renderReactTemplates();\n                }\n                const lists = ele.querySelectorAll('.' + classNames.listItem);\n                this.setAttributes(lists);\n                ele.setAttribute('pID', uID);\n                ele.style.display = 'none';\n                this.renderIntoDom(ele);\n            }\n            this.switchView(ul, ele);\n            this.liCollection = this.curUL.querySelectorAll('.' + classNames.listItem);\n            if (this.selectedItems) {\n                const fieldData = getFieldValues(this.selectedItems.data, this.listBaseOption.fields);\n                // eslint-disable-next-line\n                this.header((fieldData[this.listBaseOption.fields.text]), true, 'header');\n            }\n            this.selectedLI = undefined;\n        }\n    }\n    renderIntoDom(ele) {\n        this.contentContainer.appendChild(ele);\n    }\n    renderList(data) {\n        this.setViewDataSource(data);\n        if (this.enableVirtualization) {\n            if (Object.keys(this.dataSource).length) {\n                if ((this.template || this.groupTemplate) && !this.virtualizationModule.isNgTemplate()) {\n                    if (this.isReact) {\n                        if (typeof this.template == \"string\") {\n                            this.listBaseOption.template = null;\n                        }\n                        if (typeof this.groupTemplate == \"string\") {\n                            this.listBaseOption.groupTemplate = null;\n                        }\n                    }\n                    else {\n                        this.listBaseOption.template = null;\n                        this.listBaseOption.groupTemplate = null;\n                    }\n                    this.listBaseOption.itemCreated = this.virtualizationModule.createUIItem.bind(this.virtualizationModule);\n                }\n            }\n            this.virtualizationModule.uiVirtualization();\n        }\n        else {\n            this.createList();\n            this.contentContainer = this.createElement('div', { className: classNames.content });\n            this.element.appendChild(this.contentContainer);\n            this.renderIntoDom(this.ulElement);\n            // eslint-disable-next-line\n            if (this.isReact) {\n                this.renderReactTemplates();\n            }\n        }\n    }\n    getElementUID(obj) {\n        let fields = {};\n        if (obj instanceof Element) {\n            // eslint-disable-next-line\n            fields[this.fields.id] = obj.getAttribute('data-uid');\n        }\n        else {\n            fields = obj;\n        }\n        return fields;\n    }\n    /**\n     * Initializes the ListView component rendering.\n     */\n    render() {\n        this.element.classList.add(classNames.root);\n        attributes(this.element, { role: 'list', tabindex: '0' });\n        this.setCSSClass();\n        this.setEnableRTL();\n        this.setEnable();\n        this.setSize();\n        this.wireEvents();\n        this.header();\n        this.setLocalData();\n        this.setHTMLAttribute();\n        this.rippleFn = rippleEffect(this.element, {\n            selector: '.' + classNames.listItem\n        });\n        this.renderComplete();\n    }\n    /**\n     * It is used to destroy the ListView component.\n     */\n    destroy() {\n        // eslint-disable-next-line\n        if (this.isReact) {\n            this.clearTemplate();\n        }\n        this.unWireEvents();\n        const classAr = [classNames.root, classNames.disable, 'e-rtl',\n            'e-has-header', 'e-lib'].concat(this.cssClass.split(' ').filter((css) => css));\n        removeClass([this.element], classAr);\n        this.element.removeAttribute('role');\n        this.element.removeAttribute('tabindex');\n        this.curUL = this.ulElement = this.liCollection = this.headerEle = undefined;\n        this.element.innerHTML = '';\n        super.destroy();\n    }\n    /**\n     * Switches back from the navigated sub list item.\n     */\n    back() {\n        const pID = this.curDSLevel[this.curDSLevel.length - 1];\n        if (pID === undefined || this.isInAnimation()) {\n            return;\n        }\n        this.curDSLevel.pop();\n        this.setViewDataSource(this.getSubDS());\n        let toUL = this.element.querySelector('[data-uid=\\'' + pID + '\\']');\n        const fromUL = this.curUL;\n        if (!toUL) {\n            this.createList();\n            this.renderIntoDom(this.ulElement);\n            toUL = this.curUL;\n        }\n        else {\n            toUL = toUL.parentElement;\n        }\n        const fieldData = getFieldValues(this.curDSJSON, this.listBaseOption.fields);\n        // eslint-disable-next-line\n        const text = fieldData[this.fields.text];\n        this.switchView(fromUL, toUL, true);\n        this.removeFocus();\n        const li = this.element.querySelector('[data-uid=\\'' + pID + '\\']');\n        li.classList.remove(classNames.disable);\n        li.classList.add(classNames.focused);\n        if (this.showCheckBox && li.querySelector('.' + classNames.checkboxIcon).classList.contains(classNames.checked)) {\n            li.setAttribute('aria-selected', 'true');\n        }\n        else {\n            li.classList.remove(classNames.selected);\n            li.setAttribute('aria-selected', 'false');\n        }\n        this.liCollection = this.curUL.querySelectorAll('.' + classNames.listItem);\n        if (this.enableHtmlSanitizer) {\n            this.setProperties({ headerTitle: SanitizeHtmlHelper.sanitize(this.headerTitle) }, true);\n        }\n        this.header((this.curDSLevel.length ? text : this.headerTitle), (this.curDSLevel.length ? true : false), 'header');\n    }\n    /**\n     * Selects the list item from the ListView by passing the elements or field object.\n     *\n     * @param  {Fields | HTMLElement | Element} item - We can pass element Object or Fields as Object with ID and Text fields.\n     */\n    selectItem(item) {\n        if (this.enableVirtualization) {\n            this.virtualizationModule.selectItem(item);\n        }\n        else if (this.showCheckBox) {\n            this.setCheckboxLI(this.getLiFromObjOrElement(item));\n        }\n        else {\n            if (isNullOrUndefined(item) === true) {\n                this.removeSelect();\n            }\n            else {\n                this.setSelectLI(this.getLiFromObjOrElement(item));\n            }\n        }\n    }\n    getLiFromObjOrElement(obj) {\n        let li;\n        const dataSource = this.dataSource instanceof DataManager ?\n            this.localData : this.dataSource;\n        if (!isNullOrUndefined(obj)) {\n            if (typeof dataSource[0] === 'string' || typeof dataSource[0] === 'number') {\n                if (obj instanceof Element) {\n                    const uid = obj.getAttribute('data-uid').toString();\n                    for (let i = 0; i < this.liCollection.length; i++) {\n                        if (this.liCollection[i].getAttribute('data-uid').toString() === uid) {\n                            li = this.liCollection[i];\n                            break;\n                        }\n                    }\n                }\n                else {\n                    Array.prototype.some.call(this.curUL.querySelectorAll('.' + classNames.listItem), (item) => {\n                        if (item.innerText.trim() === obj.toString()) {\n                            li = item;\n                            return true;\n                        }\n                        else {\n                            return false;\n                        }\n                    });\n                }\n            }\n            else {\n                const resultJSON = this.getItemData(obj);\n                const fieldData = getFieldValues(resultJSON, this.listBaseOption.fields);\n                if (resultJSON) {\n                    li = this.element.querySelector('[data-uid=\"'\n                        + fieldData[this.fields.id] + '\"]');\n                    if (!this.enableVirtualization && isNullOrUndefined(li)) {\n                        const curLi = this.element.querySelectorAll('.' + classNames.listItem);\n                        for (let i = 0; i < curLi.length; i++) {\n                            // eslint-disable-next-line\n                            if (curLi[i].innerText.trim() === fieldData[this.fields.text]) {\n                                li = curLi[i];\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return li;\n    }\n    /**\n     * Selects multiple list items from the ListView.\n     *\n     * @param  {Fields[] | HTMLElement[] | Element[]} item - We can pass array of\n     *  elements or array of fields Object with ID and Text fields.\n     */\n    selectMultipleItems(item) {\n        if (!isNullOrUndefined(item)) {\n            for (let i = 0; i < item.length; i++) {\n                if (!isNullOrUndefined(item[i])) {\n                    this.selectItem(item[i]);\n                }\n            }\n        }\n    }\n    getParentId() {\n        const parentId = [];\n        if (this.isNestedList) {\n            for (let i = this.curDSLevel.length - 1; i >= 0; i--) {\n                parentId.push(this.curDSLevel[i]);\n            }\n        }\n        return parentId;\n    }\n    /**\n     * Gets the details of the currently selected item from the list items.\n     *\n     */\n    getSelectedItems() {\n        // eslint-disable-next-line\n        let finalValue;\n        let isCompleted = false;\n        this.selectedId = [];\n        const dataSource = this.dataSource instanceof DataManager ?\n            this.localData : this.dataSource;\n        if (this.enableVirtualization && !isCompleted) {\n            finalValue = this.virtualizationModule.getSelectedItems();\n            isCompleted = true;\n        }\n        else if (this.showCheckBox && !isCompleted) {\n            // eslint-disable-next-line\n            const liCollection = this.curUL.getElementsByClassName(classNames.selected);\n            const liTextCollection = [];\n            const liDataCollection = [];\n            this.selectedId = [];\n            const dataParent = [];\n            for (let i = 0; i < liCollection.length; i++) {\n                if (typeof dataSource[0] === 'string' || typeof dataSource[0] === 'number') {\n                    liTextCollection.push(liCollection[i].innerText.trim());\n                }\n                else {\n                    const tempData = this.getItemData(liCollection[i]);\n                    const fieldData = getFieldValues(tempData, this.listBaseOption.fields);\n                    if (this.isNestedList) {\n                        dataParent.push({ data: tempData, parentId: this.getParentId() });\n                    }\n                    else {\n                        liDataCollection.push(tempData);\n                    }\n                    if (fieldData) {\n                        // eslint-disable-next-line\n                        liTextCollection.push(fieldData[this.listBaseOption.fields.text]);\n                        // eslint-disable-next-line\n                        this.selectedId.push(fieldData[this.listBaseOption.fields.id]);\n                    }\n                    else {\n                        liTextCollection.push(undefined);\n                        this.selectedId.push(undefined);\n                    }\n                }\n            }\n            if ((typeof dataSource[0] === 'string'\n                || typeof dataSource[0] === 'number')\n                && !isCompleted) {\n                finalValue = { item: liCollection, data: dataSource, text: liTextCollection };\n                isCompleted = true;\n            }\n            if (this.isNestedList && !isCompleted) {\n                finalValue = { item: liCollection, data: dataParent, text: liTextCollection };\n                isCompleted = true;\n            }\n            else if (!isCompleted) {\n                finalValue = { item: liCollection, data: liDataCollection, text: liTextCollection };\n                isCompleted = true;\n            }\n        }\n        else if (!isCompleted) {\n            const liElement = this.element.getElementsByClassName(classNames.selected)[0];\n            const fieldData = getFieldValues(this.getItemData(liElement), this.listBaseOption.fields);\n            if ((typeof dataSource[0] === 'string'\n                || typeof dataSource[0] === 'number')\n                && !isCompleted) {\n                finalValue = (!isNullOrUndefined(liElement)) ? {\n                    item: liElement, data: dataSource,\n                    text: liElement.innerText.trim()\n                } : undefined;\n                isCompleted = true;\n            }\n            else if (!isCompleted) {\n                if (isNullOrUndefined(fieldData) || isNullOrUndefined(liElement)) {\n                    finalValue = undefined;\n                    isCompleted = true;\n                }\n                else {\n                    // eslint-disable-next-line\n                    this.selectedId.push(fieldData[this.listBaseOption.fields.id]);\n                    finalValue = {\n                        text: fieldData[this.listBaseOption.fields.text], item: liElement,\n                        data: this.getItemData(liElement)\n                    };\n                    isCompleted = true;\n                }\n            }\n        }\n        return finalValue;\n    }\n    /**\n     * Finds out an item details from the current list.\n     *\n     * @param  {Fields | HTMLElement | Element} item - We can pass element Object or Fields as Object with ID and Text fields.\n     */\n    findItem(item) {\n        return this.getItemData(item);\n    }\n    /**\n     * Enables the disabled list items by passing the Id and text fields.\n     *\n     * @param  {Fields | HTMLElement | Element} item - We can pass element Object or Fields as Object with ID and Text fields.\n     */\n    enableItem(item) {\n        this.setItemState(item, true);\n        if (this.enableVirtualization) {\n            this.virtualizationModule.enableItem(item);\n        }\n    }\n    /**\n     * Disables the list items by passing the Id and text fields.\n     *\n     * @param  {Fields | HTMLElement | Element} item - We can pass element Object or Fields as Object with ID and Text fields.\n     */\n    disableItem(item) {\n        this.setItemState(item, false);\n        if (this.enableVirtualization) {\n            this.virtualizationModule.disableItem(item);\n        }\n    }\n    //A function that used to set state of the list item like enable, disable.\n    setItemState(item, isEnable) {\n        const resultJSON = this.getItemData(item);\n        const fieldData = getFieldValues(resultJSON, this.listBaseOption.fields);\n        if (resultJSON) {\n            const li = this.element.querySelector('[data-uid=\"' + fieldData[this.fields.id] + '\"]');\n            if (isEnable) {\n                if (li) {\n                    li.classList.remove(classNames.disable);\n                }\n                delete resultJSON[this.fields.enabled];\n            }\n            else if (!isEnable) {\n                if (li) {\n                    li.classList.add(classNames.disable);\n                }\n                // eslint-disable-next-line\n                resultJSON[this.fields.enabled] = false;\n            }\n        }\n    }\n    /**\n     * Shows the hide list item from the ListView.\n     *\n     * @param  {Fields | HTMLElement | Element} item - We can pass element Object or Fields as Object with ID and Text fields.\n     */\n    showItem(item) {\n        this.showHideItem(item, false, '');\n        if (this.enableVirtualization) {\n            this.virtualizationModule.showItem(item);\n        }\n    }\n    /**\n     * Hides an list item from the ListView.\n     *\n     * @param  {Fields | HTMLElement | Element} item - We can pass element Object or Fields as Object with ID and Text fields.\n     */\n    hideItem(item) {\n        this.showHideItem(item, true, 'none');\n        if (this.enableVirtualization) {\n            this.virtualizationModule.hideItem(item);\n        }\n    }\n    showHideItem(obj, isHide, display) {\n        const resultJSON = this.getItemData(obj);\n        const fieldData = getFieldValues(resultJSON, this.listBaseOption.fields);\n        if (resultJSON) {\n            const li = this.element.querySelector('[data-uid=\"' + fieldData[this.fields.id] + '\"]');\n            if (li) {\n                li.style.display = display;\n            }\n            if (isHide) {\n                // eslint-disable-next-line\n                resultJSON[this.fields.isVisible] = false;\n            }\n            else {\n                delete resultJSON[this.fields.isVisible];\n            }\n        }\n    }\n    /**\n     * Adds the new list item(s) to the current ListView.\n     * To add a new list item(s) in the ListView, we need to pass the `data` as an array of items that need\n     * to be added and `fields` as the target item to which we need to add the given item(s) as its children.\n     * For example fields: { text: 'Name', tooltip: 'Name', id:'id'}\n     *\n     * @param  {{Object}[]} data - JSON Array Data that need to add.\n     *\n     * @param  {Fields} fields - Target item to add the given data as its children (can be null).\n     *\n     */\n    addItem(data, fields = undefined) {\n        const dataSource = this.dataSource instanceof DataManager\n            ? this.localData : this.dataSource;\n        this.addItemInternally(data, fields, dataSource);\n    }\n    addItemInternally(data, fields, dataSource) {\n        if (data instanceof Array) {\n            if (this.enableVirtualization) {\n                this.virtualizationModule.addItem(data, fields, dataSource);\n            }\n            else {\n                const ds = this.findItemFromDS(dataSource, fields);\n                let child;\n                if (ds) {\n                    const fieldData = getFieldValues(ds, this.listBaseOption.fields);\n                    child = fieldData[this.fields.child];\n                    if (!child) {\n                        child = [];\n                    }\n                    child = child.concat(data);\n                }\n                // check for whether target is nested level or top level in list\n                if (ds instanceof Array) {\n                    for (let i = 0; i < data.length; i++) {\n                        dataSource.push(data[i]);\n                        this.setViewDataSource(dataSource);\n                        // since it is top level target, get the content container's first child\n                        // as it is always the top level UL\n                        const targetUL = this.contentContainer\n                            ? this.contentContainer.children[0]\n                            : null;\n                        // check for whether the list was previously empty or not, if it is\n                        // proceed to call initial render\n                        if (this.contentContainer && targetUL) {\n                            this.addItemIntoDom(data[i], targetUL, this.curViewDS);\n                        }\n                        else {\n                            this.reRender();\n                        }\n                    }\n                    this.liCollection = this.curUL.querySelectorAll('.' + classNames.listItem);\n                }\n                else {\n                    // proceed as target item is in nested level, only if it is a valid target ds\n                    if (ds) {\n                        ds[this.fields.child] = child;\n                        this.addItemInNestedList(ds, data);\n                    }\n                }\n            }\n        }\n    }\n    addItemInNestedList(targetItemData, itemQueue) {\n        // eslint-disable-next-line\n        const targetItemId = targetItemData[this.fields.id];\n        const targetChildDS = targetItemData[this.fields.child];\n        const isAlreadyRenderedUL = this.element.querySelector('[pid=\\'' + targetItemId + '\\']');\n        const targetLi = this.element.querySelector('[data-uid=\\'' + targetItemId + '\\']');\n        const targetUL = isAlreadyRenderedUL\n            ? isAlreadyRenderedUL\n            : targetLi\n                ? closest(targetLi, 'ul')\n                : null;\n        const targetDS = isAlreadyRenderedUL ? targetChildDS : [targetItemData];\n        const isTargetEmptyChild = targetLi ? !targetLi.classList.contains(classNames.hasChild) : false;\n        if (isTargetEmptyChild) {\n            const targetRefreshedElement = ListBase.createListItemFromJson(this.createElement, targetDS, this.listBaseOption, null, null, this);\n            this.setAttributes(targetRefreshedElement);\n            targetUL.insertBefore(targetRefreshedElement[0], targetLi);\n            detach(targetLi);\n            \n        }\n        // if it is already rendered element, we need to create and append new elements\n        if (isAlreadyRenderedUL && itemQueue) {\n            for (let i = 0; i < itemQueue.length; i++) {\n                targetDS.push(itemQueue[i]);\n                this.addItemIntoDom(itemQueue[i], targetUL, targetDS);\n            }\n            \n        }\n    }\n    addItemIntoDom(currentItem, targetUL, curViewDS) {\n        const index = curViewDS.indexOf(currentItem);\n        this.addListItem(currentItem, index, targetUL, curViewDS);\n        const curItemDS = curViewDS[index - 1];\n        if (curItemDS && curItemDS.isHeader && curItemDS.items.length === 1) {\n            this.addListItem(curItemDS, (index - 1), targetUL, curViewDS);\n        }\n    }\n    addListItem(dataSource, index, ulElement, curViewDS) {\n        let target = this.getLiFromObjOrElement(curViewDS[index + 1]) ||\n            this.getLiFromObjOrElement(curViewDS[index + 2]) || null;\n        const li = ListBase.createListItemFromJson(this.createElement, [dataSource], this.listBaseOption, null, null, this);\n        this.setAttributes(li);\n        // eslint-disable-next-line\n        if (this.template && this.isReact) {\n            this.renderReactTemplates();\n        }\n        if (this.fields.groupBy && curViewDS[index + 1] && curViewDS[index + 1].isHeader) {\n            let targetEle = this.getLiFromObjOrElement(curViewDS[index - 1]);\n            if (targetEle) {\n                target = targetEle.nextElementSibling;\n            }\n        }\n        ulElement.insertBefore(li[0], target);\n    }\n    /**\n     * Removes the list item from the data source based on a passed\n     *  element like fields: { text: 'Name', tooltip: 'Name', id:'id'}\n     *\n     * @param  {Fields | HTMLElement | Element} item - We can pass element Object or Fields as Object with ID and Text fields.\n     */\n    removeItem(item) {\n        const listDataSource = this.dataSource instanceof DataManager\n            ? this.localData : this.dataSource;\n        if (this.enableVirtualization) {\n            this.virtualizationModule.removeItem(item);\n        }\n        else {\n            this.removeItemFromList(item, listDataSource);\n        }\n    }\n    removeItemFromList(obj, listDataSource) {\n        const curViewDS = this.curViewDS;\n        const fields = obj instanceof Element ? this.getElementUID(obj) : obj;\n        let dataSource;\n        // eslint-disable-next-line prefer-const\n        dataSource = this.findItemFromDS(listDataSource, fields, true);\n        if (dataSource) {\n            let data;\n            // eslint-disable-next-line prefer-const\n            data = this.findItemFromDS(dataSource, fields);\n            const index = curViewDS.indexOf(data);\n            const li = this.getLiFromObjOrElement(obj);\n            let groupLi;\n            this.validateNestedView(li);\n            if (this.fields.groupBy && this.curViewDS[index - 1] &&\n                curViewDS[index - 1].isHeader &&\n                curViewDS[index - 1].items.length === 1) {\n                if (li && li.previousElementSibling.classList.contains(classNames.groupListItem) &&\n                    (isNullOrUndefined(li.nextElementSibling) || (li.nextElementSibling &&\n                        li.nextElementSibling.classList.contains(classNames.groupListItem)))) {\n                    groupLi = li.previousElementSibling;\n                }\n            }\n            if (li) {\n                detach(li);\n            }\n            if (groupLi) {\n                detach(groupLi);\n            }\n            // eslint-disable-next-line\n            const foundData = (dataSource.length - 1) <= 0\n                ? this.findParent(this.localData, this.fields.id, \n                // eslint-disable-next-line\n                (value) => value === data[this.fields.id], null) : null;\n            const dsIndex = dataSource.indexOf(data);\n            dataSource.splice(dsIndex, 1);\n            this.setViewDataSource(listDataSource);\n            if (foundData\n                && foundData.parent\n                && Array.isArray(foundData.parent[this.fields.child])\n                && foundData.parent[this.fields.child].length <= 0) {\n                const parentLi = this.getLiFromObjOrElement(foundData.parent);\n                if (parentLi) {\n                    const li = ListBase.createListItemFromJson(this.createElement, [foundData.parent], this.listBaseOption, null, null, this);\n                    this.setAttributes(li);\n                    parentLi.parentElement.insertBefore(li[0], parentLi);\n                    parentLi.parentElement.removeChild(parentLi);\n                }\n            }\n            if (dataSource.length <= 0) {\n                this.back();\n            }\n            this.liCollection = Array.prototype.slice.call(this.element.querySelectorAll('.' + classNames.listItem));\n        }\n    }\n    // validate before removing an element whether the current view is inside target element's child view\n    validateNestedView(li) {\n        const liID = li ? li.getAttribute('data-uid').toString().toLowerCase() : null;\n        if (liID && this.curDSLevel && this.curDSLevel.length > 0) {\n            while (this.curDSLevel.some((id) => id.toString().toLowerCase() === liID)) {\n                this.back();\n            }\n        }\n    }\n    /**\n     * Removes multiple items from the ListView by passing the array of elements or array of field objects.\n     *\n     * @param  {Fields[] | HTMLElement[] | Element[]} item - We can pass array of elements or array of field Object with ID and Text fields.\n     */\n    removeMultipleItems(item) {\n        if (item.length) {\n            for (let i = 0; i < item.length; i++) {\n                this.removeItem(item[i]);\n            }\n        }\n    }\n    // eslint-disable-next-line\n    findParent(dataSource, id, callback, parent) {\n        // eslint-disable-next-line no-prototype-builtins\n        if (dataSource.hasOwnProperty(id) && callback(dataSource[id]) === true) {\n            return extend({}, dataSource);\n        }\n        for (let i = 0; i < Object.keys(dataSource).length; i++) {\n            if (dataSource[Object.keys(dataSource)[i]]\n                && typeof dataSource[Object.keys(dataSource)[i]] === 'object') {\n                // eslint-disable-next-line\n                const result = this.findParent(dataSource[Object.keys(dataSource)[i]], id, callback, dataSource);\n                if (result != null) {\n                    if (!result.parent) {\n                        result.parent = parent;\n                    }\n                    return result;\n                }\n            }\n        }\n        return null;\n    }\n    // Module Required function\n    getModuleName() {\n        return 'listview';\n    }\n    requiredModules() {\n        const modules = [];\n        if (this.enableVirtualization) {\n            modules.push({ args: [this], member: 'virtualization' });\n        }\n        return modules;\n    }\n    /**\n     * Get the properties to be maintained in the persisted state.\n     */\n    getPersistData() {\n        return this.addOnPersist(['cssClass', 'enableRtl', 'htmlAttributes',\n            'enable', 'fields', 'animation', 'headerTitle',\n            'sortOrder', 'showIcon', 'height', 'width', 'showCheckBox', 'checkBoxPosition']);\n    }\n};\n__decorate([\n    Property('')\n], ListView.prototype, \"cssClass\", void 0);\n__decorate([\n    Property(false)\n], ListView.prototype, \"enableVirtualization\", void 0);\n__decorate([\n    Property({})\n], ListView.prototype, \"htmlAttributes\", void 0);\n__decorate([\n    Property(true)\n], ListView.prototype, \"enable\", void 0);\n__decorate([\n    Property([])\n], ListView.prototype, \"dataSource\", void 0);\n__decorate([\n    Property()\n], ListView.prototype, \"query\", void 0);\n__decorate([\n    Complex(ListBase.defaultMappedFields, FieldSettings)\n], ListView.prototype, \"fields\", void 0);\n__decorate([\n    Property({ effect: 'SlideLeft', duration: 400, easing: 'ease' })\n], ListView.prototype, \"animation\", void 0);\n__decorate([\n    Property('None')\n], ListView.prototype, \"sortOrder\", void 0);\n__decorate([\n    Property(false)\n], ListView.prototype, \"showIcon\", void 0);\n__decorate([\n    Property(false)\n], ListView.prototype, \"showCheckBox\", void 0);\n__decorate([\n    Property('Left')\n], ListView.prototype, \"checkBoxPosition\", void 0);\n__decorate([\n    Property('')\n], ListView.prototype, \"headerTitle\", void 0);\n__decorate([\n    Property(false)\n], ListView.prototype, \"showHeader\", void 0);\n__decorate([\n    Property(false)\n], ListView.prototype, \"enableHtmlSanitizer\", void 0);\n__decorate([\n    Property('')\n], ListView.prototype, \"height\", void 0);\n__decorate([\n    Property('')\n], ListView.prototype, \"width\", void 0);\n__decorate([\n    Property(null)\n], ListView.prototype, \"template\", void 0);\n__decorate([\n    Property(null)\n], ListView.prototype, \"headerTemplate\", void 0);\n__decorate([\n    Property(null)\n], ListView.prototype, \"groupTemplate\", void 0);\n__decorate([\n    Event()\n], ListView.prototype, \"select\", void 0);\n__decorate([\n    Event()\n], ListView.prototype, \"actionBegin\", void 0);\n__decorate([\n    Event()\n], ListView.prototype, \"actionComplete\", void 0);\n__decorate([\n    Event()\n], ListView.prototype, \"actionFailure\", void 0);\nListView = __decorate([\n    NotifyPropertyChanges\n], ListView);\n\nconst listElementCount = 1.5;\nconst windowElementCount = 3;\nclass Virtualization {\n    constructor(instance) {\n        this.elementDifference = 0;\n        this.listViewInstance = instance;\n    }\n    /**\n     * For internal use only.\n     *\n     * @private\n     */\n    isNgTemplate() {\n        return !isNullOrUndefined(this.listViewInstance.templateRef) && typeof this.listViewInstance.templateRef !== 'string';\n    }\n    /**\n     * For internal use only.\n     *\n     * @private\n     */\n    uiVirtualization() {\n        this.wireScrollEvent(false);\n        const curViewDS = this.listViewInstance.curViewDS;\n        const firstDs = curViewDS.slice(0, 1);\n        this.listViewInstance.ulElement = this.listViewInstance.curUL = ListBase.createList(\n        // eslint-disable-next-line\n        this.listViewInstance.createElement, firstDs, this.listViewInstance.listBaseOption, null, this.listViewInstance);\n        this.listViewInstance.contentContainer = this.listViewInstance.createElement('div', { className: classNames.content });\n        this.listViewInstance.element.appendChild(this.listViewInstance.contentContainer);\n        this.listViewInstance.contentContainer.appendChild(this.listViewInstance.ulElement);\n        this.listItemHeight = this.listViewInstance.ulElement.firstElementChild.getBoundingClientRect().height;\n        this.expectedDomItemCount = this.ValidateItemCount(10000);\n        this.domItemCount = this.ValidateItemCount(Object.keys(this.listViewInstance.curViewDS).length);\n        this.uiFirstIndex = 0;\n        this.uiLastIndex = this.domItemCount - 1;\n        const otherDs = curViewDS.slice(1, this.domItemCount);\n        const listItems = ListBase.createListItemFromJson(\n        // eslint-disable-next-line\n        this.listViewInstance.createElement, otherDs, this.listViewInstance.listBaseOption, null, null, this.listViewInstance);\n        append(listItems, this.listViewInstance.ulElement);\n        this.listViewInstance.liCollection = this.listViewInstance.curUL.querySelectorAll('li');\n        this.topElement = this.listViewInstance.createElement('div');\n        this.listViewInstance.ulElement.insertBefore(this.topElement, this.listViewInstance.ulElement.firstElementChild);\n        this.bottomElement = this.listViewInstance.createElement('div');\n        this.listViewInstance.ulElement.insertBefore(this.bottomElement, null);\n        this.totalHeight = (Object.keys(curViewDS).length * this.listItemHeight) - (this.domItemCount * this.listItemHeight);\n        this.topElement.style.height = 0 + 'px';\n        this.bottomElement.style.height = this.totalHeight + 'px';\n        this.topElementHeight = 0;\n        this.bottomElementHeight = this.totalHeight;\n        this.listDiff = 0;\n        this.uiIndicesInitialization();\n    }\n    wireScrollEvent(destroy) {\n        if (!destroy) {\n            if (this.listViewInstance.isWindow) {\n                this.onVirtualScroll = this.onVirtualUiScroll.bind(this);\n                window.addEventListener('scroll', this.onVirtualScroll);\n            }\n            else {\n                EventHandler.add(this.listViewInstance.element, 'scroll', this.onVirtualUiScroll, this);\n            }\n        }\n        else {\n            if (this.listViewInstance.isWindow === true) {\n                window.removeEventListener('scroll', this.onVirtualScroll);\n                window.removeEventListener('scroll', this.updateUl);\n            }\n            else {\n                EventHandler.remove(this.listViewInstance.element, 'scroll', this.onVirtualUiScroll);\n                EventHandler.remove(this.listViewInstance.element, 'scroll', this.updateUlContainer);\n            }\n        }\n    }\n    updateUlContainer(e) {\n        let listDiff;\n        const virtualElementContainer = this.listViewInstance.ulElement.querySelector('.' + classNames.virtualElementContainer);\n        if (isNullOrUndefined(this.listViewInstance.liElementHeight)) {\n            this.listViewInstance.updateLiElementHeight();\n        }\n        if (this.listViewInstance.isWindow) {\n            // eslint-disable-next-line\n            listDiff = Math.round(e.target.documentElement.scrollTop / this.listViewInstance.liElementHeight) - 2;\n        }\n        else {\n            // eslint-disable-next-line\n            listDiff = Math.round(e.target.scrollTop / this.listViewInstance.liElementHeight) - 2;\n        }\n        if (((listDiff - 1) * this.listViewInstance.liElementHeight) < 0) {\n            virtualElementContainer.style.top = '0px';\n        }\n        else {\n            virtualElementContainer.style.top = (listDiff) * this.listViewInstance.liElementHeight + 'px';\n        }\n    }\n    ValidateItemCount(dataSourceLength) {\n        const height = parseFloat(formatUnit(this.listViewInstance.height));\n        let itemCount;\n        if (this.listViewInstance.isWindow) {\n            itemCount = Math.round((window.innerHeight / this.listItemHeight) * windowElementCount);\n        }\n        else {\n            if (typeof this.listViewInstance.height === 'string' && this.listViewInstance.height.indexOf('%') !== -1) {\n                // eslint-disable-next-line max-len\n                itemCount = Math.round((this.listViewInstance.element.getBoundingClientRect().height / this.listItemHeight) * listElementCount);\n            }\n            else {\n                itemCount = Math.round((height / this.listItemHeight) * listElementCount);\n            }\n        }\n        if (itemCount > dataSourceLength) {\n            itemCount = dataSourceLength;\n        }\n        return itemCount;\n    }\n    uiIndicesInitialization() {\n        this.uiIndices = { 'activeIndices': [], 'disabledItemIndices': [], 'hiddenItemIndices': [] };\n        const data = this.listViewInstance.curViewDS;\n        for (let i = 0; i < data.length; i++) {\n            if (this.listViewInstance.showCheckBox && data[i][this.listViewInstance.fields.isChecked]) {\n                this.uiIndices.activeIndices.push(i);\n            }\n            // eslint-disable-next-line\n            if (!isNullOrUndefined(data[i][this.listViewInstance.fields.enabled]) &&\n                !data[i][this.listViewInstance.fields.enabled]) {\n                // eslint-disable-next-line\n                (this.uiIndices.disabledItemIndices.push(i));\n            }\n        }\n        if (this.isNgTemplate()) {\n            const items = this.listViewInstance.element.querySelectorAll('.' + classNames.listItem);\n            for (let index = 0; index < items.length; index++) {\n                items[index].context = this.listViewInstance.viewContainerRef.get(index).context;\n            }\n        }\n    }\n    refreshItemHeight() {\n        if (this.listViewInstance.curViewDS.length) {\n            const curViewDS = this.listViewInstance.curViewDS;\n            this.listItemHeight = this.topElement.nextSibling.getBoundingClientRect().height;\n            this.totalHeight = (Object.keys(curViewDS).length * this.listItemHeight) - (this.domItemCount * this.listItemHeight);\n            this.bottomElementHeight = this.totalHeight;\n            this.bottomElement.style.height = this.totalHeight + 'px';\n        }\n    }\n    getscrollerHeight(startingHeight) {\n        return this.listViewInstance.isWindow ? (((pageYOffset - startingHeight) <= 0) ? 0 :\n            (pageYOffset - startingHeight)) : ((this.listViewInstance.element.scrollTop - startingHeight) <= 0) ? 0 :\n            (this.listViewInstance.element.scrollTop - startingHeight);\n    }\n    onVirtualUiScroll(e) {\n        let startingHeight;\n        if (this.listViewInstance.isWindow) {\n            startingHeight = this.listViewInstance.ulElement.getBoundingClientRect().top -\n                document.documentElement.getBoundingClientRect().top;\n        }\n        else {\n            startingHeight = this.listViewInstance.headerEle ? this.listViewInstance.headerEle.getBoundingClientRect().height : 0;\n        }\n        this.scrollPosition = isNullOrUndefined(this.scrollPosition) ? 0 : this.scrollPosition;\n        const scroll = this.getscrollerHeight(startingHeight);\n        this.topElementHeight = this.listItemHeight * Math.floor(scroll / this.listItemHeight);\n        this.bottomElementHeight = this.totalHeight - this.topElementHeight;\n        [this.topElementHeight, this.bottomElementHeight] = scroll <= this.totalHeight ?\n            [this.topElementHeight, this.bottomElementHeight] : [this.totalHeight, 0];\n        if (this.topElementHeight !== parseFloat(this.topElement.style.height)) {\n            this.topElement.style.height = this.topElementHeight + 'px';\n            this.bottomElement.style.height = this.bottomElementHeight + 'px';\n            if (scroll > this.scrollPosition) {\n                const listDiff = Math.round(((this.topElementHeight / this.listItemHeight) - this.listDiff));\n                if (listDiff > (this.expectedDomItemCount + 5)) {\n                    this.onLongScroll(listDiff, true);\n                }\n                else {\n                    this.onNormalScroll(listDiff, true);\n                }\n            }\n            else {\n                const listDiff = Math.round((this.listDiff - (this.topElementHeight / this.listItemHeight)));\n                if (listDiff > (this.expectedDomItemCount + 5)) {\n                    this.onLongScroll(listDiff, false);\n                }\n                else {\n                    this.onNormalScroll(listDiff, false);\n                }\n            }\n        }\n        this.listDiff = Math.round(this.topElementHeight / this.listItemHeight);\n        if (typeof this.listViewInstance.onUIScrolled === 'function') {\n            this.listViewInstance.onUIScrolled();\n        }\n        this.scrollPosition = scroll;\n    }\n    onLongScroll(listDiff, isScrollingDown) {\n        let index = isScrollingDown ? (this.uiFirstIndex + listDiff) : (this.uiFirstIndex - listDiff);\n        const elements = this.listViewInstance.ulElement.querySelectorAll('li');\n        for (let i = 0; i < elements.length; i++) {\n            this.updateUI(elements[i], index);\n            index++;\n        }\n        this.uiLastIndex = isScrollingDown ? (this.uiLastIndex + listDiff) : (this.uiLastIndex - listDiff);\n        this.uiFirstIndex = isScrollingDown ? (this.uiFirstIndex + listDiff) : (this.uiFirstIndex - listDiff);\n    }\n    onNormalScroll(listDiff, isScrollingDown) {\n        if (isScrollingDown) {\n            for (let i = 0; i < listDiff; i++) {\n                const index = ++this.uiLastIndex;\n                this.updateUI(this.topElement.nextElementSibling, index, this.bottomElement);\n                this.uiFirstIndex++;\n            }\n        }\n        else {\n            for (let i = 0; i < listDiff; i++) {\n                const index = --this.uiFirstIndex;\n                const target = this.topElement.nextSibling;\n                this.updateUI(this.bottomElement.previousElementSibling, index, target);\n                this.uiLastIndex--;\n            }\n        }\n    }\n    updateUiContent(element, index) {\n        // eslint-disable-next-line\n        const curViewDs = this.listViewInstance.curViewDS;\n        if (typeof this.listViewInstance.dataSource[0] === 'string' ||\n            typeof this.listViewInstance.dataSource[0] === 'number') {\n            element.dataset.uid = ListBase.generateId();\n            element.getElementsByClassName(classNames.listItemText)[0].innerHTML =\n                this.listViewInstance.curViewDS[index].toString();\n        }\n        else {\n            // eslint-disable-next-line\n            element.dataset.uid = (curViewDs[index][this.listViewInstance.fields.id]) ?\n                // eslint-disable-next-line\n                (curViewDs[index][this.listViewInstance.fields.id]) : ListBase.generateId();\n            element.getElementsByClassName(classNames.listItemText)[0].innerHTML =\n                // eslint-disable-next-line\n                (curViewDs[index][this.listViewInstance.fields.text]);\n        }\n        if (this.listViewInstance.showIcon) {\n            if (element.querySelector('.' + classNames.listIcon)) {\n                detach(element.querySelector('.' + classNames.listIcon));\n            }\n            if (this.listViewInstance.curViewDS[index][this.listViewInstance.fields.iconCss]) {\n                const textContent = element.querySelector('.' + classNames.textContent);\n                const target = this.listViewInstance.createElement('div', {\n                    className: classNames.listIcon + ' ' +\n                        this.listViewInstance.curViewDS[index][this.listViewInstance.fields.iconCss]\n                });\n                textContent.insertBefore(target, element.querySelector('.' + classNames.listItemText));\n            }\n        }\n        if (this.listViewInstance.showCheckBox && this.listViewInstance.fields.groupBy) {\n            if (!this.checkListWrapper) {\n                this.checkListWrapper = this.listViewInstance.curUL.querySelector('.' + classNames.checkboxWrapper).cloneNode(true);\n            }\n            const textContent = element.querySelector('.' + classNames.textContent);\n            if (this.listViewInstance.curViewDS[index].isHeader) {\n                if (element.querySelector('.' + classNames.checkboxWrapper)) {\n                    element.classList.remove(classNames.checklist);\n                    textContent.classList.remove(classNames.checkbox);\n                    detach(element.querySelector('.' + classNames.checkboxWrapper));\n                }\n            }\n            else {\n                if (!element.querySelector('.' + classNames.checkboxWrapper)) {\n                    element.classList.add(classNames.checklist);\n                    textContent.classList.add(classNames.checkbox);\n                    textContent.insertBefore(this.checkListWrapper.cloneNode(true), element.querySelector('.' + classNames.listItemText));\n                }\n            }\n        }\n    }\n    changeElementAttributes(element, index) {\n        element.classList.remove(classNames.disable);\n        if (this.uiIndices.disabledItemIndices.length && this.uiIndices.disabledItemIndices.indexOf(index) !== -1) {\n            element.classList.add(classNames.disable);\n        }\n        element.style.display = '';\n        if (this.uiIndices.hiddenItemIndices.length && this.uiIndices.hiddenItemIndices.indexOf(index) !== -1) {\n            element.style.display = 'none';\n        }\n        if (this.listViewInstance.showCheckBox) {\n            const checklistElement = element.querySelector('.' + classNames.checkboxWrapper);\n            element.classList.remove(classNames.selected);\n            element.classList.remove(classNames.focused);\n            if (checklistElement) {\n                checklistElement.removeAttribute('aria-checked');\n                checklistElement.firstElementChild.classList.remove(classNames.checked);\n            }\n            if (this.uiIndices.activeIndices.length && this.uiIndices.activeIndices.indexOf(index) !== -1 &&\n                !this.listViewInstance.curUL.querySelector(classNames.selected)) {\n                element.classList.add(classNames.selected);\n                checklistElement.firstElementChild.classList.add(classNames.checked);\n                checklistElement.setAttribute('aria-checked', 'true');\n                if (this.activeIndex === index) {\n                    element.classList.add(classNames.focused);\n                }\n            }\n        }\n        else {\n            element.classList.remove(classNames.selected);\n            element.removeAttribute('aria-selected');\n            if (!isNullOrUndefined(this.activeIndex) && this.activeIndex === index &&\n                !this.listViewInstance.curUL.querySelector(classNames.selected)) {\n                element.classList.add(classNames.selected);\n                element.setAttribute('aria-selected', 'true');\n            }\n        }\n        if (this.listViewInstance.fields.groupBy) {\n            if (this.listViewInstance.curViewDS[index].isHeader) {\n                if (element.classList.contains(classNames.listItem)) {\n                    element.classList.remove(classNames.listItem);\n                    element.setAttribute('role', 'group');\n                    element.classList.add(classNames.groupListItem);\n                }\n            }\n            else {\n                if (element.classList.contains(classNames.groupListItem)) {\n                    element.classList.remove(classNames.groupListItem);\n                    element.setAttribute('role', 'listitem');\n                    element.classList.add(classNames.listItem);\n                }\n            }\n        }\n    }\n    findDSAndIndexFromId(ds, fields) {\n        const resultJSON = {};\n        fields = this.listViewInstance.getElementUID(fields);\n        if (!isNullOrUndefined(fields)) {\n            ds.some((data, index) => {\n                if ((fields[this.listViewInstance.fields.id] &&\n                    // eslint-disable-next-line\n                    fields[this.listViewInstance.fields.id]\n                        // eslint-disable-next-line\n                        === (data[this.listViewInstance.fields.id] && data[this.listViewInstance.fields.id]) || fields === data)) {\n                    resultJSON.index = index;\n                    resultJSON.data = data;\n                    return true;\n                }\n                else {\n                    return false;\n                }\n            });\n        }\n        return resultJSON;\n    }\n    getSelectedItems() {\n        if (!isNullOrUndefined(this.activeIndex) || (this.listViewInstance.showCheckBox && this.uiIndices.activeIndices.length)) {\n            const dataCollection = [];\n            const textCollection = [];\n            if (typeof this.listViewInstance.dataSource[0] === 'string' ||\n                typeof this.listViewInstance.dataSource[0] === 'number') {\n                const curViewDS = this.listViewInstance.curViewDS;\n                if (this.listViewInstance.showCheckBox) {\n                    const indices = this.uiIndices.activeIndices;\n                    for (let i = 0; i < indices.length; i++) {\n                        dataCollection.push(curViewDS[indices[i]]);\n                    }\n                    return {\n                        text: dataCollection,\n                        // eslint-disable-next-line\n                        data: dataCollection,\n                        index: this.uiIndices.activeIndices.map((index) => this.listViewInstance.dataSource.indexOf(curViewDS[index]))\n                    };\n                }\n                else {\n                    return {\n                        text: curViewDS[this.activeIndex],\n                        data: curViewDS[this.activeIndex],\n                        index: this.listViewInstance.dataSource.indexOf(curViewDS[this.activeIndex])\n                    };\n                }\n            }\n            else {\n                const curViewDS = this.listViewInstance.curViewDS;\n                const text = this.listViewInstance.fields.text;\n                if (this.listViewInstance.showCheckBox) {\n                    const indexArray = this.uiIndices.activeIndices;\n                    for (let i = 0; i < indexArray.length; i++) {\n                        textCollection.push(curViewDS[indexArray[i]][text]);\n                        // eslint-disable-next-line\n                        dataCollection.push(curViewDS[indexArray[i]]);\n                    }\n                    // eslint-disable-next-line\n                    const dataSource = this.listViewInstance.dataSource instanceof DataManager\n                        ? curViewDS : this.listViewInstance.dataSource;\n                    return {\n                        text: textCollection,\n                        // eslint-disable-next-line\n                        data: dataCollection,\n                        index: this.uiIndices.activeIndices.map((index) => dataSource.indexOf(curViewDS[index]))\n                    };\n                }\n                else {\n                    // eslint-disable-next-line\n                    const dataSource = this.listViewInstance.dataSource instanceof DataManager\n                        ? curViewDS : this.listViewInstance.dataSource;\n                    return {\n                        text: curViewDS[this.activeIndex][this.listViewInstance.fields.text],\n                        // eslint-disable-next-line\n                        data: curViewDS[this.activeIndex],\n                        index: dataSource.indexOf(curViewDS[this.activeIndex])\n                    };\n                }\n            }\n        }\n        else {\n            return undefined;\n        }\n    }\n    selectItem(obj) {\n        // eslint-disable-next-line\n        const resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n        if (Object.keys(resutJSON).length) {\n            const isSelected = this.activeIndex === resutJSON.index;\n            let isChecked;\n            this.activeIndex = resutJSON.index;\n            if (this.listViewInstance.showCheckBox) {\n                if (this.uiIndices.activeIndices.indexOf(resutJSON.index) === -1) {\n                    isChecked = true;\n                    this.uiIndices.activeIndices.push(resutJSON.index);\n                }\n                else {\n                    isChecked = false;\n                    this.uiIndices.activeIndices.splice(this.uiIndices.activeIndices.indexOf(resutJSON.index), 1);\n                }\n                if (this.listViewInstance.curUL.querySelector('.' + classNames.focused)) {\n                    this.listViewInstance.curUL.querySelector('.' + classNames.focused).classList.remove(classNames.focused);\n                }\n            }\n            if (this.listViewInstance.getLiFromObjOrElement(obj)) {\n                if (this.listViewInstance.showCheckBox) {\n                    this.listViewInstance.setCheckboxLI(this.listViewInstance.getLiFromObjOrElement(obj));\n                }\n                else {\n                    this.listViewInstance.setSelectLI(this.listViewInstance.getLiFromObjOrElement(obj));\n                }\n            }\n            else {\n                // eslint-disable-next-line\n                let eventArgs;\n                if (typeof this.listViewInstance.dataSource[0] === 'string' ||\n                    typeof this.listViewInstance.dataSource[0] === 'number') {\n                    eventArgs = {\n                        text: this.listViewInstance.curViewDS[this.activeIndex],\n                        data: this.listViewInstance.curViewDS[this.activeIndex],\n                        index: this.activeIndex\n                    };\n                }\n                else {\n                    const curViewDS = this.listViewInstance.curViewDS;\n                    eventArgs = {\n                        text: curViewDS[this.activeIndex][this.listViewInstance.fields.text],\n                        data: curViewDS[this.activeIndex],\n                        index: this.activeIndex\n                    };\n                }\n                if (this.listViewInstance.showCheckBox) {\n                    eventArgs.isChecked = isChecked;\n                    this.listViewInstance.trigger('select', eventArgs);\n                }\n                else if (!isSelected) {\n                    this.listViewInstance.removeSelect();\n                    this.listViewInstance.trigger('select', eventArgs);\n                }\n            }\n        }\n        else if (isNullOrUndefined(obj) && !this.listViewInstance.showCheckBox) {\n            this.listViewInstance.removeSelect();\n            this.activeIndex = undefined;\n        }\n    }\n    enableItem(obj) {\n        // eslint-disable-next-line\n        const resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n        if (Object.keys(resutJSON).length) {\n            this.uiIndices.disabledItemIndices.splice(this.uiIndices.disabledItemIndices.indexOf(resutJSON.index), 1);\n        }\n    }\n    disableItem(obj) {\n        // eslint-disable-next-line\n        const resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n        if (Object.keys(resutJSON).length && this.uiIndices.disabledItemIndices.indexOf(resutJSON.index) === -1) {\n            this.uiIndices.disabledItemIndices.push(resutJSON.index);\n        }\n    }\n    showItem(obj) {\n        // eslint-disable-next-line\n        const resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n        if (Object.keys(resutJSON).length) {\n            this.uiIndices.hiddenItemIndices.splice(this.uiIndices.hiddenItemIndices.indexOf(resutJSON.index), 1);\n        }\n    }\n    hideItem(obj) {\n        // eslint-disable-next-line\n        const resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n        if (Object.keys(resutJSON).length && this.uiIndices.hiddenItemIndices.indexOf(resutJSON.index) === -1) {\n            this.uiIndices.hiddenItemIndices.push(resutJSON.index);\n        }\n    }\n    removeItem(obj) {\n        let dataSource;\n        const curViewDS = this.listViewInstance.curViewDS;\n        // eslint-disable-next-line\n        const resutJSON = this.findDSAndIndexFromId(curViewDS, obj);\n        // eslint-disable-next-line\n        if (Object.keys(resutJSON).length) {\n            dataSource = resutJSON.data;\n            if (curViewDS[resutJSON.index - 1] &&\n                curViewDS[resutJSON.index - 1].isHeader &&\n                (curViewDS[resutJSON.index - 1])\n                    .items.length === 1) {\n                this.removeUiItem(resutJSON.index - 1);\n                this.removeUiItem(resutJSON.index - 1);\n            }\n            else {\n                this.removeUiItem(resutJSON.index);\n            }\n        }\n        const listDataSource = this.listViewInstance.dataSource instanceof DataManager\n            ? this.listViewInstance.localData : this.listViewInstance.dataSource;\n        const index = listDataSource.indexOf(dataSource);\n        if (index !== -1) {\n            listDataSource.splice(index, 1);\n            this.listViewInstance.setViewDataSource(listDataSource);\n        }\n        // recollect all the list item into collection\n        this.listViewInstance.liCollection =\n            this.listViewInstance.curUL.querySelectorAll('li');\n    }\n    // eslint-disable-next-line\n    setCheckboxLI(li, e) {\n        const index = Array.prototype.indexOf.call(this.listViewInstance.curUL.querySelectorAll('li'), li) + this.uiFirstIndex;\n        this.activeIndex = Array.prototype.indexOf.call(this.listViewInstance.curUL.querySelectorAll('li'), li) + this.uiFirstIndex;\n        if (li.classList.contains(classNames.selected)) {\n            if (this.uiIndices.activeIndices.indexOf(index) === -1) {\n                this.uiIndices.activeIndices.push(index);\n            }\n        }\n        else {\n            this.uiIndices.activeIndices.splice(this.uiIndices.activeIndices.indexOf(index), 1);\n        }\n    }\n    // eslint-disable-next-line\n    setSelectLI(li, e) {\n        this.activeIndex = Array.prototype.indexOf.call(this.listViewInstance.curUL.querySelectorAll('li'), li) + this.uiFirstIndex;\n    }\n    checkedItem(checked) {\n        if (checked) {\n            this.uiIndices.activeIndices = [];\n            this.activeIndex = undefined;\n            const data = this.listViewInstance.curViewDS;\n            for (let index = 0; index < data.length; index++) {\n                if (!data[index].isHeader) {\n                    this.uiIndices.activeIndices.push(index);\n                }\n            }\n        }\n        else {\n            this.activeIndex = undefined;\n            this.uiIndices.activeIndices = [];\n        }\n    }\n    addUiItem(index) {\n        // virtually new add list item based on the scollbar position\n        // if the scroll bar is at the top, just pretend the new item has been added since no UI\n        // change is required for the item that has been added at last but when scroll bar is at the bottom\n        // just detach top and inject into bottom to mimic new item is added\n        const curViewDs = this.listViewInstance.curViewDS;\n        this.changeUiIndices(index, true);\n        if (this.activeIndex && this.activeIndex >= index) {\n            this.activeIndex++;\n        }\n        if (this.listViewInstance.showCheckBox &&\n            curViewDs[index][this.listViewInstance.fields.isChecked]) {\n            this.uiIndices.activeIndices.push(index);\n        }\n        if (!parseFloat(this.bottomElement.style.height) && !parseFloat(this.topElement.style.height)) {\n            this.bottomElement.style.height = parseFloat(this.bottomElement.style.height) + this.listItemHeight + 'px';\n        }\n        if (parseFloat(this.bottomElement.style.height)) {\n            const liItem = this.listViewInstance.curUL.lastElementChild.previousSibling;\n            const target = this.listViewInstance.getLiFromObjOrElement(curViewDs[index + 1]) ||\n                this.listViewInstance.getLiFromObjOrElement(curViewDs[index + 2]);\n            if (target) {\n                this.bottomElement.style.height = parseFloat(this.bottomElement.style.height) + this.listItemHeight + 'px';\n                this.updateUI(liItem, index, target);\n            }\n        }\n        else {\n            const liItem = this.listViewInstance.curUL.firstElementChild.nextSibling;\n            let target;\n            if ((Object.keys(this.listViewInstance.curViewDS).length - 1) === index) {\n                target = this.listViewInstance.curUL.lastElementChild;\n            }\n            else {\n                target = this.listViewInstance.getLiFromObjOrElement(curViewDs[index + 1]) ||\n                    this.listViewInstance.getLiFromObjOrElement(curViewDs[index + 2]);\n            }\n            this.topElement.style.height = parseFloat(this.topElement.style.height) + this.listItemHeight + 'px';\n            this.uiFirstIndex++;\n            this.uiLastIndex++;\n            if (target) {\n                this.updateUI(liItem, index, target);\n                if (this.listViewInstance.isWindow === true) {\n                    window.scrollTo(0, (pageYOffset + this.listItemHeight));\n                }\n                else {\n                    this.listViewInstance.element.scrollTop += this.listItemHeight;\n                }\n            }\n        }\n        this.totalHeight += this.listItemHeight;\n        this.listDiff = Math.round(parseFloat(this.topElement.style.height) / this.listItemHeight);\n    }\n    removeUiItem(index) {\n        this.totalHeight -= this.listItemHeight;\n        const curViewDS = this.listViewInstance.curViewDS[index];\n        const liItem = this.listViewInstance.getLiFromObjOrElement(curViewDS);\n        this.listViewInstance.curViewDS.splice(index, 1);\n        if (this.activeIndex && this.activeIndex >= index) {\n            this.activeIndex--;\n        }\n        if (liItem) {\n            if (this.domItemCount > Object.keys(this.listViewInstance.curViewDS).length) {\n                detach(liItem);\n                this.domItemCount--;\n                this.uiLastIndex--;\n                this.totalHeight = 0;\n            }\n            else {\n                if (liItem.classList.contains(classNames.disable)) {\n                    liItem.classList.remove(classNames.disable);\n                    this.uiIndices.disabledItemIndices.splice(this.uiIndices.disabledItemIndices.indexOf(index), 1);\n                }\n                if (liItem.style.display === 'none') {\n                    liItem.style.display = '';\n                    this.uiIndices.hiddenItemIndices.splice(this.uiIndices.hiddenItemIndices.indexOf(index), 1);\n                }\n                if (this.listViewInstance.showCheckBox && liItem.classList.contains(classNames.selected)) {\n                    this.listViewInstance.removeSelect();\n                    this.uiIndices.activeIndices.splice(this.uiIndices.activeIndices.indexOf(index), 1);\n                    const checklistElement = liItem.querySelector('.' + classNames.checkboxWrapper);\n                    checklistElement.removeAttribute('aria-checked');\n                    checklistElement.firstElementChild.classList.remove(classNames.checked);\n                    if (liItem.classList.contains(classNames.focused)) {\n                        liItem.classList.remove(classNames.focused);\n                        this.activeIndex = undefined;\n                    }\n                }\n                else if (liItem.classList.contains(classNames.selected)) {\n                    this.listViewInstance.removeSelect();\n                    this.activeIndex = undefined;\n                }\n                if (!parseFloat(this.bottomElement.style.height) && !parseFloat(this.topElement.style.height)) {\n                    this.updateUI(liItem, this.uiLastIndex, this.bottomElement);\n                }\n                else if (parseFloat(this.bottomElement.style.height)) {\n                    this.bottomElement.style.height = parseFloat(this.bottomElement.style.height) - this.listItemHeight + 'px';\n                    this.updateUI(liItem, this.uiLastIndex, this.bottomElement);\n                }\n                else {\n                    this.topElement.style.height = parseFloat(this.topElement.style.height) - this.listItemHeight + 'px';\n                    this.updateUI(liItem, (this.uiFirstIndex - 1), this.topElement.nextSibling);\n                    this.uiLastIndex--;\n                    this.uiFirstIndex--;\n                }\n            }\n        }\n        this.changeUiIndices(index, false);\n        this.listDiff = Math.round(parseFloat(this.topElement.style.height) / this.listItemHeight);\n    }\n    changeUiIndices(index, increment) {\n        const keys = Object.keys(this.uiIndices);\n        for (let ind = 0; ind < keys.length; ind++) {\n            this.uiIndices[keys[ind]] = this.uiIndices[keys[ind]].map((i) => {\n                if (i >= index) {\n                    return increment ? ++i : --i;\n                }\n                else {\n                    return i;\n                }\n            });\n        }\n    }\n    addItem(data, fields, dataSource) {\n        for (let i = 0; i < data.length; i++) {\n            const currentItem = data[i];\n            // push the given data to main data array\n            dataSource.push(currentItem);\n            // recalculate all the group data or other datasource related things\n            this.listViewInstance.setViewDataSource(dataSource);\n            // render list items for first time due to no datasource present earlier\n            if (!this.domItemCount) {\n                // fresh rendering for first time\n                if ((this.listViewInstance.template || this.listViewInstance.groupTemplate) && !this.isNgTemplate()) {\n                    this.listViewInstance.listBaseOption.template = null;\n                    this.listViewInstance.listBaseOption.groupTemplate = null;\n                    this.listViewInstance.listBaseOption.itemCreated = this.createUIItem.bind(this);\n                }\n                this.uiVirtualization();\n                // when expected expected DOM count doesn't meet the condition we need to create and inject new item into DOM\n            }\n            else if (this.domItemCount < this.expectedDomItemCount) {\n                const ds = this.listViewInstance.findItemFromDS(dataSource, fields);\n                if (ds instanceof Array) {\n                    if (this.listViewInstance.ulElement) {\n                        let index = this.listViewInstance.curViewDS.indexOf(currentItem);\n                        // inject new list item into DOM\n                        this.createAndInjectNewItem(currentItem, index);\n                        // check for group header item\n                        const curViewDS = this.listViewInstance.curViewDS[index - 1];\n                        if (curViewDS && curViewDS.isHeader && curViewDS.items.length === 1) {\n                            // target group item index in datasource\n                            --index;\n                            // inject new group header into DOM for previously created list item\n                            this.createAndInjectNewItem(curViewDS, index);\n                        }\n                    }\n                    // recollect all the list item into collection\n                    this.listViewInstance.liCollection =\n                        this.listViewInstance.curUL.querySelectorAll('li');\n                }\n            }\n            else {\n                // eslint-disable-next-line\n                const index = this.listViewInstance.curViewDS.indexOf(currentItem);\n                // virtually new add list item based on the scollbar position\n                this.addUiItem(index);\n                // check for group header item needs to be added\n                const curViewDS = this.listViewInstance.curViewDS[index - 1];\n                if (curViewDS && curViewDS.isHeader && curViewDS.items.length === 1) {\n                    this.addUiItem(index - 1);\n                }\n            }\n        }\n    }\n    createAndInjectNewItem(itemData, index) {\n        // generate li item for given datasource\n        let target;\n        const li = ListBase.createListItemFromJson(this.listViewInstance.createElement, \n        // eslint-disable-next-line\n        [itemData], this.listViewInstance.listBaseOption, null, null, this.listViewInstance);\n        // check for target element whether to insert before last item or group item\n        if ((Object.keys(this.listViewInstance.curViewDS).length - 1) === index) {\n            target = this.listViewInstance.curUL.lastElementChild;\n        }\n        else {\n            // target group header's first child item to append its header\n            target = this.listViewInstance.getLiFromObjOrElement(this.listViewInstance.curViewDS[index + 1]) ||\n                this.listViewInstance.getLiFromObjOrElement(this.listViewInstance.curViewDS[index + 2]);\n        }\n        if (this.listViewInstance.fields.groupBy && this.listViewInstance.curViewDS[index + 1] && this.listViewInstance.curViewDS[index + 1].isHeader) {\n            let targetEle = this.listViewInstance.getLiFromObjOrElement(this.listViewInstance.curViewDS[index - 1]);\n            if (targetEle) {\n                target = targetEle.nextElementSibling;\n            }\n        }\n        // insert before the target element\n        this.listViewInstance.ulElement.insertBefore(li[0], target);\n        // increment internal DOM count, last index count for new element\n        this.domItemCount++;\n        if (this.bottomElementHeight <= 0) {\n            this.uiLastIndex++;\n        }\n        // recalculate the current item height, to avoid jumpy scroller\n        this.refreshItemHeight();\n    }\n    createUIItem(args) {\n        const virtualTemplate = this.listViewInstance.template;\n        const template = this.listViewInstance.createElement('div');\n        let commonTemplate = '<div class=\"e-text-content\" role=\"presentation\"> ' +\n            '<span class=\"e-list-text\"> ${' + this.listViewInstance.fields.text + '} </span></div>';\n        if (this.listViewInstance.isReact) {\n            commonTemplate = null;\n        }\n        if (this.listViewInstance.showCheckBox) {\n            // eslint-disable-next-line\n            this.listViewInstance.renderCheckbox(args);\n            if ((!isNullOrUndefined(this.listViewInstance.virtualCheckBox)) &&\n                (!isNullOrUndefined(this.listViewInstance.virtualCheckBox.outerHTML))) {\n                const div = document.createElement('div');\n                div.innerHTML = this.listViewInstance.template || commonTemplate;\n                if (div.children && div.children[0]) {\n                    div.children[0].classList.add('e-checkbox');\n                    if (this.listViewInstance.checkBoxPosition === 'Left') {\n                        div.children[0].classList.add('e-checkbox-left');\n                    }\n                    else {\n                        div.children[0].classList.add('e-checkbox-right');\n                    }\n                    if (this.listViewInstance.checkBoxPosition === 'Left') {\n                        div.children[0].insertBefore(this.listViewInstance.virtualCheckBox, div.childNodes[0].children[0]);\n                    }\n                    else {\n                        div.children[0].appendChild(this.listViewInstance.virtualCheckBox);\n                    }\n                    this.listViewInstance.template = div.innerHTML;\n                }\n            }\n            template.innerHTML = this.listViewInstance.template;\n            this.listViewInstance.template = virtualTemplate;\n        }\n        else {\n            template.innerHTML = this.listViewInstance.template || commonTemplate;\n        }\n        // eslint-disable-next-line\n        const templateElements = template.getElementsByTagName('*');\n        const groupTemplate = this.listViewInstance.createElement('div');\n        if (this.listViewInstance.fields.groupBy) {\n            groupTemplate.innerHTML = this.listViewInstance.groupTemplate || commonTemplate;\n        }\n        // eslint-disable-next-line\n        let groupTemplateElements = groupTemplate.getElementsByTagName('*');\n        if (args.curData.isHeader) {\n            this.headerData = args.curData;\n        }\n        this.templateData = args.curData.isHeader ? args.curData.items[0] :\n            args.curData;\n        if (!this.listViewInstance.isReact || (typeof this.listViewInstance.template == \"string\" && !args.item.classList.contains(\"e-list-group-item\")) ||\n            (typeof this.listViewInstance.groupTemplate == \"string\" && args.item.classList.contains(\"e-list-group-item\"))) {\n            args.item.innerHTML = '';\n        }\n        args.item.context = { data: args.curData, nodes: { flatTemplateNodes: [], groupTemplateNodes: [] } };\n        for (let i = 0; i < templateElements.length; i++) {\n            this.compileTemplate(templateElements[i], args.item, false);\n        }\n        for (let i = 0; i < groupTemplateElements.length; i++) {\n            this.compileTemplate(groupTemplateElements[i], args.item, true);\n        }\n        args.item.context.template = args.curData.isHeader ? template.firstElementChild :\n            groupTemplate.firstElementChild;\n        args.item.context.type = args.curData.isHeader ? 'flatList' : 'groupList';\n        const element = args.curData.isHeader ? groupTemplate : template;\n        if (element.firstElementChild) {\n            args.item.insertBefore(element.firstElementChild, null);\n        }\n    }\n    compileTemplate(element, item, isHeader) {\n        this.textProperty(element, item, isHeader);\n        this.classProperty(element, item, isHeader);\n        this.attributeProperty(element, item, isHeader);\n    }\n    onChange(newData, listElement) {\n        listElement.context.data = newData;\n        // eslint-disable-next-line max-len\n        const groupTemplateNodes = listElement.context.nodes.groupTemplateNodes;\n        // eslint-disable-next-line max-len\n        const flatTemplateNodes = listElement.context.nodes.flatTemplateNodes;\n        // eslint-disable-next-line\n        if (!isNullOrUndefined(newData.isHeader) && newData.isHeader && listElement.context.type === 'groupList') {\n            // eslint-disable-next-line\n            const element = listElement.firstElementChild;\n            detach(listElement.firstElementChild);\n            listElement.insertBefore(listElement.context.template, null);\n            listElement.context.template = element;\n            listElement.context.type = 'flatList';\n            for (let i = 0; i < groupTemplateNodes.length; i++) {\n                // eslint-disable-next-line\n                groupTemplateNodes[i].onChange(newData);\n            }\n        }\n        else if (!newData.isHeader && listElement.context.type === 'flatList') {\n            const element = listElement.firstElementChild;\n            detach(listElement.firstElementChild);\n            listElement.insertBefore(listElement.context.template, null);\n            listElement.context.template = element;\n            listElement.context.type = 'groupList';\n            for (let i = 0; i < flatTemplateNodes.length; i++) {\n                // eslint-disable-next-line\n                flatTemplateNodes[i].onChange(newData);\n            }\n        }\n        else if (!newData.isHeader) {\n            for (let i = 0; i < flatTemplateNodes.length; i++) {\n                // eslint-disable-next-line\n                flatTemplateNodes[i].onChange(newData);\n            }\n        }\n        else {\n            for (let i = 0; i < groupTemplateNodes.length; i++) {\n                // eslint-disable-next-line\n                groupTemplateNodes[i].onChange(newData);\n            }\n        }\n    }\n    // eslint-disable-next-line\n    updateContextData(listElement, node, isHeader) {\n        if (isHeader) {\n            listElement.context.nodes.groupTemplateNodes.push(node);\n        }\n        else {\n            listElement.context.nodes.flatTemplateNodes.push(node);\n        }\n    }\n    classProperty(element, listElement, isHeader) {\n        const regex = new RegExp('\\\\${([^}]*)}', 'g');\n        const resultantOutput = [];\n        let regexMatch;\n        while (regexMatch !== null) {\n            const match = regex.exec(element.className);\n            resultantOutput.push(match);\n            regexMatch = match;\n            if (regexMatch === null) {\n                resultantOutput.pop();\n            }\n        }\n        if (resultantOutput && resultantOutput.length) {\n            for (let i = 0; i < resultantOutput.length; i++) {\n                const classNameMatch = resultantOutput[i];\n                // eslint-disable-next-line\n                let classFunction;\n                if (classNameMatch[1].indexOf('?') !== -1 && classNameMatch[1].indexOf(':') !== -1) {\n                    // tslint:disable-next-line:no-function-constructor-with-string-args\n                    classFunction = new Function('data', 'return ' + classNameMatch[1].replace(/\\$/g, 'data.'));\n                }\n                else {\n                    // tslint:disable-next-line:no-function-constructor-with-string-args\n                    classFunction = new Function('data', 'return ' + 'data.' + classNameMatch[1]);\n                }\n                // eslint-disable-next-line\n                const subNode = {};\n                if (isHeader) {\n                    subNode.bindedvalue = classFunction(this.headerData);\n                }\n                else {\n                    subNode.bindedvalue = classFunction(this.templateData);\n                }\n                subNode.onChange = (value) => {\n                    if (subNode.bindedvalue) {\n                        removeClass([element], subNode.bindedvalue.split(' ').filter((css) => css));\n                    }\n                    const newCss = classFunction(value);\n                    if (newCss) {\n                        addClass([element], (newCss).split(' ').filter((css) => css));\n                    }\n                    subNode.bindedvalue = newCss;\n                };\n                const className = classNameMatch[0].split(' ');\n                for (let i = 0; i < className.length; i++) {\n                    element.classList.remove(className[i]);\n                }\n                if (subNode.bindedvalue) {\n                    addClass([element], subNode.bindedvalue.split(' ').filter((css) => css));\n                }\n                this.updateContextData(listElement, subNode, isHeader);\n            }\n        }\n    }\n    attributeProperty(element, listElement, isHeader) {\n        const attributeNames = [];\n        for (let i = 0; i < element.attributes.length; i++) {\n            attributeNames.push(element.attributes[i].nodeName);\n        }\n        if (attributeNames.indexOf('class') !== -1) {\n            attributeNames.splice(attributeNames.indexOf('class'), 1);\n        }\n        for (let i = 0; i < attributeNames.length; i++) {\n            const attributeName = attributeNames[i];\n            const attrNameMatch = new RegExp('\\\\${([^}]*)}', 'g').exec(attributeName) || [];\n            const attrValueMatch = new RegExp('\\\\${([^}]*)}', 'g').exec(element.getAttribute(attributeName))\n                || [];\n            // eslint-disable-next-line\n            let attributeNameFunction;\n            // eslint-disable-next-line\n            let attributeValueFunction;\n            if (attrNameMatch.length || attrValueMatch.length) {\n                if (attrNameMatch[1]) {\n                    // tslint:disable-next-line:no-function-constructor-with-string-args\n                    attributeNameFunction = new Function('data', 'return ' + 'data.' + attrNameMatch[1]);\n                }\n                if (attrValueMatch[1]) {\n                    if (attrValueMatch[1].indexOf('?') !== -1 && attrValueMatch[1].indexOf(':') !== -1) {\n                        // tslint:disable-next-line:no-function-constructor-with-string-args\n                        attributeValueFunction = new Function('data', 'return ' + attrValueMatch[1].replace(/\\$/g, 'data.'));\n                    }\n                    else {\n                        // tslint:disable-next-line:no-function-constructor-with-string-args\n                        attributeValueFunction = new Function('data', 'return ' + 'data.' + attrValueMatch[1]);\n                    }\n                }\n                // eslint-disable-next-line @typescript-eslint/ban-types\n                const subNode = {};\n                if (isHeader) {\n                    subNode.bindedvalue = [attrNameMatch[1] === undefined ? undefined : attributeNameFunction(this.headerData),\n                        attrValueMatch[1] === undefined ? undefined : attributeValueFunction(this.headerData)];\n                }\n                else {\n                    subNode.bindedvalue = [attrNameMatch[1] === undefined ? undefined : attributeNameFunction(this.templateData),\n                        attrValueMatch[1] === undefined ? undefined : attributeValueFunction(this.templateData)];\n                }\n                subNode.attrName = subNode.bindedvalue[0] === undefined ?\n                    attributeName : subNode.bindedvalue[0];\n                subNode.onChange = (value) => {\n                    const bindedvalue = subNode.bindedvalue[1] === undefined ?\n                        element.getAttribute(subNode.attrName) : attributeValueFunction(value);\n                    element.removeAttribute(subNode.attrName);\n                    subNode.attrName = subNode.bindedvalue[0] === undefined ? subNode.attrName : attributeNameFunction(value);\n                    element.setAttribute(subNode.attrName, bindedvalue);\n                    subNode.bindedvalue = [subNode.bindedvalue[0] === undefined ? undefined : attributeNameFunction(value),\n                        subNode.bindedvalue[1] === undefined ? undefined : attributeValueFunction(value)];\n                };\n                const attributeValue = subNode.bindedvalue[1] === undefined ? element.getAttribute(attributeName) :\n                    subNode.bindedvalue[1];\n                element.removeAttribute(attributeName);\n                element.setAttribute(subNode.attrName, attributeValue);\n                this.updateContextData(listElement, subNode, isHeader);\n            }\n        }\n    }\n    textProperty(element, listElement, isHeader) {\n        const regex = new RegExp('\\\\${([^}]*)}', 'g');\n        const resultantOutput = [];\n        let regexMatch;\n        while (regexMatch !== null) {\n            const match = regex.exec(element.innerText);\n            resultantOutput.push(match);\n            regexMatch = match;\n            if (regexMatch === null) {\n                resultantOutput.pop();\n            }\n        }\n        const isChildHasTextContent = Array.prototype.some.call(element.children, (element) => {\n            if (new RegExp('\\\\${([^}]*)}', 'g').exec(element.innerText)) {\n                return true;\n            }\n            else {\n                return false;\n            }\n        });\n        if (resultantOutput && resultantOutput.length && !isChildHasTextContent) {\n            for (let i = 0; i < resultantOutput.length; i++) {\n                const textPropertyMatch = resultantOutput[i];\n                // eslint-disable-next-line\n                const subNode = {};\n                // eslint-disable-next-line\n                let textFunction;\n                if (textPropertyMatch[1].indexOf('?') !== -1 && textPropertyMatch[1].indexOf(':') !== -1) {\n                    // tslint:disable-next-line:no-function-constructor-with-string-args\n                    textFunction = new Function('data', 'return ' + textPropertyMatch[1].replace(/\\$/g, 'data.'));\n                }\n                else {\n                    // tslint:disable-next-line:no-function-constructor-with-string-args\n                    textFunction = new Function('data', 'return ' + 'data.' + textPropertyMatch[1]);\n                }\n                if (isHeader) {\n                    subNode.bindedvalue = textFunction(this.headerData);\n                }\n                else {\n                    subNode.bindedvalue = textFunction(this.templateData);\n                }\n                subNode.onChange = (value) => {\n                    element.innerText = element.innerText.replace(subNode.bindedvalue, textFunction(value));\n                    subNode.bindedvalue = textFunction(value);\n                };\n                element.innerText = element.innerText.replace(textPropertyMatch[0], subNode.bindedvalue);\n                this.updateContextData(listElement, subNode, isHeader);\n            }\n        }\n    }\n    reRenderUiVirtualization() {\n        this.wireScrollEvent(true);\n        if (this.listViewInstance.contentContainer) {\n            detach(this.listViewInstance.contentContainer);\n        }\n        this.listViewInstance.preRender();\n        // resetting the dom count to 0, to avoid edge case of dataSource suddenly becoming zero\n        // and then manually adding item using addItem API\n        this.domItemCount = 0;\n        this.listViewInstance.header();\n        this.listViewInstance.setLocalData();\n    }\n    updateUI(element, index, targetElement) {\n        // eslint-disable-next-line @typescript-eslint/ban-types\n        const onChange = this.isNgTemplate() ? this.onNgChange : this.onChange;\n        if (this.listViewInstance.template || this.listViewInstance.groupTemplate) {\n            const curViewDS = this.listViewInstance.curViewDS[index];\n            // eslint-disable-next-line\n            element.dataset.uid = (curViewDS[this.listViewInstance.fields.id]) ?\n                // eslint-disable-next-line\n                (curViewDS[this.listViewInstance.fields.id]) : ListBase.generateId();\n            onChange(curViewDS, element, this);\n        }\n        else {\n            this.updateUiContent(element, index);\n        }\n        this.changeElementAttributes(element, index);\n        if (targetElement) {\n            this.listViewInstance.ulElement.insertBefore(element, targetElement);\n        }\n    }\n    onNgChange(newData, listElement, virtualThis) {\n        // compile given target element with template for new data\n        // eslint-disable-next-line\n        const templateCompiler = compile(virtualThis.listViewInstance.template);\n        const resultElement = templateCompiler(newData);\n        while (listElement.lastChild) {\n            listElement.removeChild(listElement.lastChild);\n        }\n        listElement.appendChild(resultElement[0]);\n    }\n    getModuleName() {\n        return 'virtualization';\n    }\n    destroy() {\n        this.wireScrollEvent(true);\n    }\n}\n\n/**\n * Listview Component\n */\n\n/**\n * Listview Component\n */\n\nvar __decorate$1 = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar Sortable_1;\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/**\n * Sortable Module provides support to enable sortable functionality in Dom Elements.\n * ```html\n * <div id=\"sortable\">\n *   <div>Item 1</div>\n *   <div>Item 2</div>\n *   <div>Item 3</div>\n *   <div>Item 4</div>\n *   <div>Item 5</div>\n * </div>\n * ```\n * ```typescript\n *   let ele: HTMLElement = document.getElementById('sortable');\n *   let sortObj: Sortable = new Sortable(ele, {});\n * ```\n */\nlet Sortable = Sortable_1 = class Sortable extends Base {\n    /* es-lint enable  */\n    constructor(element, options) {\n        super(options, element);\n        // eslint-disable-next-line\n        this.getHelper = (e) => {\n            // eslint-disable-next-line prefer-const\n            let target = this.getSortableElement(e.sender.target);\n            if (!this.isValidTarget(target, this)) {\n                return false;\n            }\n            let element;\n            if (this.helper) {\n                element = this.helper({ sender: target, element: e.element });\n            }\n            else {\n                element = target.cloneNode(true);\n                element.style.width = `${target.offsetWidth}px`;\n                element.style.height = `${target.offsetHeight}px`;\n            }\n            addClass([element], ['e-sortableclone']);\n            document.body.appendChild(element);\n            return element;\n        };\n        // eslint-disable-next-line\n        this.onDrag = (e) => {\n            if (!e.target)\n                return;\n            this.trigger('drag', { event: e.event, element: this.element, target: e.target });\n            let newInst = this.getSortableInstance(e.target);\n            let target = this.getSortableElement(e.target, newInst);\n            if ((this.isValidTarget(target, newInst) || e.target.className.indexOf('e-list-group-item') > -1) && (this.curTarget !== target ||\n                !isNullOrUndefined(newInst.placeHolder)) && (newInst.placeHolderElement ? newInst.placeHolderElement !== e.target :\n                true)) {\n                if (e.target.className.indexOf('e-list-group-item') > -1) {\n                    target = e.target;\n                }\n                this.curTarget = target;\n                if (this.target === target) {\n                    return;\n                }\n                let oldIdx = this.getIndex(newInst.placeHolderElement, newInst);\n                const placeHolder = this.getPlaceHolder(target, newInst);\n                let newIdx;\n                if (placeHolder) {\n                    oldIdx = isNullOrUndefined(oldIdx) ? this.getIndex(this.target) : oldIdx;\n                    newIdx = this.getIndex(target, newInst, e.event);\n                    const isPlaceHolderPresent = this.isPlaceHolderPresent(newInst);\n                    if (isPlaceHolderPresent && oldIdx === newIdx) {\n                        return;\n                    }\n                    if (isPlaceHolderPresent) {\n                        remove(newInst.placeHolderElement);\n                    }\n                    newInst.placeHolderElement = placeHolder;\n                    if (e.target.className.indexOf('e-list-group-item') > -1) {\n                        newInst.element.insertBefore(newInst.placeHolderElement, newInst.element.children[newIdx]);\n                    }\n                    else if (newInst.element !== this.element && newIdx === newInst.element.childElementCount) {\n                        newInst.element.appendChild(newInst.placeHolderElement);\n                    }\n                    else {\n                        newInst.element.insertBefore(newInst.placeHolderElement, newInst.element.children[newIdx]);\n                    }\n                    this.refreshDisabled(oldIdx, newIdx, newInst);\n                }\n                else {\n                    oldIdx = isNullOrUndefined(oldIdx) ? this.getIndex(this.target) :\n                        this.getIndex(target, newInst) < oldIdx || !oldIdx ? oldIdx : oldIdx - 1;\n                    newIdx = this.getIndex(target, newInst);\n                    const idx = newInst.element !== this.element ? newIdx : oldIdx < newIdx ? newIdx + 1 : newIdx;\n                    this.updateItemClass(newInst);\n                    newInst.element.insertBefore(this.target, newInst.element.children[idx]);\n                    this.refreshDisabled(oldIdx, newIdx, newInst);\n                    this.curTarget = this.target;\n                    this.trigger('drop', {\n                        droppedElement: this.target, element: newInst.element, previousIndex: oldIdx, currentIndex: newIdx,\n                        target: e.target, helper: document.getElementsByClassName('e-sortableclone')[0], event: e.event, scope: this.scope\n                    });\n                }\n            }\n            newInst = this.getSortableInstance(this.curTarget);\n            if (isNullOrUndefined(target) && e.target !== newInst.placeHolderElement) {\n                if (this.isPlaceHolderPresent(newInst)) {\n                    this.removePlaceHolder(newInst);\n                }\n            }\n            else {\n                const placeHolders = [].slice.call(document.getElementsByClassName('e-sortable-placeholder'));\n                let inst;\n                placeHolders.forEach((placeHolder) => {\n                    inst = this.getSortableInstance(placeHolder);\n                    if (inst.element && inst !== newInst) {\n                        this.removePlaceHolder(inst);\n                    }\n                });\n            }\n        };\n        // eslint-disable-next-line\n        this.onDragStart = (e) => {\n            this.target = this.getSortableElement(e.target);\n            let cancelDrag = false;\n            this.target.classList.add('e-grabbed');\n            this.curTarget = this.target;\n            e.helper = document.getElementsByClassName('e-sortableclone')[0];\n            const args = { cancel: false, element: this.element, target: this.target };\n            this.trigger('beforeDragStart', args, (observedArgs) => {\n                if (observedArgs.cancel) {\n                    cancelDrag = observedArgs.cancel;\n                    this.onDragStop(e);\n                }\n            });\n            if (cancelDrag) {\n                return;\n            }\n            if (isBlazor) {\n                this.trigger('dragStart', {\n                    event: e.event, element: this.element, target: this.target,\n                    bindEvents: e.bindEvents, dragElement: e.dragElement\n                });\n            }\n            else {\n                this.trigger('dragStart', { event: e.event, element: this.element, target: this.target });\n            }\n        };\n        // eslint-disable-next-line\n        this.onDragStop = (e) => {\n            let dropInst = this.getSortableInstance(this.curTarget);\n            let prevIdx;\n            let curIdx;\n            let handled;\n            prevIdx = this.getIndex(this.target);\n            const isPlaceHolderPresent = this.isPlaceHolderPresent(dropInst);\n            if (isPlaceHolderPresent) {\n                const curIdx = this.getIndex(dropInst.placeHolderElement, dropInst);\n                const args = {\n                    previousIndex: prevIdx, currentIndex: curIdx, target: e.target, droppedElement: this.target,\n                    helper: e.helper, cancel: false, handled: false\n                };\n                this.trigger('beforeDrop', args, (observedArgs) => {\n                    if (!observedArgs.cancel) {\n                        handled = observedArgs.handled;\n                        this.updateItemClass(dropInst);\n                        if (observedArgs.handled) {\n                            const ele = this.target.cloneNode(true);\n                            this.target.classList.remove('e-grabbed');\n                            this.target = ele;\n                        }\n                        dropInst.element.insertBefore(this.target, dropInst.placeHolderElement);\n                        const curIdx = this.getIndex(this.target, dropInst);\n                        prevIdx = this === dropInst && (prevIdx - curIdx) > 1 ? prevIdx - 1 : prevIdx;\n                        this.trigger('drop', {\n                            event: e.event, element: dropInst.element, previousIndex: prevIdx, currentIndex: curIdx,\n                            target: e.target, helper: e.helper, droppedElement: this.target, scopeName: this.scope, handled: handled\n                        });\n                    }\n                    remove(dropInst.placeHolderElement);\n                });\n            }\n            dropInst = this.getSortableInstance(e.target);\n            // eslint-disable-next-line prefer-const\n            curIdx = dropInst.element.childElementCount;\n            prevIdx = this.getIndex(this.target);\n            if (dropInst.element === e.target || (!isPlaceHolderPresent && this.curTarget === this.target)) {\n                const beforeDropArgs = {\n                    previousIndex: prevIdx, currentIndex: this.curTarget === this.target ? prevIdx : curIdx,\n                    target: e.target, droppedElement: this.target, helper: e.helper, cancel: false\n                };\n                this.trigger('beforeDrop', beforeDropArgs, (observedArgs) => {\n                    if (dropInst.element === e.target && !observedArgs.cancel) {\n                        this.updateItemClass(dropInst);\n                        dropInst.element.appendChild(this.target);\n                        this.trigger('drop', {\n                            event: e.event, element: dropInst.element, previousIndex: prevIdx, currentIndex: curIdx,\n                            target: e.target, helper: e.helper, droppedElement: this.target, scopeName: this.scope\n                        });\n                    }\n                });\n            }\n            this.target.classList.remove('e-grabbed');\n            this.target = null;\n            this.curTarget = null;\n            remove(e.helper);\n            getComponent(this.element, Draggable).intDestroy(e.event);\n        };\n        this.bind();\n    }\n    bind() {\n        if (!this.element.id) {\n            this.element.id = getUniqueID('sortable');\n        }\n        if (!this.itemClass) {\n            this.itemClass = 'e-sort-item';\n            this.dataBind();\n        }\n        this.initializeDraggable();\n    }\n    initializeDraggable() {\n        new Draggable(this.element, {\n            helper: this.getHelper,\n            dragStart: this.onDragStart,\n            drag: this.onDrag,\n            dragStop: this.onDragStop,\n            dragTarget: `.${this.itemClass}`,\n            enableTapHold: true,\n            tapHoldThreshold: 200,\n            queryPositionInfo: this.queryPositionInfo,\n            distance: 5\n        });\n    }\n    getPlaceHolder(target, instance) {\n        if (instance.placeHolder) {\n            const placeHolderElement = instance.placeHolder({ element: instance.element, grabbedElement: this.target, target: target });\n            placeHolderElement.classList.add('e-sortable-placeholder');\n            return placeHolderElement;\n        }\n        return null;\n    }\n    isValidTarget(target, instance) {\n        return target && compareElementParent(target, instance.element) && target.classList.contains(instance.itemClass) &&\n            !target.classList.contains('e-disabled');\n    }\n    removePlaceHolder(instance) {\n        remove(instance.placeHolderElement);\n        instance.placeHolderElement = null;\n    }\n    updateItemClass(instance) {\n        if (this !== instance) {\n            this.target.classList.remove(this.itemClass);\n            this.target.classList.add(instance.itemClass);\n        }\n    }\n    getSortableInstance(element) {\n        element = closest(element, `.e-${this.getModuleName()}`);\n        if (element) {\n            const inst = getComponent(element, Sortable_1);\n            return inst.scope && this.scope && inst.scope === this.scope ? inst : this;\n        }\n        else {\n            return this;\n        }\n    }\n    refreshDisabled(oldIdx, newIdx, instance) {\n        if (instance === this) {\n            let element;\n            const increased = oldIdx < newIdx;\n            let disabledIdx;\n            let start = increased ? oldIdx : newIdx;\n            const end = increased ? newIdx : oldIdx;\n            while (start <= end) {\n                element = this.element.children[start];\n                if (element.classList.contains('e-disabled')) {\n                    disabledIdx = this.getIndex(element);\n                    this.element.insertBefore(element, this.element.children[increased ? disabledIdx + 2 : disabledIdx - 1]);\n                    start = increased ? disabledIdx + 2 : disabledIdx + 1;\n                }\n                else {\n                    start++;\n                }\n            }\n        }\n    }\n    getIndex(target, instance = this, e) {\n        let idx;\n        let placeHolderPresent;\n        [].slice.call(instance.element.children).forEach((element, index) => {\n            if (element.classList.contains('e-sortable-placeholder')) {\n                placeHolderPresent = true;\n            }\n            if (element === target) {\n                idx = index;\n                if (!isNullOrUndefined(e)) {\n                    if (placeHolderPresent) {\n                        idx -= 1;\n                    }\n                    const offset = target.getBoundingClientRect();\n                    const clientY = offset.bottom - ((offset.bottom - offset.top) / 2);\n                    idx = e.clientY <= clientY ? idx : idx + 1;\n                }\n                return;\n            }\n        });\n        return idx;\n    }\n    getSortableElement(element, instance = this) {\n        return closest(element, `.${instance.itemClass}`);\n    }\n    queryPositionInfo(value) {\n        value.left = pageXOffset ? `${parseFloat(value.left) - pageXOffset}px` : value.left;\n        value.top = pageYOffset ? `${parseFloat(value.top) - pageYOffset}px` : value.top;\n        return value;\n    }\n    isPlaceHolderPresent(instance) {\n        return instance.placeHolderElement && !!closest(instance.placeHolderElement, `#${instance.element.id}`);\n    }\n    /**\n     * It is used to sort array of elements from source element to destination element.\n     *\n     * @param destination - Defines the destination element to which the sortable elements needs to be appended.\n     *\n     * If it is null, then the Sortable library element will be considered as destination.\n     * @param targetIndexes - Specifies the sortable elements indexes which needs to be sorted.\n     * @param insertBefore - Specifies the index before which the sortable elements needs to be appended.\n     * If it is null, elements will be appended as last child.\n     * @function moveTo\n     * @returns {void}\n     */\n    moveTo(destination, targetIndexes, insertBefore) {\n        moveTo(this.element, destination, targetIndexes, insertBefore);\n    }\n    /**\n     * It is used to destroy the Sortable library.\n     */\n    destroy() {\n        if (this.itemClass === 'e-sort-item') {\n            this.itemClass = null;\n            this.dataBind();\n        }\n        getComponent(this.element, Draggable).destroy();\n        super.destroy();\n    }\n    getModuleName() {\n        return 'sortable';\n    }\n    onPropertyChanged(newProp, oldProp) {\n        for (const prop of Object.keys(newProp)) {\n            switch (prop) {\n                case 'itemClass':\n                    [].slice.call(this.element.children).forEach((element) => {\n                        if (element.classList.contains(oldProp.itemClass)) {\n                            element.classList.remove(oldProp.itemClass);\n                        }\n                        if (newProp.itemClass) {\n                            element.classList.add(newProp.itemClass);\n                        }\n                    });\n                    break;\n            }\n        }\n    }\n};\n__decorate$1([\n    Property(false)\n], Sortable.prototype, \"enableAnimation\", void 0);\n__decorate$1([\n    Property(null)\n], Sortable.prototype, \"itemClass\", void 0);\n__decorate$1([\n    Property(null)\n], Sortable.prototype, \"scope\", void 0);\n__decorate$1([\n    Property()\n], Sortable.prototype, \"helper\", void 0);\n__decorate$1([\n    Property()\n], Sortable.prototype, \"placeHolder\", void 0);\n__decorate$1([\n    Event()\n], Sortable.prototype, \"drag\", void 0);\n__decorate$1([\n    Event()\n], Sortable.prototype, \"beforeDragStart\", void 0);\n__decorate$1([\n    Event()\n], Sortable.prototype, \"dragStart\", void 0);\n__decorate$1([\n    Event()\n], Sortable.prototype, \"beforeDrop\", void 0);\n__decorate$1([\n    Event()\n], Sortable.prototype, \"drop\", void 0);\nSortable = Sortable_1 = __decorate$1([\n    NotifyPropertyChanges\n], Sortable);\n/**\n * It is used to sort array of elements from source element to destination element.\n *\n * @private\n */\nfunction moveTo(from, to, targetIndexes, insertBefore) {\n    let targetElements = [];\n    if (!to) {\n        to = from;\n    }\n    if (targetIndexes && targetIndexes.length) {\n        targetIndexes.forEach((index) => {\n            targetElements.push(from.children[index]);\n        });\n    }\n    else {\n        targetElements = [].slice.call(from.children);\n    }\n    if (isNullOrUndefined(insertBefore)) {\n        targetElements.forEach((target) => {\n            to.appendChild(target);\n        });\n    }\n    else {\n        const insertElement = to.children[insertBefore];\n        targetElements.forEach((target) => {\n            to.insertBefore(target, insertElement);\n        });\n    }\n}\n\n/**\n * Sortable Module\n */\n\n/**\n * List Components\n */\n\nexport { classNames, FieldSettings, ListView, Virtualization, cssClass, ListBase, getFieldValues, Sortable, moveTo };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}